

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Sep 07 18:19:11 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	intentry,global,class=CODE,delta=2
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    23                           	dabs	1,0x7E,2
    24  0000                     
    25                           ; Version 2.20
    26                           ; Generated 12/02/2020 GMT
    27                           ; 
    28                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F887 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0008                     	;# 
    68  0009                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000D                     	;# 
    73  000E                     	;# 
    74  000E                     	;# 
    75  000F                     	;# 
    76  0010                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0014                     	;# 
    81  0015                     	;# 
    82  0015                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001B                     	;# 
    90  001C                     	;# 
    91  001D                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  0081                     	;# 
    95  0085                     	;# 
    96  0086                     	;# 
    97  0087                     	;# 
    98  0088                     	;# 
    99  0089                     	;# 
   100  008C                     	;# 
   101  008D                     	;# 
   102  008E                     	;# 
   103  008F                     	;# 
   104  0090                     	;# 
   105  0091                     	;# 
   106  0092                     	;# 
   107  0093                     	;# 
   108  0093                     	;# 
   109  0093                     	;# 
   110  0094                     	;# 
   111  0095                     	;# 
   112  0096                     	;# 
   113  0097                     	;# 
   114  0098                     	;# 
   115  0099                     	;# 
   116  009A                     	;# 
   117  009B                     	;# 
   118  009C                     	;# 
   119  009D                     	;# 
   120  009E                     	;# 
   121  009F                     	;# 
   122  0105                     	;# 
   123  0107                     	;# 
   124  0108                     	;# 
   125  0109                     	;# 
   126  010C                     	;# 
   127  010C                     	;# 
   128  010D                     	;# 
   129  010E                     	;# 
   130  010F                     	;# 
   131  0185                     	;# 
   132  0187                     	;# 
   133  0188                     	;# 
   134  0189                     	;# 
   135  018C                     	;# 
   136  018D                     	;# 
   137  0000                     	;# 
   138  0001                     	;# 
   139  0002                     	;# 
   140  0003                     	;# 
   141  0004                     	;# 
   142  0005                     	;# 
   143  0006                     	;# 
   144  0007                     	;# 
   145  0008                     	;# 
   146  0009                     	;# 
   147  000A                     	;# 
   148  000B                     	;# 
   149  000C                     	;# 
   150  000D                     	;# 
   151  000E                     	;# 
   152  000E                     	;# 
   153  000F                     	;# 
   154  0010                     	;# 
   155  0011                     	;# 
   156  0012                     	;# 
   157  0013                     	;# 
   158  0014                     	;# 
   159  0015                     	;# 
   160  0015                     	;# 
   161  0016                     	;# 
   162  0017                     	;# 
   163  0018                     	;# 
   164  0019                     	;# 
   165  001A                     	;# 
   166  001B                     	;# 
   167  001B                     	;# 
   168  001C                     	;# 
   169  001D                     	;# 
   170  001E                     	;# 
   171  001F                     	;# 
   172  0081                     	;# 
   173  0085                     	;# 
   174  0086                     	;# 
   175  0087                     	;# 
   176  0088                     	;# 
   177  0089                     	;# 
   178  008C                     	;# 
   179  008D                     	;# 
   180  008E                     	;# 
   181  008F                     	;# 
   182  0090                     	;# 
   183  0091                     	;# 
   184  0092                     	;# 
   185  0093                     	;# 
   186  0093                     	;# 
   187  0093                     	;# 
   188  0094                     	;# 
   189  0095                     	;# 
   190  0096                     	;# 
   191  0097                     	;# 
   192  0098                     	;# 
   193  0099                     	;# 
   194  009A                     	;# 
   195  009B                     	;# 
   196  009C                     	;# 
   197  009D                     	;# 
   198  009E                     	;# 
   199  009F                     	;# 
   200  0105                     	;# 
   201  0107                     	;# 
   202  0108                     	;# 
   203  0109                     	;# 
   204  010C                     	;# 
   205  010C                     	;# 
   206  010D                     	;# 
   207  010E                     	;# 
   208  010F                     	;# 
   209  0185                     	;# 
   210  0187                     	;# 
   211  0188                     	;# 
   212  0189                     	;# 
   213  018C                     	;# 
   214  018D                     	;# 
   215  0000                     	;# 
   216  0001                     	;# 
   217  0002                     	;# 
   218  0003                     	;# 
   219  0004                     	;# 
   220  0005                     	;# 
   221  0006                     	;# 
   222  0007                     	;# 
   223  0008                     	;# 
   224  0009                     	;# 
   225  000A                     	;# 
   226  000B                     	;# 
   227  000C                     	;# 
   228  000D                     	;# 
   229  000E                     	;# 
   230  000E                     	;# 
   231  000F                     	;# 
   232  0010                     	;# 
   233  0011                     	;# 
   234  0012                     	;# 
   235  0013                     	;# 
   236  0014                     	;# 
   237  0015                     	;# 
   238  0015                     	;# 
   239  0016                     	;# 
   240  0017                     	;# 
   241  0018                     	;# 
   242  0019                     	;# 
   243  001A                     	;# 
   244  001B                     	;# 
   245  001B                     	;# 
   246  001C                     	;# 
   247  001D                     	;# 
   248  001E                     	;# 
   249  001F                     	;# 
   250  0081                     	;# 
   251  0085                     	;# 
   252  0086                     	;# 
   253  0087                     	;# 
   254  0088                     	;# 
   255  0089                     	;# 
   256  008C                     	;# 
   257  008D                     	;# 
   258  008E                     	;# 
   259  008F                     	;# 
   260  0090                     	;# 
   261  0091                     	;# 
   262  0092                     	;# 
   263  0093                     	;# 
   264  0093                     	;# 
   265  0093                     	;# 
   266  0094                     	;# 
   267  0095                     	;# 
   268  0096                     	;# 
   269  0097                     	;# 
   270  0098                     	;# 
   271  0099                     	;# 
   272  009A                     	;# 
   273  009B                     	;# 
   274  009C                     	;# 
   275  009D                     	;# 
   276  009E                     	;# 
   277  009F                     	;# 
   278  0105                     	;# 
   279  0107                     	;# 
   280  0108                     	;# 
   281  0109                     	;# 
   282  010C                     	;# 
   283  010C                     	;# 
   284  010D                     	;# 
   285  010E                     	;# 
   286  010F                     	;# 
   287  0185                     	;# 
   288  0187                     	;# 
   289  0188                     	;# 
   290  0189                     	;# 
   291  018C                     	;# 
   292  018D                     	;# 
   293  0000                     	;# 
   294  0001                     	;# 
   295  0002                     	;# 
   296  0003                     	;# 
   297  0004                     	;# 
   298  0005                     	;# 
   299  0006                     	;# 
   300  0007                     	;# 
   301  0008                     	;# 
   302  0009                     	;# 
   303  000A                     	;# 
   304  000B                     	;# 
   305  000C                     	;# 
   306  000D                     	;# 
   307  000E                     	;# 
   308  000E                     	;# 
   309  000F                     	;# 
   310  0010                     	;# 
   311  0011                     	;# 
   312  0012                     	;# 
   313  0013                     	;# 
   314  0014                     	;# 
   315  0015                     	;# 
   316  0015                     	;# 
   317  0016                     	;# 
   318  0017                     	;# 
   319  0018                     	;# 
   320  0019                     	;# 
   321  001A                     	;# 
   322  001B                     	;# 
   323  001B                     	;# 
   324  001C                     	;# 
   325  001D                     	;# 
   326  001E                     	;# 
   327  001F                     	;# 
   328  0081                     	;# 
   329  0085                     	;# 
   330  0086                     	;# 
   331  0087                     	;# 
   332  0088                     	;# 
   333  0089                     	;# 
   334  008C                     	;# 
   335  008D                     	;# 
   336  008E                     	;# 
   337  008F                     	;# 
   338  0090                     	;# 
   339  0091                     	;# 
   340  0092                     	;# 
   341  0093                     	;# 
   342  0093                     	;# 
   343  0093                     	;# 
   344  0094                     	;# 
   345  0095                     	;# 
   346  0096                     	;# 
   347  0097                     	;# 
   348  0098                     	;# 
   349  0099                     	;# 
   350  009A                     	;# 
   351  009B                     	;# 
   352  009C                     	;# 
   353  009D                     	;# 
   354  009E                     	;# 
   355  009F                     	;# 
   356  0105                     	;# 
   357  0107                     	;# 
   358  0108                     	;# 
   359  0109                     	;# 
   360  010C                     	;# 
   361  010C                     	;# 
   362  010D                     	;# 
   363  010E                     	;# 
   364  010F                     	;# 
   365  0185                     	;# 
   366  0187                     	;# 
   367  0188                     	;# 
   368  0189                     	;# 
   369  018C                     	;# 
   370  018D                     	;# 
   371  000B                     _INTCONbits	set	11
   372  0007                     _PORTC	set	7
   373  0006                     _PORTB	set	6
   374  0005                     _PORTA	set	5
   375  0009                     _PORTE	set	9
   376  001E                     _ADRESH	set	30
   377  001F                     _ADCON0bits	set	31
   378  0008                     _PORTD	set	8
   379  0013                     _SSPBUF	set	19
   380  0014                     _SSPCON	set	20
   381  0066                     _ADIF	set	102
   382  0049                     _RE1	set	73
   383  0048                     _RE0	set	72
   384  0063                     _SSPIF	set	99
   385  005E                     _PEIE	set	94
   386  005F                     _GIE	set	95
   387  009F                     _ADCON1bits	set	159
   388  008F                     _OSCCONbits	set	143
   389  0089                     _TRISE	set	137
   390  0088                     _TRISD	set	136
   391  0087                     _TRISC	set	135
   392  0086                     _TRISB	set	134
   393  0085                     _TRISA	set	133
   394  0091                     _SSPCON2bits	set	145
   395  0087                     _TRISCbits	set	135
   396  0094                     _SSPSTAT	set	148
   397  0093                     _SSPADD	set	147
   398  0091                     _SSPCON2	set	145
   399  0463                     _SSPIE	set	1123
   400  043C                     _TRISC4	set	1084
   401  043B                     _TRISC3	set	1083
   402  0189                     _ANSELH	set	393
   403  0188                     _ANSEL	set	392
   404                           
   405                           	psect	strings
   406  01AD                     __pstrings:
   407  01AD                     stringtab:
   408  01AD                     __stringtab:
   409  01AD                     stringcode:	
   410                           ;	String table - string pointers are 1 byte each
   411                           
   412  01AD                     stringdir:
   413  01AD  3001               	movlw	high stringdir
   414  01AE  008A               	movwf	10
   415  01AF  0804               	movf	4,w
   416  01B0  0A84               	incf	4,f
   417  01B1  0782               	addwf	2,f
   418  01B2                     __stringbase:
   419  01B2  3400               	retlw	0
   420  01B3                     __end_of__stringtab:
   421  01B3                     STR_1:
   422  01B3  3420               	retlw	32	;' '
   423  01B4  3453               	retlw	83	;'S'
   424  01B5  3431               	retlw	49	;'1'
   425  01B6  343A               	retlw	58	;':'
   426  01B7  3420               	retlw	32	;' '
   427  01B8  3420               	retlw	32	;' '
   428  01B9  3420               	retlw	32	;' '
   429  01BA  3453               	retlw	83	;'S'
   430  01BB  3432               	retlw	50	;'2'
   431  01BC  343A               	retlw	58	;':'
   432  01BD  3420               	retlw	32	;' '
   433  01BE  3420               	retlw	32	;' '
   434  01BF  3420               	retlw	32	;' '
   435  01C0  3453               	retlw	83	;'S'
   436  01C1  3433               	retlw	51	;'3'
   437  01C2  343A               	retlw	58	;':'
   438  01C3  3400               	retlw	0
   439                           
   440                           	psect	cinit
   441  000F                     start_initialization:	
   442                           ; #config settings
   443                           
   444  000F                     __initialization:
   445                           
   446                           ; Clear objects allocated to COMMON
   447  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   448  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   449                           
   450                           ; Clear objects allocated to BANK0
   451  0011  1383               	bcf	3,7	;select IRP bank0
   452  0012  3020               	movlw	low __pbssBANK0
   453  0013  0084               	movwf	4
   454  0014  3038               	movlw	low (__pbssBANK0+24)
   455  0015  120A  118A  21D1  120A  118A  	fcall	clear_ram0
   456  001A                     end_of_initialization:	
   457                           ;End of C runtime variable initialization code
   458                           
   459  001A                     __end_of__initialization:
   460  001A  0183               	clrf	3
   461  001B  120A  118A  28C2   	ljmp	_main	;jump to C main() function
   462                           
   463                           	psect	bssCOMMON
   464  0078                     __pbssCOMMON:
   465  0078                     _sun_pot:
   466  0078                     	ds	2
   467                           
   468                           	psect	bssBANK0
   469  0020                     __pbssBANK0:
   470  0020                     _buffer:
   471  0020                     	ds	16
   472  0030                     _LDR:
   473  0030                     	ds	4
   474  0034                     _an_sun:
   475  0034                     	ds	4
   476                           
   477                           	psect	clrtext
   478  01D1                     clear_ram0:	
   479                           ;	Called with FSR containing the base address, and
   480                           ;	W with the last address+1
   481                           
   482  01D1  0064               	clrwdt	;clear the watchdog before getting into this loop
   483  01D2                     clrloop0:
   484  01D2  0180               	clrf	0	;clear RAM location pointed to by FSR
   485  01D3  0A84               	incf	4,f	;increment pointer
   486  01D4  0604               	xorwf	4,w	;XOR with final address
   487  01D5  1903               	btfsc	3,2	;have we reached the end yet?
   488  01D6  3400               	retlw	0	;all done for this memory range, return
   489  01D7  0604               	xorwf	4,w	;XOR again to restore value
   490  01D8  29D2               	goto	clrloop0	;do the next byte
   491                           
   492                           	psect	cstackCOMMON
   493  0070                     __pcstackCOMMON:
   494  0070                     ?_initSETUP:
   495  0070                     ?_Lcd_Port:	
   496                           ; 1 bytes @ 0x0
   497                           
   498  0070                     ?_Lcd_Cmd:	
   499                           ; 1 bytes @ 0x0
   500                           
   501  0070                     ?_Lcd_Clear:	
   502                           ; 1 bytes @ 0x0
   503                           
   504  0070                     ?_Lcd_Init:	
   505                           ; 1 bytes @ 0x0
   506                           
   507  0070                     ?_Lcd_Write_Char:	
   508                           ; 1 bytes @ 0x0
   509                           
   510  0070                     ?_Lcd_Write_String:	
   511                           ; 1 bytes @ 0x0
   512                           
   513  0070                     ?_main:	
   514                           ; 1 bytes @ 0x0
   515                           
   516  0070                     ?_isr:	
   517                           ; 1 bytes @ 0x0
   518                           
   519  0070                     ??_isr:	
   520                           ; 1 bytes @ 0x0
   521                           
   522                           
   523                           ; 1 bytes @ 0x0
   524  0070                     	ds	4
   525  0074                     ??_initSETUP:
   526  0074                     ??_Lcd_Port:	
   527                           ; 1 bytes @ 0x4
   528                           
   529  0074                     Lcd_Port@a:	
   530                           ; 1 bytes @ 0x4
   531                           
   532                           
   533                           ; 1 bytes @ 0x4
   534  0074                     	ds	1
   535  0075                     ??_Lcd_Cmd:
   536  0075                     ??_Lcd_Write_Char:	
   537                           ; 1 bytes @ 0x5
   538                           
   539                           
   540                           ; 1 bytes @ 0x5
   541  0075                     	ds	1
   542  0076                     ??_Lcd_Write_String:
   543                           
   544                           ; 1 bytes @ 0x6
   545  0076                     	ds	1
   546  0077                     Lcd_Cmd@a:
   547                           
   548                           ; 1 bytes @ 0x7
   549  0077                     	ds	1
   550  0078                     ??_Lcd_Clear:
   551                           
   552                           	psect	cstackBANK0
   553  0038                     __pcstackBANK0:	
   554                           ; 1 bytes @ 0x8
   555                           
   556  0038                     ?_Lcd_Set_Cursor:
   557  0038                     ??_Lcd_Init:	
   558                           ; 1 bytes @ 0x0
   559                           
   560  0038                     Lcd_Set_Cursor@b:	
   561                           ; 1 bytes @ 0x0
   562                           
   563  0038                     Lcd_Write_Char@a:	
   564                           ; 1 bytes @ 0x0
   565                           
   566                           
   567                           ; 1 bytes @ 0x0
   568  0038                     	ds	1
   569  0039                     ??_Lcd_Set_Cursor:
   570  0039                     Lcd_Write_Char@temp:	
   571                           ; 1 bytes @ 0x1
   572                           
   573                           
   574                           ; 1 bytes @ 0x1
   575  0039                     	ds	1
   576  003A                     Lcd_Write_Char@y:
   577                           
   578                           ; 1 bytes @ 0x2
   579  003A                     	ds	1
   580  003B                     Lcd_Set_Cursor@a:
   581  003B                     Lcd_Write_String@a:	
   582                           ; 1 bytes @ 0x3
   583                           
   584                           
   585                           ; 1 bytes @ 0x3
   586  003B                     	ds	1
   587  003C                     Lcd_Set_Cursor@z:
   588  003C                     Lcd_Write_String@i:	
   589                           ; 1 bytes @ 0x4
   590                           
   591                           
   592                           ; 2 bytes @ 0x4
   593  003C                     	ds	1
   594  003D                     Lcd_Set_Cursor@y:
   595                           
   596                           ; 1 bytes @ 0x5
   597  003D                     	ds	1
   598  003E                     Lcd_Set_Cursor@temp:
   599                           
   600                           ; 1 bytes @ 0x6
   601  003E                     	ds	1
   602  003F                     ??_main:
   603                           
   604                           ; 1 bytes @ 0x7
   605  003F                     	ds	3
   606                           
   607                           	psect	maintext
   608  00C2                     __pmaintext:	
   609 ;;
   610 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   611 ;;
   612 ;; *************** function _main *****************
   613 ;; Defined at:
   614 ;;		line 44 in file "Slave_1_main.c"
   615 ;; Parameters:    Size  Location     Type
   616 ;;		None
   617 ;; Auto vars:     Size  Location     Type
   618 ;;		None
   619 ;; Return value:  Size  Location     Type
   620 ;;                  1    wreg      void 
   621 ;; Registers used:
   622 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   623 ;; Tracked objects:
   624 ;;		On entry : B00/0
   625 ;;		On exit  : 0/0
   626 ;;		Unchanged: 0/0
   627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   628 ;;      Params:         0       0       0       0       0
   629 ;;      Locals:         0       0       0       0       0
   630 ;;      Temps:          0       3       0       0       0
   631 ;;      Totals:         0       3       0       0       0
   632 ;;Total ram usage:        3 bytes
   633 ;; Hardware stack levels required when called: 4
   634 ;; This function calls:
   635 ;;		_Lcd_Clear
   636 ;;		_Lcd_Init
   637 ;;		_Lcd_Set_Cursor
   638 ;;		_Lcd_Write_String
   639 ;;		_initSETUP
   640 ;; This function is called by:
   641 ;;		Startup code after reset
   642 ;; This function uses a non-reentrant model
   643 ;;
   644                           
   645                           
   646                           ;psect for function _main
   647  00C2                     _main:
   648  00C2                     l1103:	
   649                           ;incstack = 0
   650                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   651                           
   652                           
   653                           ;Slave_1_main.c: 45:     initSETUP();
   654  00C2  120A  118A  2100  120A  118A  	fcall	_initSETUP
   655                           
   656                           ;Slave_1_main.c: 46:     Lcd_Init();
   657  00C7  120A  118A  2076  120A  118A  	fcall	_Lcd_Init
   658                           
   659                           ;Slave_1_main.c: 47:     Lcd_Clear();
   660  00CC  120A  118A  21C4  120A  118A  	fcall	_Lcd_Clear
   661                           
   662                           ;Slave_1_main.c: 48:     Lcd_Set_Cursor(1,1);
   663  00D1  1283               	bcf	3,5	;RP0=0, select bank0
   664  00D2  1303               	bcf	3,6	;RP1=0, select bank0
   665  00D3  01B8               	clrf	Lcd_Set_Cursor@b
   666  00D4  0AB8               	incf	Lcd_Set_Cursor@b,f
   667  00D5  3001               	movlw	1
   668  00D6  120A  118A  201E  120A  118A  	fcall	_Lcd_Set_Cursor
   669  00DB                     l1105:
   670                           
   671                           ;Slave_1_main.c: 49:     Lcd_Write_String(" S1:   S2:   S3:");
   672  00DB  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   673  00DC  120A  118A  2130  120A  118A  	fcall	_Lcd_Write_String
   674  00E1                     l1107:
   675                           
   676                           ;Slave_1_main.c: 50:     ADCON0bits.GO = 1;
   677  00E1  1283               	bcf	3,5	;RP0=0, select bank0
   678  00E2  1303               	bcf	3,6	;RP1=0, select bank0
   679  00E3  149F               	bsf	31,1	;volatile
   680  00E4                     l1109:
   681                           
   682                           ;Slave_1_main.c: 52:         Lcd_Set_Cursor(2,1);
   683  00E4  1283               	bcf	3,5	;RP0=0, select bank0
   684  00E5  1303               	bcf	3,6	;RP1=0, select bank0
   685  00E6  01B8               	clrf	Lcd_Set_Cursor@b
   686  00E7  0AB8               	incf	Lcd_Set_Cursor@b,f
   687  00E8  3002               	movlw	2
   688  00E9  120A  118A  201E  120A  118A  	fcall	_Lcd_Set_Cursor
   689  00EE                     l1111:
   690                           
   691                           ;Slave_1_main.c: 54:         _delay((unsigned long)((500)*(8000000/4000.0)));
   692  00EE  3006               	movlw	6
   693  00EF  1283               	bcf	3,5	;RP0=0, select bank0
   694  00F0  1303               	bcf	3,6	;RP1=0, select bank0
   695  00F1  00C1               	movwf	??_main+2
   696  00F2  3013               	movlw	19
   697  00F3  00C0               	movwf	??_main+1
   698  00F4  30AD               	movlw	173
   699  00F5  00BF               	movwf	??_main
   700  00F6                     u217:
   701  00F6  0BBF               	decfsz	??_main,f
   702  00F7  28F6               	goto	u217
   703  00F8  0BC0               	decfsz	??_main+1,f
   704  00F9  28F6               	goto	u217
   705  00FA  0BC1               	decfsz	??_main+2,f
   706  00FB  28F6               	goto	u217
   707  00FC  28E4               	goto	l1109
   708  00FD  120A  118A  280C   	ljmp	start
   709  0100                     __end_of_main:
   710                           
   711                           	psect	text1
   712  0100                     __ptext1:	
   713 ;; *************** function _initSETUP *****************
   714 ;; Defined at:
   715 ;;		line 67 in file "Slave_1_main.c"
   716 ;; Parameters:    Size  Location     Type
   717 ;;		None
   718 ;; Auto vars:     Size  Location     Type
   719 ;;		None
   720 ;; Return value:  Size  Location     Type
   721 ;;                  1    wreg      void 
   722 ;; Registers used:
   723 ;;		wreg, status,2, status,0
   724 ;; Tracked objects:
   725 ;;		On entry : 0/0
   726 ;;		On exit  : 0/0
   727 ;;		Unchanged: 0/0
   728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   729 ;;      Params:         0       0       0       0       0
   730 ;;      Locals:         0       0       0       0       0
   731 ;;      Temps:          1       0       0       0       0
   732 ;;      Totals:         1       0       0       0       0
   733 ;;Total ram usage:        1 bytes
   734 ;; Hardware stack levels used: 1
   735 ;; Hardware stack levels required when called: 1
   736 ;; This function calls:
   737 ;;		Nothing
   738 ;; This function is called by:
   739 ;;		_main
   740 ;; This function uses a non-reentrant model
   741 ;;
   742                           
   743                           
   744                           ;psect for function _initSETUP
   745  0100                     _initSETUP:
   746  0100                     l829:	
   747                           ;incstack = 0
   748                           ; Regs used in _initSETUP: [wreg+status,2+status,0]
   749                           
   750                           
   751                           ;Slave_1_main.c: 68:     TRISA = 0b00000001;
   752  0100  3001               	movlw	1
   753  0101  1683               	bsf	3,5	;RP0=1, select bank1
   754  0102  1303               	bcf	3,6	;RP1=0, select bank1
   755  0103  0085               	movwf	5	;volatile
   756  0104                     l831:
   757                           
   758                           ;Slave_1_main.c: 69:     TRISB = 0;
   759  0104  0186               	clrf	6	;volatile
   760  0105                     l833:
   761                           
   762                           ;Slave_1_main.c: 70:     TRISC = 0;
   763  0105  0187               	clrf	7	;volatile
   764  0106                     l835:
   765                           
   766                           ;Slave_1_main.c: 71:     TRISD = 0;
   767  0106  0188               	clrf	8	;volatile
   768  0107                     l837:
   769                           
   770                           ;Slave_1_main.c: 72:     TRISE = 0;
   771  0107  0189               	clrf	9	;volatile
   772  0108                     l839:
   773                           
   774                           ;Slave_1_main.c: 73:     PORTE = 0;
   775  0108  1283               	bcf	3,5	;RP0=0, select bank0
   776  0109  1303               	bcf	3,6	;RP1=0, select bank0
   777  010A  0189               	clrf	9	;volatile
   778  010B                     l841:
   779                           
   780                           ;Slave_1_main.c: 74:     PORTA = 0;
   781  010B  0185               	clrf	5	;volatile
   782  010C                     l843:
   783                           
   784                           ;Slave_1_main.c: 75:     PORTB = 0;
   785  010C  0186               	clrf	6	;volatile
   786  010D                     l845:
   787                           
   788                           ;Slave_1_main.c: 76:     PORTC = 0;
   789  010D  0187               	clrf	7	;volatile
   790  010E                     l847:
   791                           
   792                           ;Slave_1_main.c: 77:     PORTD = 0;
   793  010E  0188               	clrf	8	;volatile
   794  010F                     l849:
   795                           
   796                           ;Slave_1_main.c: 78:     ANSEL = 0b00000001;
   797  010F  3001               	movlw	1
   798  0110  1683               	bsf	3,5	;RP0=1, select bank3
   799  0111  1703               	bsf	3,6	;RP1=1, select bank3
   800  0112  0088               	movwf	8	;volatile
   801                           
   802                           ;Slave_1_main.c: 79:     ANSELH = 0;
   803  0113  0189               	clrf	9	;volatile
   804  0114                     l851:
   805                           
   806                           ;Slave_1_main.c: 80:     OSCCONbits.IRCF2 = 1;
   807  0114  1683               	bsf	3,5	;RP0=1, select bank1
   808  0115  1303               	bcf	3,6	;RP1=0, select bank1
   809  0116  170F               	bsf	15,6	;volatile
   810  0117                     l853:
   811                           
   812                           ;Slave_1_main.c: 81:     OSCCONbits.IRCF1 = 1;
   813  0117  168F               	bsf	15,5	;volatile
   814  0118                     l855:
   815                           
   816                           ;Slave_1_main.c: 82:     OSCCONbits.IRCF0 = 1;
   817  0118  160F               	bsf	15,4	;volatile
   818  0119                     l857:
   819                           
   820                           ;Slave_1_main.c: 83:     OSCCONbits.SCS = 1;
   821  0119  140F               	bsf	15,0	;volatile
   822  011A                     l859:
   823                           
   824                           ;Slave_1_main.c: 85:     ADCON1bits.ADFM = 0;
   825  011A  139F               	bcf	31,7	;volatile
   826  011B                     l861:
   827                           
   828                           ;Slave_1_main.c: 86:     ADCON1bits.VCFG0 = 0;
   829  011B  121F               	bcf	31,4	;volatile
   830  011C                     l863:
   831                           
   832                           ;Slave_1_main.c: 87:     ADCON1bits.VCFG1 = 0;
   833  011C  129F               	bcf	31,5	;volatile
   834  011D                     l865:
   835                           
   836                           ;Slave_1_main.c: 88:     ADCON0bits.ADCS = 0b10;
   837  011D  1283               	bcf	3,5	;RP0=0, select bank0
   838  011E  1303               	bcf	3,6	;RP1=0, select bank0
   839  011F  081F               	movf	31,w	;volatile
   840  0120  393F               	andlw	-193
   841  0121  3880               	iorlw	128
   842  0122  009F               	movwf	31	;volatile
   843  0123                     l867:
   844                           
   845                           ;Slave_1_main.c: 89:     ADCON0bits.CHS = 0;
   846  0123  30C3               	movlw	-61
   847  0124  059F               	andwf	31,f	;volatile
   848  0125                     l869:
   849                           
   850                           ;Slave_1_main.c: 90:     ADCON0bits.ADON = 1;
   851  0125  141F               	bsf	31,0	;volatile
   852  0126                     l871:
   853                           
   854                           ;Slave_1_main.c: 91:     _delay((unsigned long)((50)*(8000000/4000000.0)));
   855  0126  3021               	movlw	33
   856  0127  00F4               	movwf	??_initSETUP
   857  0128                     u227:
   858  0128  0BF4               	decfsz	??_initSETUP,f
   859  0129  2928               	goto	u227
   860  012A                     l873:
   861                           
   862                           ;Slave_1_main.c: 92:     ADCON0bits.GO = 1;
   863  012A  1283               	bcf	3,5	;RP0=0, select bank0
   864  012B  1303               	bcf	3,6	;RP1=0, select bank0
   865  012C  149F               	bsf	31,1	;volatile
   866  012D                     l875:
   867                           
   868                           ;Slave_1_main.c: 94:     INTCONbits.GIE = 1;
   869  012D  178B               	bsf	11,7	;volatile
   870  012E                     l877:
   871                           
   872                           ;Slave_1_main.c: 95:     INTCONbits.PEIE =1;
   873  012E  170B               	bsf	11,6	;volatile
   874  012F                     l169:
   875  012F  0008               	return
   876  0130                     __end_of_initSETUP:
   877                           
   878                           	psect	text2
   879  0130                     __ptext2:	
   880 ;; *************** function _Lcd_Write_String *****************
   881 ;; Defined at:
   882 ;;		line 77 in file "LCD.c"
   883 ;; Parameters:    Size  Location     Type
   884 ;;  a               1    wreg     PTR unsigned char 
   885 ;;		 -> STR_1(17), 
   886 ;; Auto vars:     Size  Location     Type
   887 ;;  a               1    3[BANK0 ] PTR unsigned char 
   888 ;;		 -> STR_1(17), 
   889 ;;  i               2    4[BANK0 ] int 
   890 ;; Return value:  Size  Location     Type
   891 ;;                  1    wreg      void 
   892 ;; Registers used:
   893 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   894 ;; Tracked objects:
   895 ;;		On entry : 0/0
   896 ;;		On exit  : 0/0
   897 ;;		Unchanged: 0/0
   898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   899 ;;      Params:         0       0       0       0       0
   900 ;;      Locals:         0       3       0       0       0
   901 ;;      Temps:          0       0       0       0       0
   902 ;;      Totals:         0       3       0       0       0
   903 ;;Total ram usage:        3 bytes
   904 ;; Hardware stack levels used: 1
   905 ;; Hardware stack levels required when called: 3
   906 ;; This function calls:
   907 ;;		_Lcd_Write_Char
   908 ;; This function is called by:
   909 ;;		_main
   910 ;; This function uses a non-reentrant model
   911 ;;
   912                           
   913                           
   914                           ;psect for function _Lcd_Write_String
   915  0130                     _Lcd_Write_String:
   916                           
   917                           ;incstack = 0
   918                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   919                           ;Lcd_Write_String@a stored from wreg
   920  0130  1283               	bcf	3,5	;RP0=0, select bank0
   921  0131  1303               	bcf	3,6	;RP1=0, select bank0
   922  0132  00BB               	movwf	Lcd_Write_String@a
   923  0133                     l1091:
   924                           
   925                           ;LCD.c: 78:     int i;;LCD.c: 79:     for (i = 0; a[i] != '\0'; i++)
   926  0133  01BC               	clrf	Lcd_Write_String@i
   927  0134  01BD               	clrf	Lcd_Write_String@i+1
   928  0135  294B               	goto	l1097
   929  0136                     l1093:
   930                           
   931                           ;LCD.c: 80:         Lcd_Write_Char(a[i]);
   932  0136  083C               	movf	Lcd_Write_String@i,w
   933  0137  073B               	addwf	Lcd_Write_String@a,w
   934  0138  0084               	movwf	4
   935  0139  120A  118A  21AD  120A  118A  	fcall	stringdir
   936  013E  120A  118A  2159  120A  118A  	fcall	_Lcd_Write_Char
   937  0143                     l1095:
   938  0143  3001               	movlw	1
   939  0144  1283               	bcf	3,5	;RP0=0, select bank0
   940  0145  1303               	bcf	3,6	;RP1=0, select bank0
   941  0146  07BC               	addwf	Lcd_Write_String@i,f
   942  0147  1803               	skipnc
   943  0148  0ABD               	incf	Lcd_Write_String@i+1,f
   944  0149  3000               	movlw	0
   945  014A  07BD               	addwf	Lcd_Write_String@i+1,f
   946  014B                     l1097:
   947  014B  083C               	movf	Lcd_Write_String@i,w
   948  014C  073B               	addwf	Lcd_Write_String@a,w
   949  014D  0084               	movwf	4
   950  014E  120A  118A  21AD  120A  118A  	fcall	stringdir
   951  0153  3A00               	xorlw	0
   952  0154  1D03               	skipz
   953  0155  2957               	goto	u201
   954  0156  2958               	goto	u200
   955  0157                     u201:
   956  0157  2936               	goto	l1093
   957  0158                     u200:
   958  0158                     l90:
   959  0158  0008               	return
   960  0159                     __end_of_Lcd_Write_String:
   961                           
   962                           	psect	text3
   963  0159                     __ptext3:	
   964 ;; *************** function _Lcd_Write_Char *****************
   965 ;; Defined at:
   966 ;;		line 65 in file "LCD.c"
   967 ;; Parameters:    Size  Location     Type
   968 ;;  a               1    wreg     unsigned char 
   969 ;; Auto vars:     Size  Location     Type
   970 ;;  a               1    0[BANK0 ] unsigned char 
   971 ;;  y               1    2[BANK0 ] unsigned char 
   972 ;;  temp            1    1[BANK0 ] unsigned char 
   973 ;; Return value:  Size  Location     Type
   974 ;;                  1    wreg      void 
   975 ;; Registers used:
   976 ;;		wreg, status,2, status,0, pclath, cstack
   977 ;; Tracked objects:
   978 ;;		On entry : 0/0
   979 ;;		On exit  : 0/0
   980 ;;		Unchanged: 0/0
   981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   982 ;;      Params:         0       0       0       0       0
   983 ;;      Locals:         0       3       0       0       0
   984 ;;      Temps:          1       0       0       0       0
   985 ;;      Totals:         1       3       0       0       0
   986 ;;Total ram usage:        4 bytes
   987 ;; Hardware stack levels used: 1
   988 ;; Hardware stack levels required when called: 2
   989 ;; This function calls:
   990 ;;		_Lcd_Port
   991 ;; This function is called by:
   992 ;;		_Lcd_Write_String
   993 ;; This function uses a non-reentrant model
   994 ;;
   995                           
   996                           
   997                           ;psect for function _Lcd_Write_Char
   998  0159                     _Lcd_Write_Char:
   999                           
  1000                           ;incstack = 0
  1001                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1002                           ;Lcd_Write_Char@a stored from wreg
  1003  0159  1283               	bcf	3,5	;RP0=0, select bank0
  1004  015A  1303               	bcf	3,6	;RP1=0, select bank0
  1005  015B  00B8               	movwf	Lcd_Write_Char@a
  1006  015C                     l1047:
  1007                           
  1008                           ;LCD.c: 66:     char temp, y;;LCD.c: 67:     temp = a;
  1009  015C  0838               	movf	Lcd_Write_Char@a,w
  1010  015D  00F5               	movwf	??_Lcd_Write_Char
  1011  015E  0875               	movf	??_Lcd_Write_Char,w
  1012  015F  00B9               	movwf	Lcd_Write_Char@temp
  1013                           
  1014                           ;LCD.c: 68:     y = temp;
  1015  0160  0839               	movf	Lcd_Write_Char@temp,w
  1016  0161  00F5               	movwf	??_Lcd_Write_Char
  1017  0162  0875               	movf	??_Lcd_Write_Char,w
  1018  0163  00BA               	movwf	Lcd_Write_Char@y
  1019  0164                     l1049:
  1020                           
  1021                           ;LCD.c: 69:     RE0 = 1;
  1022  0164  1409               	bsf	9,0	;volatile
  1023  0165                     l1051:
  1024                           
  1025                           ;LCD.c: 70:     Lcd_Port(y);
  1026  0165  083A               	movf	Lcd_Write_Char@y,w
  1027  0166  120A  118A  21D9  120A  118A  	fcall	_Lcd_Port
  1028  016B                     l1053:
  1029                           
  1030                           ;LCD.c: 71:     RE1 = 1;
  1031  016B  1283               	bcf	3,5	;RP0=0, select bank0
  1032  016C  1303               	bcf	3,6	;RP1=0, select bank0
  1033  016D  1489               	bsf	9,1	;volatile
  1034  016E                     l1055:
  1035                           
  1036                           ;LCD.c: 72:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  1037  016E  301A               	movlw	26
  1038  016F  00F5               	movwf	??_Lcd_Write_Char
  1039  0170                     u237:
  1040  0170  0BF5               	decfsz	??_Lcd_Write_Char,f
  1041  0171  2970               	goto	u237
  1042  0172  0000               	nop
  1043  0173                     l1057:
  1044                           
  1045                           ;LCD.c: 73:     RE1 = 0;
  1046  0173  1283               	bcf	3,5	;RP0=0, select bank0
  1047  0174  1303               	bcf	3,6	;RP1=0, select bank0
  1048  0175  1089               	bcf	9,1	;volatile
  1049  0176                     l84:
  1050  0176  0008               	return
  1051  0177                     __end_of_Lcd_Write_Char:
  1052                           
  1053                           	psect	text4
  1054  001E                     __ptext4:	
  1055 ;; *************** function _Lcd_Set_Cursor *****************
  1056 ;; Defined at:
  1057 ;;		line 30 in file "LCD.c"
  1058 ;; Parameters:    Size  Location     Type
  1059 ;;  a               1    wreg     unsigned char 
  1060 ;;  b               1    0[BANK0 ] unsigned char 
  1061 ;; Auto vars:     Size  Location     Type
  1062 ;;  a               1    3[BANK0 ] unsigned char 
  1063 ;;  temp            1    6[BANK0 ] unsigned char 
  1064 ;;  y               1    5[BANK0 ] unsigned char 
  1065 ;;  z               1    4[BANK0 ] unsigned char 
  1066 ;; Return value:  Size  Location     Type
  1067 ;;                  1    wreg      void 
  1068 ;; Registers used:
  1069 ;;		wreg, status,2, status,0, pclath, cstack
  1070 ;; Tracked objects:
  1071 ;;		On entry : 0/0
  1072 ;;		On exit  : 0/0
  1073 ;;		Unchanged: 0/0
  1074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1075 ;;      Params:         0       1       0       0       0
  1076 ;;      Locals:         0       4       0       0       0
  1077 ;;      Temps:          0       2       0       0       0
  1078 ;;      Totals:         0       7       0       0       0
  1079 ;;Total ram usage:        7 bytes
  1080 ;; Hardware stack levels used: 1
  1081 ;; Hardware stack levels required when called: 3
  1082 ;; This function calls:
  1083 ;;		_Lcd_Cmd
  1084 ;; This function is called by:
  1085 ;;		_main
  1086 ;; This function uses a non-reentrant model
  1087 ;;
  1088                           
  1089                           
  1090                           ;psect for function _Lcd_Set_Cursor
  1091  001E                     _Lcd_Set_Cursor:
  1092                           
  1093                           ;incstack = 0
  1094                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1095                           ;Lcd_Set_Cursor@a stored from wreg
  1096  001E  1283               	bcf	3,5	;RP0=0, select bank0
  1097  001F  1303               	bcf	3,6	;RP1=0, select bank0
  1098  0020  00BB               	movwf	Lcd_Set_Cursor@a
  1099  0021                     l1061:
  1100                           
  1101                           ;LCD.c: 31:     char temp, z, y;;LCD.c: 32:     if (a == 1) {
  1102  0021  033B               	decf	Lcd_Set_Cursor@a,w
  1103  0022  1D03               	btfss	3,2
  1104  0023  2825               	goto	u161
  1105  0024  2826               	goto	u160
  1106  0025                     u161:
  1107  0025  284B               	goto	l1071
  1108  0026                     u160:
  1109  0026                     l1063:
  1110                           
  1111                           ;LCD.c: 33:         temp = 0x80 + b - 1;
  1112  0026  0838               	movf	Lcd_Set_Cursor@b,w
  1113  0027  3E7F               	addlw	127
  1114  0028  00B9               	movwf	??_Lcd_Set_Cursor
  1115  0029  0839               	movf	??_Lcd_Set_Cursor,w
  1116  002A  00BE               	movwf	Lcd_Set_Cursor@temp
  1117                           
  1118                           ;LCD.c: 34:         z = temp >> 4;
  1119  002B  083E               	movf	Lcd_Set_Cursor@temp,w
  1120  002C  00B9               	movwf	??_Lcd_Set_Cursor
  1121  002D  3004               	movlw	4
  1122  002E                     u175:
  1123  002E  1003               	clrc
  1124  002F  0CB9               	rrf	??_Lcd_Set_Cursor,f
  1125  0030  3EFF               	addlw	-1
  1126  0031  1D03               	skipz
  1127  0032  282E               	goto	u175
  1128  0033  0839               	movf	??_Lcd_Set_Cursor,w
  1129  0034  00BA               	movwf	??_Lcd_Set_Cursor+1
  1130  0035  083A               	movf	??_Lcd_Set_Cursor+1,w
  1131  0036  00BC               	movwf	Lcd_Set_Cursor@z
  1132  0037                     l1065:
  1133                           
  1134                           ;LCD.c: 35:         y = temp & 0x0F;
  1135  0037  083E               	movf	Lcd_Set_Cursor@temp,w
  1136  0038  390F               	andlw	15
  1137  0039  00B9               	movwf	??_Lcd_Set_Cursor
  1138  003A  0839               	movf	??_Lcd_Set_Cursor,w
  1139  003B  00BD               	movwf	Lcd_Set_Cursor@y
  1140  003C                     l1067:
  1141                           
  1142                           ;LCD.c: 36:         Lcd_Cmd(z);
  1143  003C  083C               	movf	Lcd_Set_Cursor@z,w
  1144  003D  120A  118A  2193  120A  118A  	fcall	_Lcd_Cmd
  1145  0042                     l1069:
  1146                           
  1147                           ;LCD.c: 37:         Lcd_Cmd(y);
  1148  0042  1283               	bcf	3,5	;RP0=0, select bank0
  1149  0043  1303               	bcf	3,6	;RP1=0, select bank0
  1150  0044  083D               	movf	Lcd_Set_Cursor@y,w
  1151  0045  120A  118A  2193  120A  118A  	fcall	_Lcd_Cmd
  1152                           
  1153                           ;LCD.c: 38:     } else if (a == 2) {
  1154  004A  2875               	goto	l78
  1155  004B                     l1071:
  1156  004B  3002               	movlw	2
  1157  004C  063B               	xorwf	Lcd_Set_Cursor@a,w
  1158  004D  1D03               	btfss	3,2
  1159  004E  2850               	goto	u181
  1160  004F  2851               	goto	u180
  1161  0050                     u181:
  1162  0050  2875               	goto	l78
  1163  0051                     u180:
  1164  0051                     l1073:
  1165                           
  1166                           ;LCD.c: 39:         temp = 0xC0 + b - 1;
  1167  0051  0838               	movf	Lcd_Set_Cursor@b,w
  1168  0052  3EBF               	addlw	191
  1169  0053  00B9               	movwf	??_Lcd_Set_Cursor
  1170  0054  0839               	movf	??_Lcd_Set_Cursor,w
  1171  0055  00BE               	movwf	Lcd_Set_Cursor@temp
  1172                           
  1173                           ;LCD.c: 40:         z = temp >> 4;
  1174  0056  083E               	movf	Lcd_Set_Cursor@temp,w
  1175  0057  00B9               	movwf	??_Lcd_Set_Cursor
  1176  0058  3004               	movlw	4
  1177  0059                     u195:
  1178  0059  1003               	clrc
  1179  005A  0CB9               	rrf	??_Lcd_Set_Cursor,f
  1180  005B  3EFF               	addlw	-1
  1181  005C  1D03               	skipz
  1182  005D  2859               	goto	u195
  1183  005E  0839               	movf	??_Lcd_Set_Cursor,w
  1184  005F  00BA               	movwf	??_Lcd_Set_Cursor+1
  1185  0060  083A               	movf	??_Lcd_Set_Cursor+1,w
  1186  0061  00BC               	movwf	Lcd_Set_Cursor@z
  1187  0062                     l1075:
  1188                           
  1189                           ;LCD.c: 41:         y = temp & 0xF0;
  1190  0062  083E               	movf	Lcd_Set_Cursor@temp,w
  1191  0063  39F0               	andlw	240
  1192  0064  00B9               	movwf	??_Lcd_Set_Cursor
  1193  0065  0839               	movf	??_Lcd_Set_Cursor,w
  1194  0066  00BD               	movwf	Lcd_Set_Cursor@y
  1195  0067                     l1077:
  1196                           
  1197                           ;LCD.c: 42:         Lcd_Cmd(z);
  1198  0067  083C               	movf	Lcd_Set_Cursor@z,w
  1199  0068  120A  118A  2193  120A  118A  	fcall	_Lcd_Cmd
  1200  006D                     l1079:
  1201                           
  1202                           ;LCD.c: 43:         Lcd_Cmd(y);
  1203  006D  1283               	bcf	3,5	;RP0=0, select bank0
  1204  006E  1303               	bcf	3,6	;RP1=0, select bank0
  1205  006F  083D               	movf	Lcd_Set_Cursor@y,w
  1206  0070  120A  118A  2193  120A  118A  	fcall	_Lcd_Cmd
  1207  0075                     l78:
  1208  0075  0008               	return
  1209  0076                     __end_of_Lcd_Set_Cursor:
  1210                           
  1211                           	psect	text5
  1212  0076                     __ptext5:	
  1213 ;; *************** function _Lcd_Init *****************
  1214 ;; Defined at:
  1215 ;;		line 47 in file "LCD.c"
  1216 ;; Parameters:    Size  Location     Type
  1217 ;;		None
  1218 ;; Auto vars:     Size  Location     Type
  1219 ;;		None
  1220 ;; Return value:  Size  Location     Type
  1221 ;;                  1    wreg      void 
  1222 ;; Registers used:
  1223 ;;		wreg, status,2, status,0, pclath, cstack
  1224 ;; Tracked objects:
  1225 ;;		On entry : 0/0
  1226 ;;		On exit  : 0/0
  1227 ;;		Unchanged: 0/0
  1228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1229 ;;      Params:         0       0       0       0       0
  1230 ;;      Locals:         0       0       0       0       0
  1231 ;;      Temps:          0       2       0       0       0
  1232 ;;      Totals:         0       2       0       0       0
  1233 ;;Total ram usage:        2 bytes
  1234 ;; Hardware stack levels used: 1
  1235 ;; Hardware stack levels required when called: 3
  1236 ;; This function calls:
  1237 ;;		_Lcd_Cmd
  1238 ;;		_Lcd_Port
  1239 ;; This function is called by:
  1240 ;;		_main
  1241 ;; This function uses a non-reentrant model
  1242 ;;
  1243                           
  1244                           
  1245                           ;psect for function _Lcd_Init
  1246  0076                     _Lcd_Init:
  1247  0076                     l1081:	
  1248                           ;incstack = 0
  1249                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1250                           
  1251                           
  1252                           ;LCD.c: 48:     Lcd_Port(0x00);
  1253  0076  3000               	movlw	0
  1254  0077  120A  118A  21D9  120A  118A  	fcall	_Lcd_Port
  1255  007C                     l1083:
  1256                           
  1257                           ;LCD.c: 49:     _delay((unsigned long)((20)*(8000000/4000.0)));
  1258  007C  3034               	movlw	52
  1259  007D  1283               	bcf	3,5	;RP0=0, select bank0
  1260  007E  1303               	bcf	3,6	;RP1=0, select bank0
  1261  007F  00B9               	movwf	??_Lcd_Init+1
  1262  0080  30F1               	movlw	241
  1263  0081  00B8               	movwf	??_Lcd_Init
  1264  0082                     u247:
  1265  0082  0BB8               	decfsz	??_Lcd_Init,f
  1266  0083  2882               	goto	u247
  1267  0084  0BB9               	decfsz	??_Lcd_Init+1,f
  1268  0085  2882               	goto	u247
  1269  0086                     l1085:
  1270                           
  1271                           ;LCD.c: 50:     Lcd_Cmd(0x30);
  1272  0086  3030               	movlw	48
  1273  0087  120A  118A  2193  120A  118A  	fcall	_Lcd_Cmd
  1274                           
  1275                           ;LCD.c: 51:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1276  008C  300D               	movlw	13
  1277  008D  1283               	bcf	3,5	;RP0=0, select bank0
  1278  008E  1303               	bcf	3,6	;RP1=0, select bank0
  1279  008F  00B9               	movwf	??_Lcd_Init+1
  1280  0090  30FB               	movlw	251
  1281  0091  00B8               	movwf	??_Lcd_Init
  1282  0092                     u257:
  1283  0092  0BB8               	decfsz	??_Lcd_Init,f
  1284  0093  2892               	goto	u257
  1285  0094  0BB9               	decfsz	??_Lcd_Init+1,f
  1286  0095  2892               	goto	u257
  1287  0096                     l1087:
  1288                           
  1289                           ;LCD.c: 52:     Lcd_Cmd(0x30);
  1290  0096  3030               	movlw	48
  1291  0097  120A  118A  2193  120A  118A  	fcall	_Lcd_Cmd
  1292  009C                     l1089:
  1293                           
  1294                           ;LCD.c: 53:     _delay((unsigned long)((200)*(8000000/4000000.0)));
  1295  009C  3084               	movlw	132
  1296  009D  1283               	bcf	3,5	;RP0=0, select bank0
  1297  009E  1303               	bcf	3,6	;RP1=0, select bank0
  1298  009F  00B8               	movwf	??_Lcd_Init
  1299  00A0                     u267:
  1300  00A0  0BB8               	decfsz	??_Lcd_Init,f
  1301  00A1  28A0               	goto	u267
  1302  00A2  0000               	nop
  1303                           
  1304                           ;LCD.c: 54:     Lcd_Cmd(0x30);
  1305  00A3  3030               	movlw	48
  1306  00A4  120A  118A  2193  120A  118A  	fcall	_Lcd_Cmd
  1307                           
  1308                           ;LCD.c: 56:     Lcd_Cmd(0x3C);
  1309  00A9  303C               	movlw	60
  1310  00AA  120A  118A  2193  120A  118A  	fcall	_Lcd_Cmd
  1311                           
  1312                           ;LCD.c: 58:     Lcd_Cmd(0x08);
  1313  00AF  3008               	movlw	8
  1314  00B0  120A  118A  2193  120A  118A  	fcall	_Lcd_Cmd
  1315                           
  1316                           ;LCD.c: 60:     Lcd_Cmd(0x01);
  1317  00B5  3001               	movlw	1
  1318  00B6  120A  118A  2193  120A  118A  	fcall	_Lcd_Cmd
  1319                           
  1320                           ;LCD.c: 62:     Lcd_Cmd(0x06);
  1321  00BB  3006               	movlw	6
  1322  00BC  120A  118A  2193  120A  118A  	fcall	_Lcd_Cmd
  1323  00C1                     l81:
  1324  00C1  0008               	return
  1325  00C2                     __end_of_Lcd_Init:
  1326                           
  1327                           	psect	text6
  1328  01C4                     __ptext6:	
  1329 ;; *************** function _Lcd_Clear *****************
  1330 ;; Defined at:
  1331 ;;		line 25 in file "LCD.c"
  1332 ;; Parameters:    Size  Location     Type
  1333 ;;		None
  1334 ;; Auto vars:     Size  Location     Type
  1335 ;;		None
  1336 ;; Return value:  Size  Location     Type
  1337 ;;                  1    wreg      void 
  1338 ;; Registers used:
  1339 ;;		wreg, status,2, status,0, pclath, cstack
  1340 ;; Tracked objects:
  1341 ;;		On entry : 0/0
  1342 ;;		On exit  : 0/0
  1343 ;;		Unchanged: 0/0
  1344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1345 ;;      Params:         0       0       0       0       0
  1346 ;;      Locals:         0       0       0       0       0
  1347 ;;      Temps:          0       0       0       0       0
  1348 ;;      Totals:         0       0       0       0       0
  1349 ;;Total ram usage:        0 bytes
  1350 ;; Hardware stack levels used: 1
  1351 ;; Hardware stack levels required when called: 3
  1352 ;; This function calls:
  1353 ;;		_Lcd_Cmd
  1354 ;; This function is called by:
  1355 ;;		_main
  1356 ;; This function uses a non-reentrant model
  1357 ;;
  1358                           
  1359                           
  1360                           ;psect for function _Lcd_Clear
  1361  01C4                     _Lcd_Clear:
  1362  01C4                     l1059:	
  1363                           ;incstack = 0
  1364                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  1365                           
  1366                           
  1367                           ;LCD.c: 26:     Lcd_Cmd(0);
  1368  01C4  3000               	movlw	0
  1369  01C5  120A  118A  2193  120A  118A  	fcall	_Lcd_Cmd
  1370                           
  1371                           ;LCD.c: 27:     Lcd_Cmd(1);
  1372  01CA  3001               	movlw	1
  1373  01CB  120A  118A  2193  120A  118A  	fcall	_Lcd_Cmd
  1374  01D0                     l72:
  1375  01D0  0008               	return
  1376  01D1                     __end_of_Lcd_Clear:
  1377                           
  1378                           	psect	text7
  1379  0193                     __ptext7:	
  1380 ;; *************** function _Lcd_Cmd *****************
  1381 ;; Defined at:
  1382 ;;		line 17 in file "LCD.c"
  1383 ;; Parameters:    Size  Location     Type
  1384 ;;  a               1    wreg     unsigned char 
  1385 ;; Auto vars:     Size  Location     Type
  1386 ;;  a               1    7[COMMON] unsigned char 
  1387 ;; Return value:  Size  Location     Type
  1388 ;;                  1    wreg      void 
  1389 ;; Registers used:
  1390 ;;		wreg, status,2, status,0, pclath, cstack
  1391 ;; Tracked objects:
  1392 ;;		On entry : 0/0
  1393 ;;		On exit  : 0/0
  1394 ;;		Unchanged: 0/0
  1395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1396 ;;      Params:         0       0       0       0       0
  1397 ;;      Locals:         1       0       0       0       0
  1398 ;;      Temps:          2       0       0       0       0
  1399 ;;      Totals:         3       0       0       0       0
  1400 ;;Total ram usage:        3 bytes
  1401 ;; Hardware stack levels used: 1
  1402 ;; Hardware stack levels required when called: 2
  1403 ;; This function calls:
  1404 ;;		_Lcd_Port
  1405 ;; This function is called by:
  1406 ;;		_Lcd_Clear
  1407 ;;		_Lcd_Set_Cursor
  1408 ;;		_Lcd_Init
  1409 ;;		_Lcd_Shift_Right
  1410 ;;		_Lcd_Shift_Left
  1411 ;; This function uses a non-reentrant model
  1412 ;;
  1413                           
  1414                           
  1415                           ;psect for function _Lcd_Cmd
  1416  0193                     _Lcd_Cmd:
  1417                           
  1418                           ;incstack = 0
  1419                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1420                           ;Lcd_Cmd@a stored from wreg
  1421  0193  00F7               	movwf	Lcd_Cmd@a
  1422  0194                     l1037:
  1423                           
  1424                           ;LCD.c: 18:     RE0 = 0;
  1425  0194  1283               	bcf	3,5	;RP0=0, select bank0
  1426  0195  1303               	bcf	3,6	;RP1=0, select bank0
  1427  0196  1009               	bcf	9,0	;volatile
  1428  0197                     l1039:
  1429                           
  1430                           ;LCD.c: 19:     Lcd_Port(a);
  1431  0197  0877               	movf	Lcd_Cmd@a,w
  1432  0198  120A  118A  21D9  120A  118A  	fcall	_Lcd_Port
  1433  019D                     l1041:
  1434                           
  1435                           ;LCD.c: 20:     RE1 = 1;
  1436  019D  1283               	bcf	3,5	;RP0=0, select bank0
  1437  019E  1303               	bcf	3,6	;RP1=0, select bank0
  1438  019F  1489               	bsf	9,1	;volatile
  1439  01A0                     l1043:
  1440                           
  1441                           ;LCD.c: 21:     _delay((unsigned long)((4)*(8000000/4000.0)));
  1442  01A0  300B               	movlw	11
  1443  01A1  00F6               	movwf	??_Lcd_Cmd+1
  1444  01A2  3062               	movlw	98
  1445  01A3  00F5               	movwf	??_Lcd_Cmd
  1446  01A4                     u277:
  1447  01A4  0BF5               	decfsz	??_Lcd_Cmd,f
  1448  01A5  29A4               	goto	u277
  1449  01A6  0BF6               	decfsz	??_Lcd_Cmd+1,f
  1450  01A7  29A4               	goto	u277
  1451  01A8  0000               	nop
  1452  01A9                     l1045:
  1453                           
  1454                           ;LCD.c: 22:     RE1 = 0;
  1455  01A9  1283               	bcf	3,5	;RP0=0, select bank0
  1456  01AA  1303               	bcf	3,6	;RP1=0, select bank0
  1457  01AB  1089               	bcf	9,1	;volatile
  1458  01AC                     l69:
  1459  01AC  0008               	return
  1460  01AD                     __end_of_Lcd_Cmd:
  1461                           
  1462                           	psect	text8
  1463  01D9                     __ptext8:	
  1464 ;; *************** function _Lcd_Port *****************
  1465 ;; Defined at:
  1466 ;;		line 12 in file "LCD.c"
  1467 ;; Parameters:    Size  Location     Type
  1468 ;;  a               1    wreg     unsigned char 
  1469 ;; Auto vars:     Size  Location     Type
  1470 ;;  a               1    4[COMMON] unsigned char 
  1471 ;; Return value:  Size  Location     Type
  1472 ;;                  1    wreg      void 
  1473 ;; Registers used:
  1474 ;;		wreg
  1475 ;; Tracked objects:
  1476 ;;		On entry : 0/0
  1477 ;;		On exit  : 0/0
  1478 ;;		Unchanged: 0/0
  1479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1480 ;;      Params:         0       0       0       0       0
  1481 ;;      Locals:         1       0       0       0       0
  1482 ;;      Temps:          0       0       0       0       0
  1483 ;;      Totals:         1       0       0       0       0
  1484 ;;Total ram usage:        1 bytes
  1485 ;; Hardware stack levels used: 1
  1486 ;; Hardware stack levels required when called: 1
  1487 ;; This function calls:
  1488 ;;		Nothing
  1489 ;; This function is called by:
  1490 ;;		_Lcd_Cmd
  1491 ;;		_Lcd_Init
  1492 ;;		_Lcd_Write_Char
  1493 ;; This function uses a non-reentrant model
  1494 ;;
  1495                           
  1496                           
  1497                           ;psect for function _Lcd_Port
  1498  01D9                     _Lcd_Port:
  1499                           
  1500                           ;incstack = 0
  1501                           ; Regs used in _Lcd_Port: [wreg]
  1502                           ;Lcd_Port@a stored from wreg
  1503  01D9  00F4               	movwf	Lcd_Port@a
  1504  01DA                     l1035:
  1505                           
  1506                           ;LCD.c: 13:     PORTD = a;
  1507  01DA  0874               	movf	Lcd_Port@a,w
  1508  01DB  1283               	bcf	3,5	;RP0=0, select bank0
  1509  01DC  1303               	bcf	3,6	;RP1=0, select bank0
  1510  01DD  0088               	movwf	8	;volatile
  1511  01DE                     l66:
  1512  01DE  0008               	return
  1513  01DF                     __end_of_Lcd_Port:
  1514                           
  1515                           	psect	text9
  1516  0177                     __ptext9:	
  1517 ;; *************** function _isr *****************
  1518 ;; Defined at:
  1519 ;;		line 59 in file "Slave_1_main.c"
  1520 ;; Parameters:    Size  Location     Type
  1521 ;;		None
  1522 ;; Auto vars:     Size  Location     Type
  1523 ;;		None
  1524 ;; Return value:  Size  Location     Type
  1525 ;;                  1    wreg      void 
  1526 ;; Registers used:
  1527 ;;		wreg
  1528 ;; Tracked objects:
  1529 ;;		On entry : 0/0
  1530 ;;		On exit  : 0/0
  1531 ;;		Unchanged: 0/0
  1532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1533 ;;      Params:         0       0       0       0       0
  1534 ;;      Locals:         0       0       0       0       0
  1535 ;;      Temps:          4       0       0       0       0
  1536 ;;      Totals:         4       0       0       0       0
  1537 ;;Total ram usage:        4 bytes
  1538 ;; Hardware stack levels used: 1
  1539 ;; This function calls:
  1540 ;;		Nothing
  1541 ;; This function is called by:
  1542 ;;		Interrupt level 1
  1543 ;; This function uses a non-reentrant model
  1544 ;;
  1545                           
  1546                           
  1547                           ;psect for function _isr
  1548  0177                     _isr:
  1549  0177                     i1l949:
  1550                           
  1551                           ;Slave_1_main.c: 60:     if (ADIF == 1){
  1552  0177  1283               	bcf	3,5	;RP0=0, select bank0
  1553  0178  1303               	bcf	3,6	;RP1=0, select bank0
  1554  0179  1F0C               	btfss	12,6	;volatile
  1555  017A  297C               	goto	u10_21
  1556  017B  297D               	goto	u10_20
  1557  017C                     u10_21:
  1558  017C  298C               	goto	i1l166
  1559  017D                     u10_20:
  1560  017D                     i1l951:
  1561                           
  1562                           ;Slave_1_main.c: 61:         sun_pot = ADRESH;
  1563  017D  081E               	movf	30,w	;volatile
  1564  017E  00F0               	movwf	??_isr
  1565  017F  01F1               	clrf	??_isr+1
  1566  0180  0870               	movf	??_isr,w
  1567  0181  00F8               	movwf	_sun_pot
  1568  0182  0871               	movf	??_isr+1,w
  1569  0183  00F9               	movwf	_sun_pot+1
  1570  0184                     i1l953:
  1571                           
  1572                           ;Slave_1_main.c: 62:         ADIF = 0;
  1573  0184  130C               	bcf	12,6	;volatile
  1574                           
  1575                           ;Slave_1_main.c: 63:         _delay((unsigned long)((50)*(8000000/4000000.0)));
  1576  0185  3021               	movlw	33
  1577  0186  00F0               	movwf	??_isr
  1578  0187                     u28_27:
  1579  0187  0BF0               	decfsz	??_isr,f
  1580  0188  2987               	goto	u28_27
  1581  0189                     i1l955:
  1582                           
  1583                           ;Slave_1_main.c: 64:         ADCON0bits.GO = 1;
  1584  0189  1283               	bcf	3,5	;RP0=0, select bank0
  1585  018A  1303               	bcf	3,6	;RP1=0, select bank0
  1586  018B  149F               	bsf	31,1	;volatile
  1587  018C                     i1l166:
  1588  018C  0873               	movf	??_isr+3,w
  1589  018D  008A               	movwf	10
  1590  018E  0E72               	swapf	??_isr+2,w
  1591  018F  0083               	movwf	3
  1592  0190  0EFE               	swapf	btemp,f
  1593  0191  0E7E               	swapf	btemp,w
  1594  0192  0009               	retfie
  1595  0193                     __end_of_isr:
  1596  007E                     btemp	set	126	;btemp
  1597  007E                     wtemp0	set	126
  1598                           
  1599                           	psect	intentry
  1600  0004                     __pintentry:	
  1601                           ;incstack = 0
  1602                           ; Regs used in _isr: [wreg]
  1603                           
  1604  0004                     interrupt_function:
  1605  007E                     saved_w	set	btemp
  1606  0004  00FE               	movwf	btemp
  1607  0005  0E03               	swapf	3,w
  1608  0006  00F2               	movwf	??_isr+2
  1609  0007  080A               	movf	10,w
  1610  0008  00F3               	movwf	??_isr+3
  1611  0009  120A  118A  2977   	ljmp	_isr
  1612                           
  1613                           	psect	config
  1614                           
  1615                           ;Config register CONFIG1 @ 0x2007
  1616                           ;	Oscillator Selection bits
  1617                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1618                           ;	Watchdog Timer Enable bit
  1619                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1620                           ;	Power-up Timer Enable bit
  1621                           ;	PWRTE = OFF, PWRT disabled
  1622                           ;	RE3/MCLR pin function select bit
  1623                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1624                           ;	Code Protection bit
  1625                           ;	CP = OFF, Program memory code protection is disabled
  1626                           ;	Data Code Protection bit
  1627                           ;	CPD = OFF, Data memory code protection is disabled
  1628                           ;	Brown Out Reset Selection bits
  1629                           ;	BOREN = OFF, BOR disabled
  1630                           ;	Internal External Switchover bit
  1631                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1632                           ;	Fail-Safe Clock Monitor Enabled bit
  1633                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1634                           ;	Low Voltage Programming Enable bit
  1635                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1636                           ;	In-Circuit Debugger Mode bit
  1637                           ;	DEBUG = 0x1, unprogrammed default
  1638  2007                     	org	8199
  1639  2007  20D4               	dw	8404
  1640                           
  1641                           ;Config register CONFIG2 @ 0x2008
  1642                           ;	Brown-out Reset Selection bit
  1643                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1644                           ;	Flash Program Memory Self Write Enable bits
  1645                           ;	WRT = OFF, Write protection off
  1646  2008                     	org	8200
  1647  2008  3FFF               	dw	16383

Data Sizes:
    Strings     17
    Constant    0
    Data        0
    BSS         26
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      10
    BANK0            80     10      34
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1083
                                              7 BANK0      3     3      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                          _initSETUP
 ---------------------------------------------------------------------------------
 (1) _initSETUP                                            1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     296
                                              3 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     130
                                              5 COMMON     1     1      0
                                              0 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     632
                                              0 BANK0      7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      93
                                              0 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      62
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      62
                                              5 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      31
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _initSETUP

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      A      22       5       42.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2C      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Sep 07 18:19:11 2021

                        pc 0002                         l72 01D0                         l81 00C1  
                       l66 01DE                         l90 0158                         l84 0176  
                       l69 01AC                         l78 0075                         fsr 0004  
                      l169 012F                        l831 0104                        l841 010B  
                      l833 0105                        l851 0114                        l843 010C  
                      l835 0106                        l861 011B                        l853 0117  
                      l845 010D                        l837 0107                        l829 0100  
                      l871 0126                        l863 011C                        l855 0118  
                      l847 010E                        l839 0108                        l873 012A  
                      l865 011D                        l857 0119                        l849 010F  
                      l875 012D                        l867 0123                        l859 011A  
                      l877 012E                        l869 0125                        _GIE 005F  
                      _RE0 0048                        _RE1 0049                        u200 0158  
                      u201 0157                        _LDR 0030                        u160 0026  
                      u161 0025                        u217 00F6                        u227 0128  
                      u180 0051                        u181 0050                        u237 0170  
                      u247 0082                        u175 002E                        u257 0092  
                      u267 00A0                        u195 0059                        u277 01A4  
                      _isr 0177                        fsr0 0004                        indf 0000  
                     l1111 00EE                       l1103 00C2                       l1041 019D  
                     l1105 00DB                       l1035 01DA                       l1043 01A0  
                     l1051 0165                       l1107 00E1                       l1045 01A9  
                     l1037 0194                       l1061 0021                       l1053 016B  
                     l1109 00E4                       l1039 0197                       l1063 0026  
                     l1071 004B                       l1055 016E                       l1047 015C  
                     l1081 0076                       l1073 0051                       l1065 0037  
                     l1057 0173                       l1049 0164                       l1059 01C4  
                     l1083 007C                       l1075 0062                       l1067 003C  
                     l1091 0133                       l1085 0086                       l1077 0067  
                     l1069 0042                       l1093 0136                       l1087 0096  
                     l1079 006D                       l1095 0143                       l1089 009C  
                     l1097 014B                       _ADIF 0066                       ?_isr 0070  
                     STR_1 01B3                       _PEIE 005E          ?_Lcd_Write_String 0070  
                     _main 00C2                       btemp 007E                       start 000C  
       ??_Lcd_Write_String 0076            __end_of_Lcd_Cmd 01AD                      ??_isr 0070  
                    ?_main 0070                      _ANSEL 0188                      i1l166 018C  
                    i1l951 017D                      i1l953 0184                      i1l955 0189  
                    i1l949 0177                      u10_20 017D                      u10_21 017C  
                    _PORTA 0005                      _PORTB 0006                      _PORTC 0007  
                    _PORTD 0008                      _PORTE 0009                      u28_27 0187  
  __size_of_Lcd_Set_Cursor 0058                      _TRISA 0085                      _TRISB 0086  
                    _TRISC 0087                      _TRISD 0088                      _SSPIE 0463  
                    _TRISE 0089                      _SSPIF 0063                      pclath 000A  
                    status 0003                      wtemp0 007E           __end_of_Lcd_Init 00C2  
         __end_of_Lcd_Port 01DF            __initialization 000F               __end_of_main 0100  
                   ??_main 003F         __size_of_Lcd_Clear 000D                     _ADRESH 001E  
                   _ANSELH 0189                  ??_Lcd_Cmd 0075    __size_of_Lcd_Write_Char 001E  
                   _SSPADD 0093                     _TRISC3 043B                     _TRISC4 043C  
                   _SSPCON 0014                     _SSPBUF 0013                     _an_sun 0034  
                   _buffer 0020                     saved_w 007E            Lcd_Set_Cursor@a 003B  
          Lcd_Set_Cursor@b 0038            Lcd_Set_Cursor@y 003D            Lcd_Set_Cursor@z 003C  
  __end_of__initialization 001A          __end_of_Lcd_Clear 01D1             __pcstackCOMMON 0070  
           _Lcd_Set_Cursor 001E                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
               __pbssBANK0 0020         __size_of_initSETUP 0030                 __pmaintext 00C2  
               __pintentry 0004  __size_of_Lcd_Write_String 0029     __end_of_Lcd_Set_Cursor 0076  
               ??_Lcd_Init 0038                 ??_Lcd_Port 0074                    _SSPCON2 0091  
                  _SSPSTAT 0094                 __stringtab 01AD             _Lcd_Write_Char 0159  
                  _Lcd_Cmd 0193          __end_of_initSETUP 0130            ?_Lcd_Set_Cursor 0038  
                  __ptext1 0100                    __ptext2 0130                    __ptext3 0159  
                  __ptext4 001E                    __ptext5 0076                    __ptext6 01C4  
                  __ptext7 0193                    __ptext8 01D9                    __ptext9 0177  
             __size_of_isr 001C                    clrloop0 01D2                    _sun_pot 0078  
   __end_of_Lcd_Write_Char 0177       end_of_initialization 001A                  Lcd_Port@a 0074  
                _TRISCbits 0087            ?_Lcd_Write_Char 0070          Lcd_Write_String@a 003B  
        Lcd_Write_String@i 003C                  _Lcd_Clear 01C4           _Lcd_Write_String 0130  
      start_initialization 000F                __end_of_isr 0193          __size_of_Lcd_Init 004C  
        __size_of_Lcd_Port 0006                 ?_Lcd_Clear 0070            Lcd_Write_Char@a 0038  
          Lcd_Write_Char@y 003A                __pbssCOMMON 0078                  ___latbits 0002  
            __pcstackBANK0 0038                   ?_Lcd_Cmd 0070           ??_Lcd_Set_Cursor 0039  
                __pstrings 01AD                  _initSETUP 0100          interrupt_function 0004  
                clear_ram0 01D1                   Lcd_Cmd@a 0077                ??_Lcd_Clear 0078  
               _ADCON0bits 001F                __stringbase 01B2                 _ADCON1bits 009F  
         ??_Lcd_Write_Char 0075                 ?_initSETUP 0070                   _Lcd_Init 0076  
                 _Lcd_Port 01D9   __end_of_Lcd_Write_String 0159           __size_of_Lcd_Cmd 001A  
       __end_of__stringtab 01B3              __size_of_main 003E                 _INTCONbits 000B  
              ??_initSETUP 0074         Lcd_Write_Char@temp 0039                   intlevel1 0000  
                stringcode 01AD                 _OSCCONbits 008F         Lcd_Set_Cursor@temp 003E  
                 stringdir 01AD                   stringtab 01AD                _SSPCON2bits 0091  
