

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Sep 07 05:19:49 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	intentry,global,class=CODE,delta=2
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    24                           	dabs	1,0x7E,2
    25  0000                     
    26                           ; Version 2.20
    27                           ; Generated 12/02/2020 GMT
    28                           ; 
    29                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F887 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  0007                     	;# 
    68  0008                     	;# 
    69  0009                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  000D                     	;# 
    74  000E                     	;# 
    75  000E                     	;# 
    76  000F                     	;# 
    77  0010                     	;# 
    78  0011                     	;# 
    79  0012                     	;# 
    80  0013                     	;# 
    81  0014                     	;# 
    82  0015                     	;# 
    83  0015                     	;# 
    84  0016                     	;# 
    85  0017                     	;# 
    86  0018                     	;# 
    87  0019                     	;# 
    88  001A                     	;# 
    89  001B                     	;# 
    90  001B                     	;# 
    91  001C                     	;# 
    92  001D                     	;# 
    93  001E                     	;# 
    94  001F                     	;# 
    95  0081                     	;# 
    96  0085                     	;# 
    97  0086                     	;# 
    98  0087                     	;# 
    99  0088                     	;# 
   100  0089                     	;# 
   101  008C                     	;# 
   102  008D                     	;# 
   103  008E                     	;# 
   104  008F                     	;# 
   105  0090                     	;# 
   106  0091                     	;# 
   107  0092                     	;# 
   108  0093                     	;# 
   109  0093                     	;# 
   110  0093                     	;# 
   111  0094                     	;# 
   112  0095                     	;# 
   113  0096                     	;# 
   114  0097                     	;# 
   115  0098                     	;# 
   116  0099                     	;# 
   117  009A                     	;# 
   118  009B                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  009F                     	;# 
   123  0105                     	;# 
   124  0107                     	;# 
   125  0108                     	;# 
   126  0109                     	;# 
   127  010C                     	;# 
   128  010C                     	;# 
   129  010D                     	;# 
   130  010E                     	;# 
   131  010F                     	;# 
   132  0185                     	;# 
   133  0187                     	;# 
   134  0188                     	;# 
   135  0189                     	;# 
   136  018C                     	;# 
   137  018D                     	;# 
   138  0000                     	;# 
   139  0001                     	;# 
   140  0002                     	;# 
   141  0003                     	;# 
   142  0004                     	;# 
   143  0005                     	;# 
   144  0006                     	;# 
   145  0007                     	;# 
   146  0008                     	;# 
   147  0009                     	;# 
   148  000A                     	;# 
   149  000B                     	;# 
   150  000C                     	;# 
   151  000D                     	;# 
   152  000E                     	;# 
   153  000E                     	;# 
   154  000F                     	;# 
   155  0010                     	;# 
   156  0011                     	;# 
   157  0012                     	;# 
   158  0013                     	;# 
   159  0014                     	;# 
   160  0015                     	;# 
   161  0015                     	;# 
   162  0016                     	;# 
   163  0017                     	;# 
   164  0018                     	;# 
   165  0019                     	;# 
   166  001A                     	;# 
   167  001B                     	;# 
   168  001B                     	;# 
   169  001C                     	;# 
   170  001D                     	;# 
   171  001E                     	;# 
   172  001F                     	;# 
   173  0081                     	;# 
   174  0085                     	;# 
   175  0086                     	;# 
   176  0087                     	;# 
   177  0088                     	;# 
   178  0089                     	;# 
   179  008C                     	;# 
   180  008D                     	;# 
   181  008E                     	;# 
   182  008F                     	;# 
   183  0090                     	;# 
   184  0091                     	;# 
   185  0092                     	;# 
   186  0093                     	;# 
   187  0093                     	;# 
   188  0093                     	;# 
   189  0094                     	;# 
   190  0095                     	;# 
   191  0096                     	;# 
   192  0097                     	;# 
   193  0098                     	;# 
   194  0099                     	;# 
   195  009A                     	;# 
   196  009B                     	;# 
   197  009C                     	;# 
   198  009D                     	;# 
   199  009E                     	;# 
   200  009F                     	;# 
   201  0105                     	;# 
   202  0107                     	;# 
   203  0108                     	;# 
   204  0109                     	;# 
   205  010C                     	;# 
   206  010C                     	;# 
   207  010D                     	;# 
   208  010E                     	;# 
   209  010F                     	;# 
   210  0185                     	;# 
   211  0187                     	;# 
   212  0188                     	;# 
   213  0189                     	;# 
   214  018C                     	;# 
   215  018D                     	;# 
   216  0000                     	;# 
   217  0001                     	;# 
   218  0002                     	;# 
   219  0003                     	;# 
   220  0004                     	;# 
   221  0005                     	;# 
   222  0006                     	;# 
   223  0007                     	;# 
   224  0008                     	;# 
   225  0009                     	;# 
   226  000A                     	;# 
   227  000B                     	;# 
   228  000C                     	;# 
   229  000D                     	;# 
   230  000E                     	;# 
   231  000E                     	;# 
   232  000F                     	;# 
   233  0010                     	;# 
   234  0011                     	;# 
   235  0012                     	;# 
   236  0013                     	;# 
   237  0014                     	;# 
   238  0015                     	;# 
   239  0015                     	;# 
   240  0016                     	;# 
   241  0017                     	;# 
   242  0018                     	;# 
   243  0019                     	;# 
   244  001A                     	;# 
   245  001B                     	;# 
   246  001B                     	;# 
   247  001C                     	;# 
   248  001D                     	;# 
   249  001E                     	;# 
   250  001F                     	;# 
   251  0081                     	;# 
   252  0085                     	;# 
   253  0086                     	;# 
   254  0087                     	;# 
   255  0088                     	;# 
   256  0089                     	;# 
   257  008C                     	;# 
   258  008D                     	;# 
   259  008E                     	;# 
   260  008F                     	;# 
   261  0090                     	;# 
   262  0091                     	;# 
   263  0092                     	;# 
   264  0093                     	;# 
   265  0093                     	;# 
   266  0093                     	;# 
   267  0094                     	;# 
   268  0095                     	;# 
   269  0096                     	;# 
   270  0097                     	;# 
   271  0098                     	;# 
   272  0099                     	;# 
   273  009A                     	;# 
   274  009B                     	;# 
   275  009C                     	;# 
   276  009D                     	;# 
   277  009E                     	;# 
   278  009F                     	;# 
   279  0105                     	;# 
   280  0107                     	;# 
   281  0108                     	;# 
   282  0109                     	;# 
   283  010C                     	;# 
   284  010C                     	;# 
   285  010D                     	;# 
   286  010E                     	;# 
   287  010F                     	;# 
   288  0185                     	;# 
   289  0187                     	;# 
   290  0188                     	;# 
   291  0189                     	;# 
   292  018C                     	;# 
   293  018D                     	;# 
   294  0000                     	;# 
   295  0001                     	;# 
   296  0002                     	;# 
   297  0003                     	;# 
   298  0004                     	;# 
   299  0005                     	;# 
   300  0006                     	;# 
   301  0007                     	;# 
   302  0008                     	;# 
   303  0009                     	;# 
   304  000A                     	;# 
   305  000B                     	;# 
   306  000C                     	;# 
   307  000D                     	;# 
   308  000E                     	;# 
   309  000E                     	;# 
   310  000F                     	;# 
   311  0010                     	;# 
   312  0011                     	;# 
   313  0012                     	;# 
   314  0013                     	;# 
   315  0014                     	;# 
   316  0015                     	;# 
   317  0015                     	;# 
   318  0016                     	;# 
   319  0017                     	;# 
   320  0018                     	;# 
   321  0019                     	;# 
   322  001A                     	;# 
   323  001B                     	;# 
   324  001B                     	;# 
   325  001C                     	;# 
   326  001D                     	;# 
   327  001E                     	;# 
   328  001F                     	;# 
   329  0081                     	;# 
   330  0085                     	;# 
   331  0086                     	;# 
   332  0087                     	;# 
   333  0088                     	;# 
   334  0089                     	;# 
   335  008C                     	;# 
   336  008D                     	;# 
   337  008E                     	;# 
   338  008F                     	;# 
   339  0090                     	;# 
   340  0091                     	;# 
   341  0092                     	;# 
   342  0093                     	;# 
   343  0093                     	;# 
   344  0093                     	;# 
   345  0094                     	;# 
   346  0095                     	;# 
   347  0096                     	;# 
   348  0097                     	;# 
   349  0098                     	;# 
   350  0099                     	;# 
   351  009A                     	;# 
   352  009B                     	;# 
   353  009C                     	;# 
   354  009D                     	;# 
   355  009E                     	;# 
   356  009F                     	;# 
   357  0105                     	;# 
   358  0107                     	;# 
   359  0108                     	;# 
   360  0109                     	;# 
   361  010C                     	;# 
   362  010C                     	;# 
   363  010D                     	;# 
   364  010E                     	;# 
   365  010F                     	;# 
   366  0185                     	;# 
   367  0187                     	;# 
   368  0188                     	;# 
   369  0189                     	;# 
   370  018C                     	;# 
   371  018D                     	;# 
   372  000B                     _INTCONbits	set	11
   373  0007                     _PORTC	set	7
   374  0006                     _PORTB	set	6
   375  0005                     _PORTA	set	5
   376  0009                     _PORTE	set	9
   377  001F                     _ADCON0bits	set	31
   378  001E                     _ADRESH	set	30
   379  0008                     _PORTD	set	8
   380  0013                     _SSPBUF	set	19
   381  0014                     _SSPCON	set	20
   382  0066                     _ADIF	set	102
   383  0049                     _RE1	set	73
   384  0048                     _RE0	set	72
   385  0063                     _SSPIF	set	99
   386  005E                     _PEIE	set	94
   387  005F                     _GIE	set	95
   388  0095                     _WPUB	set	149
   389  0081                     _OPTION_REGbits	set	129
   390  0096                     _IOCB	set	150
   391  009F                     _ADCON1bits	set	159
   392  008F                     _OSCCONbits	set	143
   393  0089                     _TRISE	set	137
   394  0088                     _TRISD	set	136
   395  0087                     _TRISC	set	135
   396  0086                     _TRISB	set	134
   397  0085                     _TRISA	set	133
   398  0091                     _SSPCON2bits	set	145
   399  0087                     _TRISCbits	set	135
   400  0094                     _SSPSTAT	set	148
   401  0093                     _SSPADD	set	147
   402  0091                     _SSPCON2	set	145
   403  0463                     _SSPIE	set	1123
   404  043C                     _TRISC4	set	1084
   405  043B                     _TRISC3	set	1083
   406  0189                     _ANSELH	set	393
   407  0188                     _ANSEL	set	392
   408                           
   409                           	psect	strings
   410  02AB                     __pstrings:
   411  02AB                     stringtab:
   412  02AB                     __stringtab:
   413  02AB                     stringcode:	
   414                           ;	String table - string pointers are 1 byte each
   415                           
   416  02AB                     stringdir:
   417  02AB  3002               	movlw	high stringdir
   418  02AC  008A               	movwf	10
   419  02AD  0804               	movf	4,w
   420  02AE  0A84               	incf	4,f
   421  02AF  0782               	addwf	2,f
   422  02B0                     __stringbase:
   423  02B0  3400               	retlw	0
   424  02B1                     __end_of__stringtab:
   425  02B1                     STR_1:
   426  02B1  3420               	retlw	32	;' '
   427  02B2  3453               	retlw	83	;'S'
   428  02B3  3431               	retlw	49	;'1'
   429  02B4  343A               	retlw	58	;':'
   430  02B5  3420               	retlw	32	;' '
   431  02B6  3420               	retlw	32	;' '
   432  02B7  3420               	retlw	32	;' '
   433  02B8  3453               	retlw	83	;'S'
   434  02B9  3432               	retlw	50	;'2'
   435  02BA  343A               	retlw	58	;':'
   436  02BB  3420               	retlw	32	;' '
   437  02BC  3420               	retlw	32	;' '
   438  02BD  3420               	retlw	32	;' '
   439  02BE  3453               	retlw	83	;'S'
   440  02BF  3433               	retlw	51	;'3'
   441  02C0  343A               	retlw	58	;':'
   442  02C1  3400               	retlw	0
   443                           
   444                           	psect	cinit
   445  000F                     start_initialization:	
   446                           ; #config settings
   447                           
   448  000F                     __initialization:
   449                           
   450                           ; Clear objects allocated to BANK0
   451  000F  1283               	bcf	3,5	;RP0=0, select bank0
   452  0010  1303               	bcf	3,6	;RP1=0, select bank0
   453  0011  01AC               	clrf	__pbssBANK0& (0+127)
   454  0012  01AD               	clrf	(__pbssBANK0+1)& (0+127)
   455  0013  01AE               	clrf	(__pbssBANK0+2)& (0+127)
   456  0014  01AF               	clrf	(__pbssBANK0+3)& (0+127)
   457  0015  01B0               	clrf	(__pbssBANK0+4)& (0+127)
   458  0016                     end_of_initialization:	
   459                           ;End of C runtime variable initialization code
   460                           
   461  0016                     __end_of__initialization:
   462  0016  0183               	clrf	3
   463  0017  120A  118A  288E   	ljmp	_main	;jump to C main() function
   464                           
   465                           	psect	bssBANK0
   466  002C                     __pbssBANK0:
   467  002C                     _sun_pot:
   468  002C                     	ds	2
   469  002E                     _dec1:
   470  002E                     	ds	1
   471  002F                     _dec0:
   472  002F                     	ds	1
   473  0030                     _Unit:
   474  0030                     	ds	1
   475                           
   476                           	psect	cstackCOMMON
   477  0070                     __pcstackCOMMON:
   478  0070                     ?_initSETUP:
   479  0070                     ?_Lcd_Port:	
   480                           ; 1 bytes @ 0x0
   481                           
   482  0070                     ?_Lcd_Cmd:	
   483                           ; 1 bytes @ 0x0
   484                           
   485  0070                     ?_Lcd_Clear:	
   486                           ; 1 bytes @ 0x0
   487                           
   488  0070                     ?_Lcd_Init:	
   489                           ; 1 bytes @ 0x0
   490                           
   491  0070                     ?_Lcd_Write_Char:	
   492                           ; 1 bytes @ 0x0
   493                           
   494  0070                     ?_Lcd_Write_String:	
   495                           ; 1 bytes @ 0x0
   496                           
   497  0070                     ?_main:	
   498                           ; 1 bytes @ 0x0
   499                           
   500  0070                     ?_isr:	
   501                           ; 1 bytes @ 0x0
   502                           
   503  0070                     ??_isr:	
   504                           ; 1 bytes @ 0x0
   505                           
   506                           
   507                           ; 1 bytes @ 0x0
   508  0070                     	ds	4
   509  0074                     ??_initSETUP:
   510  0074                     ??_Lcd_Port:	
   511                           ; 1 bytes @ 0x4
   512                           
   513  0074                     ?___wmul:	
   514                           ; 1 bytes @ 0x4
   515                           
   516  0074                     ?___lwdiv:	
   517                           ; 2 bytes @ 0x4
   518                           
   519  0074                     Lcd_Port@a:	
   520                           ; 2 bytes @ 0x4
   521                           
   522  0074                     ___wmul@multiplier:	
   523                           ; 1 bytes @ 0x4
   524                           
   525  0074                     ___lwdiv@divisor:	
   526                           ; 2 bytes @ 0x4
   527                           
   528                           
   529                           ; 2 bytes @ 0x4
   530  0074                     	ds	1
   531  0075                     ??_Lcd_Cmd:
   532  0075                     ??_Lcd_Write_Char:	
   533                           ; 1 bytes @ 0x5
   534                           
   535                           
   536                           ; 1 bytes @ 0x5
   537  0075                     	ds	1
   538  0076                     Lcd_Write_Char@a:
   539  0076                     ___wmul@multiplicand:	
   540                           ; 1 bytes @ 0x6
   541                           
   542  0076                     ___lwdiv@dividend:	
   543                           ; 2 bytes @ 0x6
   544                           
   545                           
   546                           ; 2 bytes @ 0x6
   547  0076                     	ds	1
   548  0077                     Lcd_Cmd@a:
   549  0077                     Lcd_Write_Char@temp:	
   550                           ; 1 bytes @ 0x7
   551                           
   552                           
   553                           ; 1 bytes @ 0x7
   554  0077                     	ds	1
   555  0078                     ??_Lcd_Clear:
   556  0078                     ?_Lcd_Set_Cursor:	
   557                           ; 1 bytes @ 0x8
   558                           
   559  0078                     ??_Lcd_Init:	
   560                           ; 1 bytes @ 0x8
   561                           
   562  0078                     ??___wmul:	
   563                           ; 1 bytes @ 0x8
   564                           
   565  0078                     ??___lwdiv:	
   566                           ; 1 bytes @ 0x8
   567                           
   568  0078                     Lcd_Set_Cursor@b:	
   569                           ; 1 bytes @ 0x8
   570                           
   571  0078                     Lcd_Write_Char@y:	
   572                           ; 1 bytes @ 0x8
   573                           
   574  0078                     ___wmul@product:	
   575                           ; 1 bytes @ 0x8
   576                           
   577                           
   578                           ; 2 bytes @ 0x8
   579  0078                     	ds	1
   580  0079                     ??_Lcd_Write_String:
   581                           
   582                           ; 1 bytes @ 0x9
   583  0079                     	ds	1
   584                           
   585                           	psect	cstackBANK0
   586  0020                     __pcstackBANK0:
   587  0020                     ??_Lcd_Set_Cursor:
   588  0020                     Lcd_Write_String@i:	
   589                           ; 1 bytes @ 0x0
   590                           
   591  0020                     ___lwdiv@quotient:	
   592                           ; 2 bytes @ 0x0
   593                           
   594                           
   595                           ; 2 bytes @ 0x0
   596  0020                     	ds	2
   597  0022                     Lcd_Set_Cursor@a:
   598  0022                     Lcd_Write_String@a:	
   599                           ; 1 bytes @ 0x2
   600                           
   601  0022                     ___lwdiv@counter:	
   602                           ; 1 bytes @ 0x2
   603                           
   604                           
   605                           ; 1 bytes @ 0x2
   606  0022                     	ds	1
   607  0023                     ?_str_2_dec:
   608  0023                     Lcd_Set_Cursor@z:	
   609                           ; 1 bytes @ 0x3
   610                           
   611  0023                     str_2_dec@var:	
   612                           ; 1 bytes @ 0x3
   613                           
   614                           
   615                           ; 2 bytes @ 0x3
   616  0023                     	ds	1
   617  0024                     Lcd_Set_Cursor@y:
   618                           
   619                           ; 1 bytes @ 0x4
   620  0024                     	ds	1
   621  0025                     ??_str_2_dec:
   622  0025                     Lcd_Set_Cursor@temp:	
   623                           ; 1 bytes @ 0x5
   624                           
   625                           
   626                           ; 1 bytes @ 0x5
   627  0025                     	ds	2
   628  0027                     str_2_dec@val_0:
   629                           
   630                           ; 2 bytes @ 0x7
   631  0027                     	ds	2
   632  0029                     ??_main:
   633                           
   634                           ; 1 bytes @ 0x9
   635  0029                     	ds	3
   636                           
   637                           	psect	maintext
   638  008E                     __pmaintext:	
   639 ;;
   640 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   641 ;;
   642 ;; *************** function _main *****************
   643 ;; Defined at:
   644 ;;		line 41 in file "Slave_1_main.c"
   645 ;; Parameters:    Size  Location     Type
   646 ;;		None
   647 ;; Auto vars:     Size  Location     Type
   648 ;;		None
   649 ;; Return value:  Size  Location     Type
   650 ;;                  1    wreg      void 
   651 ;; Registers used:
   652 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   653 ;; Tracked objects:
   654 ;;		On entry : B00/0
   655 ;;		On exit  : 0/0
   656 ;;		Unchanged: 0/0
   657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   658 ;;      Params:         0       0       0       0       0
   659 ;;      Locals:         0       0       0       0       0
   660 ;;      Temps:          0       3       0       0       0
   661 ;;      Totals:         0       3       0       0       0
   662 ;;Total ram usage:        3 bytes
   663 ;; Hardware stack levels required when called: 4
   664 ;; This function calls:
   665 ;;		_Lcd_Clear
   666 ;;		_Lcd_Init
   667 ;;		_Lcd_Set_Cursor
   668 ;;		_Lcd_Write_Char
   669 ;;		_Lcd_Write_String
   670 ;;		_initSETUP
   671 ;;		_str_2_dec
   672 ;; This function is called by:
   673 ;;		Startup code after reset
   674 ;; This function uses a non-reentrant model
   675 ;;
   676                           
   677                           
   678                           ;psect for function _main
   679  008E                     _main:
   680  008E                     l1236:	
   681                           ;incstack = 0
   682                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   683                           
   684                           
   685                           ;Slave_1_main.c: 42:     initSETUP();
   686  008E  120A  118A  21CD  120A  118A  	fcall	_initSETUP
   687                           
   688                           ;Slave_1_main.c: 43:     Lcd_Init();
   689  0093  120A  118A  2140  120A  118A  	fcall	_Lcd_Init
   690                           
   691                           ;Slave_1_main.c: 44:     Lcd_Clear();
   692  0098  120A  118A  22C2  120A  118A  	fcall	_Lcd_Clear
   693                           
   694                           ;Slave_1_main.c: 45:     Lcd_Set_Cursor(1,1);
   695  009D  01F8               	clrf	Lcd_Set_Cursor@b
   696  009E  0AF8               	incf	Lcd_Set_Cursor@b,f
   697  009F  3001               	movlw	1
   698  00A0  120A  118A  20E8  120A  118A  	fcall	_Lcd_Set_Cursor
   699  00A5                     l1238:
   700                           
   701                           ;Slave_1_main.c: 46:     Lcd_Write_String(" S1:   S2:   S3:");
   702  00A5  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   703  00A6  120A  118A  2208  120A  118A  	fcall	_Lcd_Write_String
   704  00AB                     l1240:
   705                           
   706                           ;Slave_1_main.c: 48:         str_2_dec(sun_pot);
   707  00AB  1283               	bcf	3,5	;RP0=0, select bank0
   708  00AC  1303               	bcf	3,6	;RP1=0, select bank0
   709  00AD  082D               	movf	_sun_pot+1,w
   710  00AE  00A4               	movwf	str_2_dec@var+1
   711  00AF  082C               	movf	_sun_pot,w
   712  00B0  00A3               	movwf	str_2_dec@var
   713  00B1  120A  118A  201A  120A  118A  	fcall	_str_2_dec
   714  00B6                     l1242:
   715                           
   716                           ;Slave_1_main.c: 49:         Lcd_Set_Cursor(2,1);
   717  00B6  01F8               	clrf	Lcd_Set_Cursor@b
   718  00B7  0AF8               	incf	Lcd_Set_Cursor@b,f
   719  00B8  3002               	movlw	2
   720  00B9  120A  118A  20E8  120A  118A  	fcall	_Lcd_Set_Cursor
   721  00BE                     l1244:
   722                           
   723                           ;Slave_1_main.c: 50:         Lcd_Write_Char(Unit);
   724  00BE  1283               	bcf	3,5	;RP0=0, select bank0
   725  00BF  1303               	bcf	3,6	;RP1=0, select bank0
   726  00C0  0830               	movf	_Unit,w
   727  00C1  120A  118A  2256  120A  118A  	fcall	_Lcd_Write_Char
   728  00C6                     l1246:
   729                           
   730                           ;Slave_1_main.c: 51:         Lcd_Write_Char(dec0);
   731  00C6  1283               	bcf	3,5	;RP0=0, select bank0
   732  00C7  1303               	bcf	3,6	;RP1=0, select bank0
   733  00C8  082F               	movf	_dec0,w
   734  00C9  120A  118A  2256  120A  118A  	fcall	_Lcd_Write_Char
   735  00CE                     l1248:
   736                           
   737                           ;Slave_1_main.c: 52:         Lcd_Write_Char(dec1);
   738  00CE  1283               	bcf	3,5	;RP0=0, select bank0
   739  00CF  1303               	bcf	3,6	;RP1=0, select bank0
   740  00D0  082E               	movf	_dec1,w
   741  00D1  120A  118A  2256  120A  118A  	fcall	_Lcd_Write_Char
   742  00D6                     l1250:
   743                           
   744                           ;Slave_1_main.c: 53:         _delay((unsigned long)((500)*(8000000/4000.0)));
   745  00D6  3006               	movlw	6
   746  00D7  1283               	bcf	3,5	;RP0=0, select bank0
   747  00D8  1303               	bcf	3,6	;RP1=0, select bank0
   748  00D9  00AB               	movwf	??_main+2
   749  00DA  3013               	movlw	19
   750  00DB  00AA               	movwf	??_main+1
   751  00DC  30AD               	movlw	173
   752  00DD  00A9               	movwf	??_main
   753  00DE                     u397:
   754  00DE  0BA9               	decfsz	??_main,f
   755  00DF  28DE               	goto	u397
   756  00E0  0BAA               	decfsz	??_main+1,f
   757  00E1  28DE               	goto	u397
   758  00E2  0BAB               	decfsz	??_main+2,f
   759  00E3  28DE               	goto	u397
   760  00E4  28AB               	goto	l1240
   761  00E5  120A  118A  280C   	ljmp	start
   762  00E8                     __end_of_main:
   763                           
   764                           	psect	text1
   765  001A                     __ptext1:	
   766 ;; *************** function _str_2_dec *****************
   767 ;; Defined at:
   768 ;;		line 57 in file "Slave_1_main.c"
   769 ;; Parameters:    Size  Location     Type
   770 ;;  var             2    3[BANK0 ] unsigned int 
   771 ;; Auto vars:     Size  Location     Type
   772 ;;  val_0           2    7[BANK0 ] unsigned int 
   773 ;; Return value:  Size  Location     Type
   774 ;;                  1    wreg      void 
   775 ;; Registers used:
   776 ;;		wreg, status,2, status,0, pclath, cstack
   777 ;; Tracked objects:
   778 ;;		On entry : 0/0
   779 ;;		On exit  : 0/0
   780 ;;		Unchanged: 0/0
   781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   782 ;;      Params:         0       2       0       0       0
   783 ;;      Locals:         0       2       0       0       0
   784 ;;      Temps:          0       2       0       0       0
   785 ;;      Totals:         0       6       0       0       0
   786 ;;Total ram usage:        6 bytes
   787 ;; Hardware stack levels used: 1
   788 ;; Hardware stack levels required when called: 2
   789 ;; This function calls:
   790 ;;		___lwdiv
   791 ;;		___wmul
   792 ;; This function is called by:
   793 ;;		_main
   794 ;; This function uses a non-reentrant model
   795 ;;
   796                           
   797                           
   798                           ;psect for function _str_2_dec
   799  001A                     _str_2_dec:
   800  001A                     l1216:	
   801                           ;incstack = 0
   802                           ; Regs used in _str_2_dec: [wreg+status,2+status,0+pclath+cstack]
   803                           
   804                           
   805                           ;Slave_1_main.c: 58:     uint16_t val_0;;Slave_1_main.c: 59:     val_0 = var;
   806  001A  1283               	bcf	3,5	;RP0=0, select bank0
   807  001B  1303               	bcf	3,6	;RP1=0, select bank0
   808  001C  0824               	movf	str_2_dec@var+1,w
   809  001D  00A8               	movwf	str_2_dec@val_0+1
   810  001E  0823               	movf	str_2_dec@var,w
   811  001F  00A7               	movwf	str_2_dec@val_0
   812  0020                     l1218:
   813                           
   814                           ;Slave_1_main.c: 60:     Unit = (val_0/100) ;
   815  0020  3064               	movlw	100
   816  0021  00F4               	movwf	___lwdiv@divisor
   817  0022  3000               	movlw	0
   818  0023  00F5               	movwf	___lwdiv@divisor+1
   819  0024  0828               	movf	str_2_dec@val_0+1,w
   820  0025  00F7               	movwf	___lwdiv@dividend+1
   821  0026  0827               	movf	str_2_dec@val_0,w
   822  0027  00F6               	movwf	___lwdiv@dividend
   823  0028  120A  118A  2187  120A  118A  	fcall	___lwdiv
   824  002D  0874               	movf	?___lwdiv,w
   825  002E  1283               	bcf	3,5	;RP0=0, select bank0
   826  002F  1303               	bcf	3,6	;RP1=0, select bank0
   827  0030  00A5               	movwf	??_str_2_dec
   828  0031  0825               	movf	??_str_2_dec,w
   829  0032  00B0               	movwf	_Unit
   830  0033                     l1220:
   831                           
   832                           ;Slave_1_main.c: 61:     val_0 = (val_0 - (Unit*100));
   833  0033  0830               	movf	_Unit,w
   834  0034  00A5               	movwf	??_str_2_dec
   835  0035  01A6               	clrf	??_str_2_dec+1
   836  0036  0825               	movf	??_str_2_dec,w
   837  0037  00F4               	movwf	___wmul@multiplier
   838  0038  0826               	movf	??_str_2_dec+1,w
   839  0039  00F5               	movwf	___wmul@multiplier+1
   840  003A  309C               	movlw	156
   841  003B  00F6               	movwf	___wmul@multiplicand
   842  003C  30FF               	movlw	255
   843  003D  00F7               	movwf	___wmul@multiplicand+1
   844  003E  120A  118A  2231  120A  118A  	fcall	___wmul
   845  0043  1283               	bcf	3,5	;RP0=0, select bank0
   846  0044  1303               	bcf	3,6	;RP1=0, select bank0
   847  0045  0827               	movf	str_2_dec@val_0,w
   848  0046  0774               	addwf	?___wmul,w
   849  0047  00A7               	movwf	str_2_dec@val_0
   850  0048  0828               	movf	str_2_dec@val_0+1,w
   851  0049  1803               	skipnc
   852  004A  0A28               	incf	str_2_dec@val_0+1,w
   853  004B  0775               	addwf	?___wmul+1,w
   854  004C  00A8               	movwf	str_2_dec@val_0+1
   855  004D                     l1222:
   856                           
   857                           ;Slave_1_main.c: 62:     dec0 = (val_0/10);
   858  004D  300A               	movlw	10
   859  004E  00F4               	movwf	___lwdiv@divisor
   860  004F  3000               	movlw	0
   861  0050  00F5               	movwf	___lwdiv@divisor+1
   862  0051  0828               	movf	str_2_dec@val_0+1,w
   863  0052  00F7               	movwf	___lwdiv@dividend+1
   864  0053  0827               	movf	str_2_dec@val_0,w
   865  0054  00F6               	movwf	___lwdiv@dividend
   866  0055  120A  118A  2187  120A  118A  	fcall	___lwdiv
   867  005A  0874               	movf	?___lwdiv,w
   868  005B  1283               	bcf	3,5	;RP0=0, select bank0
   869  005C  1303               	bcf	3,6	;RP1=0, select bank0
   870  005D  00A5               	movwf	??_str_2_dec
   871  005E  0825               	movf	??_str_2_dec,w
   872  005F  00AF               	movwf	_dec0
   873  0060                     l1224:
   874                           
   875                           ;Slave_1_main.c: 63:     val_0 = (val_0 - (dec0*10));
   876  0060  082F               	movf	_dec0,w
   877  0061  00A5               	movwf	??_str_2_dec
   878  0062  01A6               	clrf	??_str_2_dec+1
   879  0063  0825               	movf	??_str_2_dec,w
   880  0064  00F4               	movwf	___wmul@multiplier
   881  0065  0826               	movf	??_str_2_dec+1,w
   882  0066  00F5               	movwf	___wmul@multiplier+1
   883  0067  30F6               	movlw	246
   884  0068  00F6               	movwf	___wmul@multiplicand
   885  0069  30FF               	movlw	255
   886  006A  00F7               	movwf	___wmul@multiplicand+1
   887  006B  120A  118A  2231  120A  118A  	fcall	___wmul
   888  0070  1283               	bcf	3,5	;RP0=0, select bank0
   889  0071  1303               	bcf	3,6	;RP1=0, select bank0
   890  0072  0827               	movf	str_2_dec@val_0,w
   891  0073  0774               	addwf	?___wmul,w
   892  0074  00A7               	movwf	str_2_dec@val_0
   893  0075  0828               	movf	str_2_dec@val_0+1,w
   894  0076  1803               	skipnc
   895  0077  0A28               	incf	str_2_dec@val_0+1,w
   896  0078  0775               	addwf	?___wmul+1,w
   897  0079  00A8               	movwf	str_2_dec@val_0+1
   898                           
   899                           ;Slave_1_main.c: 64:     dec1 = (val_0);
   900  007A  0827               	movf	str_2_dec@val_0,w
   901  007B  00A5               	movwf	??_str_2_dec
   902  007C  0825               	movf	??_str_2_dec,w
   903  007D  00AE               	movwf	_dec1
   904  007E                     l1226:
   905                           
   906                           ;Slave_1_main.c: 66:     Unit = Unit + 48;
   907  007E  0830               	movf	_Unit,w
   908  007F  3E30               	addlw	48
   909  0080  00A5               	movwf	??_str_2_dec
   910  0081  0825               	movf	??_str_2_dec,w
   911  0082  00B0               	movwf	_Unit
   912  0083                     l1228:
   913                           
   914                           ;Slave_1_main.c: 67:     dec0 = dec0 + 48;
   915  0083  082F               	movf	_dec0,w
   916  0084  3E30               	addlw	48
   917  0085  00A5               	movwf	??_str_2_dec
   918  0086  0825               	movf	??_str_2_dec,w
   919  0087  00AF               	movwf	_dec0
   920  0088                     l1230:
   921                           
   922                           ;Slave_1_main.c: 68:     dec1 = dec1 + 48;
   923  0088  082E               	movf	_dec1,w
   924  0089  3E30               	addlw	48
   925  008A  00A5               	movwf	??_str_2_dec
   926  008B  0825               	movf	??_str_2_dec,w
   927  008C  00AE               	movwf	_dec1
   928  008D                     l173:
   929  008D  0008               	return
   930  008E                     __end_of_str_2_dec:
   931                           
   932                           	psect	text2
   933  0231                     __ptext2:	
   934 ;; *************** function ___wmul *****************
   935 ;; Defined at:
   936 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
   937 ;; Parameters:    Size  Location     Type
   938 ;;  multiplier      2    4[COMMON] unsigned int 
   939 ;;  multiplicand    2    6[COMMON] unsigned int 
   940 ;; Auto vars:     Size  Location     Type
   941 ;;  product         2    8[COMMON] unsigned int 
   942 ;; Return value:  Size  Location     Type
   943 ;;                  2    4[COMMON] unsigned int 
   944 ;; Registers used:
   945 ;;		wreg, status,2, status,0
   946 ;; Tracked objects:
   947 ;;		On entry : 0/0
   948 ;;		On exit  : 0/0
   949 ;;		Unchanged: 0/0
   950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   951 ;;      Params:         4       0       0       0       0
   952 ;;      Locals:         2       0       0       0       0
   953 ;;      Temps:          0       0       0       0       0
   954 ;;      Totals:         6       0       0       0       0
   955 ;;Total ram usage:        6 bytes
   956 ;; Hardware stack levels used: 1
   957 ;; Hardware stack levels required when called: 1
   958 ;; This function calls:
   959 ;;		Nothing
   960 ;; This function is called by:
   961 ;;		_str_2_dec
   962 ;; This function uses a non-reentrant model
   963 ;;
   964                           
   965                           
   966                           ;psect for function ___wmul
   967  0231                     ___wmul:
   968  0231                     l1070:	
   969                           ;incstack = 0
   970                           ; Regs used in ___wmul: [wreg+status,2+status,0]
   971                           
   972  0231  01F8               	clrf	___wmul@product
   973  0232  01F9               	clrf	___wmul@product+1
   974  0233                     l1072:
   975  0233  1C74               	btfss	___wmul@multiplier,0
   976  0234  2A36               	goto	u221
   977  0235  2A37               	goto	u220
   978  0236                     u221:
   979  0236  2A3D               	goto	l268
   980  0237                     u220:
   981  0237                     l1074:
   982  0237  0876               	movf	___wmul@multiplicand,w
   983  0238  07F8               	addwf	___wmul@product,f
   984  0239  1803               	skipnc
   985  023A  0AF9               	incf	___wmul@product+1,f
   986  023B  0877               	movf	___wmul@multiplicand+1,w
   987  023C  07F9               	addwf	___wmul@product+1,f
   988  023D                     l268:
   989  023D  3001               	movlw	1
   990  023E                     u235:
   991  023E  1003               	clrc
   992  023F  0DF6               	rlf	___wmul@multiplicand,f
   993  0240  0DF7               	rlf	___wmul@multiplicand+1,f
   994  0241  3EFF               	addlw	-1
   995  0242  1D03               	skipz
   996  0243  2A3E               	goto	u235
   997  0244                     l1076:
   998  0244  3001               	movlw	1
   999  0245                     u245:
  1000  0245  1003               	clrc
  1001  0246  0CF5               	rrf	___wmul@multiplier+1,f
  1002  0247  0CF4               	rrf	___wmul@multiplier,f
  1003  0248  3EFF               	addlw	-1
  1004  0249  1D03               	skipz
  1005  024A  2A45               	goto	u245
  1006  024B                     l1078:
  1007  024B  0874               	movf	___wmul@multiplier,w
  1008  024C  0475               	iorwf	___wmul@multiplier+1,w
  1009  024D  1D03               	btfss	3,2
  1010  024E  2A50               	goto	u251
  1011  024F  2A51               	goto	u250
  1012  0250                     u251:
  1013  0250  2A33               	goto	l1072
  1014  0251                     u250:
  1015  0251                     l1080:
  1016  0251  0879               	movf	___wmul@product+1,w
  1017  0252  00F5               	movwf	?___wmul+1
  1018  0253  0878               	movf	___wmul@product,w
  1019  0254  00F4               	movwf	?___wmul
  1020  0255                     l270:
  1021  0255  0008               	return
  1022  0256                     __end_of___wmul:
  1023                           
  1024                           	psect	text3
  1025  0187                     __ptext3:	
  1026 ;; *************** function ___lwdiv *****************
  1027 ;; Defined at:
  1028 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  1029 ;; Parameters:    Size  Location     Type
  1030 ;;  divisor         2    4[COMMON] unsigned int 
  1031 ;;  dividend        2    6[COMMON] unsigned int 
  1032 ;; Auto vars:     Size  Location     Type
  1033 ;;  quotient        2    0[BANK0 ] unsigned int 
  1034 ;;  counter         1    2[BANK0 ] unsigned char 
  1035 ;; Return value:  Size  Location     Type
  1036 ;;                  2    4[COMMON] unsigned int 
  1037 ;; Registers used:
  1038 ;;		wreg, status,2, status,0
  1039 ;; Tracked objects:
  1040 ;;		On entry : 0/0
  1041 ;;		On exit  : 0/0
  1042 ;;		Unchanged: 0/0
  1043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1044 ;;      Params:         4       0       0       0       0
  1045 ;;      Locals:         0       3       0       0       0
  1046 ;;      Temps:          1       0       0       0       0
  1047 ;;      Totals:         5       3       0       0       0
  1048 ;;Total ram usage:        8 bytes
  1049 ;; Hardware stack levels used: 1
  1050 ;; Hardware stack levels required when called: 1
  1051 ;; This function calls:
  1052 ;;		Nothing
  1053 ;; This function is called by:
  1054 ;;		_str_2_dec
  1055 ;; This function uses a non-reentrant model
  1056 ;;
  1057                           
  1058                           
  1059                           ;psect for function ___lwdiv
  1060  0187                     ___lwdiv:
  1061  0187                     l1084:	
  1062                           ;incstack = 0
  1063                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1064                           
  1065  0187  1283               	bcf	3,5	;RP0=0, select bank0
  1066  0188  1303               	bcf	3,6	;RP1=0, select bank0
  1067  0189  01A0               	clrf	___lwdiv@quotient
  1068  018A  01A1               	clrf	___lwdiv@quotient+1
  1069  018B                     l1086:
  1070  018B  0874               	movf	___lwdiv@divisor,w
  1071  018C  0475               	iorwf	___lwdiv@divisor+1,w
  1072  018D  1903               	btfsc	3,2
  1073  018E  2990               	goto	u261
  1074  018F  2991               	goto	u260
  1075  0190                     u261:
  1076  0190  29C8               	goto	l1106
  1077  0191                     u260:
  1078  0191                     l1088:
  1079  0191  01A2               	clrf	___lwdiv@counter
  1080  0192  0AA2               	incf	___lwdiv@counter,f
  1081  0193  299F               	goto	l1094
  1082  0194                     l1090:
  1083  0194  3001               	movlw	1
  1084  0195                     u275:
  1085  0195  1003               	clrc
  1086  0196  0DF4               	rlf	___lwdiv@divisor,f
  1087  0197  0DF5               	rlf	___lwdiv@divisor+1,f
  1088  0198  3EFF               	addlw	-1
  1089  0199  1D03               	skipz
  1090  019A  2995               	goto	u275
  1091  019B                     l1092:
  1092  019B  3001               	movlw	1
  1093  019C  00F8               	movwf	??___lwdiv
  1094  019D  0878               	movf	??___lwdiv,w
  1095  019E  07A2               	addwf	___lwdiv@counter,f
  1096  019F                     l1094:
  1097  019F  1FF5               	btfss	___lwdiv@divisor+1,7
  1098  01A0  29A2               	goto	u281
  1099  01A1  29A3               	goto	u280
  1100  01A2                     u281:
  1101  01A2  2994               	goto	l1090
  1102  01A3                     u280:
  1103  01A3                     l1096:
  1104  01A3  3001               	movlw	1
  1105  01A4                     u295:
  1106  01A4  1003               	clrc
  1107  01A5  0DA0               	rlf	___lwdiv@quotient,f
  1108  01A6  0DA1               	rlf	___lwdiv@quotient+1,f
  1109  01A7  3EFF               	addlw	-1
  1110  01A8  1D03               	skipz
  1111  01A9  29A4               	goto	u295
  1112  01AA  0875               	movf	___lwdiv@divisor+1,w
  1113  01AB  0277               	subwf	___lwdiv@dividend+1,w
  1114  01AC  1D03               	skipz
  1115  01AD  29B0               	goto	u305
  1116  01AE  0874               	movf	___lwdiv@divisor,w
  1117  01AF  0276               	subwf	___lwdiv@dividend,w
  1118  01B0                     u305:
  1119  01B0  1C03               	skipc
  1120  01B1  29B3               	goto	u301
  1121  01B2  29B4               	goto	u300
  1122  01B3                     u301:
  1123  01B3  29BB               	goto	l1102
  1124  01B4                     u300:
  1125  01B4                     l1098:
  1126  01B4  0874               	movf	___lwdiv@divisor,w
  1127  01B5  02F6               	subwf	___lwdiv@dividend,f
  1128  01B6  0875               	movf	___lwdiv@divisor+1,w
  1129  01B7  1C03               	skipc
  1130  01B8  03F7               	decf	___lwdiv@dividend+1,f
  1131  01B9  02F7               	subwf	___lwdiv@dividend+1,f
  1132  01BA                     l1100:
  1133  01BA  1420               	bsf	___lwdiv@quotient,0
  1134  01BB                     l1102:
  1135  01BB  3001               	movlw	1
  1136  01BC                     u315:
  1137  01BC  1003               	clrc
  1138  01BD  0CF5               	rrf	___lwdiv@divisor+1,f
  1139  01BE  0CF4               	rrf	___lwdiv@divisor,f
  1140  01BF  3EFF               	addlw	-1
  1141  01C0  1D03               	skipz
  1142  01C1  29BC               	goto	u315
  1143  01C2                     l1104:
  1144  01C2  3001               	movlw	1
  1145  01C3  02A2               	subwf	___lwdiv@counter,f
  1146  01C4  1D03               	btfss	3,2
  1147  01C5  29C7               	goto	u321
  1148  01C6  29C8               	goto	u320
  1149  01C7                     u321:
  1150  01C7  29A3               	goto	l1096
  1151  01C8                     u320:
  1152  01C8                     l1106:
  1153  01C8  0821               	movf	___lwdiv@quotient+1,w
  1154  01C9  00F5               	movwf	?___lwdiv+1
  1155  01CA  0820               	movf	___lwdiv@quotient,w
  1156  01CB  00F4               	movwf	?___lwdiv
  1157  01CC                     l540:
  1158  01CC  0008               	return
  1159  01CD                     __end_of___lwdiv:
  1160                           
  1161                           	psect	text4
  1162  01CD                     __ptext4:	
  1163 ;; *************** function _initSETUP *****************
  1164 ;; Defined at:
  1165 ;;		line 79 in file "Slave_1_main.c"
  1166 ;; Parameters:    Size  Location     Type
  1167 ;;		None
  1168 ;; Auto vars:     Size  Location     Type
  1169 ;;		None
  1170 ;; Return value:  Size  Location     Type
  1171 ;;                  1    wreg      void 
  1172 ;; Registers used:
  1173 ;;		wreg, status,2, status,0
  1174 ;; Tracked objects:
  1175 ;;		On entry : 0/0
  1176 ;;		On exit  : 0/0
  1177 ;;		Unchanged: 0/0
  1178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1179 ;;      Params:         0       0       0       0       0
  1180 ;;      Locals:         0       0       0       0       0
  1181 ;;      Temps:          1       0       0       0       0
  1182 ;;      Totals:         1       0       0       0       0
  1183 ;;Total ram usage:        1 bytes
  1184 ;; Hardware stack levels used: 1
  1185 ;; Hardware stack levels required when called: 1
  1186 ;; This function calls:
  1187 ;;		Nothing
  1188 ;; This function is called by:
  1189 ;;		_main
  1190 ;; This function uses a non-reentrant model
  1191 ;;
  1192                           
  1193                           
  1194                           ;psect for function _initSETUP
  1195  01CD                     _initSETUP:
  1196  01CD                     l1150:	
  1197                           ;incstack = 0
  1198                           ; Regs used in _initSETUP: [wreg+status,2+status,0]
  1199                           
  1200                           
  1201                           ;Slave_1_main.c: 80:     TRISA = 0b00000001;
  1202  01CD  3001               	movlw	1
  1203  01CE  1683               	bsf	3,5	;RP0=1, select bank1
  1204  01CF  1303               	bcf	3,6	;RP1=0, select bank1
  1205  01D0  0085               	movwf	5	;volatile
  1206  01D1                     l1152:
  1207                           
  1208                           ;Slave_1_main.c: 81:     TRISB = 0;
  1209  01D1  0186               	clrf	6	;volatile
  1210  01D2                     l1154:
  1211                           
  1212                           ;Slave_1_main.c: 82:     TRISC = 0;
  1213  01D2  0187               	clrf	7	;volatile
  1214  01D3                     l1156:
  1215                           
  1216                           ;Slave_1_main.c: 83:     TRISD = 0;
  1217  01D3  0188               	clrf	8	;volatile
  1218  01D4                     l1158:
  1219                           
  1220                           ;Slave_1_main.c: 84:     TRISE = 0;
  1221  01D4  0189               	clrf	9	;volatile
  1222  01D5                     l1160:
  1223                           
  1224                           ;Slave_1_main.c: 85:     PORTE = 0;
  1225  01D5  1283               	bcf	3,5	;RP0=0, select bank0
  1226  01D6  1303               	bcf	3,6	;RP1=0, select bank0
  1227  01D7  0189               	clrf	9	;volatile
  1228  01D8                     l1162:
  1229                           
  1230                           ;Slave_1_main.c: 86:     PORTA = 0;
  1231  01D8  0185               	clrf	5	;volatile
  1232  01D9                     l1164:
  1233                           
  1234                           ;Slave_1_main.c: 87:     PORTB = 0;
  1235  01D9  0186               	clrf	6	;volatile
  1236  01DA                     l1166:
  1237                           
  1238                           ;Slave_1_main.c: 88:     PORTC = 0;
  1239  01DA  0187               	clrf	7	;volatile
  1240  01DB                     l1168:
  1241                           
  1242                           ;Slave_1_main.c: 89:     PORTD = 0;
  1243  01DB  0188               	clrf	8	;volatile
  1244  01DC                     l1170:
  1245                           
  1246                           ;Slave_1_main.c: 90:     ANSEL = 0b00000001;
  1247  01DC  3001               	movlw	1
  1248  01DD  1683               	bsf	3,5	;RP0=1, select bank3
  1249  01DE  1703               	bsf	3,6	;RP1=1, select bank3
  1250  01DF  0088               	movwf	8	;volatile
  1251                           
  1252                           ;Slave_1_main.c: 91:     ANSELH = 0;
  1253  01E0  0189               	clrf	9	;volatile
  1254  01E1                     l1172:
  1255                           
  1256                           ;Slave_1_main.c: 92:     OSCCONbits.IRCF2 = 1;
  1257  01E1  1683               	bsf	3,5	;RP0=1, select bank1
  1258  01E2  1303               	bcf	3,6	;RP1=0, select bank1
  1259  01E3  170F               	bsf	15,6	;volatile
  1260  01E4                     l1174:
  1261                           
  1262                           ;Slave_1_main.c: 93:     OSCCONbits.IRCF1 = 1;
  1263  01E4  168F               	bsf	15,5	;volatile
  1264  01E5                     l1176:
  1265                           
  1266                           ;Slave_1_main.c: 94:     OSCCONbits.IRCF0 = 1;
  1267  01E5  160F               	bsf	15,4	;volatile
  1268  01E6                     l1178:
  1269                           
  1270                           ;Slave_1_main.c: 95:     OSCCONbits.SCS = 1;
  1271  01E6  140F               	bsf	15,0	;volatile
  1272  01E7                     l1180:
  1273                           
  1274                           ;Slave_1_main.c: 97:     ADCON1bits.ADFM = 0;
  1275  01E7  139F               	bcf	31,7	;volatile
  1276  01E8                     l1182:
  1277                           
  1278                           ;Slave_1_main.c: 98:     ADCON1bits.VCFG0 = 0;
  1279  01E8  121F               	bcf	31,4	;volatile
  1280  01E9                     l1184:
  1281                           
  1282                           ;Slave_1_main.c: 99:     ADCON1bits.VCFG1 = 0;
  1283  01E9  129F               	bcf	31,5	;volatile
  1284  01EA                     l1186:
  1285                           
  1286                           ;Slave_1_main.c: 100:     ADCON0bits.ADCS = 0b10;
  1287  01EA  1283               	bcf	3,5	;RP0=0, select bank0
  1288  01EB  1303               	bcf	3,6	;RP1=0, select bank0
  1289  01EC  081F               	movf	31,w	;volatile
  1290  01ED  393F               	andlw	-193
  1291  01EE  3880               	iorlw	128
  1292  01EF  009F               	movwf	31	;volatile
  1293  01F0                     l1188:
  1294                           
  1295                           ;Slave_1_main.c: 101:     ADCON0bits.CHS = 0;
  1296  01F0  30C3               	movlw	-61
  1297  01F1  059F               	andwf	31,f	;volatile
  1298  01F2                     l1190:
  1299                           
  1300                           ;Slave_1_main.c: 102:     ADCON0bits.ADON = 1;
  1301  01F2  141F               	bsf	31,0	;volatile
  1302  01F3                     l1192:
  1303                           
  1304                           ;Slave_1_main.c: 103:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  1305  01F3  3021               	movlw	33
  1306  01F4  00F4               	movwf	??_initSETUP
  1307  01F5                     u407:
  1308  01F5  0BF4               	decfsz	??_initSETUP,f
  1309  01F6  29F5               	goto	u407
  1310  01F7                     l1194:
  1311                           
  1312                           ;Slave_1_main.c: 104:     ADCON0bits.GO = 1;
  1313  01F7  1283               	bcf	3,5	;RP0=0, select bank0
  1314  01F8  1303               	bcf	3,6	;RP1=0, select bank0
  1315  01F9  149F               	bsf	31,1	;volatile
  1316  01FA                     l1196:
  1317                           
  1318                           ;Slave_1_main.c: 106:     INTCONbits.GIE = 1;
  1319  01FA  178B               	bsf	11,7	;volatile
  1320  01FB                     l1198:
  1321                           
  1322                           ;Slave_1_main.c: 107:     INTCONbits.PEIE =1;
  1323  01FB  170B               	bsf	11,6	;volatile
  1324  01FC                     l1200:
  1325                           
  1326                           ;Slave_1_main.c: 108:     INTCONbits.T0IE = 1;
  1327  01FC  168B               	bsf	11,5	;volatile
  1328  01FD                     l1202:
  1329                           
  1330                           ;Slave_1_main.c: 109:     INTCONbits.T0IF =0;
  1331  01FD  110B               	bcf	11,2	;volatile
  1332  01FE                     l1204:
  1333                           
  1334                           ;Slave_1_main.c: 111:     INTCONbits.RBIE = 1;
  1335  01FE  158B               	bsf	11,3	;volatile
  1336  01FF                     l1206:
  1337                           
  1338                           ;Slave_1_main.c: 112:     INTCONbits.RBIF = 0;
  1339  01FF  100B               	bcf	11,0	;volatile
  1340  0200                     l1208:
  1341                           
  1342                           ;Slave_1_main.c: 113:     IOCB = 0b01100000;
  1343  0200  3060               	movlw	96
  1344  0201  1683               	bsf	3,5	;RP0=1, select bank1
  1345  0202  1303               	bcf	3,6	;RP1=0, select bank1
  1346  0203  0096               	movwf	22	;volatile
  1347  0204                     l1210:
  1348                           
  1349                           ;Slave_1_main.c: 114:     OPTION_REGbits.nRBPU = 0;
  1350  0204  1381               	bcf	1,7	;volatile
  1351  0205                     l1212:
  1352                           
  1353                           ;Slave_1_main.c: 115:     WPUB = 0b01100000;
  1354  0205  3060               	movlw	96
  1355  0206  0095               	movwf	21	;volatile
  1356  0207                     l182:
  1357  0207  0008               	return
  1358  0208                     __end_of_initSETUP:
  1359                           
  1360                           	psect	text5
  1361  0208                     __ptext5:	
  1362 ;; *************** function _Lcd_Write_String *****************
  1363 ;; Defined at:
  1364 ;;		line 77 in file "LCD.c"
  1365 ;; Parameters:    Size  Location     Type
  1366 ;;  a               1    wreg     PTR unsigned char 
  1367 ;;		 -> STR_1(17), 
  1368 ;; Auto vars:     Size  Location     Type
  1369 ;;  a               1    2[BANK0 ] PTR unsigned char 
  1370 ;;		 -> STR_1(17), 
  1371 ;;  i               2    0[BANK0 ] int 
  1372 ;; Return value:  Size  Location     Type
  1373 ;;                  1    wreg      void 
  1374 ;; Registers used:
  1375 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1376 ;; Tracked objects:
  1377 ;;		On entry : 0/0
  1378 ;;		On exit  : 0/0
  1379 ;;		Unchanged: 0/0
  1380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1381 ;;      Params:         0       0       0       0       0
  1382 ;;      Locals:         0       3       0       0       0
  1383 ;;      Temps:          0       0       0       0       0
  1384 ;;      Totals:         0       3       0       0       0
  1385 ;;Total ram usage:        3 bytes
  1386 ;; Hardware stack levels used: 1
  1387 ;; Hardware stack levels required when called: 3
  1388 ;; This function calls:
  1389 ;;		_Lcd_Write_Char
  1390 ;; This function is called by:
  1391 ;;		_main
  1392 ;; This function uses a non-reentrant model
  1393 ;;
  1394                           
  1395                           
  1396                           ;psect for function _Lcd_Write_String
  1397  0208                     _Lcd_Write_String:
  1398                           
  1399                           ;incstack = 0
  1400                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1401                           ;Lcd_Write_String@a stored from wreg
  1402  0208  1283               	bcf	3,5	;RP0=0, select bank0
  1403  0209  1303               	bcf	3,6	;RP1=0, select bank0
  1404  020A  00A2               	movwf	Lcd_Write_String@a
  1405  020B                     l1142:
  1406                           
  1407                           ;LCD.c: 78:     int i;;LCD.c: 79:     for (i = 0; a[i] != '\0'; i++)
  1408  020B  01A0               	clrf	Lcd_Write_String@i
  1409  020C  01A1               	clrf	Lcd_Write_String@i+1
  1410  020D  2A23               	goto	l1148
  1411  020E                     l1144:
  1412                           
  1413                           ;LCD.c: 80:         Lcd_Write_Char(a[i]);
  1414  020E  0820               	movf	Lcd_Write_String@i,w
  1415  020F  0722               	addwf	Lcd_Write_String@a,w
  1416  0210  0084               	movwf	4
  1417  0211  120A  118A  22AB  120A  118A  	fcall	stringdir
  1418  0216  120A  118A  2256  120A  118A  	fcall	_Lcd_Write_Char
  1419  021B                     l1146:
  1420  021B  3001               	movlw	1
  1421  021C  1283               	bcf	3,5	;RP0=0, select bank0
  1422  021D  1303               	bcf	3,6	;RP1=0, select bank0
  1423  021E  07A0               	addwf	Lcd_Write_String@i,f
  1424  021F  1803               	skipnc
  1425  0220  0AA1               	incf	Lcd_Write_String@i+1,f
  1426  0221  3000               	movlw	0
  1427  0222  07A1               	addwf	Lcd_Write_String@i+1,f
  1428  0223                     l1148:
  1429  0223  0820               	movf	Lcd_Write_String@i,w
  1430  0224  0722               	addwf	Lcd_Write_String@a,w
  1431  0225  0084               	movwf	4
  1432  0226  120A  118A  22AB  120A  118A  	fcall	stringdir
  1433  022B  3A00               	xorlw	0
  1434  022C  1D03               	skipz
  1435  022D  2A2F               	goto	u371
  1436  022E  2A30               	goto	u370
  1437  022F                     u371:
  1438  022F  2A0E               	goto	l1144
  1439  0230                     u370:
  1440  0230                     l90:
  1441  0230  0008               	return
  1442  0231                     __end_of_Lcd_Write_String:
  1443                           
  1444                           	psect	text6
  1445  0256                     __ptext6:	
  1446 ;; *************** function _Lcd_Write_Char *****************
  1447 ;; Defined at:
  1448 ;;		line 65 in file "LCD.c"
  1449 ;; Parameters:    Size  Location     Type
  1450 ;;  a               1    wreg     unsigned char 
  1451 ;; Auto vars:     Size  Location     Type
  1452 ;;  a               1    6[COMMON] unsigned char 
  1453 ;;  y               1    8[COMMON] unsigned char 
  1454 ;;  temp            1    7[COMMON] unsigned char 
  1455 ;; Return value:  Size  Location     Type
  1456 ;;                  1    wreg      void 
  1457 ;; Registers used:
  1458 ;;		wreg, status,2, status,0, pclath, cstack
  1459 ;; Tracked objects:
  1460 ;;		On entry : 0/0
  1461 ;;		On exit  : 0/0
  1462 ;;		Unchanged: 0/0
  1463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1464 ;;      Params:         0       0       0       0       0
  1465 ;;      Locals:         3       0       0       0       0
  1466 ;;      Temps:          1       0       0       0       0
  1467 ;;      Totals:         4       0       0       0       0
  1468 ;;Total ram usage:        4 bytes
  1469 ;; Hardware stack levels used: 1
  1470 ;; Hardware stack levels required when called: 2
  1471 ;; This function calls:
  1472 ;;		_Lcd_Port
  1473 ;; This function is called by:
  1474 ;;		_Lcd_Write_String
  1475 ;;		_main
  1476 ;; This function uses a non-reentrant model
  1477 ;;
  1478                           
  1479                           
  1480                           ;psect for function _Lcd_Write_Char
  1481  0256                     _Lcd_Write_Char:
  1482                           
  1483                           ;incstack = 0
  1484                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1485                           ;Lcd_Write_Char@a stored from wreg
  1486  0256  00F6               	movwf	Lcd_Write_Char@a
  1487  0257                     l1058:
  1488                           
  1489                           ;LCD.c: 66:     char temp, y;;LCD.c: 67:     temp = a;
  1490  0257  0876               	movf	Lcd_Write_Char@a,w
  1491  0258  00F5               	movwf	??_Lcd_Write_Char
  1492  0259  0875               	movf	??_Lcd_Write_Char,w
  1493  025A  00F7               	movwf	Lcd_Write_Char@temp
  1494                           
  1495                           ;LCD.c: 68:     y = temp;
  1496  025B  0877               	movf	Lcd_Write_Char@temp,w
  1497  025C  00F5               	movwf	??_Lcd_Write_Char
  1498  025D  0875               	movf	??_Lcd_Write_Char,w
  1499  025E  00F8               	movwf	Lcd_Write_Char@y
  1500  025F                     l1060:
  1501                           
  1502                           ;LCD.c: 69:     RE0 = 1;
  1503  025F  1283               	bcf	3,5	;RP0=0, select bank0
  1504  0260  1303               	bcf	3,6	;RP1=0, select bank0
  1505  0261  1409               	bsf	9,0	;volatile
  1506  0262                     l1062:
  1507                           
  1508                           ;LCD.c: 70:     Lcd_Port(y);
  1509  0262  0878               	movf	Lcd_Write_Char@y,w
  1510  0263  120A  118A  22CF  120A  118A  	fcall	_Lcd_Port
  1511  0268                     l1064:
  1512                           
  1513                           ;LCD.c: 71:     RE1 = 1;
  1514  0268  1283               	bcf	3,5	;RP0=0, select bank0
  1515  0269  1303               	bcf	3,6	;RP1=0, select bank0
  1516  026A  1489               	bsf	9,1	;volatile
  1517  026B                     l1066:
  1518                           
  1519                           ;LCD.c: 72:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  1520  026B  301A               	movlw	26
  1521  026C  00F5               	movwf	??_Lcd_Write_Char
  1522  026D                     u417:
  1523  026D  0BF5               	decfsz	??_Lcd_Write_Char,f
  1524  026E  2A6D               	goto	u417
  1525  026F  0000               	nop
  1526  0270                     l1068:
  1527                           
  1528                           ;LCD.c: 73:     RE1 = 0;
  1529  0270  1283               	bcf	3,5	;RP0=0, select bank0
  1530  0271  1303               	bcf	3,6	;RP1=0, select bank0
  1531  0272  1089               	bcf	9,1	;volatile
  1532  0273                     l84:
  1533  0273  0008               	return
  1534  0274                     __end_of_Lcd_Write_Char:
  1535                           
  1536                           	psect	text7
  1537  00E8                     __ptext7:	
  1538 ;; *************** function _Lcd_Set_Cursor *****************
  1539 ;; Defined at:
  1540 ;;		line 30 in file "LCD.c"
  1541 ;; Parameters:    Size  Location     Type
  1542 ;;  a               1    wreg     unsigned char 
  1543 ;;  b               1    8[COMMON] unsigned char 
  1544 ;; Auto vars:     Size  Location     Type
  1545 ;;  a               1    2[BANK0 ] unsigned char 
  1546 ;;  temp            1    5[BANK0 ] unsigned char 
  1547 ;;  y               1    4[BANK0 ] unsigned char 
  1548 ;;  z               1    3[BANK0 ] unsigned char 
  1549 ;; Return value:  Size  Location     Type
  1550 ;;                  1    wreg      void 
  1551 ;; Registers used:
  1552 ;;		wreg, status,2, status,0, pclath, cstack
  1553 ;; Tracked objects:
  1554 ;;		On entry : 0/0
  1555 ;;		On exit  : 0/0
  1556 ;;		Unchanged: 0/0
  1557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1558 ;;      Params:         1       0       0       0       0
  1559 ;;      Locals:         0       4       0       0       0
  1560 ;;      Temps:          0       2       0       0       0
  1561 ;;      Totals:         1       6       0       0       0
  1562 ;;Total ram usage:        7 bytes
  1563 ;; Hardware stack levels used: 1
  1564 ;; Hardware stack levels required when called: 3
  1565 ;; This function calls:
  1566 ;;		_Lcd_Cmd
  1567 ;; This function is called by:
  1568 ;;		_main
  1569 ;; This function uses a non-reentrant model
  1570 ;;
  1571                           
  1572                           
  1573                           ;psect for function _Lcd_Set_Cursor
  1574  00E8                     _Lcd_Set_Cursor:
  1575                           
  1576                           ;incstack = 0
  1577                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1578                           ;Lcd_Set_Cursor@a stored from wreg
  1579  00E8  1283               	bcf	3,5	;RP0=0, select bank0
  1580  00E9  1303               	bcf	3,6	;RP1=0, select bank0
  1581  00EA  00A2               	movwf	Lcd_Set_Cursor@a
  1582  00EB                     l1112:
  1583                           
  1584                           ;LCD.c: 31:     char temp, z, y;;LCD.c: 32:     if (a == 1) {
  1585  00EB  0322               	decf	Lcd_Set_Cursor@a,w
  1586  00EC  1D03               	btfss	3,2
  1587  00ED  28EF               	goto	u331
  1588  00EE  28F0               	goto	u330
  1589  00EF                     u331:
  1590  00EF  2915               	goto	l1122
  1591  00F0                     u330:
  1592  00F0                     l1114:
  1593                           
  1594                           ;LCD.c: 33:         temp = 0x80 + b - 1;
  1595  00F0  0878               	movf	Lcd_Set_Cursor@b,w
  1596  00F1  3E7F               	addlw	127
  1597  00F2  00A0               	movwf	??_Lcd_Set_Cursor
  1598  00F3  0820               	movf	??_Lcd_Set_Cursor,w
  1599  00F4  00A5               	movwf	Lcd_Set_Cursor@temp
  1600                           
  1601                           ;LCD.c: 34:         z = temp >> 4;
  1602  00F5  0825               	movf	Lcd_Set_Cursor@temp,w
  1603  00F6  00A0               	movwf	??_Lcd_Set_Cursor
  1604  00F7  3004               	movlw	4
  1605  00F8                     u345:
  1606  00F8  1003               	clrc
  1607  00F9  0CA0               	rrf	??_Lcd_Set_Cursor,f
  1608  00FA  3EFF               	addlw	-1
  1609  00FB  1D03               	skipz
  1610  00FC  28F8               	goto	u345
  1611  00FD  0820               	movf	??_Lcd_Set_Cursor,w
  1612  00FE  00A1               	movwf	??_Lcd_Set_Cursor+1
  1613  00FF  0821               	movf	??_Lcd_Set_Cursor+1,w
  1614  0100  00A3               	movwf	Lcd_Set_Cursor@z
  1615  0101                     l1116:
  1616                           
  1617                           ;LCD.c: 35:         y = temp & 0x0F;
  1618  0101  0825               	movf	Lcd_Set_Cursor@temp,w
  1619  0102  390F               	andlw	15
  1620  0103  00A0               	movwf	??_Lcd_Set_Cursor
  1621  0104  0820               	movf	??_Lcd_Set_Cursor,w
  1622  0105  00A4               	movwf	Lcd_Set_Cursor@y
  1623  0106                     l1118:
  1624                           
  1625                           ;LCD.c: 36:         Lcd_Cmd(z);
  1626  0106  0823               	movf	Lcd_Set_Cursor@z,w
  1627  0107  120A  118A  2291  120A  118A  	fcall	_Lcd_Cmd
  1628  010C                     l1120:
  1629                           
  1630                           ;LCD.c: 37:         Lcd_Cmd(y);
  1631  010C  1283               	bcf	3,5	;RP0=0, select bank0
  1632  010D  1303               	bcf	3,6	;RP1=0, select bank0
  1633  010E  0824               	movf	Lcd_Set_Cursor@y,w
  1634  010F  120A  118A  2291  120A  118A  	fcall	_Lcd_Cmd
  1635                           
  1636                           ;LCD.c: 38:     } else if (a == 2) {
  1637  0114  293F               	goto	l78
  1638  0115                     l1122:
  1639  0115  3002               	movlw	2
  1640  0116  0622               	xorwf	Lcd_Set_Cursor@a,w
  1641  0117  1D03               	btfss	3,2
  1642  0118  291A               	goto	u351
  1643  0119  291B               	goto	u350
  1644  011A                     u351:
  1645  011A  293F               	goto	l78
  1646  011B                     u350:
  1647  011B                     l1124:
  1648                           
  1649                           ;LCD.c: 39:         temp = 0xC0 + b - 1;
  1650  011B  0878               	movf	Lcd_Set_Cursor@b,w
  1651  011C  3EBF               	addlw	191
  1652  011D  00A0               	movwf	??_Lcd_Set_Cursor
  1653  011E  0820               	movf	??_Lcd_Set_Cursor,w
  1654  011F  00A5               	movwf	Lcd_Set_Cursor@temp
  1655                           
  1656                           ;LCD.c: 40:         z = temp >> 4;
  1657  0120  0825               	movf	Lcd_Set_Cursor@temp,w
  1658  0121  00A0               	movwf	??_Lcd_Set_Cursor
  1659  0122  3004               	movlw	4
  1660  0123                     u365:
  1661  0123  1003               	clrc
  1662  0124  0CA0               	rrf	??_Lcd_Set_Cursor,f
  1663  0125  3EFF               	addlw	-1
  1664  0126  1D03               	skipz
  1665  0127  2923               	goto	u365
  1666  0128  0820               	movf	??_Lcd_Set_Cursor,w
  1667  0129  00A1               	movwf	??_Lcd_Set_Cursor+1
  1668  012A  0821               	movf	??_Lcd_Set_Cursor+1,w
  1669  012B  00A3               	movwf	Lcd_Set_Cursor@z
  1670  012C                     l1126:
  1671                           
  1672                           ;LCD.c: 41:         y = temp & 0xF0;
  1673  012C  0825               	movf	Lcd_Set_Cursor@temp,w
  1674  012D  39F0               	andlw	240
  1675  012E  00A0               	movwf	??_Lcd_Set_Cursor
  1676  012F  0820               	movf	??_Lcd_Set_Cursor,w
  1677  0130  00A4               	movwf	Lcd_Set_Cursor@y
  1678  0131                     l1128:
  1679                           
  1680                           ;LCD.c: 42:         Lcd_Cmd(z);
  1681  0131  0823               	movf	Lcd_Set_Cursor@z,w
  1682  0132  120A  118A  2291  120A  118A  	fcall	_Lcd_Cmd
  1683  0137                     l1130:
  1684                           
  1685                           ;LCD.c: 43:         Lcd_Cmd(y);
  1686  0137  1283               	bcf	3,5	;RP0=0, select bank0
  1687  0138  1303               	bcf	3,6	;RP1=0, select bank0
  1688  0139  0824               	movf	Lcd_Set_Cursor@y,w
  1689  013A  120A  118A  2291  120A  118A  	fcall	_Lcd_Cmd
  1690  013F                     l78:
  1691  013F  0008               	return
  1692  0140                     __end_of_Lcd_Set_Cursor:
  1693                           
  1694                           	psect	text8
  1695  0140                     __ptext8:	
  1696 ;; *************** function _Lcd_Init *****************
  1697 ;; Defined at:
  1698 ;;		line 47 in file "LCD.c"
  1699 ;; Parameters:    Size  Location     Type
  1700 ;;		None
  1701 ;; Auto vars:     Size  Location     Type
  1702 ;;		None
  1703 ;; Return value:  Size  Location     Type
  1704 ;;                  1    wreg      void 
  1705 ;; Registers used:
  1706 ;;		wreg, status,2, status,0, pclath, cstack
  1707 ;; Tracked objects:
  1708 ;;		On entry : 0/0
  1709 ;;		On exit  : 0/0
  1710 ;;		Unchanged: 0/0
  1711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1712 ;;      Params:         0       0       0       0       0
  1713 ;;      Locals:         0       0       0       0       0
  1714 ;;      Temps:          2       0       0       0       0
  1715 ;;      Totals:         2       0       0       0       0
  1716 ;;Total ram usage:        2 bytes
  1717 ;; Hardware stack levels used: 1
  1718 ;; Hardware stack levels required when called: 3
  1719 ;; This function calls:
  1720 ;;		_Lcd_Cmd
  1721 ;;		_Lcd_Port
  1722 ;; This function is called by:
  1723 ;;		_main
  1724 ;; This function uses a non-reentrant model
  1725 ;;
  1726                           
  1727                           
  1728                           ;psect for function _Lcd_Init
  1729  0140                     _Lcd_Init:
  1730  0140                     l1132:	
  1731                           ;incstack = 0
  1732                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1733                           
  1734                           
  1735                           ;LCD.c: 48:     Lcd_Port(0x00);
  1736  0140  3000               	movlw	0
  1737  0141  120A  118A  22CF  120A  118A  	fcall	_Lcd_Port
  1738  0146                     l1134:
  1739                           
  1740                           ;LCD.c: 49:     _delay((unsigned long)((20)*(8000000/4000.0)));
  1741  0146  3034               	movlw	52
  1742  0147  00F9               	movwf	??_Lcd_Init+1
  1743  0148  30F1               	movlw	241
  1744  0149  00F8               	movwf	??_Lcd_Init
  1745  014A                     u427:
  1746  014A  0BF8               	decfsz	??_Lcd_Init,f
  1747  014B  294A               	goto	u427
  1748  014C  0BF9               	decfsz	??_Lcd_Init+1,f
  1749  014D  294A               	goto	u427
  1750  014E  294F               	nop2
  1751  014F                     l1136:
  1752                           
  1753                           ;LCD.c: 50:     Lcd_Cmd(0x30);
  1754  014F  3030               	movlw	48
  1755  0150  120A  118A  2291  120A  118A  	fcall	_Lcd_Cmd
  1756                           
  1757                           ;LCD.c: 51:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1758  0155  300D               	movlw	13
  1759  0156  00F9               	movwf	??_Lcd_Init+1
  1760  0157  30FB               	movlw	251
  1761  0158  00F8               	movwf	??_Lcd_Init
  1762  0159                     u437:
  1763  0159  0BF8               	decfsz	??_Lcd_Init,f
  1764  015A  2959               	goto	u437
  1765  015B  0BF9               	decfsz	??_Lcd_Init+1,f
  1766  015C  2959               	goto	u437
  1767  015D  295E               	nop2
  1768  015E                     l1138:
  1769                           
  1770                           ;LCD.c: 52:     Lcd_Cmd(0x30);
  1771  015E  3030               	movlw	48
  1772  015F  120A  118A  2291  120A  118A  	fcall	_Lcd_Cmd
  1773  0164                     l1140:
  1774                           
  1775                           ;LCD.c: 53:     _delay((unsigned long)((200)*(8000000/4000000.0)));
  1776  0164  3085               	movlw	133
  1777  0165  00F8               	movwf	??_Lcd_Init
  1778  0166                     u447:
  1779  0166  0BF8               	decfsz	??_Lcd_Init,f
  1780  0167  2966               	goto	u447
  1781                           
  1782                           ;LCD.c: 54:     Lcd_Cmd(0x30);
  1783  0168  3030               	movlw	48
  1784  0169  120A  118A  2291  120A  118A  	fcall	_Lcd_Cmd
  1785                           
  1786                           ;LCD.c: 56:     Lcd_Cmd(0x3C);
  1787  016E  303C               	movlw	60
  1788  016F  120A  118A  2291  120A  118A  	fcall	_Lcd_Cmd
  1789                           
  1790                           ;LCD.c: 58:     Lcd_Cmd(0x08);
  1791  0174  3008               	movlw	8
  1792  0175  120A  118A  2291  120A  118A  	fcall	_Lcd_Cmd
  1793                           
  1794                           ;LCD.c: 60:     Lcd_Cmd(0x01);
  1795  017A  3001               	movlw	1
  1796  017B  120A  118A  2291  120A  118A  	fcall	_Lcd_Cmd
  1797                           
  1798                           ;LCD.c: 62:     Lcd_Cmd(0x06);
  1799  0180  3006               	movlw	6
  1800  0181  120A  118A  2291  120A  118A  	fcall	_Lcd_Cmd
  1801  0186                     l81:
  1802  0186  0008               	return
  1803  0187                     __end_of_Lcd_Init:
  1804                           
  1805                           	psect	text9
  1806  02C2                     __ptext9:	
  1807 ;; *************** function _Lcd_Clear *****************
  1808 ;; Defined at:
  1809 ;;		line 25 in file "LCD.c"
  1810 ;; Parameters:    Size  Location     Type
  1811 ;;		None
  1812 ;; Auto vars:     Size  Location     Type
  1813 ;;		None
  1814 ;; Return value:  Size  Location     Type
  1815 ;;                  1    wreg      void 
  1816 ;; Registers used:
  1817 ;;		wreg, status,2, status,0, pclath, cstack
  1818 ;; Tracked objects:
  1819 ;;		On entry : 0/0
  1820 ;;		On exit  : 0/0
  1821 ;;		Unchanged: 0/0
  1822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1823 ;;      Params:         0       0       0       0       0
  1824 ;;      Locals:         0       0       0       0       0
  1825 ;;      Temps:          0       0       0       0       0
  1826 ;;      Totals:         0       0       0       0       0
  1827 ;;Total ram usage:        0 bytes
  1828 ;; Hardware stack levels used: 1
  1829 ;; Hardware stack levels required when called: 3
  1830 ;; This function calls:
  1831 ;;		_Lcd_Cmd
  1832 ;; This function is called by:
  1833 ;;		_main
  1834 ;; This function uses a non-reentrant model
  1835 ;;
  1836                           
  1837                           
  1838                           ;psect for function _Lcd_Clear
  1839  02C2                     _Lcd_Clear:
  1840  02C2                     l1110:	
  1841                           ;incstack = 0
  1842                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  1843                           
  1844                           
  1845                           ;LCD.c: 26:     Lcd_Cmd(0);
  1846  02C2  3000               	movlw	0
  1847  02C3  120A  118A  2291  120A  118A  	fcall	_Lcd_Cmd
  1848                           
  1849                           ;LCD.c: 27:     Lcd_Cmd(1);
  1850  02C8  3001               	movlw	1
  1851  02C9  120A  118A  2291  120A  118A  	fcall	_Lcd_Cmd
  1852  02CE                     l72:
  1853  02CE  0008               	return
  1854  02CF                     __end_of_Lcd_Clear:
  1855                           
  1856                           	psect	text10
  1857  0291                     __ptext10:	
  1858 ;; *************** function _Lcd_Cmd *****************
  1859 ;; Defined at:
  1860 ;;		line 17 in file "LCD.c"
  1861 ;; Parameters:    Size  Location     Type
  1862 ;;  a               1    wreg     unsigned char 
  1863 ;; Auto vars:     Size  Location     Type
  1864 ;;  a               1    7[COMMON] unsigned char 
  1865 ;; Return value:  Size  Location     Type
  1866 ;;                  1    wreg      void 
  1867 ;; Registers used:
  1868 ;;		wreg, status,2, status,0, pclath, cstack
  1869 ;; Tracked objects:
  1870 ;;		On entry : 0/0
  1871 ;;		On exit  : 0/0
  1872 ;;		Unchanged: 0/0
  1873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1874 ;;      Params:         0       0       0       0       0
  1875 ;;      Locals:         1       0       0       0       0
  1876 ;;      Temps:          2       0       0       0       0
  1877 ;;      Totals:         3       0       0       0       0
  1878 ;;Total ram usage:        3 bytes
  1879 ;; Hardware stack levels used: 1
  1880 ;; Hardware stack levels required when called: 2
  1881 ;; This function calls:
  1882 ;;		_Lcd_Port
  1883 ;; This function is called by:
  1884 ;;		_Lcd_Clear
  1885 ;;		_Lcd_Set_Cursor
  1886 ;;		_Lcd_Init
  1887 ;;		_Lcd_Shift_Right
  1888 ;;		_Lcd_Shift_Left
  1889 ;; This function uses a non-reentrant model
  1890 ;;
  1891                           
  1892                           
  1893                           ;psect for function _Lcd_Cmd
  1894  0291                     _Lcd_Cmd:
  1895                           
  1896                           ;incstack = 0
  1897                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1898                           ;Lcd_Cmd@a stored from wreg
  1899  0291  00F7               	movwf	Lcd_Cmd@a
  1900  0292                     l1048:
  1901                           
  1902                           ;LCD.c: 18:     RE0 = 0;
  1903  0292  1283               	bcf	3,5	;RP0=0, select bank0
  1904  0293  1303               	bcf	3,6	;RP1=0, select bank0
  1905  0294  1009               	bcf	9,0	;volatile
  1906  0295                     l1050:
  1907                           
  1908                           ;LCD.c: 19:     Lcd_Port(a);
  1909  0295  0877               	movf	Lcd_Cmd@a,w
  1910  0296  120A  118A  22CF  120A  118A  	fcall	_Lcd_Port
  1911  029B                     l1052:
  1912                           
  1913                           ;LCD.c: 20:     RE1 = 1;
  1914  029B  1283               	bcf	3,5	;RP0=0, select bank0
  1915  029C  1303               	bcf	3,6	;RP1=0, select bank0
  1916  029D  1489               	bsf	9,1	;volatile
  1917  029E                     l1054:
  1918                           
  1919                           ;LCD.c: 21:     _delay((unsigned long)((4)*(8000000/4000.0)));
  1920  029E  300B               	movlw	11
  1921  029F  00F6               	movwf	??_Lcd_Cmd+1
  1922  02A0  3062               	movlw	98
  1923  02A1  00F5               	movwf	??_Lcd_Cmd
  1924  02A2                     u457:
  1925  02A2  0BF5               	decfsz	??_Lcd_Cmd,f
  1926  02A3  2AA2               	goto	u457
  1927  02A4  0BF6               	decfsz	??_Lcd_Cmd+1,f
  1928  02A5  2AA2               	goto	u457
  1929  02A6  0000               	nop
  1930  02A7                     l1056:
  1931                           
  1932                           ;LCD.c: 22:     RE1 = 0;
  1933  02A7  1283               	bcf	3,5	;RP0=0, select bank0
  1934  02A8  1303               	bcf	3,6	;RP1=0, select bank0
  1935  02A9  1089               	bcf	9,1	;volatile
  1936  02AA                     l69:
  1937  02AA  0008               	return
  1938  02AB                     __end_of_Lcd_Cmd:
  1939                           
  1940                           	psect	text11
  1941  02CF                     __ptext11:	
  1942 ;; *************** function _Lcd_Port *****************
  1943 ;; Defined at:
  1944 ;;		line 12 in file "LCD.c"
  1945 ;; Parameters:    Size  Location     Type
  1946 ;;  a               1    wreg     unsigned char 
  1947 ;; Auto vars:     Size  Location     Type
  1948 ;;  a               1    4[COMMON] unsigned char 
  1949 ;; Return value:  Size  Location     Type
  1950 ;;                  1    wreg      void 
  1951 ;; Registers used:
  1952 ;;		wreg
  1953 ;; Tracked objects:
  1954 ;;		On entry : 0/0
  1955 ;;		On exit  : 0/0
  1956 ;;		Unchanged: 0/0
  1957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1958 ;;      Params:         0       0       0       0       0
  1959 ;;      Locals:         1       0       0       0       0
  1960 ;;      Temps:          0       0       0       0       0
  1961 ;;      Totals:         1       0       0       0       0
  1962 ;;Total ram usage:        1 bytes
  1963 ;; Hardware stack levels used: 1
  1964 ;; Hardware stack levels required when called: 1
  1965 ;; This function calls:
  1966 ;;		Nothing
  1967 ;; This function is called by:
  1968 ;;		_Lcd_Cmd
  1969 ;;		_Lcd_Init
  1970 ;;		_Lcd_Write_Char
  1971 ;; This function uses a non-reentrant model
  1972 ;;
  1973                           
  1974                           
  1975                           ;psect for function _Lcd_Port
  1976  02CF                     _Lcd_Port:
  1977                           
  1978                           ;incstack = 0
  1979                           ; Regs used in _Lcd_Port: [wreg]
  1980                           ;Lcd_Port@a stored from wreg
  1981  02CF  00F4               	movwf	Lcd_Port@a
  1982  02D0                     l1046:
  1983                           
  1984                           ;LCD.c: 13:     PORTD = a;
  1985  02D0  0874               	movf	Lcd_Port@a,w
  1986  02D1  1283               	bcf	3,5	;RP0=0, select bank0
  1987  02D2  1303               	bcf	3,6	;RP1=0, select bank0
  1988  02D3  0088               	movwf	8	;volatile
  1989  02D4                     l66:
  1990  02D4  0008               	return
  1991  02D5                     __end_of_Lcd_Port:
  1992                           
  1993                           	psect	text12
  1994  0274                     __ptext12:	
  1995 ;; *************** function _isr *****************
  1996 ;; Defined at:
  1997 ;;		line 71 in file "Slave_1_main.c"
  1998 ;; Parameters:    Size  Location     Type
  1999 ;;		None
  2000 ;; Auto vars:     Size  Location     Type
  2001 ;;		None
  2002 ;; Return value:  Size  Location     Type
  2003 ;;                  1    wreg      void 
  2004 ;; Registers used:
  2005 ;;		wreg
  2006 ;; Tracked objects:
  2007 ;;		On entry : 0/0
  2008 ;;		On exit  : 0/0
  2009 ;;		Unchanged: 0/0
  2010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2011 ;;      Params:         0       0       0       0       0
  2012 ;;      Locals:         0       0       0       0       0
  2013 ;;      Temps:          4       0       0       0       0
  2014 ;;      Totals:         4       0       0       0       0
  2015 ;;Total ram usage:        4 bytes
  2016 ;; Hardware stack levels used: 1
  2017 ;; This function calls:
  2018 ;;		Nothing
  2019 ;; This function is called by:
  2020 ;;		Interrupt level 1
  2021 ;; This function uses a non-reentrant model
  2022 ;;
  2023                           
  2024                           
  2025                           ;psect for function _isr
  2026  0274                     _isr:
  2027  0274                     i1l1252:
  2028                           
  2029                           ;Slave_1_main.c: 72:     if (ADIF == 1){
  2030  0274  1283               	bcf	3,5	;RP0=0, select bank0
  2031  0275  1303               	bcf	3,6	;RP1=0, select bank0
  2032  0276  1F0C               	btfss	12,6	;volatile
  2033  0277  2A79               	goto	u38_21
  2034  0278  2A7A               	goto	u38_20
  2035  0279                     u38_21:
  2036  0279  2A8A               	goto	i1l179
  2037  027A                     u38_20:
  2038  027A                     i1l1254:
  2039                           
  2040                           ;Slave_1_main.c: 73:         sun_pot = ADRESH;
  2041  027A  081E               	movf	30,w	;volatile
  2042  027B  00F0               	movwf	??_isr
  2043  027C  01F1               	clrf	??_isr+1
  2044  027D  0870               	movf	??_isr,w
  2045  027E  00AC               	movwf	_sun_pot
  2046  027F  0871               	movf	??_isr+1,w
  2047  0280  00AD               	movwf	_sun_pot+1
  2048  0281                     i1l1256:
  2049                           
  2050                           ;Slave_1_main.c: 74:         ADIF = 0;
  2051  0281  130C               	bcf	12,6	;volatile
  2052                           
  2053                           ;Slave_1_main.c: 75:         _delay((unsigned long)((60)*(8000000/4000000.0)));
  2054  0282  3027               	movlw	39
  2055  0283  00F0               	movwf	??_isr
  2056  0284                     u46_27:
  2057  0284  0BF0               	decfsz	??_isr,f
  2058  0285  2A84               	goto	u46_27
  2059  0286  2A87               	nop2
  2060  0287                     i1l1258:
  2061                           
  2062                           ;Slave_1_main.c: 76:         ADCON0bits.GO = 1;
  2063  0287  1283               	bcf	3,5	;RP0=0, select bank0
  2064  0288  1303               	bcf	3,6	;RP1=0, select bank0
  2065  0289  149F               	bsf	31,1	;volatile
  2066  028A                     i1l179:
  2067  028A  0873               	movf	??_isr+3,w
  2068  028B  008A               	movwf	10
  2069  028C  0E72               	swapf	??_isr+2,w
  2070  028D  0083               	movwf	3
  2071  028E  0EFE               	swapf	btemp,f
  2072  028F  0E7E               	swapf	btemp,w
  2073  0290  0009               	retfie
  2074  0291                     __end_of_isr:
  2075  007E                     btemp	set	126	;btemp
  2076  007E                     wtemp0	set	126
  2077                           
  2078                           	psect	intentry
  2079  0004                     __pintentry:	
  2080                           ;incstack = 0
  2081                           ; Regs used in _isr: [wreg]
  2082                           
  2083  0004                     interrupt_function:
  2084  007E                     saved_w	set	btemp
  2085  0004  00FE               	movwf	btemp
  2086  0005  0E03               	swapf	3,w
  2087  0006  00F2               	movwf	??_isr+2
  2088  0007  080A               	movf	10,w
  2089  0008  00F3               	movwf	??_isr+3
  2090  0009  120A  118A  2A74   	ljmp	_isr
  2091                           
  2092                           	psect	config
  2093                           
  2094                           ;Config register CONFIG1 @ 0x2007
  2095                           ;	Oscillator Selection bits
  2096                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2097                           ;	Watchdog Timer Enable bit
  2098                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2099                           ;	Power-up Timer Enable bit
  2100                           ;	PWRTE = OFF, PWRT disabled
  2101                           ;	RE3/MCLR pin function select bit
  2102                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2103                           ;	Code Protection bit
  2104                           ;	CP = OFF, Program memory code protection is disabled
  2105                           ;	Data Code Protection bit
  2106                           ;	CPD = OFF, Data memory code protection is disabled
  2107                           ;	Brown Out Reset Selection bits
  2108                           ;	BOREN = OFF, BOR disabled
  2109                           ;	Internal External Switchover bit
  2110                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2111                           ;	Fail-Safe Clock Monitor Enabled bit
  2112                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2113                           ;	Low Voltage Programming Enable bit
  2114                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2115                           ;	In-Circuit Debugger Mode bit
  2116                           ;	DEBUG = 0x1, unprogrammed default
  2117  2007                     	org	8199
  2118  2007  20D4               	dw	8404
  2119                           
  2120                           ;Config register CONFIG2 @ 0x2008
  2121                           ;	Brown-out Reset Selection bit
  2122                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2123                           ;	Flash Program Memory Self Write Enable bits
  2124                           ;	WRT = OFF, Write protection off
  2125  2008                     	org	8200
  2126  2008  3FFF               	dw	16383

Data Sizes:
    Strings     17
    Constant    0
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      10
    BANK0            80     12      17
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Init
    _str_2_dec->___wmul
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_str_2_dec
    _str_2_dec->___lwdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1952
                                              9 BANK0      3     3      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                          _initSETUP
                          _str_2_dec
 ---------------------------------------------------------------------------------
 (1) _str_2_dec                                            6     4      2    1073
                                              3 BANK0      6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              4 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     466
                                              4 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _initSETUP                                            1     1      0       0
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     213
                                              0 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0      90
                                              5 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     466
                                              8 COMMON     1     0      1
                                              0 BANK0      6     6      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      66
                                              8 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      44
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      44
                                              5 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
   _initSETUP
   _str_2_dec
     ___lwdiv
     ___wmul

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      C      11       5       21.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      1B      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Sep 07 05:19:49 2021

                        pc 0002                         l72 02CE                         l81 0186  
                       l66 02D4                         l90 0230                         l84 0273  
                       l69 02AA                         l78 013F                         fsr 0004  
      ___wmul@multiplicand 0076                        l173 008D                        l182 0207  
                      l270 0255                        l540 01CC                        l268 023D  
                      _GIE 005F                        _RE0 0048                        _RE1 0049  
                      u300 01B4                        u220 0237                        u301 01B3  
                      u221 0236                        u320 01C8                        u321 01C7  
                      u305 01B0                        u330 00F0                        u250 0251  
                      u331 00EF                        u315 01BC                        u251 0250  
                      u235 023E                        u260 0191                        u261 0190  
                      u245 0245                        u350 011B                        u351 011A  
                      u407 01F5                        u280 01A3                        u345 00F8  
                      u417 026D                        u281 01A2                        u370 0230  
                      u427 014A                        u371 022F                        u275 0195  
                      u437 0159                        u365 0123                        u447 0166  
                      u295 01A4                        u457 02A2                        u397 00DE  
                      _isr 0274                        fsr0 0004                       l1100 01BA  
                     l1110 02C2                       l1102 01BB                       l1120 010C  
                     l1112 00EB                       l1200 01FC                       l1104 01C2  
                     l1050 0295                       l1130 0137                       l1114 00F0  
                     l1122 0115                       l1210 0204                       l1202 01FD  
                     l1106 01C8                       l1052 029B                       l1140 0164  
                     l1132 0140                       l1124 011B                       l1116 0101  
                     l1060 025F                       l1212 0205                       l1204 01FE  
                     l1220 0033                       l1046 02D0                       l1054 029E  
                     l1134 0146                       l1126 012C                       l1118 0106  
                     l1062 0262                       l1142 020B                       l1206 01FF  
                     l1150 01CD                       l1070 0231                       l1230 0088  
                     l1222 004D                       l1056 02A7                       l1048 0292  
                     l1136 014F                       l1128 0131                       l1064 0268  
                     l1144 020E                       l1208 0200                       l1160 01D5  
                     l1152 01D1                       l1080 0251                       l1072 0233  
                     l1224 0060                       l1216 001A                       l1240 00AB  
                     l1138 015E                       l1066 026B                       l1058 0257  
                     l1146 021B                       l1170 01DC                       l1162 01D8  
                     l1154 01D2                       l1090 0194                       l1074 0237  
                     l1226 007E                       l1218 0020                       l1250 00D6  
                     l1242 00B6                       l1068 0270                       l1148 0223  
                     l1180 01E7                       l1172 01E1                       l1164 01D9  
                     l1156 01D3                       l1092 019B                       l1084 0187  
                     l1076 0244                       l1228 0083                       l1244 00BE  
                     l1236 008E                       l1190 01F2                       l1182 01E8  
                     l1174 01E4                       l1166 01DA                       l1158 01D4  
                     l1094 019F                       l1086 018B                       l1078 024B  
                     l1246 00C6                       l1238 00A5                       l1192 01F3  
                     l1184 01E9                       l1176 01E5                       l1168 01DB  
                     l1096 01A3                       l1088 0191                       l1248 00CE  
                     l1194 01F7                       l1186 01EA                       l1178 01E6  
                     l1098 01B4                       l1196 01FA                       l1188 01F0  
                     l1198 01FB                       _ADIF 0066                       ?_isr 0070  
                     STR_1 02B1                       _IOCB 0096                       _PEIE 005E  
                     _WPUB 0095                       _Unit 0030                       _dec0 002F  
                     _dec1 002E          ?_Lcd_Write_String 0070                       _main 008E  
                     btemp 007E                       start 000C         ??_Lcd_Write_String 0079  
          __end_of_Lcd_Cmd 02AB               str_2_dec@var 0023                      ??_isr 0070  
                    ?_main 0070                      _ANSEL 0188            __end_of___lwdiv 01CD  
                    i1l179 028A                      _PORTA 0005                      _PORTB 0006  
                    _PORTC 0007                      _PORTD 0008                      _PORTE 0009  
                    u38_20 027A                      u38_21 0279                      u46_27 0284  
  __size_of_Lcd_Set_Cursor 0058                      _TRISA 0085                      _TRISB 0086  
                    _TRISC 0087                      _TRISD 0088                      _SSPIE 0463  
                    _TRISE 0089                      _SSPIF 0063                      pclath 000A  
                    status 0003                      wtemp0 007E           __end_of_Lcd_Init 0187  
         __end_of_Lcd_Port 02D5            __initialization 000F               __end_of_main 00E8  
                   ??_main 0029         __size_of_Lcd_Clear 000D                     _ADRESH 001E  
                   _ANSELH 0189                     i1l1252 0274                     i1l1254 027A  
                   i1l1256 0281                     i1l1258 0287                  ??_Lcd_Cmd 0075  
  __size_of_Lcd_Write_Char 001E                     _SSPADD 0093                     _TRISC3 043B  
                   _TRISC4 043C                     _SSPCON 0014                     _SSPBUF 0013  
                   ___wmul 0231                  ??___lwdiv 0078                     saved_w 007E  
          Lcd_Set_Cursor@a 0022            Lcd_Set_Cursor@b 0078            Lcd_Set_Cursor@y 0024  
          Lcd_Set_Cursor@z 0023    __end_of__initialization 0016          __end_of_Lcd_Clear 02CF  
           __pcstackCOMMON 0070             str_2_dec@val_0 0027             _Lcd_Set_Cursor 00E8  
           _OPTION_REGbits 0081                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
               __pbssBANK0 002C         __size_of_initSETUP 003B                 __pmaintext 008E  
                  ?___wmul 0074                 __pintentry 0004  __size_of_Lcd_Write_String 0029  
   __end_of_Lcd_Set_Cursor 0140         __size_of_str_2_dec 0074                 ??_Lcd_Init 0078  
               ??_Lcd_Port 0074                    _SSPCON2 0091                    _SSPSTAT 0094  
               __stringtab 02AB             _Lcd_Write_Char 0256                    _Lcd_Cmd 0291  
          __size_of___wmul 0025                    ___lwdiv 0187          __end_of_initSETUP 0208  
          ?_Lcd_Set_Cursor 0078                    __ptext1 001A                    __ptext2 0231  
                  __ptext3 0187                    __ptext4 01CD                    __ptext5 0208  
                  __ptext6 0256                    __ptext7 00E8                    __ptext8 0140  
                  __ptext9 02C2               __size_of_isr 001D                    _sun_pot 002C  
   __end_of_Lcd_Write_Char 0274       end_of_initialization 0016          __end_of_str_2_dec 008E  
                Lcd_Port@a 0074                  _TRISCbits 0087            ?_Lcd_Write_Char 0070  
        Lcd_Write_String@a 0022          Lcd_Write_String@i 0020                  _Lcd_Clear 02C2  
           __end_of___wmul 0256           _Lcd_Write_String 0208        start_initialization 000F  
              __end_of_isr 0291          __size_of_Lcd_Init 0047          __size_of_Lcd_Port 0006  
               ?_Lcd_Clear 0070                   ??___wmul 0078            Lcd_Write_Char@a 0076  
          Lcd_Write_Char@y 0078                  ___latbits 0002              __pcstackBANK0 0020  
                 ?_Lcd_Cmd 0070           ___lwdiv@dividend 0076           ??_Lcd_Set_Cursor 0020  
                 ?___lwdiv 0074                  __pstrings 02AB                  _initSETUP 01CD  
         ___lwdiv@quotient 0020          interrupt_function 0004             ___wmul@product 0078  
                 Lcd_Cmd@a 0077                ??_Lcd_Clear 0078                  _str_2_dec 001A  
               _ADCON0bits 001F                __stringbase 02B0                 _ADCON1bits 009F  
        ___wmul@multiplier 0074           ??_Lcd_Write_Char 0075                 ?_initSETUP 0070  
                 _Lcd_Init 0140                   _Lcd_Port 02CF   __end_of_Lcd_Write_String 0231  
         __size_of_Lcd_Cmd 001A                 ?_str_2_dec 0023           __size_of___lwdiv 0046  
       __end_of__stringtab 02B1            ___lwdiv@divisor 0074            ___lwdiv@counter 0022  
                 __ptext10 0291                   __ptext11 02CF                   __ptext12 0274  
            __size_of_main 005A                 _INTCONbits 000B                ??_initSETUP 0074  
       Lcd_Write_Char@temp 0077                   intlevel1 0000                  stringcode 02AB  
               _OSCCONbits 008F                ??_str_2_dec 0025         Lcd_Set_Cursor@temp 0025  
                 stringdir 02AB                   stringtab 02AB                _SSPCON2bits 0091  
