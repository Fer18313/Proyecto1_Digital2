

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Sep 07 21:56:50 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	psect	text19,local,class=CODE,merge=1,delta=2
    29                           	psect	text20,local,class=CODE,merge=1,delta=2
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    31                           	dabs	1,0x7E,2
    32  0000                     
    33                           ; Version 2.20
    34                           ; Generated 12/02/2020 GMT
    35                           ; 
    36                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC16F887 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     	;# 
    68  0001                     	;# 
    69  0002                     	;# 
    70  0003                     	;# 
    71  0004                     	;# 
    72  0005                     	;# 
    73  0006                     	;# 
    74  0007                     	;# 
    75  0008                     	;# 
    76  0009                     	;# 
    77  000A                     	;# 
    78  000B                     	;# 
    79  000C                     	;# 
    80  000D                     	;# 
    81  000E                     	;# 
    82  000E                     	;# 
    83  000F                     	;# 
    84  0010                     	;# 
    85  0011                     	;# 
    86  0012                     	;# 
    87  0013                     	;# 
    88  0014                     	;# 
    89  0015                     	;# 
    90  0015                     	;# 
    91  0016                     	;# 
    92  0017                     	;# 
    93  0018                     	;# 
    94  0019                     	;# 
    95  001A                     	;# 
    96  001B                     	;# 
    97  001B                     	;# 
    98  001C                     	;# 
    99  001D                     	;# 
   100  001E                     	;# 
   101  001F                     	;# 
   102  0081                     	;# 
   103  0085                     	;# 
   104  0086                     	;# 
   105  0087                     	;# 
   106  0088                     	;# 
   107  0089                     	;# 
   108  008C                     	;# 
   109  008D                     	;# 
   110  008E                     	;# 
   111  008F                     	;# 
   112  0090                     	;# 
   113  0091                     	;# 
   114  0092                     	;# 
   115  0093                     	;# 
   116  0093                     	;# 
   117  0093                     	;# 
   118  0094                     	;# 
   119  0095                     	;# 
   120  0096                     	;# 
   121  0097                     	;# 
   122  0098                     	;# 
   123  0099                     	;# 
   124  009A                     	;# 
   125  009B                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009E                     	;# 
   129  009F                     	;# 
   130  0105                     	;# 
   131  0107                     	;# 
   132  0108                     	;# 
   133  0109                     	;# 
   134  010C                     	;# 
   135  010C                     	;# 
   136  010D                     	;# 
   137  010E                     	;# 
   138  010F                     	;# 
   139  0185                     	;# 
   140  0187                     	;# 
   141  0188                     	;# 
   142  0189                     	;# 
   143  018C                     	;# 
   144  018D                     	;# 
   145  0000                     	;# 
   146  0001                     	;# 
   147  0002                     	;# 
   148  0003                     	;# 
   149  0004                     	;# 
   150  0005                     	;# 
   151  0006                     	;# 
   152  0007                     	;# 
   153  0008                     	;# 
   154  0009                     	;# 
   155  000A                     	;# 
   156  000B                     	;# 
   157  000C                     	;# 
   158  000D                     	;# 
   159  000E                     	;# 
   160  000E                     	;# 
   161  000F                     	;# 
   162  0010                     	;# 
   163  0011                     	;# 
   164  0012                     	;# 
   165  0013                     	;# 
   166  0014                     	;# 
   167  0015                     	;# 
   168  0015                     	;# 
   169  0016                     	;# 
   170  0017                     	;# 
   171  0018                     	;# 
   172  0019                     	;# 
   173  001A                     	;# 
   174  001B                     	;# 
   175  001B                     	;# 
   176  001C                     	;# 
   177  001D                     	;# 
   178  001E                     	;# 
   179  001F                     	;# 
   180  0081                     	;# 
   181  0085                     	;# 
   182  0086                     	;# 
   183  0087                     	;# 
   184  0088                     	;# 
   185  0089                     	;# 
   186  008C                     	;# 
   187  008D                     	;# 
   188  008E                     	;# 
   189  008F                     	;# 
   190  0090                     	;# 
   191  0091                     	;# 
   192  0092                     	;# 
   193  0093                     	;# 
   194  0093                     	;# 
   195  0093                     	;# 
   196  0094                     	;# 
   197  0095                     	;# 
   198  0096                     	;# 
   199  0097                     	;# 
   200  0098                     	;# 
   201  0099                     	;# 
   202  009A                     	;# 
   203  009B                     	;# 
   204  009C                     	;# 
   205  009D                     	;# 
   206  009E                     	;# 
   207  009F                     	;# 
   208  0105                     	;# 
   209  0107                     	;# 
   210  0108                     	;# 
   211  0109                     	;# 
   212  010C                     	;# 
   213  010C                     	;# 
   214  010D                     	;# 
   215  010E                     	;# 
   216  010F                     	;# 
   217  0185                     	;# 
   218  0187                     	;# 
   219  0188                     	;# 
   220  0189                     	;# 
   221  018C                     	;# 
   222  018D                     	;# 
   223  0000                     	;# 
   224  0001                     	;# 
   225  0002                     	;# 
   226  0003                     	;# 
   227  0004                     	;# 
   228  0005                     	;# 
   229  0006                     	;# 
   230  0007                     	;# 
   231  0008                     	;# 
   232  0009                     	;# 
   233  000A                     	;# 
   234  000B                     	;# 
   235  000C                     	;# 
   236  000D                     	;# 
   237  000E                     	;# 
   238  000E                     	;# 
   239  000F                     	;# 
   240  0010                     	;# 
   241  0011                     	;# 
   242  0012                     	;# 
   243  0013                     	;# 
   244  0014                     	;# 
   245  0015                     	;# 
   246  0015                     	;# 
   247  0016                     	;# 
   248  0017                     	;# 
   249  0018                     	;# 
   250  0019                     	;# 
   251  001A                     	;# 
   252  001B                     	;# 
   253  001B                     	;# 
   254  001C                     	;# 
   255  001D                     	;# 
   256  001E                     	;# 
   257  001F                     	;# 
   258  0081                     	;# 
   259  0085                     	;# 
   260  0086                     	;# 
   261  0087                     	;# 
   262  0088                     	;# 
   263  0089                     	;# 
   264  008C                     	;# 
   265  008D                     	;# 
   266  008E                     	;# 
   267  008F                     	;# 
   268  0090                     	;# 
   269  0091                     	;# 
   270  0092                     	;# 
   271  0093                     	;# 
   272  0093                     	;# 
   273  0093                     	;# 
   274  0094                     	;# 
   275  0095                     	;# 
   276  0096                     	;# 
   277  0097                     	;# 
   278  0098                     	;# 
   279  0099                     	;# 
   280  009A                     	;# 
   281  009B                     	;# 
   282  009C                     	;# 
   283  009D                     	;# 
   284  009E                     	;# 
   285  009F                     	;# 
   286  0105                     	;# 
   287  0107                     	;# 
   288  0108                     	;# 
   289  0109                     	;# 
   290  010C                     	;# 
   291  010C                     	;# 
   292  010D                     	;# 
   293  010E                     	;# 
   294  010F                     	;# 
   295  0185                     	;# 
   296  0187                     	;# 
   297  0188                     	;# 
   298  0189                     	;# 
   299  018C                     	;# 
   300  018D                     	;# 
   301  0000                     	;# 
   302  0001                     	;# 
   303  0002                     	;# 
   304  0003                     	;# 
   305  0004                     	;# 
   306  0005                     	;# 
   307  0006                     	;# 
   308  0007                     	;# 
   309  0008                     	;# 
   310  0009                     	;# 
   311  000A                     	;# 
   312  000B                     	;# 
   313  000C                     	;# 
   314  000D                     	;# 
   315  000E                     	;# 
   316  000E                     	;# 
   317  000F                     	;# 
   318  0010                     	;# 
   319  0011                     	;# 
   320  0012                     	;# 
   321  0013                     	;# 
   322  0014                     	;# 
   323  0015                     	;# 
   324  0015                     	;# 
   325  0016                     	;# 
   326  0017                     	;# 
   327  0018                     	;# 
   328  0019                     	;# 
   329  001A                     	;# 
   330  001B                     	;# 
   331  001B                     	;# 
   332  001C                     	;# 
   333  001D                     	;# 
   334  001E                     	;# 
   335  001F                     	;# 
   336  0081                     	;# 
   337  0085                     	;# 
   338  0086                     	;# 
   339  0087                     	;# 
   340  0088                     	;# 
   341  0089                     	;# 
   342  008C                     	;# 
   343  008D                     	;# 
   344  008E                     	;# 
   345  008F                     	;# 
   346  0090                     	;# 
   347  0091                     	;# 
   348  0092                     	;# 
   349  0093                     	;# 
   350  0093                     	;# 
   351  0093                     	;# 
   352  0094                     	;# 
   353  0095                     	;# 
   354  0096                     	;# 
   355  0097                     	;# 
   356  0098                     	;# 
   357  0099                     	;# 
   358  009A                     	;# 
   359  009B                     	;# 
   360  009C                     	;# 
   361  009D                     	;# 
   362  009E                     	;# 
   363  009F                     	;# 
   364  0105                     	;# 
   365  0107                     	;# 
   366  0108                     	;# 
   367  0109                     	;# 
   368  010C                     	;# 
   369  010C                     	;# 
   370  010D                     	;# 
   371  010E                     	;# 
   372  010F                     	;# 
   373  0185                     	;# 
   374  0187                     	;# 
   375  0188                     	;# 
   376  0189                     	;# 
   377  018C                     	;# 
   378  018D                     	;# 
   379  0013                     _SSPBUF	set	19
   380  0014                     _SSPCON	set	20
   381  000B                     _INTCONbits	set	11
   382  001F                     _ADCON0bits	set	31
   383  0008                     _PORTD	set	8
   384  0007                     _PORTC	set	7
   385  0006                     _PORTB	set	6
   386  0005                     _PORTA	set	5
   387  0009                     _PORTE	set	9
   388  0049                     _RE1	set	73
   389  0048                     _RE0	set	72
   390  0063                     _SSPIF	set	99
   391  005E                     _PEIE	set	94
   392  005F                     _GIE	set	95
   393  0091                     _SSPCON2bits	set	145
   394  0087                     _TRISCbits	set	135
   395  0094                     _SSPSTAT	set	148
   396  0093                     _SSPADD	set	147
   397  0091                     _SSPCON2	set	145
   398  009F                     _ADCON1bits	set	159
   399  008F                     _OSCCONbits	set	143
   400  0089                     _TRISE	set	137
   401  0088                     _TRISD	set	136
   402  0087                     _TRISC	set	135
   403  0086                     _TRISB	set	134
   404  0085                     _TRISA	set	133
   405  0463                     _SSPIE	set	1123
   406  043C                     _TRISC4	set	1084
   407  043B                     _TRISC3	set	1083
   408  0189                     _ANSELH	set	393
   409  0188                     _ANSEL	set	392
   410                           
   411                           	psect	strings
   412  0003                     __pstrings:
   413  0003                     stringtab:
   414  0003                     __stringtab:
   415  0003                     stringcode:	
   416                           ;	String table - string pointers are 1 byte each
   417                           
   418  0003                     stringdir:
   419  0003  3000               	movlw	high stringdir
   420  0004  008A               	movwf	10
   421  0005  0804               	movf	4,w
   422  0006  0A84               	incf	4,f
   423  0007  0782               	addwf	2,f
   424  0008                     __stringbase:
   425  0008  3400               	retlw	0
   426  0009                     __end_of__stringtab:
   427  0009                     STR_1:
   428  0009  3420               	retlw	32	;' '
   429  000A  3452               	retlw	82	;'R'
   430  000B  3448               	retlw	72	;'H'
   431  000C  343A               	retlw	58	;':'
   432  000D  3420               	retlw	32	;' '
   433  000E  3420               	retlw	32	;' '
   434  000F  3420               	retlw	32	;' '
   435  0010  3454               	retlw	84	;'T'
   436  0011  343A               	retlw	58	;':'
   437  0012  3420               	retlw	32	;' '
   438  0013  3420               	retlw	32	;' '
   439  0014  3420               	retlw	32	;' '
   440  0015  344C               	retlw	76	;'L'
   441  0016  3425               	retlw	37	;'%'
   442  0017  343A               	retlw	58	;':'
   443  0018  3400               	retlw	0
   444  0019                     STR_2:
   445  0019  3425               	retlw	37	;'%'
   446  001A  3420               	retlw	32	;' '
   447  001B  3420               	retlw	32	;' '
   448  001C  3420               	retlw	32	;' '
   449  001D  3400               	retlw	0
   450  001E                     STR_3:
   451  001E  3443               	retlw	67	;'C'
   452  001F  3420               	retlw	32	;' '
   453  0020  3420               	retlw	32	;' '
   454  0021  3400               	retlw	0
   455  0022                     STR_4:
   456  0022  3425               	retlw	37	;'%'
   457  0023  3400               	retlw	0
   458                           
   459                           	psect	cinit
   460  07ED                     start_initialization:	
   461                           ; #config settings
   462                           
   463  07ED                     __initialization:
   464                           
   465                           ; Clear objects allocated to BANK0
   466  07ED  1283               	bcf	3,5	;RP0=0, select bank0
   467  07EE  1303               	bcf	3,6	;RP1=0, select bank0
   468  07EF  01A0               	clrf	__pbssBANK0& (0+127)
   469  07F0  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   470  07F1  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   471  07F2  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   472  07F3  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   473  07F4  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   474  07F5  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   475  07F6  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   476  07F7  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   477  07F8  01A9               	clrf	(__pbssBANK0+9)& (0+127)
   478  07F9  01AA               	clrf	(__pbssBANK0+10)& (0+127)
   479  07FA  01AB               	clrf	(__pbssBANK0+11)& (0+127)
   480  07FB  01AC               	clrf	(__pbssBANK0+12)& (0+127)
   481  07FC                     end_of_initialization:	
   482                           ;End of C runtime variable initialization code
   483                           
   484  07FC                     __end_of__initialization:
   485  07FC  0183               	clrf	3
   486  07FD  120A  118A  2E52   	ljmp	_main	;jump to C main() function
   487                           
   488                           	psect	bssBANK0
   489  0020                     __pbssBANK0:
   490  0020                     _LDR:
   491  0020                     	ds	2
   492  0022                     _cont:
   493  0022                     	ds	1
   494  0023                     _test:
   495  0023                     	ds	1
   496  0024                     _RH:
   497  0024                     	ds	1
   498  0025                     _Humidity:
   499  0025                     	ds	1
   500  0026                     _dec1_12:
   501  0026                     	ds	1
   502  0027                     _dec0_12:
   503  0027                     	ds	1
   504  0028                     _unit0_0:
   505  0028                     	ds	1
   506  0029                     _dec1:
   507  0029                     	ds	1
   508  002A                     _unit1:
   509  002A                     	ds	1
   510  002B                     _dec0:
   511  002B                     	ds	1
   512  002C                     _unit0:
   513  002C                     	ds	1
   514                           
   515                           	psect	cstackCOMMON
   516  0070                     __pcstackCOMMON:
   517  0070                     ?_initSETUP:
   518  0070                     ?_Lcd_Init:	
   519                           ; 1 bytes @ 0x0
   520                           
   521  0070                     ?_Lcd_Clear:	
   522                           ; 1 bytes @ 0x0
   523                           
   524  0070                     ?_Lcd_Write_String:	
   525                           ; 1 bytes @ 0x0
   526                           
   527  0070                     ?_I2C_Master_Start:	
   528                           ; 1 bytes @ 0x0
   529                           
   530  0070                     ??_I2C_Master_Start:	
   531                           ; 1 bytes @ 0x0
   532                           
   533  0070                     ?_I2C_Master_Write:	
   534                           ; 1 bytes @ 0x0
   535                           
   536  0070                     ?_I2C_Master_Stop:	
   537                           ; 1 bytes @ 0x0
   538                           
   539  0070                     ??_I2C_Master_Stop:	
   540                           ; 1 bytes @ 0x0
   541                           
   542  0070                     ?_Lcd_Write_Char:	
   543                           ; 1 bytes @ 0x0
   544                           
   545  0070                     ?_main:	
   546                           ; 1 bytes @ 0x0
   547                           
   548  0070                     ?_I2C_Master_Wait:	
   549                           ; 1 bytes @ 0x0
   550                           
   551  0070                     ??_I2C_Master_Wait:	
   552                           ; 1 bytes @ 0x0
   553                           
   554  0070                     ?_Lcd_Port:	
   555                           ; 1 bytes @ 0x0
   556                           
   557  0070                     ??_Lcd_Port:	
   558                           ; 1 bytes @ 0x0
   559                           
   560  0070                     ?_Lcd_Cmd:	
   561                           ; 1 bytes @ 0x0
   562                           
   563  0070                     ?_I2C_Master_Read:	
   564                           ; 1 bytes @ 0x0
   565                           
   566  0070                     ?___wmul:	
   567                           ; 2 bytes @ 0x0
   568                           
   569  0070                     ?___awdiv:	
   570                           ; 2 bytes @ 0x0
   571                           
   572  0070                     ?___lwdiv:	
   573                           ; 2 bytes @ 0x0
   574                           
   575  0070                     ?___lldiv:	
   576                           ; 2 bytes @ 0x0
   577                           
   578  0070                     Lcd_Port@a:	
   579                           ; 4 bytes @ 0x0
   580                           
   581  0070                     I2C_Master_Write@d:	
   582                           ; 1 bytes @ 0x0
   583                           
   584  0070                     I2C_Master_Read@a:	
   585                           ; 2 bytes @ 0x0
   586                           
   587  0070                     ___wmul@multiplier:	
   588                           ; 2 bytes @ 0x0
   589                           
   590  0070                     ___awdiv@divisor:	
   591                           ; 2 bytes @ 0x0
   592                           
   593  0070                     ___lwdiv@divisor:	
   594                           ; 2 bytes @ 0x0
   595                           
   596  0070                     ___lldiv@divisor:	
   597                           ; 2 bytes @ 0x0
   598                           
   599                           
   600                           ; 4 bytes @ 0x0
   601  0070                     	ds	1
   602  0071                     ??_Lcd_Write_Char:
   603  0071                     ??_Lcd_Cmd:	
   604                           ; 1 bytes @ 0x1
   605                           
   606                           
   607                           ; 1 bytes @ 0x1
   608  0071                     	ds	1
   609  0072                     ??_I2C_Master_Write:
   610  0072                     ??_I2C_Master_Read:	
   611                           ; 1 bytes @ 0x2
   612                           
   613  0072                     Lcd_Write_Char@a:	
   614                           ; 1 bytes @ 0x2
   615                           
   616  0072                     ___wmul@multiplicand:	
   617                           ; 1 bytes @ 0x2
   618                           
   619  0072                     ___awdiv@dividend:	
   620                           ; 2 bytes @ 0x2
   621                           
   622  0072                     ___lwdiv@dividend:	
   623                           ; 2 bytes @ 0x2
   624                           
   625                           
   626                           ; 2 bytes @ 0x2
   627  0072                     	ds	1
   628  0073                     Lcd_Cmd@a:
   629  0073                     Lcd_Write_Char@temp:	
   630                           ; 1 bytes @ 0x3
   631                           
   632                           
   633                           ; 1 bytes @ 0x3
   634  0073                     	ds	1
   635  0074                     ??_Lcd_Init:
   636  0074                     ??_Lcd_Clear:	
   637                           ; 1 bytes @ 0x4
   638                           
   639  0074                     ?_Lcd_Set_Cursor:	
   640                           ; 1 bytes @ 0x4
   641                           
   642  0074                     ??___wmul:	
   643                           ; 1 bytes @ 0x4
   644                           
   645  0074                     ??___awdiv:	
   646                           ; 1 bytes @ 0x4
   647                           
   648  0074                     ??___lwdiv:	
   649                           ; 1 bytes @ 0x4
   650                           
   651  0074                     Lcd_Set_Cursor@b:	
   652                           ; 1 bytes @ 0x4
   653                           
   654  0074                     Lcd_Write_Char@y:	
   655                           ; 1 bytes @ 0x4
   656                           
   657  0074                     I2C_Master_Read@temp:	
   658                           ; 1 bytes @ 0x4
   659                           
   660  0074                     ___wmul@product:	
   661                           ; 2 bytes @ 0x4
   662                           
   663  0074                     ___lldiv@dividend:	
   664                           ; 2 bytes @ 0x4
   665                           
   666                           
   667                           ; 4 bytes @ 0x4
   668  0074                     	ds	1
   669  0075                     ??_Lcd_Set_Cursor:
   670  0075                     ??_Lcd_Write_String:	
   671                           ; 1 bytes @ 0x5
   672                           
   673  0075                     ___awdiv@counter:	
   674                           ; 1 bytes @ 0x5
   675                           
   676  0075                     Lcd_Write_String@i:	
   677                           ; 1 bytes @ 0x5
   678                           
   679  0075                     ___lwdiv@quotient:	
   680                           ; 2 bytes @ 0x5
   681                           
   682                           
   683                           ; 2 bytes @ 0x5
   684  0075                     	ds	1
   685  0076                     ___awdiv@sign:
   686                           
   687                           ; 1 bytes @ 0x6
   688  0076                     	ds	1
   689  0077                     Lcd_Set_Cursor@a:
   690  0077                     Lcd_Write_String@a:	
   691                           ; 1 bytes @ 0x7
   692                           
   693  0077                     ___lwdiv@counter:	
   694                           ; 1 bytes @ 0x7
   695                           
   696  0077                     ___awdiv@quotient:	
   697                           ; 1 bytes @ 0x7
   698                           
   699                           
   700                           ; 2 bytes @ 0x7
   701  0077                     	ds	1
   702  0078                     ?_str_2_dc:
   703  0078                     ??___lldiv:	
   704                           ; 1 bytes @ 0x8
   705                           
   706  0078                     Lcd_Set_Cursor@z:	
   707                           ; 1 bytes @ 0x8
   708                           
   709  0078                     str_2_dc@var:	
   710                           ; 1 bytes @ 0x8
   711                           
   712                           
   713                           ; 2 bytes @ 0x8
   714  0078                     	ds	1
   715  0079                     ?___awmod:
   716  0079                     Lcd_Set_Cursor@y:	
   717                           ; 2 bytes @ 0x9
   718                           
   719  0079                     ___awmod@divisor:	
   720                           ; 1 bytes @ 0x9
   721                           
   722  0079                     ___lldiv@quotient:	
   723                           ; 2 bytes @ 0x9
   724                           
   725                           
   726                           ; 4 bytes @ 0x9
   727  0079                     	ds	1
   728  007A                     ??_str_2_dc:
   729  007A                     Lcd_Set_Cursor@temp:	
   730                           ; 1 bytes @ 0xA
   731                           
   732                           
   733                           ; 1 bytes @ 0xA
   734  007A                     	ds	1
   735  007B                     ___awmod@dividend:
   736                           
   737                           ; 2 bytes @ 0xB
   738  007B                     	ds	1
   739  007C                     str_2_dc@vcv:
   740                           
   741                           ; 2 bytes @ 0xC
   742  007C                     	ds	1
   743  007D                     ??___awmod:
   744  007D                     ___lldiv@counter:	
   745                           ; 1 bytes @ 0xD
   746                           
   747                           
   748                           ; 1 bytes @ 0xD
   749  007D                     	ds	1
   750                           
   751                           	psect	cstackBANK0
   752  002D                     __pcstackBANK0:
   753  002D                     ?_I2C_Master_Init:
   754  002D                     ___awmod@counter:	
   755                           ; 1 bytes @ 0x0
   756                           
   757  002D                     I2C_Master_Init@c:	
   758                           ; 1 bytes @ 0x0
   759                           
   760                           
   761                           ; 4 bytes @ 0x0
   762  002D                     	ds	1
   763  002E                     ___awmod@sign:
   764                           
   765                           ; 1 bytes @ 0x1
   766  002E                     	ds	3
   767  0031                     ??_I2C_Master_Init:
   768                           
   769                           ; 1 bytes @ 0x4
   770  0031                     	ds	4
   771  0035                     ??_initSETUP:
   772                           
   773                           ; 1 bytes @ 0x8
   774  0035                     	ds	1
   775  0036                     ??_main:
   776                           
   777                           ; 1 bytes @ 0x9
   778  0036                     	ds	3
   779                           
   780                           	psect	maintext
   781  0652                     __pmaintext:	
   782 ;;
   783 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   784 ;;
   785 ;; *************** function _main *****************
   786 ;; Defined at:
   787 ;;		line 42 in file "master.c"
   788 ;; Parameters:    Size  Location     Type
   789 ;;		None
   790 ;; Auto vars:     Size  Location     Type
   791 ;;		None
   792 ;; Return value:  Size  Location     Type
   793 ;;                  1    wreg      void 
   794 ;; Registers used:
   795 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   796 ;; Tracked objects:
   797 ;;		On entry : B00/0
   798 ;;		On exit  : 0/0
   799 ;;		Unchanged: 0/0
   800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   801 ;;      Params:         0       0       0       0       0
   802 ;;      Locals:         0       0       0       0       0
   803 ;;      Temps:          0       3       0       0       0
   804 ;;      Totals:         0       3       0       0       0
   805 ;;Total ram usage:        3 bytes
   806 ;; Hardware stack levels required when called: 3
   807 ;; This function calls:
   808 ;;		_I2C_Master_Read
   809 ;;		_I2C_Master_Start
   810 ;;		_I2C_Master_Stop
   811 ;;		_I2C_Master_Write
   812 ;;		_Lcd_Clear
   813 ;;		_Lcd_Init
   814 ;;		_Lcd_Set_Cursor
   815 ;;		_Lcd_Write_Char
   816 ;;		_Lcd_Write_String
   817 ;;		___awdiv
   818 ;;		___awmod
   819 ;;		_initSETUP
   820 ;;		_str_2_dc
   821 ;; This function is called by:
   822 ;;		Startup code after reset
   823 ;; This function uses a non-reentrant model
   824 ;;
   825                           
   826                           
   827                           ;psect for function _main
   828  0652                     _main:
   829  0652                     l1538:	
   830                           ;incstack = 0
   831                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   832                           
   833                           
   834                           ;master.c: 43:     initSETUP();
   835  0652  120A  118A  239D  120A  118A  	fcall	_initSETUP
   836                           
   837                           ;master.c: 44:     Lcd_Init();
   838  0657  120A  118A  2421  120A  118A  	fcall	_Lcd_Init
   839                           
   840                           ;master.c: 45:     Lcd_Clear();
   841  065C  120A  118A  22A8  120A  118A  	fcall	_Lcd_Clear
   842                           
   843                           ;master.c: 46:     Lcd_Set_Cursor(1,1);
   844  0661  01F4               	clrf	Lcd_Set_Cursor@b
   845  0662  0AF4               	incf	Lcd_Set_Cursor@b,f
   846  0663  3001               	movlw	1
   847  0664  120A  118A  2468  120A  118A  	fcall	_Lcd_Set_Cursor
   848  0669                     l1540:
   849                           
   850                           ;master.c: 47:     Lcd_Write_String(" RH:   T:   L%:");
   851  0669  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   852  066A  120A  118A  22ED  120A  118A  	fcall	_Lcd_Write_String
   853  066F                     l1542:
   854                           
   855                           ;master.c: 49:         I2C_Master_Start();
   856  066F  120A  118A  227F  120A  118A  	fcall	_I2C_Master_Start
   857  0674                     l1544:
   858                           
   859                           ;master.c: 50:         I2C_Master_Write(0x81);
   860  0674  3081               	movlw	129
   861  0675  00F0               	movwf	I2C_Master_Write@d
   862  0676  3000               	movlw	0
   863  0677  00F1               	movwf	I2C_Master_Write@d+1
   864  0678  120A  118A  2291  120A  118A  	fcall	_I2C_Master_Write
   865  067D                     l1546:
   866                           
   867                           ;master.c: 51:         if (test==0){
   868  067D  1283               	bcf	3,5	;RP0=0, select bank0
   869  067E  1303               	bcf	3,6	;RP1=0, select bank0
   870  067F  0823               	movf	_test,w
   871  0680  1D03               	btfss	3,2
   872  0681  2E83               	goto	u971
   873  0682  2E84               	goto	u970
   874  0683                     u971:
   875  0683  2E95               	goto	l1552
   876  0684                     u970:
   877  0684                     l1548:
   878                           
   879                           ;master.c: 52:                 RH=I2C_Master_Read(0);
   880  0684  3000               	movlw	0
   881  0685  00F0               	movwf	I2C_Master_Read@a
   882  0686  00F1               	movwf	I2C_Master_Read@a+1
   883  0687  120A  118A  2337  120A  118A  	fcall	_I2C_Master_Read
   884  068C  0870               	movf	?_I2C_Master_Read,w
   885  068D  1283               	bcf	3,5	;RP0=0, select bank0
   886  068E  1303               	bcf	3,6	;RP1=0, select bank0
   887  068F  00B6               	movwf	??_main
   888  0690  0836               	movf	??_main,w
   889  0691  00A4               	movwf	_RH
   890  0692                     l1550:
   891                           
   892                           ;master.c: 53:                 test = 1;
   893  0692  01A3               	clrf	_test
   894  0693  0AA3               	incf	_test,f
   895                           
   896                           ;master.c: 54:             }
   897  0694  2EA9               	goto	l1558
   898  0695                     l1552:
   899  0695  0323               	decf	_test,w
   900  0696  1D03               	btfss	3,2
   901  0697  2E99               	goto	u981
   902  0698  2E9A               	goto	u980
   903  0699                     u981:
   904  0699  2EA9               	goto	l1558
   905  069A                     u980:
   906  069A                     l1554:
   907                           
   908                           ;master.c: 56:                 Humidity=I2C_Master_Read(0);
   909  069A  3000               	movlw	0
   910  069B  00F0               	movwf	I2C_Master_Read@a
   911  069C  00F1               	movwf	I2C_Master_Read@a+1
   912  069D  120A  118A  2337  120A  118A  	fcall	_I2C_Master_Read
   913  06A2  0870               	movf	?_I2C_Master_Read,w
   914  06A3  1283               	bcf	3,5	;RP0=0, select bank0
   915  06A4  1303               	bcf	3,6	;RP1=0, select bank0
   916  06A5  00B6               	movwf	??_main
   917  06A6  0836               	movf	??_main,w
   918  06A7  00A5               	movwf	_Humidity
   919  06A8                     l1556:
   920                           
   921                           ;master.c: 57:                 test = 0;
   922  06A8  01A3               	clrf	_test
   923  06A9                     l1558:
   924                           
   925                           ;master.c: 59:         I2C_Master_Stop();
   926  06A9  120A  118A  2288  120A  118A  	fcall	_I2C_Master_Stop
   927  06AE                     l1560:
   928                           
   929                           ;master.c: 60:         _delay((unsigned long)((200)*(8000000/4000.0)));
   930  06AE  3003               	movlw	3
   931  06AF  1283               	bcf	3,5	;RP0=0, select bank0
   932  06B0  1303               	bcf	3,6	;RP1=0, select bank0
   933  06B1  00B8               	movwf	??_main+2
   934  06B2  3008               	movlw	8
   935  06B3  00B7               	movwf	??_main+1
   936  06B4  3076               	movlw	118
   937  06B5  00B6               	movwf	??_main
   938  06B6                     u1017:
   939  06B6  0BB6               	decfsz	??_main,f
   940  06B7  2EB6               	goto	u1017
   941  06B8  0BB7               	decfsz	??_main+1,f
   942  06B9  2EB6               	goto	u1017
   943  06BA  0BB8               	decfsz	??_main+2,f
   944  06BB  2EB6               	goto	u1017
   945  06BC  0000               	nop
   946  06BD                     l1562:
   947                           
   948                           ;master.c: 61:         I2C_Master_Start();
   949  06BD  120A  118A  227F  120A  118A  	fcall	_I2C_Master_Start
   950  06C2                     l1564:
   951                           
   952                           ;master.c: 62:         I2C_Master_Write(0x61);
   953  06C2  3061               	movlw	97
   954  06C3  00F0               	movwf	I2C_Master_Write@d
   955  06C4  3000               	movlw	0
   956  06C5  00F1               	movwf	I2C_Master_Write@d+1
   957  06C6  120A  118A  2291  120A  118A  	fcall	_I2C_Master_Write
   958  06CB                     l1566:
   959                           
   960                           ;master.c: 63:         LDR = I2C_Master_Read(0);
   961  06CB  3000               	movlw	0
   962  06CC  00F0               	movwf	I2C_Master_Read@a
   963  06CD  00F1               	movwf	I2C_Master_Read@a+1
   964  06CE  120A  118A  2337  120A  118A  	fcall	_I2C_Master_Read
   965  06D3  0871               	movf	?_I2C_Master_Read+1,w
   966  06D4  1283               	bcf	3,5	;RP0=0, select bank0
   967  06D5  1303               	bcf	3,6	;RP1=0, select bank0
   968  06D6  00A1               	movwf	_LDR+1
   969  06D7  0870               	movf	?_I2C_Master_Read,w
   970  06D8  00A0               	movwf	_LDR
   971  06D9                     l1568:
   972                           
   973                           ;master.c: 64:         I2C_Master_Stop();
   974  06D9  120A  118A  2288  120A  118A  	fcall	_I2C_Master_Stop
   975  06DE                     l1570:
   976                           
   977                           ;master.c: 65:         _delay((unsigned long)((200)*(8000000/4000.0)));
   978  06DE  3003               	movlw	3
   979  06DF  1283               	bcf	3,5	;RP0=0, select bank0
   980  06E0  1303               	bcf	3,6	;RP1=0, select bank0
   981  06E1  00B8               	movwf	??_main+2
   982  06E2  3008               	movlw	8
   983  06E3  00B7               	movwf	??_main+1
   984  06E4  3076               	movlw	118
   985  06E5  00B6               	movwf	??_main
   986  06E6                     u1027:
   987  06E6  0BB6               	decfsz	??_main,f
   988  06E7  2EE6               	goto	u1027
   989  06E8  0BB7               	decfsz	??_main+1,f
   990  06E9  2EE6               	goto	u1027
   991  06EA  0BB8               	decfsz	??_main+2,f
   992  06EB  2EE6               	goto	u1027
   993  06EC  0000               	nop
   994  06ED                     l1572:
   995                           
   996                           ;master.c: 67:         Lcd_Set_Cursor(2,1);
   997  06ED  01F4               	clrf	Lcd_Set_Cursor@b
   998  06EE  0AF4               	incf	Lcd_Set_Cursor@b,f
   999  06EF  3002               	movlw	2
  1000  06F0  120A  118A  2468  120A  118A  	fcall	_Lcd_Set_Cursor
  1001  06F5                     l1574:
  1002                           
  1003                           ;master.c: 68:         unit0 = 48 + ((Humidity/10) %10);
  1004  06F5  300A               	movlw	10
  1005  06F6  00F9               	movwf	___awmod@divisor
  1006  06F7  3000               	movlw	0
  1007  06F8  00FA               	movwf	___awmod@divisor+1
  1008  06F9  300A               	movlw	10
  1009  06FA  00F0               	movwf	___awdiv@divisor
  1010  06FB  3000               	movlw	0
  1011  06FC  00F1               	movwf	___awdiv@divisor+1
  1012  06FD  1283               	bcf	3,5	;RP0=0, select bank0
  1013  06FE  1303               	bcf	3,6	;RP1=0, select bank0
  1014  06FF  0825               	movf	_Humidity,w
  1015  0700  00B6               	movwf	??_main
  1016  0701  01B7               	clrf	??_main+1
  1017  0702  0836               	movf	??_main,w
  1018  0703  00F2               	movwf	___awdiv@dividend
  1019  0704  0837               	movf	??_main+1,w
  1020  0705  00F3               	movwf	___awdiv@dividend+1
  1021  0706  120A  118A  257B  120A  118A  	fcall	___awdiv
  1022  070B  0871               	movf	?___awdiv+1,w
  1023  070C  00FC               	movwf	___awmod@dividend+1
  1024  070D  0870               	movf	?___awdiv,w
  1025  070E  00FB               	movwf	___awmod@dividend
  1026  070F  120A  118A  24BA  120A  118A  	fcall	___awmod
  1027  0714  0879               	movf	?___awmod,w
  1028  0715  3E30               	addlw	48
  1029  0716  1283               	bcf	3,5	;RP0=0, select bank0
  1030  0717  1303               	bcf	3,6	;RP1=0, select bank0
  1031  0718  00B8               	movwf	??_main+2
  1032  0719  0838               	movf	??_main+2,w
  1033  071A  00AC               	movwf	_unit0
  1034  071B                     l1576:
  1035                           
  1036                           ;master.c: 69:         dec0 = 48 + (Humidity %10);
  1037  071B  300A               	movlw	10
  1038  071C  00F9               	movwf	___awmod@divisor
  1039  071D  3000               	movlw	0
  1040  071E  00FA               	movwf	___awmod@divisor+1
  1041  071F  0825               	movf	_Humidity,w
  1042  0720  00B6               	movwf	??_main
  1043  0721  01B7               	clrf	??_main+1
  1044  0722  0836               	movf	??_main,w
  1045  0723  00FB               	movwf	___awmod@dividend
  1046  0724  0837               	movf	??_main+1,w
  1047  0725  00FC               	movwf	___awmod@dividend+1
  1048  0726  120A  118A  24BA  120A  118A  	fcall	___awmod
  1049  072B  0879               	movf	?___awmod,w
  1050  072C  3E30               	addlw	48
  1051  072D  1283               	bcf	3,5	;RP0=0, select bank0
  1052  072E  1303               	bcf	3,6	;RP1=0, select bank0
  1053  072F  00B8               	movwf	??_main+2
  1054  0730  0838               	movf	??_main+2,w
  1055  0731  00AB               	movwf	_dec0
  1056  0732                     l1578:
  1057                           
  1058                           ;master.c: 70:         unit1 =48 + ((RH / 10) % 10);
  1059  0732  300A               	movlw	10
  1060  0733  00F9               	movwf	___awmod@divisor
  1061  0734  3000               	movlw	0
  1062  0735  00FA               	movwf	___awmod@divisor+1
  1063  0736  300A               	movlw	10
  1064  0737  00F0               	movwf	___awdiv@divisor
  1065  0738  3000               	movlw	0
  1066  0739  00F1               	movwf	___awdiv@divisor+1
  1067  073A  0824               	movf	_RH,w
  1068  073B  00B6               	movwf	??_main
  1069  073C  01B7               	clrf	??_main+1
  1070  073D  0836               	movf	??_main,w
  1071  073E  00F2               	movwf	___awdiv@dividend
  1072  073F  0837               	movf	??_main+1,w
  1073  0740  00F3               	movwf	___awdiv@dividend+1
  1074  0741  120A  118A  257B  120A  118A  	fcall	___awdiv
  1075  0746  0871               	movf	?___awdiv+1,w
  1076  0747  00FC               	movwf	___awmod@dividend+1
  1077  0748  0870               	movf	?___awdiv,w
  1078  0749  00FB               	movwf	___awmod@dividend
  1079  074A  120A  118A  24BA  120A  118A  	fcall	___awmod
  1080  074F  0879               	movf	?___awmod,w
  1081  0750  3E30               	addlw	48
  1082  0751  1283               	bcf	3,5	;RP0=0, select bank0
  1083  0752  1303               	bcf	3,6	;RP1=0, select bank0
  1084  0753  00B8               	movwf	??_main+2
  1085  0754  0838               	movf	??_main+2,w
  1086  0755  00AA               	movwf	_unit1
  1087  0756                     l1580:
  1088                           
  1089                           ;master.c: 71:         dec1 = 48 + (RH % 10);
  1090  0756  300A               	movlw	10
  1091  0757  00F9               	movwf	___awmod@divisor
  1092  0758  3000               	movlw	0
  1093  0759  00FA               	movwf	___awmod@divisor+1
  1094  075A  0824               	movf	_RH,w
  1095  075B  00B6               	movwf	??_main
  1096  075C  01B7               	clrf	??_main+1
  1097  075D  0836               	movf	??_main,w
  1098  075E  00FB               	movwf	___awmod@dividend
  1099  075F  0837               	movf	??_main+1,w
  1100  0760  00FC               	movwf	___awmod@dividend+1
  1101  0761  120A  118A  24BA  120A  118A  	fcall	___awmod
  1102  0766  0879               	movf	?___awmod,w
  1103  0767  3E30               	addlw	48
  1104  0768  1283               	bcf	3,5	;RP0=0, select bank0
  1105  0769  1303               	bcf	3,6	;RP1=0, select bank0
  1106  076A  00B8               	movwf	??_main+2
  1107  076B  0838               	movf	??_main+2,w
  1108  076C  00A9               	movwf	_dec1
  1109  076D                     l1582:
  1110                           
  1111                           ;master.c: 72:         Lcd_Write_Char(unit0);
  1112  076D  082C               	movf	_unit0,w
  1113  076E  120A  118A  22CF  120A  118A  	fcall	_Lcd_Write_Char
  1114  0773                     l1584:
  1115                           
  1116                           ;master.c: 73:         Lcd_Write_Char(dec0);
  1117  0773  1283               	bcf	3,5	;RP0=0, select bank0
  1118  0774  1303               	bcf	3,6	;RP1=0, select bank0
  1119  0775  082B               	movf	_dec0,w
  1120  0776  120A  118A  22CF  120A  118A  	fcall	_Lcd_Write_Char
  1121  077B                     l1586:
  1122                           
  1123                           ;master.c: 74:         Lcd_Write_String("%   ");
  1124  077B  3011               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1125  077C  120A  118A  22ED  120A  118A  	fcall	_Lcd_Write_String
  1126  0781                     l1588:
  1127                           
  1128                           ;master.c: 75:         Lcd_Write_Char(unit1);
  1129  0781  1283               	bcf	3,5	;RP0=0, select bank0
  1130  0782  1303               	bcf	3,6	;RP1=0, select bank0
  1131  0783  082A               	movf	_unit1,w
  1132  0784  120A  118A  22CF  120A  118A  	fcall	_Lcd_Write_Char
  1133  0789                     l1590:
  1134                           
  1135                           ;master.c: 76:         Lcd_Write_Char(dec1);
  1136  0789  1283               	bcf	3,5	;RP0=0, select bank0
  1137  078A  1303               	bcf	3,6	;RP1=0, select bank0
  1138  078B  0829               	movf	_dec1,w
  1139  078C  120A  118A  22CF  120A  118A  	fcall	_Lcd_Write_Char
  1140  0791                     l1592:
  1141                           
  1142                           ;master.c: 77:         Lcd_Write_Char(223);
  1143  0791  30DF               	movlw	223
  1144  0792  120A  118A  22CF  120A  118A  	fcall	_Lcd_Write_Char
  1145  0797                     l1594:
  1146                           
  1147                           ;master.c: 78:         Lcd_Write_String("C  ");
  1148  0797  3016               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1149  0798  120A  118A  22ED  120A  118A  	fcall	_Lcd_Write_String
  1150  079D                     l1596:
  1151                           
  1152                           ;master.c: 79:         str_2_dc(LDR);
  1153  079D  1283               	bcf	3,5	;RP0=0, select bank0
  1154  079E  1303               	bcf	3,6	;RP1=0, select bank0
  1155  079F  0821               	movf	_LDR+1,w
  1156  07A0  00F9               	movwf	str_2_dc@var+1
  1157  07A1  0820               	movf	_LDR,w
  1158  07A2  00F8               	movwf	str_2_dc@var
  1159  07A3  120A  118A  25E2  120A  118A  	fcall	_str_2_dc
  1160  07A8                     l1598:
  1161                           
  1162                           ;master.c: 80:         Lcd_Write_Char(unit0_0);
  1163  07A8  1283               	bcf	3,5	;RP0=0, select bank0
  1164  07A9  1303               	bcf	3,6	;RP1=0, select bank0
  1165  07AA  0828               	movf	_unit0_0,w
  1166  07AB  120A  118A  22CF  120A  118A  	fcall	_Lcd_Write_Char
  1167  07B0                     l1600:
  1168                           
  1169                           ;master.c: 81:         Lcd_Write_Char(dec0_12);
  1170  07B0  1283               	bcf	3,5	;RP0=0, select bank0
  1171  07B1  1303               	bcf	3,6	;RP1=0, select bank0
  1172  07B2  0827               	movf	_dec0_12,w
  1173  07B3  120A  118A  22CF  120A  118A  	fcall	_Lcd_Write_Char
  1174  07B8                     l1602:
  1175                           
  1176                           ;master.c: 82:         Lcd_Write_Char(dec1_12);
  1177  07B8  1283               	bcf	3,5	;RP0=0, select bank0
  1178  07B9  1303               	bcf	3,6	;RP1=0, select bank0
  1179  07BA  0826               	movf	_dec1_12,w
  1180  07BB  120A  118A  22CF  120A  118A  	fcall	_Lcd_Write_Char
  1181  07C0                     l1604:
  1182                           
  1183                           ;master.c: 83:         Lcd_Write_String("%");
  1184  07C0  301A               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1185  07C1  120A  118A  22ED  120A  118A  	fcall	_Lcd_Write_String
  1186  07C6                     l1606:
  1187                           
  1188                           ;master.c: 84:         if (RH<32){
  1189  07C6  3020               	movlw	32
  1190  07C7  1283               	bcf	3,5	;RP0=0, select bank0
  1191  07C8  1303               	bcf	3,6	;RP1=0, select bank0
  1192  07C9  0224               	subwf	_RH,w
  1193  07CA  1803               	skipnc
  1194  07CB  2FCD               	goto	u991
  1195  07CC  2FCE               	goto	u990
  1196  07CD                     u991:
  1197  07CD  2FD3               	goto	l1610
  1198  07CE                     u990:
  1199  07CE                     l1608:
  1200                           
  1201                           ;master.c: 85:             cont++;
  1202  07CE  3001               	movlw	1
  1203  07CF  00B6               	movwf	??_main
  1204  07D0  0836               	movf	??_main,w
  1205  07D1  07A2               	addwf	_cont,f
  1206                           
  1207                           ;master.c: 87:         }
  1208  07D2  2FDB               	goto	l1614
  1209  07D3                     l1610:
  1210  07D3  3021               	movlw	33
  1211  07D4  0224               	subwf	_RH,w
  1212  07D5  1C03               	skipc
  1213  07D6  2FD8               	goto	u1001
  1214  07D7  2FD9               	goto	u1000
  1215  07D8                     u1001:
  1216  07D8  2FDB               	goto	l1614
  1217  07D9                     u1000:
  1218  07D9                     l1612:
  1219                           
  1220                           ;master.c: 89:             cont--;
  1221  07D9  3001               	movlw	1
  1222  07DA  02A2               	subwf	_cont,f
  1223  07DB                     l1614:
  1224                           
  1225                           ;master.c: 93:         _delay((unsigned long)((1000)*(8000000/4000.0)));
  1226  07DB  300B               	movlw	11
  1227  07DC  1283               	bcf	3,5	;RP0=0, select bank0
  1228  07DD  1303               	bcf	3,6	;RP1=0, select bank0
  1229  07DE  00B8               	movwf	??_main+2
  1230  07DF  3026               	movlw	38
  1231  07E0  00B7               	movwf	??_main+1
  1232  07E1  305D               	movlw	93
  1233  07E2  00B6               	movwf	??_main
  1234  07E3                     u1037:
  1235  07E3  0BB6               	decfsz	??_main,f
  1236  07E4  2FE3               	goto	u1037
  1237  07E5  0BB7               	decfsz	??_main+1,f
  1238  07E6  2FE3               	goto	u1037
  1239  07E7  0BB8               	decfsz	??_main+2,f
  1240  07E8  2FE3               	goto	u1037
  1241  07E9  2E6F               	goto	l1542
  1242  07EA  120A  118A  2800   	ljmp	start
  1243  07ED                     __end_of_main:
  1244                           
  1245                           	psect	text1
  1246  05E2                     __ptext1:	
  1247 ;; *************** function _str_2_dc *****************
  1248 ;; Defined at:
  1249 ;;		line 97 in file "master.c"
  1250 ;; Parameters:    Size  Location     Type
  1251 ;;  var             2    8[COMMON] unsigned int 
  1252 ;; Auto vars:     Size  Location     Type
  1253 ;;  vcv             2   12[COMMON] unsigned int 
  1254 ;; Return value:  Size  Location     Type
  1255 ;;                  1    wreg      void 
  1256 ;; Registers used:
  1257 ;;		wreg, status,2, status,0, pclath, cstack
  1258 ;; Tracked objects:
  1259 ;;		On entry : 0/0
  1260 ;;		On exit  : 0/0
  1261 ;;		Unchanged: 0/0
  1262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1263 ;;      Params:         2       0       0       0       0
  1264 ;;      Locals:         2       0       0       0       0
  1265 ;;      Temps:          2       0       0       0       0
  1266 ;;      Totals:         6       0       0       0       0
  1267 ;;Total ram usage:        6 bytes
  1268 ;; Hardware stack levels used: 1
  1269 ;; Hardware stack levels required when called: 1
  1270 ;; This function calls:
  1271 ;;		___lwdiv
  1272 ;;		___wmul
  1273 ;; This function is called by:
  1274 ;;		_main
  1275 ;; This function uses a non-reentrant model
  1276 ;;
  1277                           
  1278                           
  1279                           ;psect for function _str_2_dc
  1280  05E2                     _str_2_dc:
  1281  05E2                     l1440:	
  1282                           ;incstack = 0
  1283                           ; Regs used in _str_2_dc: [wreg+status,2+status,0+pclath+cstack]
  1284                           
  1285                           
  1286                           ;master.c: 98:     uint16_t vcv;;master.c: 99:     vcv = var;
  1287  05E2  0879               	movf	str_2_dc@var+1,w
  1288  05E3  00FD               	movwf	str_2_dc@vcv+1
  1289  05E4  0878               	movf	str_2_dc@var,w
  1290  05E5  00FC               	movwf	str_2_dc@vcv
  1291  05E6                     l1442:
  1292                           
  1293                           ;master.c: 100:     unit0_0 = (vcv/100) ;
  1294  05E6  3064               	movlw	100
  1295  05E7  00F0               	movwf	___lwdiv@divisor
  1296  05E8  3000               	movlw	0
  1297  05E9  00F1               	movwf	___lwdiv@divisor+1
  1298  05EA  087D               	movf	str_2_dc@vcv+1,w
  1299  05EB  00F3               	movwf	___lwdiv@dividend+1
  1300  05EC  087C               	movf	str_2_dc@vcv,w
  1301  05ED  00F2               	movwf	___lwdiv@dividend
  1302  05EE  120A  118A  23DD  120A  118A  	fcall	___lwdiv
  1303  05F3  0870               	movf	?___lwdiv,w
  1304  05F4  00FA               	movwf	??_str_2_dc
  1305  05F5  087A               	movf	??_str_2_dc,w
  1306  05F6  1283               	bcf	3,5	;RP0=0, select bank0
  1307  05F7  1303               	bcf	3,6	;RP1=0, select bank0
  1308  05F8  00A8               	movwf	_unit0_0
  1309  05F9                     l1444:
  1310                           
  1311                           ;master.c: 101:     vcv = (vcv - (unit0_0*100));
  1312  05F9  0828               	movf	_unit0_0,w
  1313  05FA  00FA               	movwf	??_str_2_dc
  1314  05FB  01FB               	clrf	??_str_2_dc+1
  1315  05FC  087A               	movf	??_str_2_dc,w
  1316  05FD  00F0               	movwf	___wmul@multiplier
  1317  05FE  087B               	movf	??_str_2_dc+1,w
  1318  05FF  00F1               	movwf	___wmul@multiplier+1
  1319  0600  309C               	movlw	156
  1320  0601  00F2               	movwf	___wmul@multiplicand
  1321  0602  30FF               	movlw	255
  1322  0603  00F3               	movwf	___wmul@multiplicand+1
  1323  0604  120A  118A  2312  120A  118A  	fcall	___wmul
  1324  0609  087C               	movf	str_2_dc@vcv,w
  1325  060A  0770               	addwf	?___wmul,w
  1326  060B  00FC               	movwf	str_2_dc@vcv
  1327  060C  087D               	movf	str_2_dc@vcv+1,w
  1328  060D  1803               	skipnc
  1329  060E  0A7D               	incf	str_2_dc@vcv+1,w
  1330  060F  0771               	addwf	?___wmul+1,w
  1331  0610  00FD               	movwf	str_2_dc@vcv+1
  1332  0611                     l1446:
  1333                           
  1334                           ;master.c: 102:     dec0_12 = (vcv/10);
  1335  0611  300A               	movlw	10
  1336  0612  00F0               	movwf	___lwdiv@divisor
  1337  0613  3000               	movlw	0
  1338  0614  00F1               	movwf	___lwdiv@divisor+1
  1339  0615  087D               	movf	str_2_dc@vcv+1,w
  1340  0616  00F3               	movwf	___lwdiv@dividend+1
  1341  0617  087C               	movf	str_2_dc@vcv,w
  1342  0618  00F2               	movwf	___lwdiv@dividend
  1343  0619  120A  118A  23DD  120A  118A  	fcall	___lwdiv
  1344  061E  0870               	movf	?___lwdiv,w
  1345  061F  00FA               	movwf	??_str_2_dc
  1346  0620  087A               	movf	??_str_2_dc,w
  1347  0621  1283               	bcf	3,5	;RP0=0, select bank0
  1348  0622  1303               	bcf	3,6	;RP1=0, select bank0
  1349  0623  00A7               	movwf	_dec0_12
  1350  0624                     l1448:
  1351                           
  1352                           ;master.c: 103:     vcv = (vcv - (dec0_12*10));
  1353  0624  0827               	movf	_dec0_12,w
  1354  0625  00FA               	movwf	??_str_2_dc
  1355  0626  01FB               	clrf	??_str_2_dc+1
  1356  0627  087A               	movf	??_str_2_dc,w
  1357  0628  00F0               	movwf	___wmul@multiplier
  1358  0629  087B               	movf	??_str_2_dc+1,w
  1359  062A  00F1               	movwf	___wmul@multiplier+1
  1360  062B  30F6               	movlw	246
  1361  062C  00F2               	movwf	___wmul@multiplicand
  1362  062D  30FF               	movlw	255
  1363  062E  00F3               	movwf	___wmul@multiplicand+1
  1364  062F  120A  118A  2312  120A  118A  	fcall	___wmul
  1365  0634  087C               	movf	str_2_dc@vcv,w
  1366  0635  0770               	addwf	?___wmul,w
  1367  0636  00FC               	movwf	str_2_dc@vcv
  1368  0637  087D               	movf	str_2_dc@vcv+1,w
  1369  0638  1803               	skipnc
  1370  0639  0A7D               	incf	str_2_dc@vcv+1,w
  1371  063A  0771               	addwf	?___wmul+1,w
  1372  063B  00FD               	movwf	str_2_dc@vcv+1
  1373                           
  1374                           ;master.c: 104:     dec1_12 = (vcv);
  1375  063C  087C               	movf	str_2_dc@vcv,w
  1376  063D  00FA               	movwf	??_str_2_dc
  1377  063E  087A               	movf	??_str_2_dc,w
  1378  063F  1283               	bcf	3,5	;RP0=0, select bank0
  1379  0640  1303               	bcf	3,6	;RP1=0, select bank0
  1380  0641  00A6               	movwf	_dec1_12
  1381  0642                     l1450:
  1382                           
  1383                           ;master.c: 106:     unit0_0 = unit0_0 + 48;
  1384  0642  0828               	movf	_unit0_0,w
  1385  0643  3E30               	addlw	48
  1386  0644  00FA               	movwf	??_str_2_dc
  1387  0645  087A               	movf	??_str_2_dc,w
  1388  0646  00A8               	movwf	_unit0_0
  1389  0647                     l1452:
  1390                           
  1391                           ;master.c: 107:     dec0_12 = dec0_12 + 48;
  1392  0647  0827               	movf	_dec0_12,w
  1393  0648  3E30               	addlw	48
  1394  0649  00FA               	movwf	??_str_2_dc
  1395  064A  087A               	movf	??_str_2_dc,w
  1396  064B  00A7               	movwf	_dec0_12
  1397  064C                     l1454:
  1398                           
  1399                           ;master.c: 108:     dec1_12 = dec1_12 + 48;
  1400  064C  0826               	movf	_dec1_12,w
  1401  064D  3E30               	addlw	48
  1402  064E  00FA               	movwf	??_str_2_dc
  1403  064F  087A               	movf	??_str_2_dc,w
  1404  0650  00A6               	movwf	_dec1_12
  1405  0651                     l99:
  1406  0651  0008               	return
  1407  0652                     __end_of_str_2_dc:
  1408                           
  1409                           	psect	text2
  1410  0312                     __ptext2:	
  1411 ;; *************** function ___wmul *****************
  1412 ;; Defined at:
  1413 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  1414 ;; Parameters:    Size  Location     Type
  1415 ;;  multiplier      2    0[COMMON] unsigned int 
  1416 ;;  multiplicand    2    2[COMMON] unsigned int 
  1417 ;; Auto vars:     Size  Location     Type
  1418 ;;  product         2    4[COMMON] unsigned int 
  1419 ;; Return value:  Size  Location     Type
  1420 ;;                  2    0[COMMON] unsigned int 
  1421 ;; Registers used:
  1422 ;;		wreg, status,2, status,0
  1423 ;; Tracked objects:
  1424 ;;		On entry : 0/0
  1425 ;;		On exit  : 0/0
  1426 ;;		Unchanged: 0/0
  1427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1428 ;;      Params:         4       0       0       0       0
  1429 ;;      Locals:         2       0       0       0       0
  1430 ;;      Temps:          0       0       0       0       0
  1431 ;;      Totals:         6       0       0       0       0
  1432 ;;Total ram usage:        6 bytes
  1433 ;; Hardware stack levels used: 1
  1434 ;; This function calls:
  1435 ;;		Nothing
  1436 ;; This function is called by:
  1437 ;;		_str_2_dc
  1438 ;; This function uses a non-reentrant model
  1439 ;;
  1440                           
  1441                           
  1442                           ;psect for function ___wmul
  1443  0312                     ___wmul:
  1444  0312                     l1278:	
  1445                           ;incstack = 0
  1446                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1447                           
  1448  0312  01F4               	clrf	___wmul@product
  1449  0313  01F5               	clrf	___wmul@product+1
  1450  0314                     l1280:
  1451  0314  1C70               	btfss	___wmul@multiplier,0
  1452  0315  2B17               	goto	u611
  1453  0316  2B18               	goto	u610
  1454  0317                     u611:
  1455  0317  2B1E               	goto	l284
  1456  0318                     u610:
  1457  0318                     l1282:
  1458  0318  0872               	movf	___wmul@multiplicand,w
  1459  0319  07F4               	addwf	___wmul@product,f
  1460  031A  1803               	skipnc
  1461  031B  0AF5               	incf	___wmul@product+1,f
  1462  031C  0873               	movf	___wmul@multiplicand+1,w
  1463  031D  07F5               	addwf	___wmul@product+1,f
  1464  031E                     l284:
  1465  031E  3001               	movlw	1
  1466  031F                     u625:
  1467  031F  1003               	clrc
  1468  0320  0DF2               	rlf	___wmul@multiplicand,f
  1469  0321  0DF3               	rlf	___wmul@multiplicand+1,f
  1470  0322  3EFF               	addlw	-1
  1471  0323  1D03               	skipz
  1472  0324  2B1F               	goto	u625
  1473  0325                     l1284:
  1474  0325  3001               	movlw	1
  1475  0326                     u635:
  1476  0326  1003               	clrc
  1477  0327  0CF1               	rrf	___wmul@multiplier+1,f
  1478  0328  0CF0               	rrf	___wmul@multiplier,f
  1479  0329  3EFF               	addlw	-1
  1480  032A  1D03               	skipz
  1481  032B  2B26               	goto	u635
  1482  032C                     l1286:
  1483  032C  0870               	movf	___wmul@multiplier,w
  1484  032D  0471               	iorwf	___wmul@multiplier+1,w
  1485  032E  1D03               	btfss	3,2
  1486  032F  2B31               	goto	u641
  1487  0330  2B32               	goto	u640
  1488  0331                     u641:
  1489  0331  2B14               	goto	l1280
  1490  0332                     u640:
  1491  0332                     l1288:
  1492  0332  0875               	movf	___wmul@product+1,w
  1493  0333  00F1               	movwf	?___wmul+1
  1494  0334  0874               	movf	___wmul@product,w
  1495  0335  00F0               	movwf	?___wmul
  1496  0336                     l286:
  1497  0336  0008               	return
  1498  0337                     __end_of___wmul:
  1499                           
  1500                           	psect	text3
  1501  03DD                     __ptext3:	
  1502 ;; *************** function ___lwdiv *****************
  1503 ;; Defined at:
  1504 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  1505 ;; Parameters:    Size  Location     Type
  1506 ;;  divisor         2    0[COMMON] unsigned int 
  1507 ;;  dividend        2    2[COMMON] unsigned int 
  1508 ;; Auto vars:     Size  Location     Type
  1509 ;;  quotient        2    5[COMMON] unsigned int 
  1510 ;;  counter         1    7[COMMON] unsigned char 
  1511 ;; Return value:  Size  Location     Type
  1512 ;;                  2    0[COMMON] unsigned int 
  1513 ;; Registers used:
  1514 ;;		wreg, status,2, status,0
  1515 ;; Tracked objects:
  1516 ;;		On entry : 0/0
  1517 ;;		On exit  : 0/0
  1518 ;;		Unchanged: 0/0
  1519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1520 ;;      Params:         4       0       0       0       0
  1521 ;;      Locals:         3       0       0       0       0
  1522 ;;      Temps:          1       0       0       0       0
  1523 ;;      Totals:         8       0       0       0       0
  1524 ;;Total ram usage:        8 bytes
  1525 ;; Hardware stack levels used: 1
  1526 ;; This function calls:
  1527 ;;		Nothing
  1528 ;; This function is called by:
  1529 ;;		_str_2_dc
  1530 ;; This function uses a non-reentrant model
  1531 ;;
  1532                           
  1533                           
  1534                           ;psect for function ___lwdiv
  1535  03DD                     ___lwdiv:
  1536  03DD                     l1292:	
  1537                           ;incstack = 0
  1538                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1539                           
  1540  03DD  01F5               	clrf	___lwdiv@quotient
  1541  03DE  01F6               	clrf	___lwdiv@quotient+1
  1542  03DF                     l1294:
  1543  03DF  0870               	movf	___lwdiv@divisor,w
  1544  03E0  0471               	iorwf	___lwdiv@divisor+1,w
  1545  03E1  1903               	btfsc	3,2
  1546  03E2  2BE4               	goto	u651
  1547  03E3  2BE5               	goto	u650
  1548  03E4                     u651:
  1549  03E4  2C1C               	goto	l1314
  1550  03E5                     u650:
  1551  03E5                     l1296:
  1552  03E5  01F7               	clrf	___lwdiv@counter
  1553  03E6  0AF7               	incf	___lwdiv@counter,f
  1554  03E7  2BF3               	goto	l1302
  1555  03E8                     l1298:
  1556  03E8  3001               	movlw	1
  1557  03E9                     u665:
  1558  03E9  1003               	clrc
  1559  03EA  0DF0               	rlf	___lwdiv@divisor,f
  1560  03EB  0DF1               	rlf	___lwdiv@divisor+1,f
  1561  03EC  3EFF               	addlw	-1
  1562  03ED  1D03               	skipz
  1563  03EE  2BE9               	goto	u665
  1564  03EF                     l1300:
  1565  03EF  3001               	movlw	1
  1566  03F0  00F4               	movwf	??___lwdiv
  1567  03F1  0874               	movf	??___lwdiv,w
  1568  03F2  07F7               	addwf	___lwdiv@counter,f
  1569  03F3                     l1302:
  1570  03F3  1FF1               	btfss	___lwdiv@divisor+1,7
  1571  03F4  2BF6               	goto	u671
  1572  03F5  2BF7               	goto	u670
  1573  03F6                     u671:
  1574  03F6  2BE8               	goto	l1298
  1575  03F7                     u670:
  1576  03F7                     l1304:
  1577  03F7  3001               	movlw	1
  1578  03F8                     u685:
  1579  03F8  1003               	clrc
  1580  03F9  0DF5               	rlf	___lwdiv@quotient,f
  1581  03FA  0DF6               	rlf	___lwdiv@quotient+1,f
  1582  03FB  3EFF               	addlw	-1
  1583  03FC  1D03               	skipz
  1584  03FD  2BF8               	goto	u685
  1585  03FE  0871               	movf	___lwdiv@divisor+1,w
  1586  03FF  0273               	subwf	___lwdiv@dividend+1,w
  1587  0400  1D03               	skipz
  1588  0401  2C04               	goto	u695
  1589  0402  0870               	movf	___lwdiv@divisor,w
  1590  0403  0272               	subwf	___lwdiv@dividend,w
  1591  0404                     u695:
  1592  0404  1C03               	skipc
  1593  0405  2C07               	goto	u691
  1594  0406  2C08               	goto	u690
  1595  0407                     u691:
  1596  0407  2C0F               	goto	l1310
  1597  0408                     u690:
  1598  0408                     l1306:
  1599  0408  0870               	movf	___lwdiv@divisor,w
  1600  0409  02F2               	subwf	___lwdiv@dividend,f
  1601  040A  0871               	movf	___lwdiv@divisor+1,w
  1602  040B  1C03               	skipc
  1603  040C  03F3               	decf	___lwdiv@dividend+1,f
  1604  040D  02F3               	subwf	___lwdiv@dividend+1,f
  1605  040E                     l1308:
  1606  040E  1475               	bsf	___lwdiv@quotient,0
  1607  040F                     l1310:
  1608  040F  3001               	movlw	1
  1609  0410                     u705:
  1610  0410  1003               	clrc
  1611  0411  0CF1               	rrf	___lwdiv@divisor+1,f
  1612  0412  0CF0               	rrf	___lwdiv@divisor,f
  1613  0413  3EFF               	addlw	-1
  1614  0414  1D03               	skipz
  1615  0415  2C10               	goto	u705
  1616  0416                     l1312:
  1617  0416  3001               	movlw	1
  1618  0417  02F7               	subwf	___lwdiv@counter,f
  1619  0418  1D03               	btfss	3,2
  1620  0419  2C1B               	goto	u711
  1621  041A  2C1C               	goto	u710
  1622  041B                     u711:
  1623  041B  2BF7               	goto	l1304
  1624  041C                     u710:
  1625  041C                     l1314:
  1626  041C  0876               	movf	___lwdiv@quotient+1,w
  1627  041D  00F1               	movwf	?___lwdiv+1
  1628  041E  0875               	movf	___lwdiv@quotient,w
  1629  041F  00F0               	movwf	?___lwdiv
  1630  0420                     l556:
  1631  0420  0008               	return
  1632  0421                     __end_of___lwdiv:
  1633                           
  1634                           	psect	text4
  1635  039D                     __ptext4:	
  1636 ;; *************** function _initSETUP *****************
  1637 ;; Defined at:
  1638 ;;		line 111 in file "master.c"
  1639 ;; Parameters:    Size  Location     Type
  1640 ;;		None
  1641 ;; Auto vars:     Size  Location     Type
  1642 ;;		None
  1643 ;; Return value:  Size  Location     Type
  1644 ;;                  1    wreg      void 
  1645 ;; Registers used:
  1646 ;;		wreg, status,2, status,0, pclath, cstack
  1647 ;; Tracked objects:
  1648 ;;		On entry : 0/0
  1649 ;;		On exit  : 0/0
  1650 ;;		Unchanged: 0/0
  1651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1652 ;;      Params:         0       0       0       0       0
  1653 ;;      Locals:         0       0       0       0       0
  1654 ;;      Temps:          0       1       0       0       0
  1655 ;;      Totals:         0       1       0       0       0
  1656 ;;Total ram usage:        1 bytes
  1657 ;; Hardware stack levels used: 1
  1658 ;; Hardware stack levels required when called: 2
  1659 ;; This function calls:
  1660 ;;		_I2C_Master_Init
  1661 ;; This function is called by:
  1662 ;;		_main
  1663 ;; This function uses a non-reentrant model
  1664 ;;
  1665                           
  1666                           
  1667                           ;psect for function _initSETUP
  1668  039D                     _initSETUP:
  1669  039D                     l1318:	
  1670                           ;incstack = 0
  1671                           ; Regs used in _initSETUP: [wreg+status,2+status,0+pclath+cstack]
  1672                           
  1673                           
  1674                           ;master.c: 112:     TRISA = 0b00000001;
  1675  039D  3001               	movlw	1
  1676  039E  1683               	bsf	3,5	;RP0=1, select bank1
  1677  039F  1303               	bcf	3,6	;RP1=0, select bank1
  1678  03A0  0085               	movwf	5	;volatile
  1679  03A1                     l1320:
  1680                           
  1681                           ;master.c: 113:     TRISB = 0;
  1682  03A1  0186               	clrf	6	;volatile
  1683  03A2                     l1322:
  1684                           
  1685                           ;master.c: 114:     TRISC = 0;
  1686  03A2  0187               	clrf	7	;volatile
  1687  03A3                     l1324:
  1688                           
  1689                           ;master.c: 115:     TRISD = 0;
  1690  03A3  0188               	clrf	8	;volatile
  1691  03A4                     l1326:
  1692                           
  1693                           ;master.c: 116:     TRISE = 0;
  1694  03A4  0189               	clrf	9	;volatile
  1695  03A5                     l1328:
  1696                           
  1697                           ;master.c: 117:     PORTE = 0;
  1698  03A5  1283               	bcf	3,5	;RP0=0, select bank0
  1699  03A6  1303               	bcf	3,6	;RP1=0, select bank0
  1700  03A7  0189               	clrf	9	;volatile
  1701  03A8                     l1330:
  1702                           
  1703                           ;master.c: 118:     PORTA = 0;
  1704  03A8  0185               	clrf	5	;volatile
  1705  03A9                     l1332:
  1706                           
  1707                           ;master.c: 119:     PORTB = 0;
  1708  03A9  0186               	clrf	6	;volatile
  1709  03AA                     l1334:
  1710                           
  1711                           ;master.c: 120:     PORTC = 0;
  1712  03AA  0187               	clrf	7	;volatile
  1713  03AB                     l1336:
  1714                           
  1715                           ;master.c: 121:     PORTD = 0;
  1716  03AB  0188               	clrf	8	;volatile
  1717  03AC                     l1338:
  1718                           
  1719                           ;master.c: 122:     ANSEL = 0b00000001;
  1720  03AC  3001               	movlw	1
  1721  03AD  1683               	bsf	3,5	;RP0=1, select bank3
  1722  03AE  1703               	bsf	3,6	;RP1=1, select bank3
  1723  03AF  0088               	movwf	8	;volatile
  1724                           
  1725                           ;master.c: 123:     ANSELH = 0;
  1726  03B0  0189               	clrf	9	;volatile
  1727  03B1                     l1340:
  1728                           
  1729                           ;master.c: 124:     OSCCONbits.IRCF2 = 1;
  1730  03B1  1683               	bsf	3,5	;RP0=1, select bank1
  1731  03B2  1303               	bcf	3,6	;RP1=0, select bank1
  1732  03B3  170F               	bsf	15,6	;volatile
  1733  03B4                     l1342:
  1734                           
  1735                           ;master.c: 125:     OSCCONbits.IRCF1 = 1;
  1736  03B4  168F               	bsf	15,5	;volatile
  1737  03B5                     l1344:
  1738                           
  1739                           ;master.c: 126:     OSCCONbits.IRCF0 = 1;
  1740  03B5  160F               	bsf	15,4	;volatile
  1741  03B6                     l1346:
  1742                           
  1743                           ;master.c: 127:     OSCCONbits.SCS = 1;
  1744  03B6  140F               	bsf	15,0	;volatile
  1745  03B7                     l1348:
  1746                           
  1747                           ;master.c: 129:     ADCON1bits.ADFM = 0;
  1748  03B7  139F               	bcf	31,7	;volatile
  1749  03B8                     l1350:
  1750                           
  1751                           ;master.c: 130:     ADCON1bits.VCFG0 = 0;
  1752  03B8  121F               	bcf	31,4	;volatile
  1753  03B9                     l1352:
  1754                           
  1755                           ;master.c: 131:     ADCON1bits.VCFG1 = 0;
  1756  03B9  129F               	bcf	31,5	;volatile
  1757  03BA                     l1354:
  1758                           
  1759                           ;master.c: 132:     ADCON0bits.ADCS = 0b10;
  1760  03BA  1283               	bcf	3,5	;RP0=0, select bank0
  1761  03BB  1303               	bcf	3,6	;RP1=0, select bank0
  1762  03BC  081F               	movf	31,w	;volatile
  1763  03BD  393F               	andlw	-193
  1764  03BE  3880               	iorlw	128
  1765  03BF  009F               	movwf	31	;volatile
  1766  03C0                     l1356:
  1767                           
  1768                           ;master.c: 133:     ADCON0bits.CHS = 0;
  1769  03C0  30C3               	movlw	-61
  1770  03C1  059F               	andwf	31,f	;volatile
  1771  03C2                     l1358:
  1772                           
  1773                           ;master.c: 134:     ADCON0bits.ADON = 1;
  1774  03C2  141F               	bsf	31,0	;volatile
  1775  03C3                     l1360:
  1776                           
  1777                           ;master.c: 135:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  1778  03C3  3020               	movlw	32
  1779  03C4  1283               	bcf	3,5	;RP0=0, select bank0
  1780  03C5  1303               	bcf	3,6	;RP1=0, select bank0
  1781  03C6  00B5               	movwf	??_initSETUP
  1782  03C7                     u1047:
  1783  03C7  0BB5               	decfsz	??_initSETUP,f
  1784  03C8  2BC7               	goto	u1047
  1785  03C9  0000               	nop
  1786  03CA                     l1362:
  1787                           
  1788                           ;master.c: 136:     ADCON0bits.GO = 1;
  1789  03CA  1283               	bcf	3,5	;RP0=0, select bank0
  1790  03CB  1303               	bcf	3,6	;RP1=0, select bank0
  1791  03CC  149F               	bsf	31,1	;volatile
  1792  03CD                     l1364:
  1793                           
  1794                           ;master.c: 138:     INTCONbits.GIE = 1;
  1795  03CD  178B               	bsf	11,7	;volatile
  1796  03CE                     l1366:
  1797                           
  1798                           ;master.c: 139:     INTCONbits.PEIE =1;
  1799  03CE  170B               	bsf	11,6	;volatile
  1800  03CF                     l1368:
  1801                           
  1802                           ;master.c: 140:     I2C_Master_Init(100000);
  1803  03CF  3000               	movlw	0
  1804  03D0  00B0               	movwf	I2C_Master_Init@c+3
  1805  03D1  3001               	movlw	1
  1806  03D2  00AF               	movwf	I2C_Master_Init@c+2
  1807  03D3  3086               	movlw	134
  1808  03D4  00AE               	movwf	I2C_Master_Init@c+1
  1809  03D5  30A0               	movlw	160
  1810  03D6  00AD               	movwf	I2C_Master_Init@c
  1811  03D7  120A  118A  2365  120A  118A  	fcall	_I2C_Master_Init
  1812  03DC                     l102:
  1813  03DC  0008               	return
  1814  03DD                     __end_of_initSETUP:
  1815                           
  1816                           	psect	text5
  1817  0365                     __ptext5:	
  1818 ;; *************** function _I2C_Master_Init *****************
  1819 ;; Defined at:
  1820 ;;		line 16 in file "I2C.c"
  1821 ;; Parameters:    Size  Location     Type
  1822 ;;  c               4    0[BANK0 ] const unsigned long 
  1823 ;; Auto vars:     Size  Location     Type
  1824 ;;		None
  1825 ;; Return value:  Size  Location     Type
  1826 ;;                  1    wreg      void 
  1827 ;; Registers used:
  1828 ;;		wreg, status,2, status,0, pclath, cstack
  1829 ;; Tracked objects:
  1830 ;;		On entry : 0/0
  1831 ;;		On exit  : 0/0
  1832 ;;		Unchanged: 0/0
  1833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1834 ;;      Params:         0       4       0       0       0
  1835 ;;      Locals:         0       0       0       0       0
  1836 ;;      Temps:          0       4       0       0       0
  1837 ;;      Totals:         0       8       0       0       0
  1838 ;;Total ram usage:        8 bytes
  1839 ;; Hardware stack levels used: 1
  1840 ;; Hardware stack levels required when called: 1
  1841 ;; This function calls:
  1842 ;;		___lldiv
  1843 ;; This function is called by:
  1844 ;;		_initSETUP
  1845 ;; This function uses a non-reentrant model
  1846 ;;
  1847                           
  1848                           
  1849                           ;psect for function _I2C_Master_Init
  1850  0365                     _I2C_Master_Init:
  1851  0365                     l1252:	
  1852                           ;incstack = 0
  1853                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1854                           
  1855                           
  1856                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  1857  0365  3028               	movlw	40
  1858  0366  1283               	bcf	3,5	;RP0=0, select bank0
  1859  0367  1303               	bcf	3,6	;RP1=0, select bank0
  1860  0368  0094               	movwf	20	;volatile
  1861  0369                     l1254:
  1862                           
  1863                           ;I2C.c: 19:     SSPCON2 = 0;
  1864  0369  1683               	bsf	3,5	;RP0=1, select bank1
  1865  036A  1303               	bcf	3,6	;RP1=0, select bank1
  1866  036B  0191               	clrf	17	;volatile
  1867  036C                     l1256:
  1868                           
  1869                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  1870  036C  1283               	bcf	3,5	;RP0=0, select bank0
  1871  036D  1303               	bcf	3,6	;RP1=0, select bank0
  1872  036E  082D               	movf	I2C_Master_Init@c,w
  1873  036F  00B1               	movwf	??_I2C_Master_Init
  1874  0370  082E               	movf	I2C_Master_Init@c+1,w
  1875  0371  00B2               	movwf	??_I2C_Master_Init+1
  1876  0372  082F               	movf	I2C_Master_Init@c+2,w
  1877  0373  00B3               	movwf	??_I2C_Master_Init+2
  1878  0374  0830               	movf	I2C_Master_Init@c+3,w
  1879  0375  00B4               	movwf	??_I2C_Master_Init+3
  1880  0376  3002               	movlw	2
  1881  0377                     u585:
  1882  0377  1003               	clrc
  1883  0378  0DB1               	rlf	??_I2C_Master_Init,f
  1884  0379  0DB2               	rlf	??_I2C_Master_Init+1,f
  1885  037A  0DB3               	rlf	??_I2C_Master_Init+2,f
  1886  037B  0DB4               	rlf	??_I2C_Master_Init+3,f
  1887  037C                     u580:
  1888  037C  3EFF               	addlw	-1
  1889  037D  1D03               	skipz
  1890  037E  2B77               	goto	u585
  1891  037F  0834               	movf	??_I2C_Master_Init+3,w
  1892  0380  00F3               	movwf	___lldiv@divisor+3
  1893  0381  0833               	movf	??_I2C_Master_Init+2,w
  1894  0382  00F2               	movwf	___lldiv@divisor+2
  1895  0383  0832               	movf	??_I2C_Master_Init+1,w
  1896  0384  00F1               	movwf	___lldiv@divisor+1
  1897  0385  0831               	movf	??_I2C_Master_Init,w
  1898  0386  00F0               	movwf	___lldiv@divisor
  1899  0387  3000               	movlw	0
  1900  0388  00F7               	movwf	___lldiv@dividend+3
  1901  0389  307A               	movlw	122
  1902  038A  00F6               	movwf	___lldiv@dividend+2
  1903  038B  3012               	movlw	18
  1904  038C  00F5               	movwf	___lldiv@dividend+1
  1905  038D  3000               	movlw	0
  1906  038E  00F4               	movwf	___lldiv@dividend
  1907  038F  120A  118A  2515  120A  118A  	fcall	___lldiv
  1908  0394  0870               	movf	?___lldiv,w
  1909  0395  3EFF               	addlw	255
  1910  0396  1683               	bsf	3,5	;RP0=1, select bank1
  1911  0397  1303               	bcf	3,6	;RP1=0, select bank1
  1912  0398  0093               	movwf	19	;volatile
  1913  0399                     l1258:
  1914                           
  1915                           ;I2C.c: 21:     SSPSTAT = 0;
  1916  0399  0194               	clrf	20	;volatile
  1917  039A                     l1260:
  1918                           
  1919                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  1920  039A  1587               	bsf	7,3	;volatile
  1921  039B                     l1262:
  1922                           
  1923                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  1924  039B  1607               	bsf	7,4	;volatile
  1925  039C                     l131:
  1926  039C  0008               	return
  1927  039D                     __end_of_I2C_Master_Init:
  1928                           
  1929                           	psect	text6
  1930  0515                     __ptext6:	
  1931 ;; *************** function ___lldiv *****************
  1932 ;; Defined at:
  1933 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
  1934 ;; Parameters:    Size  Location     Type
  1935 ;;  divisor         4    0[COMMON] unsigned long 
  1936 ;;  dividend        4    4[COMMON] unsigned long 
  1937 ;; Auto vars:     Size  Location     Type
  1938 ;;  quotient        4    9[COMMON] unsigned long 
  1939 ;;  counter         1   13[COMMON] unsigned char 
  1940 ;; Return value:  Size  Location     Type
  1941 ;;                  4    0[COMMON] unsigned long 
  1942 ;; Registers used:
  1943 ;;		wreg, status,2, status,0
  1944 ;; Tracked objects:
  1945 ;;		On entry : 0/0
  1946 ;;		On exit  : 0/0
  1947 ;;		Unchanged: 0/0
  1948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1949 ;;      Params:         8       0       0       0       0
  1950 ;;      Locals:         5       0       0       0       0
  1951 ;;      Temps:          1       0       0       0       0
  1952 ;;      Totals:        14       0       0       0       0
  1953 ;;Total ram usage:       14 bytes
  1954 ;; Hardware stack levels used: 1
  1955 ;; This function calls:
  1956 ;;		Nothing
  1957 ;; This function is called by:
  1958 ;;		_I2C_Master_Init
  1959 ;; This function uses a non-reentrant model
  1960 ;;
  1961                           
  1962                           
  1963                           ;psect for function ___lldiv
  1964  0515                     ___lldiv:
  1965  0515                     l1216:	
  1966                           ;incstack = 0
  1967                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1968                           
  1969  0515  3000               	movlw	0
  1970  0516  00FC               	movwf	___lldiv@quotient+3
  1971  0517  3000               	movlw	0
  1972  0518  00FB               	movwf	___lldiv@quotient+2
  1973  0519  3000               	movlw	0
  1974  051A  00FA               	movwf	___lldiv@quotient+1
  1975  051B  3000               	movlw	0
  1976  051C  00F9               	movwf	___lldiv@quotient
  1977  051D  0873               	movf	___lldiv@divisor+3,w
  1978  051E  0472               	iorwf	___lldiv@divisor+2,w
  1979  051F  0471               	iorwf	___lldiv@divisor+1,w
  1980  0520  0470               	iorwf	___lldiv@divisor,w
  1981  0521  1903               	skipnz
  1982  0522  2D24               	goto	u511
  1983  0523  2D25               	goto	u510
  1984  0524                     u511:
  1985  0524  2D72               	goto	l1236
  1986  0525                     u510:
  1987  0525                     l1218:
  1988  0525  01FD               	clrf	___lldiv@counter
  1989  0526  0AFD               	incf	___lldiv@counter,f
  1990  0527  2D35               	goto	l1222
  1991  0528                     l1220:
  1992  0528  3001               	movlw	1
  1993  0529  00F8               	movwf	??___lldiv
  1994  052A                     u525:
  1995  052A  1003               	clrc
  1996  052B  0DF0               	rlf	___lldiv@divisor,f
  1997  052C  0DF1               	rlf	___lldiv@divisor+1,f
  1998  052D  0DF2               	rlf	___lldiv@divisor+2,f
  1999  052E  0DF3               	rlf	___lldiv@divisor+3,f
  2000  052F  0BF8               	decfsz	??___lldiv,f
  2001  0530  2D2A               	goto	u525
  2002  0531  3001               	movlw	1
  2003  0532  00F8               	movwf	??___lldiv
  2004  0533  0878               	movf	??___lldiv,w
  2005  0534  07FD               	addwf	___lldiv@counter,f
  2006  0535                     l1222:
  2007  0535  1FF3               	btfss	___lldiv@divisor+3,7
  2008  0536  2D38               	goto	u531
  2009  0537  2D39               	goto	u530
  2010  0538                     u531:
  2011  0538  2D28               	goto	l1220
  2012  0539                     u530:
  2013  0539                     l1224:
  2014  0539  3001               	movlw	1
  2015  053A  00F8               	movwf	??___lldiv
  2016  053B                     u545:
  2017  053B  1003               	clrc
  2018  053C  0DF9               	rlf	___lldiv@quotient,f
  2019  053D  0DFA               	rlf	___lldiv@quotient+1,f
  2020  053E  0DFB               	rlf	___lldiv@quotient+2,f
  2021  053F  0DFC               	rlf	___lldiv@quotient+3,f
  2022  0540  0BF8               	decfsz	??___lldiv,f
  2023  0541  2D3B               	goto	u545
  2024  0542                     l1226:
  2025  0542  0873               	movf	___lldiv@divisor+3,w
  2026  0543  0277               	subwf	___lldiv@dividend+3,w
  2027  0544  1D03               	skipz
  2028  0545  2D50               	goto	u555
  2029  0546  0872               	movf	___lldiv@divisor+2,w
  2030  0547  0276               	subwf	___lldiv@dividend+2,w
  2031  0548  1D03               	skipz
  2032  0549  2D50               	goto	u555
  2033  054A  0871               	movf	___lldiv@divisor+1,w
  2034  054B  0275               	subwf	___lldiv@dividend+1,w
  2035  054C  1D03               	skipz
  2036  054D  2D50               	goto	u555
  2037  054E  0870               	movf	___lldiv@divisor,w
  2038  054F  0274               	subwf	___lldiv@dividend,w
  2039  0550                     u555:
  2040  0550  1C03               	skipc
  2041  0551  2D53               	goto	u551
  2042  0552  2D54               	goto	u550
  2043  0553                     u551:
  2044  0553  2D63               	goto	l1232
  2045  0554                     u550:
  2046  0554                     l1228:
  2047  0554  0870               	movf	___lldiv@divisor,w
  2048  0555  02F4               	subwf	___lldiv@dividend,f
  2049  0556  0871               	movf	___lldiv@divisor+1,w
  2050  0557  1C03               	skipc
  2051  0558  0F71               	incfsz	___lldiv@divisor+1,w
  2052  0559  02F5               	subwf	___lldiv@dividend+1,f
  2053  055A  0872               	movf	___lldiv@divisor+2,w
  2054  055B  1C03               	skipc
  2055  055C  0F72               	incfsz	___lldiv@divisor+2,w
  2056  055D  02F6               	subwf	___lldiv@dividend+2,f
  2057  055E  0873               	movf	___lldiv@divisor+3,w
  2058  055F  1C03               	skipc
  2059  0560  0F73               	incfsz	___lldiv@divisor+3,w
  2060  0561  02F7               	subwf	___lldiv@dividend+3,f
  2061  0562                     l1230:
  2062  0562  1479               	bsf	___lldiv@quotient,0
  2063  0563                     l1232:
  2064  0563  3001               	movlw	1
  2065  0564                     u565:
  2066  0564  1003               	clrc
  2067  0565  0CF3               	rrf	___lldiv@divisor+3,f
  2068  0566  0CF2               	rrf	___lldiv@divisor+2,f
  2069  0567  0CF1               	rrf	___lldiv@divisor+1,f
  2070  0568  0CF0               	rrf	___lldiv@divisor,f
  2071  0569  3EFF               	addlw	-1
  2072  056A  1D03               	skipz
  2073  056B  2D64               	goto	u565
  2074  056C                     l1234:
  2075  056C  3001               	movlw	1
  2076  056D  02FD               	subwf	___lldiv@counter,f
  2077  056E  1D03               	btfss	3,2
  2078  056F  2D71               	goto	u571
  2079  0570  2D72               	goto	u570
  2080  0571                     u571:
  2081  0571  2D39               	goto	l1224
  2082  0572                     u570:
  2083  0572                     l1236:
  2084  0572  087C               	movf	___lldiv@quotient+3,w
  2085  0573  00F3               	movwf	?___lldiv+3
  2086  0574  087B               	movf	___lldiv@quotient+2,w
  2087  0575  00F2               	movwf	?___lldiv+2
  2088  0576  087A               	movf	___lldiv@quotient+1,w
  2089  0577  00F1               	movwf	?___lldiv+1
  2090  0578  0879               	movf	___lldiv@quotient,w
  2091  0579  00F0               	movwf	?___lldiv
  2092  057A                     l320:
  2093  057A  0008               	return
  2094  057B                     __end_of___lldiv:
  2095                           
  2096                           	psect	text7
  2097  04BA                     __ptext7:	
  2098 ;; *************** function ___awmod *****************
  2099 ;; Defined at:
  2100 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  2101 ;; Parameters:    Size  Location     Type
  2102 ;;  divisor         2    9[COMMON] int 
  2103 ;;  dividend        2   11[COMMON] int 
  2104 ;; Auto vars:     Size  Location     Type
  2105 ;;  sign            1    1[BANK0 ] unsigned char 
  2106 ;;  counter         1    0[BANK0 ] unsigned char 
  2107 ;; Return value:  Size  Location     Type
  2108 ;;                  2    9[COMMON] int 
  2109 ;; Registers used:
  2110 ;;		wreg, status,2, status,0
  2111 ;; Tracked objects:
  2112 ;;		On entry : 0/0
  2113 ;;		On exit  : 0/0
  2114 ;;		Unchanged: 0/0
  2115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2116 ;;      Params:         4       0       0       0       0
  2117 ;;      Locals:         0       2       0       0       0
  2118 ;;      Temps:          1       0       0       0       0
  2119 ;;      Totals:         5       2       0       0       0
  2120 ;;Total ram usage:        7 bytes
  2121 ;; Hardware stack levels used: 1
  2122 ;; This function calls:
  2123 ;;		Nothing
  2124 ;; This function is called by:
  2125 ;;		_main
  2126 ;; This function uses a non-reentrant model
  2127 ;;
  2128                           
  2129                           
  2130                           ;psect for function ___awmod
  2131  04BA                     ___awmod:
  2132  04BA                     l1500:	
  2133                           ;incstack = 0
  2134                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2135                           
  2136  04BA  1283               	bcf	3,5	;RP0=0, select bank0
  2137  04BB  1303               	bcf	3,6	;RP1=0, select bank0
  2138  04BC  01AE               	clrf	___awmod@sign
  2139  04BD                     l1502:
  2140  04BD  1FFC               	btfss	___awmod@dividend+1,7
  2141  04BE  2CC0               	goto	u881
  2142  04BF  2CC1               	goto	u880
  2143  04C0                     u881:
  2144  04C0  2CC8               	goto	l1508
  2145  04C1                     u880:
  2146  04C1                     l1504:
  2147  04C1  09FB               	comf	___awmod@dividend,f
  2148  04C2  09FC               	comf	___awmod@dividend+1,f
  2149  04C3  0AFB               	incf	___awmod@dividend,f
  2150  04C4  1903               	skipnz
  2151  04C5  0AFC               	incf	___awmod@dividend+1,f
  2152  04C6                     l1506:
  2153  04C6  01AE               	clrf	___awmod@sign
  2154  04C7  0AAE               	incf	___awmod@sign,f
  2155  04C8                     l1508:
  2156  04C8  1FFA               	btfss	___awmod@divisor+1,7
  2157  04C9  2CCB               	goto	u891
  2158  04CA  2CCC               	goto	u890
  2159  04CB                     u891:
  2160  04CB  2CD1               	goto	l1512
  2161  04CC                     u890:
  2162  04CC                     l1510:
  2163  04CC  09F9               	comf	___awmod@divisor,f
  2164  04CD  09FA               	comf	___awmod@divisor+1,f
  2165  04CE  0AF9               	incf	___awmod@divisor,f
  2166  04CF  1903               	skipnz
  2167  04D0  0AFA               	incf	___awmod@divisor+1,f
  2168  04D1                     l1512:
  2169  04D1  0879               	movf	___awmod@divisor,w
  2170  04D2  047A               	iorwf	___awmod@divisor+1,w
  2171  04D3  1903               	btfsc	3,2
  2172  04D4  2CD6               	goto	u901
  2173  04D5  2CD7               	goto	u900
  2174  04D6                     u901:
  2175  04D6  2D06               	goto	l1530
  2176  04D7                     u900:
  2177  04D7                     l1514:
  2178  04D7  01AD               	clrf	___awmod@counter
  2179  04D8  0AAD               	incf	___awmod@counter,f
  2180  04D9  2CE5               	goto	l1520
  2181  04DA                     l1516:
  2182  04DA  3001               	movlw	1
  2183  04DB                     u915:
  2184  04DB  1003               	clrc
  2185  04DC  0DF9               	rlf	___awmod@divisor,f
  2186  04DD  0DFA               	rlf	___awmod@divisor+1,f
  2187  04DE  3EFF               	addlw	-1
  2188  04DF  1D03               	skipz
  2189  04E0  2CDB               	goto	u915
  2190  04E1                     l1518:
  2191  04E1  3001               	movlw	1
  2192  04E2  00FD               	movwf	??___awmod
  2193  04E3  087D               	movf	??___awmod,w
  2194  04E4  07AD               	addwf	___awmod@counter,f
  2195  04E5                     l1520:
  2196  04E5  1FFA               	btfss	___awmod@divisor+1,7
  2197  04E6  2CE8               	goto	u921
  2198  04E7  2CE9               	goto	u920
  2199  04E8                     u921:
  2200  04E8  2CDA               	goto	l1516
  2201  04E9                     u920:
  2202  04E9                     l1522:
  2203  04E9  087A               	movf	___awmod@divisor+1,w
  2204  04EA  027C               	subwf	___awmod@dividend+1,w
  2205  04EB  1D03               	skipz
  2206  04EC  2CEF               	goto	u935
  2207  04ED  0879               	movf	___awmod@divisor,w
  2208  04EE  027B               	subwf	___awmod@dividend,w
  2209  04EF                     u935:
  2210  04EF  1C03               	skipc
  2211  04F0  2CF2               	goto	u931
  2212  04F1  2CF3               	goto	u930
  2213  04F2                     u931:
  2214  04F2  2CF9               	goto	l1526
  2215  04F3                     u930:
  2216  04F3                     l1524:
  2217  04F3  0879               	movf	___awmod@divisor,w
  2218  04F4  02FB               	subwf	___awmod@dividend,f
  2219  04F5  087A               	movf	___awmod@divisor+1,w
  2220  04F6  1C03               	skipc
  2221  04F7  03FC               	decf	___awmod@dividend+1,f
  2222  04F8  02FC               	subwf	___awmod@dividend+1,f
  2223  04F9                     l1526:
  2224  04F9  3001               	movlw	1
  2225  04FA                     u945:
  2226  04FA  1003               	clrc
  2227  04FB  0CFA               	rrf	___awmod@divisor+1,f
  2228  04FC  0CF9               	rrf	___awmod@divisor,f
  2229  04FD  3EFF               	addlw	-1
  2230  04FE  1D03               	skipz
  2231  04FF  2CFA               	goto	u945
  2232  0500                     l1528:
  2233  0500  3001               	movlw	1
  2234  0501  02AD               	subwf	___awmod@counter,f
  2235  0502  1D03               	btfss	3,2
  2236  0503  2D05               	goto	u951
  2237  0504  2D06               	goto	u950
  2238  0505                     u951:
  2239  0505  2CE9               	goto	l1522
  2240  0506                     u950:
  2241  0506                     l1530:
  2242  0506  082E               	movf	___awmod@sign,w
  2243  0507  1903               	btfsc	3,2
  2244  0508  2D0A               	goto	u961
  2245  0509  2D0B               	goto	u960
  2246  050A                     u961:
  2247  050A  2D10               	goto	l1534
  2248  050B                     u960:
  2249  050B                     l1532:
  2250  050B  09FB               	comf	___awmod@dividend,f
  2251  050C  09FC               	comf	___awmod@dividend+1,f
  2252  050D  0AFB               	incf	___awmod@dividend,f
  2253  050E  1903               	skipnz
  2254  050F  0AFC               	incf	___awmod@dividend+1,f
  2255  0510                     l1534:
  2256  0510  087C               	movf	___awmod@dividend+1,w
  2257  0511  00FA               	movwf	?___awmod+1
  2258  0512  087B               	movf	___awmod@dividend,w
  2259  0513  00F9               	movwf	?___awmod
  2260  0514                     l450:
  2261  0514  0008               	return
  2262  0515                     __end_of___awmod:
  2263                           
  2264                           	psect	text8
  2265  057B                     __ptext8:	
  2266 ;; *************** function ___awdiv *****************
  2267 ;; Defined at:
  2268 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  2269 ;; Parameters:    Size  Location     Type
  2270 ;;  divisor         2    0[COMMON] int 
  2271 ;;  dividend        2    2[COMMON] int 
  2272 ;; Auto vars:     Size  Location     Type
  2273 ;;  quotient        2    7[COMMON] int 
  2274 ;;  sign            1    6[COMMON] unsigned char 
  2275 ;;  counter         1    5[COMMON] unsigned char 
  2276 ;; Return value:  Size  Location     Type
  2277 ;;                  2    0[COMMON] int 
  2278 ;; Registers used:
  2279 ;;		wreg, status,2, status,0
  2280 ;; Tracked objects:
  2281 ;;		On entry : 0/0
  2282 ;;		On exit  : 0/0
  2283 ;;		Unchanged: 0/0
  2284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2285 ;;      Params:         4       0       0       0       0
  2286 ;;      Locals:         4       0       0       0       0
  2287 ;;      Temps:          1       0       0       0       0
  2288 ;;      Totals:         9       0       0       0       0
  2289 ;;Total ram usage:        9 bytes
  2290 ;; Hardware stack levels used: 1
  2291 ;; This function calls:
  2292 ;;		Nothing
  2293 ;; This function is called by:
  2294 ;;		_main
  2295 ;; This function uses a non-reentrant model
  2296 ;;
  2297                           
  2298                           
  2299                           ;psect for function ___awdiv
  2300  057B                     ___awdiv:
  2301  057B                     l1456:	
  2302                           ;incstack = 0
  2303                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2304                           
  2305  057B  01F6               	clrf	___awdiv@sign
  2306  057C                     l1458:
  2307  057C  1FF1               	btfss	___awdiv@divisor+1,7
  2308  057D  2D7F               	goto	u781
  2309  057E  2D80               	goto	u780
  2310  057F                     u781:
  2311  057F  2D87               	goto	l1464
  2312  0580                     u780:
  2313  0580                     l1460:
  2314  0580  09F0               	comf	___awdiv@divisor,f
  2315  0581  09F1               	comf	___awdiv@divisor+1,f
  2316  0582  0AF0               	incf	___awdiv@divisor,f
  2317  0583  1903               	skipnz
  2318  0584  0AF1               	incf	___awdiv@divisor+1,f
  2319  0585                     l1462:
  2320  0585  01F6               	clrf	___awdiv@sign
  2321  0586  0AF6               	incf	___awdiv@sign,f
  2322  0587                     l1464:
  2323  0587  1FF3               	btfss	___awdiv@dividend+1,7
  2324  0588  2D8A               	goto	u791
  2325  0589  2D8B               	goto	u790
  2326  058A                     u791:
  2327  058A  2D94               	goto	l1470
  2328  058B                     u790:
  2329  058B                     l1466:
  2330  058B  09F2               	comf	___awdiv@dividend,f
  2331  058C  09F3               	comf	___awdiv@dividend+1,f
  2332  058D  0AF2               	incf	___awdiv@dividend,f
  2333  058E  1903               	skipnz
  2334  058F  0AF3               	incf	___awdiv@dividend+1,f
  2335  0590                     l1468:
  2336  0590  3001               	movlw	1
  2337  0591  00F4               	movwf	??___awdiv
  2338  0592  0874               	movf	??___awdiv,w
  2339  0593  06F6               	xorwf	___awdiv@sign,f
  2340  0594                     l1470:
  2341  0594  01F7               	clrf	___awdiv@quotient
  2342  0595  01F8               	clrf	___awdiv@quotient+1
  2343  0596                     l1472:
  2344  0596  0870               	movf	___awdiv@divisor,w
  2345  0597  0471               	iorwf	___awdiv@divisor+1,w
  2346  0598  1903               	btfsc	3,2
  2347  0599  2D9B               	goto	u801
  2348  059A  2D9C               	goto	u800
  2349  059B                     u801:
  2350  059B  2DD3               	goto	l1492
  2351  059C                     u800:
  2352  059C                     l1474:
  2353  059C  01F5               	clrf	___awdiv@counter
  2354  059D  0AF5               	incf	___awdiv@counter,f
  2355  059E  2DAA               	goto	l1480
  2356  059F                     l1476:
  2357  059F  3001               	movlw	1
  2358  05A0                     u815:
  2359  05A0  1003               	clrc
  2360  05A1  0DF0               	rlf	___awdiv@divisor,f
  2361  05A2  0DF1               	rlf	___awdiv@divisor+1,f
  2362  05A3  3EFF               	addlw	-1
  2363  05A4  1D03               	skipz
  2364  05A5  2DA0               	goto	u815
  2365  05A6                     l1478:
  2366  05A6  3001               	movlw	1
  2367  05A7  00F4               	movwf	??___awdiv
  2368  05A8  0874               	movf	??___awdiv,w
  2369  05A9  07F5               	addwf	___awdiv@counter,f
  2370  05AA                     l1480:
  2371  05AA  1FF1               	btfss	___awdiv@divisor+1,7
  2372  05AB  2DAD               	goto	u821
  2373  05AC  2DAE               	goto	u820
  2374  05AD                     u821:
  2375  05AD  2D9F               	goto	l1476
  2376  05AE                     u820:
  2377  05AE                     l1482:
  2378  05AE  3001               	movlw	1
  2379  05AF                     u835:
  2380  05AF  1003               	clrc
  2381  05B0  0DF7               	rlf	___awdiv@quotient,f
  2382  05B1  0DF8               	rlf	___awdiv@quotient+1,f
  2383  05B2  3EFF               	addlw	-1
  2384  05B3  1D03               	skipz
  2385  05B4  2DAF               	goto	u835
  2386  05B5  0871               	movf	___awdiv@divisor+1,w
  2387  05B6  0273               	subwf	___awdiv@dividend+1,w
  2388  05B7  1D03               	skipz
  2389  05B8  2DBB               	goto	u845
  2390  05B9  0870               	movf	___awdiv@divisor,w
  2391  05BA  0272               	subwf	___awdiv@dividend,w
  2392  05BB                     u845:
  2393  05BB  1C03               	skipc
  2394  05BC  2DBE               	goto	u841
  2395  05BD  2DBF               	goto	u840
  2396  05BE                     u841:
  2397  05BE  2DC6               	goto	l1488
  2398  05BF                     u840:
  2399  05BF                     l1484:
  2400  05BF  0870               	movf	___awdiv@divisor,w
  2401  05C0  02F2               	subwf	___awdiv@dividend,f
  2402  05C1  0871               	movf	___awdiv@divisor+1,w
  2403  05C2  1C03               	skipc
  2404  05C3  03F3               	decf	___awdiv@dividend+1,f
  2405  05C4  02F3               	subwf	___awdiv@dividend+1,f
  2406  05C5                     l1486:
  2407  05C5  1477               	bsf	___awdiv@quotient,0
  2408  05C6                     l1488:
  2409  05C6  3001               	movlw	1
  2410  05C7                     u855:
  2411  05C7  1003               	clrc
  2412  05C8  0CF1               	rrf	___awdiv@divisor+1,f
  2413  05C9  0CF0               	rrf	___awdiv@divisor,f
  2414  05CA  3EFF               	addlw	-1
  2415  05CB  1D03               	skipz
  2416  05CC  2DC7               	goto	u855
  2417  05CD                     l1490:
  2418  05CD  3001               	movlw	1
  2419  05CE  02F5               	subwf	___awdiv@counter,f
  2420  05CF  1D03               	btfss	3,2
  2421  05D0  2DD2               	goto	u861
  2422  05D1  2DD3               	goto	u860
  2423  05D2                     u861:
  2424  05D2  2DAE               	goto	l1482
  2425  05D3                     u860:
  2426  05D3                     l1492:
  2427  05D3  0876               	movf	___awdiv@sign,w
  2428  05D4  1903               	btfsc	3,2
  2429  05D5  2DD7               	goto	u871
  2430  05D6  2DD8               	goto	u870
  2431  05D7                     u871:
  2432  05D7  2DDD               	goto	l1496
  2433  05D8                     u870:
  2434  05D8                     l1494:
  2435  05D8  09F7               	comf	___awdiv@quotient,f
  2436  05D9  09F8               	comf	___awdiv@quotient+1,f
  2437  05DA  0AF7               	incf	___awdiv@quotient,f
  2438  05DB  1903               	skipnz
  2439  05DC  0AF8               	incf	___awdiv@quotient+1,f
  2440  05DD                     l1496:
  2441  05DD  0878               	movf	___awdiv@quotient+1,w
  2442  05DE  00F1               	movwf	?___awdiv+1
  2443  05DF  0877               	movf	___awdiv@quotient,w
  2444  05E0  00F0               	movwf	?___awdiv
  2445  05E1                     l437:
  2446  05E1  0008               	return
  2447  05E2                     __end_of___awdiv:
  2448                           
  2449                           	psect	text9
  2450  02ED                     __ptext9:	
  2451 ;; *************** function _Lcd_Write_String *****************
  2452 ;; Defined at:
  2453 ;;		line 77 in file "LCD.c"
  2454 ;; Parameters:    Size  Location     Type
  2455 ;;  a               1    wreg     PTR unsigned char 
  2456 ;;		 -> STR_4(2), STR_3(4), STR_2(5), STR_1(16), 
  2457 ;; Auto vars:     Size  Location     Type
  2458 ;;  a               1    7[COMMON] PTR unsigned char 
  2459 ;;		 -> STR_4(2), STR_3(4), STR_2(5), STR_1(16), 
  2460 ;;  i               2    5[COMMON] int 
  2461 ;; Return value:  Size  Location     Type
  2462 ;;                  1    wreg      void 
  2463 ;; Registers used:
  2464 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2465 ;; Tracked objects:
  2466 ;;		On entry : 0/0
  2467 ;;		On exit  : 0/0
  2468 ;;		Unchanged: 0/0
  2469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2470 ;;      Params:         0       0       0       0       0
  2471 ;;      Locals:         3       0       0       0       0
  2472 ;;      Temps:          0       0       0       0       0
  2473 ;;      Totals:         3       0       0       0       0
  2474 ;;Total ram usage:        3 bytes
  2475 ;; Hardware stack levels used: 1
  2476 ;; Hardware stack levels required when called: 2
  2477 ;; This function calls:
  2478 ;;		_Lcd_Write_Char
  2479 ;; This function is called by:
  2480 ;;		_main
  2481 ;; This function uses a non-reentrant model
  2482 ;;
  2483                           
  2484                           
  2485                           ;psect for function _Lcd_Write_String
  2486  02ED                     _Lcd_Write_String:
  2487                           
  2488                           ;incstack = 0
  2489                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2490                           ;Lcd_Write_String@a stored from wreg
  2491  02ED  00F7               	movwf	Lcd_Write_String@a
  2492  02EE                     l1404:
  2493                           
  2494                           ;LCD.c: 78:     int i;;LCD.c: 79:     for (i = 0; a[i] != '\0'; i++)
  2495  02EE  01F5               	clrf	Lcd_Write_String@i
  2496  02EF  01F6               	clrf	Lcd_Write_String@i+1
  2497  02F0  2B04               	goto	l1410
  2498  02F1                     l1406:
  2499                           
  2500                           ;LCD.c: 80:         Lcd_Write_Char(a[i]);
  2501  02F1  0875               	movf	Lcd_Write_String@i,w
  2502  02F2  0777               	addwf	Lcd_Write_String@a,w
  2503  02F3  0084               	movwf	4
  2504  02F4  120A  118A  2003  120A  118A  	fcall	stringdir
  2505  02F9  120A  118A  22CF  120A  118A  	fcall	_Lcd_Write_Char
  2506  02FE                     l1408:
  2507  02FE  3001               	movlw	1
  2508  02FF  07F5               	addwf	Lcd_Write_String@i,f
  2509  0300  1803               	skipnc
  2510  0301  0AF6               	incf	Lcd_Write_String@i+1,f
  2511  0302  3000               	movlw	0
  2512  0303  07F6               	addwf	Lcd_Write_String@i+1,f
  2513  0304                     l1410:
  2514  0304  0875               	movf	Lcd_Write_String@i,w
  2515  0305  0777               	addwf	Lcd_Write_String@a,w
  2516  0306  0084               	movwf	4
  2517  0307  120A  118A  2003  120A  118A  	fcall	stringdir
  2518  030C  3A00               	xorlw	0
  2519  030D  1D03               	skipz
  2520  030E  2B10               	goto	u761
  2521  030F  2B11               	goto	u760
  2522  0310                     u761:
  2523  0310  2AF1               	goto	l1406
  2524  0311                     u760:
  2525  0311                     l192:
  2526  0311  0008               	return
  2527  0312                     __end_of_Lcd_Write_String:
  2528                           
  2529                           	psect	text10
  2530  02CF                     __ptext10:	
  2531 ;; *************** function _Lcd_Write_Char *****************
  2532 ;; Defined at:
  2533 ;;		line 65 in file "LCD.c"
  2534 ;; Parameters:    Size  Location     Type
  2535 ;;  a               1    wreg     unsigned char 
  2536 ;; Auto vars:     Size  Location     Type
  2537 ;;  a               1    2[COMMON] unsigned char 
  2538 ;;  y               1    4[COMMON] unsigned char 
  2539 ;;  temp            1    3[COMMON] unsigned char 
  2540 ;; Return value:  Size  Location     Type
  2541 ;;                  1    wreg      void 
  2542 ;; Registers used:
  2543 ;;		wreg, status,2, status,0, pclath, cstack
  2544 ;; Tracked objects:
  2545 ;;		On entry : 0/0
  2546 ;;		On exit  : 0/0
  2547 ;;		Unchanged: 0/0
  2548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2549 ;;      Params:         0       0       0       0       0
  2550 ;;      Locals:         3       0       0       0       0
  2551 ;;      Temps:          1       0       0       0       0
  2552 ;;      Totals:         4       0       0       0       0
  2553 ;;Total ram usage:        4 bytes
  2554 ;; Hardware stack levels used: 1
  2555 ;; Hardware stack levels required when called: 1
  2556 ;; This function calls:
  2557 ;;		_Lcd_Port
  2558 ;; This function is called by:
  2559 ;;		_main
  2560 ;;		_Lcd_Write_String
  2561 ;; This function uses a non-reentrant model
  2562 ;;
  2563                           
  2564                           
  2565                           ;psect for function _Lcd_Write_Char
  2566  02CF                     _Lcd_Write_Char:
  2567                           
  2568                           ;incstack = 0
  2569                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2570                           ;Lcd_Write_Char@a stored from wreg
  2571  02CF  00F2               	movwf	Lcd_Write_Char@a
  2572  02D0                     l1240:
  2573                           
  2574                           ;LCD.c: 66:     char temp, y;;LCD.c: 67:     temp = a;
  2575  02D0  0872               	movf	Lcd_Write_Char@a,w
  2576  02D1  00F1               	movwf	??_Lcd_Write_Char
  2577  02D2  0871               	movf	??_Lcd_Write_Char,w
  2578  02D3  00F3               	movwf	Lcd_Write_Char@temp
  2579                           
  2580                           ;LCD.c: 68:     y = temp;
  2581  02D4  0873               	movf	Lcd_Write_Char@temp,w
  2582  02D5  00F1               	movwf	??_Lcd_Write_Char
  2583  02D6  0871               	movf	??_Lcd_Write_Char,w
  2584  02D7  00F4               	movwf	Lcd_Write_Char@y
  2585  02D8                     l1242:
  2586                           
  2587                           ;LCD.c: 69:     RE0 = 1;
  2588  02D8  1283               	bcf	3,5	;RP0=0, select bank0
  2589  02D9  1303               	bcf	3,6	;RP1=0, select bank0
  2590  02DA  1409               	bsf	9,0	;volatile
  2591  02DB                     l1244:
  2592                           
  2593                           ;LCD.c: 70:     Lcd_Port(y);
  2594  02DB  0874               	movf	Lcd_Write_Char@y,w
  2595  02DC  120A  118A  2279  120A  118A  	fcall	_Lcd_Port
  2596  02E1                     l1246:
  2597                           
  2598                           ;LCD.c: 71:     RE1 = 1;
  2599  02E1  1283               	bcf	3,5	;RP0=0, select bank0
  2600  02E2  1303               	bcf	3,6	;RP1=0, select bank0
  2601  02E3  1489               	bsf	9,1	;volatile
  2602  02E4                     l1248:
  2603                           
  2604                           ;LCD.c: 72:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2605  02E4  301A               	movlw	26
  2606  02E5  00F1               	movwf	??_Lcd_Write_Char
  2607  02E6                     u1057:
  2608  02E6  0BF1               	decfsz	??_Lcd_Write_Char,f
  2609  02E7  2AE6               	goto	u1057
  2610  02E8  0000               	nop
  2611  02E9                     l1250:
  2612                           
  2613                           ;LCD.c: 73:     RE1 = 0;
  2614  02E9  1283               	bcf	3,5	;RP0=0, select bank0
  2615  02EA  1303               	bcf	3,6	;RP1=0, select bank0
  2616  02EB  1089               	bcf	9,1	;volatile
  2617  02EC                     l186:
  2618  02EC  0008               	return
  2619  02ED                     __end_of_Lcd_Write_Char:
  2620                           
  2621                           	psect	text11
  2622  0468                     __ptext11:	
  2623 ;; *************** function _Lcd_Set_Cursor *****************
  2624 ;; Defined at:
  2625 ;;		line 30 in file "LCD.c"
  2626 ;; Parameters:    Size  Location     Type
  2627 ;;  a               1    wreg     unsigned char 
  2628 ;;  b               1    4[COMMON] unsigned char 
  2629 ;; Auto vars:     Size  Location     Type
  2630 ;;  a               1    7[COMMON] unsigned char 
  2631 ;;  temp            1   10[COMMON] unsigned char 
  2632 ;;  y               1    9[COMMON] unsigned char 
  2633 ;;  z               1    8[COMMON] unsigned char 
  2634 ;; Return value:  Size  Location     Type
  2635 ;;                  1    wreg      void 
  2636 ;; Registers used:
  2637 ;;		wreg, status,2, status,0, pclath, cstack
  2638 ;; Tracked objects:
  2639 ;;		On entry : 0/0
  2640 ;;		On exit  : 0/0
  2641 ;;		Unchanged: 0/0
  2642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2643 ;;      Params:         1       0       0       0       0
  2644 ;;      Locals:         4       0       0       0       0
  2645 ;;      Temps:          2       0       0       0       0
  2646 ;;      Totals:         7       0       0       0       0
  2647 ;;Total ram usage:        7 bytes
  2648 ;; Hardware stack levels used: 1
  2649 ;; Hardware stack levels required when called: 2
  2650 ;; This function calls:
  2651 ;;		_Lcd_Cmd
  2652 ;; This function is called by:
  2653 ;;		_main
  2654 ;; This function uses a non-reentrant model
  2655 ;;
  2656                           
  2657                           
  2658                           ;psect for function _Lcd_Set_Cursor
  2659  0468                     _Lcd_Set_Cursor:
  2660                           
  2661                           ;incstack = 0
  2662                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2663                           ;Lcd_Set_Cursor@a stored from wreg
  2664  0468  00F7               	movwf	Lcd_Set_Cursor@a
  2665  0469                     l1384:
  2666                           
  2667                           ;LCD.c: 31:     char temp, z, y;;LCD.c: 32:     if (a == 1) {
  2668  0469  0377               	decf	Lcd_Set_Cursor@a,w
  2669  046A  1D03               	btfss	3,2
  2670  046B  2C6D               	goto	u721
  2671  046C  2C6E               	goto	u720
  2672  046D                     u721:
  2673  046D  2C91               	goto	l1394
  2674  046E                     u720:
  2675  046E                     l1386:
  2676                           
  2677                           ;LCD.c: 33:         temp = 0x80 + b - 1;
  2678  046E  0874               	movf	Lcd_Set_Cursor@b,w
  2679  046F  3E7F               	addlw	127
  2680  0470  00F5               	movwf	??_Lcd_Set_Cursor
  2681  0471  0875               	movf	??_Lcd_Set_Cursor,w
  2682  0472  00FA               	movwf	Lcd_Set_Cursor@temp
  2683                           
  2684                           ;LCD.c: 34:         z = temp >> 4;
  2685  0473  087A               	movf	Lcd_Set_Cursor@temp,w
  2686  0474  00F5               	movwf	??_Lcd_Set_Cursor
  2687  0475  3004               	movlw	4
  2688  0476                     u735:
  2689  0476  1003               	clrc
  2690  0477  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2691  0478  3EFF               	addlw	-1
  2692  0479  1D03               	skipz
  2693  047A  2C76               	goto	u735
  2694  047B  0875               	movf	??_Lcd_Set_Cursor,w
  2695  047C  00F6               	movwf	??_Lcd_Set_Cursor+1
  2696  047D  0876               	movf	??_Lcd_Set_Cursor+1,w
  2697  047E  00F8               	movwf	Lcd_Set_Cursor@z
  2698  047F                     l1388:
  2699                           
  2700                           ;LCD.c: 35:         y = temp & 0x0F;
  2701  047F  087A               	movf	Lcd_Set_Cursor@temp,w
  2702  0480  390F               	andlw	15
  2703  0481  00F5               	movwf	??_Lcd_Set_Cursor
  2704  0482  0875               	movf	??_Lcd_Set_Cursor,w
  2705  0483  00F9               	movwf	Lcd_Set_Cursor@y
  2706  0484                     l1390:
  2707                           
  2708                           ;LCD.c: 36:         Lcd_Cmd(z);
  2709  0484  0878               	movf	Lcd_Set_Cursor@z,w
  2710  0485  120A  118A  22B5  120A  118A  	fcall	_Lcd_Cmd
  2711  048A                     l1392:
  2712                           
  2713                           ;LCD.c: 37:         Lcd_Cmd(y);
  2714  048A  0879               	movf	Lcd_Set_Cursor@y,w
  2715  048B  120A  118A  22B5  120A  118A  	fcall	_Lcd_Cmd
  2716                           
  2717                           ;LCD.c: 38:     } else if (a == 2) {
  2718  0490  2CB9               	goto	l180
  2719  0491                     l1394:
  2720  0491  3002               	movlw	2
  2721  0492  0677               	xorwf	Lcd_Set_Cursor@a,w
  2722  0493  1D03               	btfss	3,2
  2723  0494  2C96               	goto	u741
  2724  0495  2C97               	goto	u740
  2725  0496                     u741:
  2726  0496  2CB9               	goto	l180
  2727  0497                     u740:
  2728  0497                     l1396:
  2729                           
  2730                           ;LCD.c: 39:         temp = 0xC0 + b - 1;
  2731  0497  0874               	movf	Lcd_Set_Cursor@b,w
  2732  0498  3EBF               	addlw	191
  2733  0499  00F5               	movwf	??_Lcd_Set_Cursor
  2734  049A  0875               	movf	??_Lcd_Set_Cursor,w
  2735  049B  00FA               	movwf	Lcd_Set_Cursor@temp
  2736                           
  2737                           ;LCD.c: 40:         z = temp >> 4;
  2738  049C  087A               	movf	Lcd_Set_Cursor@temp,w
  2739  049D  00F5               	movwf	??_Lcd_Set_Cursor
  2740  049E  3004               	movlw	4
  2741  049F                     u755:
  2742  049F  1003               	clrc
  2743  04A0  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2744  04A1  3EFF               	addlw	-1
  2745  04A2  1D03               	skipz
  2746  04A3  2C9F               	goto	u755
  2747  04A4  0875               	movf	??_Lcd_Set_Cursor,w
  2748  04A5  00F6               	movwf	??_Lcd_Set_Cursor+1
  2749  04A6  0876               	movf	??_Lcd_Set_Cursor+1,w
  2750  04A7  00F8               	movwf	Lcd_Set_Cursor@z
  2751  04A8                     l1398:
  2752                           
  2753                           ;LCD.c: 41:         y = temp & 0xF0;
  2754  04A8  087A               	movf	Lcd_Set_Cursor@temp,w
  2755  04A9  39F0               	andlw	240
  2756  04AA  00F5               	movwf	??_Lcd_Set_Cursor
  2757  04AB  0875               	movf	??_Lcd_Set_Cursor,w
  2758  04AC  00F9               	movwf	Lcd_Set_Cursor@y
  2759  04AD                     l1400:
  2760                           
  2761                           ;LCD.c: 42:         Lcd_Cmd(z);
  2762  04AD  0878               	movf	Lcd_Set_Cursor@z,w
  2763  04AE  120A  118A  22B5  120A  118A  	fcall	_Lcd_Cmd
  2764  04B3                     l1402:
  2765                           
  2766                           ;LCD.c: 43:         Lcd_Cmd(y);
  2767  04B3  0879               	movf	Lcd_Set_Cursor@y,w
  2768  04B4  120A  118A  22B5  120A  118A  	fcall	_Lcd_Cmd
  2769  04B9                     l180:
  2770  04B9  0008               	return
  2771  04BA                     __end_of_Lcd_Set_Cursor:
  2772                           
  2773                           	psect	text12
  2774  0421                     __ptext12:	
  2775 ;; *************** function _Lcd_Init *****************
  2776 ;; Defined at:
  2777 ;;		line 47 in file "LCD.c"
  2778 ;; Parameters:    Size  Location     Type
  2779 ;;		None
  2780 ;; Auto vars:     Size  Location     Type
  2781 ;;		None
  2782 ;; Return value:  Size  Location     Type
  2783 ;;                  1    wreg      void 
  2784 ;; Registers used:
  2785 ;;		wreg, status,2, status,0, pclath, cstack
  2786 ;; Tracked objects:
  2787 ;;		On entry : 0/0
  2788 ;;		On exit  : 0/0
  2789 ;;		Unchanged: 0/0
  2790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2791 ;;      Params:         0       0       0       0       0
  2792 ;;      Locals:         0       0       0       0       0
  2793 ;;      Temps:          2       0       0       0       0
  2794 ;;      Totals:         2       0       0       0       0
  2795 ;;Total ram usage:        2 bytes
  2796 ;; Hardware stack levels used: 1
  2797 ;; Hardware stack levels required when called: 2
  2798 ;; This function calls:
  2799 ;;		_Lcd_Cmd
  2800 ;;		_Lcd_Port
  2801 ;; This function is called by:
  2802 ;;		_main
  2803 ;; This function uses a non-reentrant model
  2804 ;;
  2805                           
  2806                           
  2807                           ;psect for function _Lcd_Init
  2808  0421                     _Lcd_Init:
  2809  0421                     l1372:	
  2810                           ;incstack = 0
  2811                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2812                           
  2813                           
  2814                           ;LCD.c: 48:     Lcd_Port(0x00);
  2815  0421  3000               	movlw	0
  2816  0422  120A  118A  2279  120A  118A  	fcall	_Lcd_Port
  2817  0427                     l1374:
  2818                           
  2819                           ;LCD.c: 49:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2820  0427  3034               	movlw	52
  2821  0428  00F5               	movwf	??_Lcd_Init+1
  2822  0429  30F1               	movlw	241
  2823  042A  00F4               	movwf	??_Lcd_Init
  2824  042B                     u1067:
  2825  042B  0BF4               	decfsz	??_Lcd_Init,f
  2826  042C  2C2B               	goto	u1067
  2827  042D  0BF5               	decfsz	??_Lcd_Init+1,f
  2828  042E  2C2B               	goto	u1067
  2829  042F  2C30               	nop2
  2830  0430                     l1376:
  2831                           
  2832                           ;LCD.c: 50:     Lcd_Cmd(0x30);
  2833  0430  3030               	movlw	48
  2834  0431  120A  118A  22B5  120A  118A  	fcall	_Lcd_Cmd
  2835                           
  2836                           ;LCD.c: 51:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2837  0436  300D               	movlw	13
  2838  0437  00F5               	movwf	??_Lcd_Init+1
  2839  0438  30FB               	movlw	251
  2840  0439  00F4               	movwf	??_Lcd_Init
  2841  043A                     u1077:
  2842  043A  0BF4               	decfsz	??_Lcd_Init,f
  2843  043B  2C3A               	goto	u1077
  2844  043C  0BF5               	decfsz	??_Lcd_Init+1,f
  2845  043D  2C3A               	goto	u1077
  2846  043E  2C3F               	nop2
  2847  043F                     l1378:
  2848                           
  2849                           ;LCD.c: 52:     Lcd_Cmd(0x30);
  2850  043F  3030               	movlw	48
  2851  0440  120A  118A  22B5  120A  118A  	fcall	_Lcd_Cmd
  2852  0445                     l1380:
  2853                           
  2854                           ;LCD.c: 53:     _delay((unsigned long)((200)*(8000000/4000000.0)));
  2855  0445  3085               	movlw	133
  2856  0446  00F4               	movwf	??_Lcd_Init
  2857  0447                     u1087:
  2858  0447  0BF4               	decfsz	??_Lcd_Init,f
  2859  0448  2C47               	goto	u1087
  2860                           
  2861                           ;LCD.c: 54:     Lcd_Cmd(0x30);
  2862  0449  3030               	movlw	48
  2863  044A  120A  118A  22B5  120A  118A  	fcall	_Lcd_Cmd
  2864                           
  2865                           ;LCD.c: 56:     Lcd_Cmd(0x3C);
  2866  044F  303C               	movlw	60
  2867  0450  120A  118A  22B5  120A  118A  	fcall	_Lcd_Cmd
  2868                           
  2869                           ;LCD.c: 58:     Lcd_Cmd(0x08);
  2870  0455  3008               	movlw	8
  2871  0456  120A  118A  22B5  120A  118A  	fcall	_Lcd_Cmd
  2872                           
  2873                           ;LCD.c: 60:     Lcd_Cmd(0x01);
  2874  045B  3001               	movlw	1
  2875  045C  120A  118A  22B5  120A  118A  	fcall	_Lcd_Cmd
  2876                           
  2877                           ;LCD.c: 62:     Lcd_Cmd(0x06);
  2878  0461  3006               	movlw	6
  2879  0462  120A  118A  22B5  120A  118A  	fcall	_Lcd_Cmd
  2880  0467                     l183:
  2881  0467  0008               	return
  2882  0468                     __end_of_Lcd_Init:
  2883                           
  2884                           	psect	text13
  2885  02A8                     __ptext13:	
  2886 ;; *************** function _Lcd_Clear *****************
  2887 ;; Defined at:
  2888 ;;		line 25 in file "LCD.c"
  2889 ;; Parameters:    Size  Location     Type
  2890 ;;		None
  2891 ;; Auto vars:     Size  Location     Type
  2892 ;;		None
  2893 ;; Return value:  Size  Location     Type
  2894 ;;                  1    wreg      void 
  2895 ;; Registers used:
  2896 ;;		wreg, status,2, status,0, pclath, cstack
  2897 ;; Tracked objects:
  2898 ;;		On entry : 0/0
  2899 ;;		On exit  : 0/0
  2900 ;;		Unchanged: 0/0
  2901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2902 ;;      Params:         0       0       0       0       0
  2903 ;;      Locals:         0       0       0       0       0
  2904 ;;      Temps:          0       0       0       0       0
  2905 ;;      Totals:         0       0       0       0       0
  2906 ;;Total ram usage:        0 bytes
  2907 ;; Hardware stack levels used: 1
  2908 ;; Hardware stack levels required when called: 2
  2909 ;; This function calls:
  2910 ;;		_Lcd_Cmd
  2911 ;; This function is called by:
  2912 ;;		_main
  2913 ;; This function uses a non-reentrant model
  2914 ;;
  2915                           
  2916                           
  2917                           ;psect for function _Lcd_Clear
  2918  02A8                     _Lcd_Clear:
  2919  02A8                     l1382:	
  2920                           ;incstack = 0
  2921                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2922                           
  2923                           
  2924                           ;LCD.c: 26:     Lcd_Cmd(0);
  2925  02A8  3000               	movlw	0
  2926  02A9  120A  118A  22B5  120A  118A  	fcall	_Lcd_Cmd
  2927                           
  2928                           ;LCD.c: 27:     Lcd_Cmd(1);
  2929  02AE  3001               	movlw	1
  2930  02AF  120A  118A  22B5  120A  118A  	fcall	_Lcd_Cmd
  2931  02B4                     l174:
  2932  02B4  0008               	return
  2933  02B5                     __end_of_Lcd_Clear:
  2934                           
  2935                           	psect	text14
  2936  02B5                     __ptext14:	
  2937 ;; *************** function _Lcd_Cmd *****************
  2938 ;; Defined at:
  2939 ;;		line 17 in file "LCD.c"
  2940 ;; Parameters:    Size  Location     Type
  2941 ;;  a               1    wreg     unsigned char 
  2942 ;; Auto vars:     Size  Location     Type
  2943 ;;  a               1    3[COMMON] unsigned char 
  2944 ;; Return value:  Size  Location     Type
  2945 ;;                  1    wreg      void 
  2946 ;; Registers used:
  2947 ;;		wreg, status,2, status,0, pclath, cstack
  2948 ;; Tracked objects:
  2949 ;;		On entry : 0/0
  2950 ;;		On exit  : 0/0
  2951 ;;		Unchanged: 0/0
  2952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2953 ;;      Params:         0       0       0       0       0
  2954 ;;      Locals:         1       0       0       0       0
  2955 ;;      Temps:          2       0       0       0       0
  2956 ;;      Totals:         3       0       0       0       0
  2957 ;;Total ram usage:        3 bytes
  2958 ;; Hardware stack levels used: 1
  2959 ;; Hardware stack levels required when called: 1
  2960 ;; This function calls:
  2961 ;;		_Lcd_Port
  2962 ;; This function is called by:
  2963 ;;		_Lcd_Clear
  2964 ;;		_Lcd_Set_Cursor
  2965 ;;		_Lcd_Init
  2966 ;;		_Lcd_Shift_Right
  2967 ;;		_Lcd_Shift_Left
  2968 ;; This function uses a non-reentrant model
  2969 ;;
  2970                           
  2971                           
  2972                           ;psect for function _Lcd_Cmd
  2973  02B5                     _Lcd_Cmd:
  2974                           
  2975                           ;incstack = 0
  2976                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2977                           ;Lcd_Cmd@a stored from wreg
  2978  02B5  00F3               	movwf	Lcd_Cmd@a
  2979  02B6                     l1268:
  2980                           
  2981                           ;LCD.c: 18:     RE0 = 0;
  2982  02B6  1283               	bcf	3,5	;RP0=0, select bank0
  2983  02B7  1303               	bcf	3,6	;RP1=0, select bank0
  2984  02B8  1009               	bcf	9,0	;volatile
  2985  02B9                     l1270:
  2986                           
  2987                           ;LCD.c: 19:     Lcd_Port(a);
  2988  02B9  0873               	movf	Lcd_Cmd@a,w
  2989  02BA  120A  118A  2279  120A  118A  	fcall	_Lcd_Port
  2990  02BF                     l1272:
  2991                           
  2992                           ;LCD.c: 20:     RE1 = 1;
  2993  02BF  1283               	bcf	3,5	;RP0=0, select bank0
  2994  02C0  1303               	bcf	3,6	;RP1=0, select bank0
  2995  02C1  1489               	bsf	9,1	;volatile
  2996  02C2                     l1274:
  2997                           
  2998                           ;LCD.c: 21:     _delay((unsigned long)((4)*(8000000/4000.0)));
  2999  02C2  300B               	movlw	11
  3000  02C3  00F2               	movwf	??_Lcd_Cmd+1
  3001  02C4  3062               	movlw	98
  3002  02C5  00F1               	movwf	??_Lcd_Cmd
  3003  02C6                     u1097:
  3004  02C6  0BF1               	decfsz	??_Lcd_Cmd,f
  3005  02C7  2AC6               	goto	u1097
  3006  02C8  0BF2               	decfsz	??_Lcd_Cmd+1,f
  3007  02C9  2AC6               	goto	u1097
  3008  02CA  0000               	nop
  3009  02CB                     l1276:
  3010                           
  3011                           ;LCD.c: 22:     RE1 = 0;
  3012  02CB  1283               	bcf	3,5	;RP0=0, select bank0
  3013  02CC  1303               	bcf	3,6	;RP1=0, select bank0
  3014  02CD  1089               	bcf	9,1	;volatile
  3015  02CE                     l171:
  3016  02CE  0008               	return
  3017  02CF                     __end_of_Lcd_Cmd:
  3018                           
  3019                           	psect	text15
  3020  0279                     __ptext15:	
  3021 ;; *************** function _Lcd_Port *****************
  3022 ;; Defined at:
  3023 ;;		line 12 in file "LCD.c"
  3024 ;; Parameters:    Size  Location     Type
  3025 ;;  a               1    wreg     unsigned char 
  3026 ;; Auto vars:     Size  Location     Type
  3027 ;;  a               1    0[COMMON] unsigned char 
  3028 ;; Return value:  Size  Location     Type
  3029 ;;                  1    wreg      void 
  3030 ;; Registers used:
  3031 ;;		wreg
  3032 ;; Tracked objects:
  3033 ;;		On entry : 0/0
  3034 ;;		On exit  : 0/0
  3035 ;;		Unchanged: 0/0
  3036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3037 ;;      Params:         0       0       0       0       0
  3038 ;;      Locals:         1       0       0       0       0
  3039 ;;      Temps:          0       0       0       0       0
  3040 ;;      Totals:         1       0       0       0       0
  3041 ;;Total ram usage:        1 bytes
  3042 ;; Hardware stack levels used: 1
  3043 ;; This function calls:
  3044 ;;		Nothing
  3045 ;; This function is called by:
  3046 ;;		_Lcd_Cmd
  3047 ;;		_Lcd_Init
  3048 ;;		_Lcd_Write_Char
  3049 ;; This function uses a non-reentrant model
  3050 ;;
  3051                           
  3052                           
  3053                           ;psect for function _Lcd_Port
  3054  0279                     _Lcd_Port:
  3055                           
  3056                           ;incstack = 0
  3057                           ; Regs used in _Lcd_Port: [wreg]
  3058                           ;Lcd_Port@a stored from wreg
  3059  0279  00F0               	movwf	Lcd_Port@a
  3060  027A                     l1214:
  3061                           
  3062                           ;LCD.c: 13:     PORTD = a;
  3063  027A  0870               	movf	Lcd_Port@a,w
  3064  027B  1283               	bcf	3,5	;RP0=0, select bank0
  3065  027C  1303               	bcf	3,6	;RP1=0, select bank0
  3066  027D  0088               	movwf	8	;volatile
  3067  027E                     l168:
  3068  027E  0008               	return
  3069  027F                     __end_of_Lcd_Port:
  3070                           
  3071                           	psect	text16
  3072  0291                     __ptext16:	
  3073 ;; *************** function _I2C_Master_Write *****************
  3074 ;; Defined at:
  3075 ;;		line 65 in file "I2C.c"
  3076 ;; Parameters:    Size  Location     Type
  3077 ;;  d               2    0[COMMON] unsigned int 
  3078 ;; Auto vars:     Size  Location     Type
  3079 ;;		None
  3080 ;; Return value:  Size  Location     Type
  3081 ;;                  1    wreg      void 
  3082 ;; Registers used:
  3083 ;;		wreg, status,2, status,0, pclath, cstack
  3084 ;; Tracked objects:
  3085 ;;		On entry : 0/0
  3086 ;;		On exit  : 0/0
  3087 ;;		Unchanged: 0/0
  3088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3089 ;;      Params:         2       0       0       0       0
  3090 ;;      Locals:         0       0       0       0       0
  3091 ;;      Temps:          0       0       0       0       0
  3092 ;;      Totals:         2       0       0       0       0
  3093 ;;Total ram usage:        2 bytes
  3094 ;; Hardware stack levels used: 1
  3095 ;; Hardware stack levels required when called: 1
  3096 ;; This function calls:
  3097 ;;		_I2C_Master_Wait
  3098 ;; This function is called by:
  3099 ;;		_main
  3100 ;; This function uses a non-reentrant model
  3101 ;;
  3102                           
  3103                           
  3104                           ;psect for function _I2C_Master_Write
  3105  0291                     _I2C_Master_Write:
  3106  0291                     l1416:	
  3107                           ;incstack = 0
  3108                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3109                           
  3110                           
  3111                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  3112  0291  120A  118A  229B  120A  118A  	fcall	_I2C_Master_Wait
  3113  0296                     l1418:
  3114                           
  3115                           ;I2C.c: 68:     SSPBUF = d;
  3116  0296  0870               	movf	I2C_Master_Write@d,w
  3117  0297  1283               	bcf	3,5	;RP0=0, select bank0
  3118  0298  1303               	bcf	3,6	;RP1=0, select bank0
  3119  0299  0093               	movwf	19	;volatile
  3120  029A                     l149:
  3121  029A  0008               	return
  3122  029B                     __end_of_I2C_Master_Write:
  3123                           
  3124                           	psect	text17
  3125  0288                     __ptext17:	
  3126 ;; *************** function _I2C_Master_Stop *****************
  3127 ;; Defined at:
  3128 ;;		line 55 in file "I2C.c"
  3129 ;; Parameters:    Size  Location     Type
  3130 ;;		None
  3131 ;; Auto vars:     Size  Location     Type
  3132 ;;		None
  3133 ;; Return value:  Size  Location     Type
  3134 ;;                  1    wreg      void 
  3135 ;; Registers used:
  3136 ;;		wreg, status,2, status,0, pclath, cstack
  3137 ;; Tracked objects:
  3138 ;;		On entry : 0/0
  3139 ;;		On exit  : 0/0
  3140 ;;		Unchanged: 0/0
  3141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3142 ;;      Params:         0       0       0       0       0
  3143 ;;      Locals:         0       0       0       0       0
  3144 ;;      Temps:          0       0       0       0       0
  3145 ;;      Totals:         0       0       0       0       0
  3146 ;;Total ram usage:        0 bytes
  3147 ;; Hardware stack levels used: 1
  3148 ;; Hardware stack levels required when called: 1
  3149 ;; This function calls:
  3150 ;;		_I2C_Master_Wait
  3151 ;; This function is called by:
  3152 ;;		_main
  3153 ;; This function uses a non-reentrant model
  3154 ;;
  3155                           
  3156                           
  3157                           ;psect for function _I2C_Master_Stop
  3158  0288                     _I2C_Master_Stop:
  3159  0288                     l1436:	
  3160                           ;incstack = 0
  3161                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3162                           
  3163                           
  3164                           ;I2C.c: 57:     I2C_Master_Wait();
  3165  0288  120A  118A  229B  120A  118A  	fcall	_I2C_Master_Wait
  3166  028D                     l1438:
  3167                           
  3168                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  3169  028D  1683               	bsf	3,5	;RP0=1, select bank1
  3170  028E  1303               	bcf	3,6	;RP1=0, select bank1
  3171  028F  1511               	bsf	17,2	;volatile
  3172  0290                     l146:
  3173  0290  0008               	return
  3174  0291                     __end_of_I2C_Master_Stop:
  3175                           
  3176                           	psect	text18
  3177  027F                     __ptext18:	
  3178 ;; *************** function _I2C_Master_Start *****************
  3179 ;; Defined at:
  3180 ;;		line 39 in file "I2C.c"
  3181 ;; Parameters:    Size  Location     Type
  3182 ;;		None
  3183 ;; Auto vars:     Size  Location     Type
  3184 ;;		None
  3185 ;; Return value:  Size  Location     Type
  3186 ;;                  1    wreg      void 
  3187 ;; Registers used:
  3188 ;;		wreg, status,2, status,0, pclath, cstack
  3189 ;; Tracked objects:
  3190 ;;		On entry : 0/0
  3191 ;;		On exit  : 0/0
  3192 ;;		Unchanged: 0/0
  3193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3194 ;;      Params:         0       0       0       0       0
  3195 ;;      Locals:         0       0       0       0       0
  3196 ;;      Temps:          0       0       0       0       0
  3197 ;;      Totals:         0       0       0       0       0
  3198 ;;Total ram usage:        0 bytes
  3199 ;; Hardware stack levels used: 1
  3200 ;; Hardware stack levels required when called: 1
  3201 ;; This function calls:
  3202 ;;		_I2C_Master_Wait
  3203 ;; This function is called by:
  3204 ;;		_main
  3205 ;; This function uses a non-reentrant model
  3206 ;;
  3207                           
  3208                           
  3209                           ;psect for function _I2C_Master_Start
  3210  027F                     _I2C_Master_Start:
  3211  027F                     l1412:	
  3212                           ;incstack = 0
  3213                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3214                           
  3215                           
  3216                           ;I2C.c: 41:     I2C_Master_Wait();
  3217  027F  120A  118A  229B  120A  118A  	fcall	_I2C_Master_Wait
  3218  0284                     l1414:
  3219                           
  3220                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  3221  0284  1683               	bsf	3,5	;RP0=1, select bank1
  3222  0285  1303               	bcf	3,6	;RP1=0, select bank1
  3223  0286  1411               	bsf	17,0	;volatile
  3224  0287                     l140:
  3225  0287  0008               	return
  3226  0288                     __end_of_I2C_Master_Start:
  3227                           
  3228                           	psect	text19
  3229  0337                     __ptext19:	
  3230 ;; *************** function _I2C_Master_Read *****************
  3231 ;; Defined at:
  3232 ;;		line 74 in file "I2C.c"
  3233 ;; Parameters:    Size  Location     Type
  3234 ;;  a               2    0[COMMON] unsigned short 
  3235 ;; Auto vars:     Size  Location     Type
  3236 ;;  temp            2    4[COMMON] unsigned short 
  3237 ;; Return value:  Size  Location     Type
  3238 ;;                  2    0[COMMON] unsigned short 
  3239 ;; Registers used:
  3240 ;;		wreg, status,2, status,0, pclath, cstack
  3241 ;; Tracked objects:
  3242 ;;		On entry : 0/0
  3243 ;;		On exit  : 0/0
  3244 ;;		Unchanged: 0/0
  3245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3246 ;;      Params:         2       0       0       0       0
  3247 ;;      Locals:         2       0       0       0       0
  3248 ;;      Temps:          2       0       0       0       0
  3249 ;;      Totals:         6       0       0       0       0
  3250 ;;Total ram usage:        6 bytes
  3251 ;; Hardware stack levels used: 1
  3252 ;; Hardware stack levels required when called: 1
  3253 ;; This function calls:
  3254 ;;		_I2C_Master_Wait
  3255 ;; This function is called by:
  3256 ;;		_main
  3257 ;; This function uses a non-reentrant model
  3258 ;;
  3259                           
  3260                           
  3261                           ;psect for function _I2C_Master_Read
  3262  0337                     _I2C_Master_Read:
  3263  0337                     l1420:	
  3264                           ;incstack = 0
  3265                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3266                           
  3267                           
  3268                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  3269  0337  120A  118A  229B  120A  118A  	fcall	_I2C_Master_Wait
  3270  033C                     l1422:
  3271                           
  3272                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  3273  033C  1683               	bsf	3,5	;RP0=1, select bank1
  3274  033D  1303               	bcf	3,6	;RP1=0, select bank1
  3275  033E  1591               	bsf	17,3	;volatile
  3276                           
  3277                           ;I2C.c: 79:     I2C_Master_Wait();
  3278  033F  120A  118A  229B  120A  118A  	fcall	_I2C_Master_Wait
  3279  0344                     l1424:
  3280                           
  3281                           ;I2C.c: 80:     temp = SSPBUF;
  3282  0344  1283               	bcf	3,5	;RP0=0, select bank0
  3283  0345  1303               	bcf	3,6	;RP1=0, select bank0
  3284  0346  0813               	movf	19,w	;volatile
  3285  0347  00F2               	movwf	??_I2C_Master_Read
  3286  0348  01F3               	clrf	??_I2C_Master_Read+1
  3287  0349  0872               	movf	??_I2C_Master_Read,w
  3288  034A  00F4               	movwf	I2C_Master_Read@temp
  3289  034B  0873               	movf	??_I2C_Master_Read+1,w
  3290  034C  00F5               	movwf	I2C_Master_Read@temp+1
  3291  034D                     l1426:
  3292                           
  3293                           ;I2C.c: 81:     I2C_Master_Wait();
  3294  034D  120A  118A  229B  120A  118A  	fcall	_I2C_Master_Wait
  3295  0352                     l1428:
  3296                           
  3297                           ;I2C.c: 82:     if(a == 1){
  3298  0352  0370               	decf	I2C_Master_Read@a,w
  3299  0353  0471               	iorwf	I2C_Master_Read@a+1,w
  3300  0354  1D03               	btfss	3,2
  3301  0355  2B57               	goto	u771
  3302  0356  2B58               	goto	u770
  3303  0357                     u771:
  3304  0357  2B5C               	goto	l152
  3305  0358                     u770:
  3306  0358                     l1430:
  3307                           
  3308                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  3309  0358  1683               	bsf	3,5	;RP0=1, select bank1
  3310  0359  1303               	bcf	3,6	;RP1=0, select bank1
  3311  035A  1291               	bcf	17,5	;volatile
  3312                           
  3313                           ;I2C.c: 84:     }else{
  3314  035B  2B5F               	goto	l153
  3315  035C                     l152:
  3316                           
  3317                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  3318  035C  1683               	bsf	3,5	;RP0=1, select bank1
  3319  035D  1303               	bcf	3,6	;RP1=0, select bank1
  3320  035E  1691               	bsf	17,5	;volatile
  3321  035F                     l153:	
  3322                           ;I2C.c: 86:     }
  3323                           
  3324                           
  3325                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  3326  035F  1611               	bsf	17,4	;volatile
  3327  0360                     l1432:
  3328                           
  3329                           ;I2C.c: 88:     return temp;
  3330  0360  0875               	movf	I2C_Master_Read@temp+1,w
  3331  0361  00F1               	movwf	?_I2C_Master_Read+1
  3332  0362  0874               	movf	I2C_Master_Read@temp,w
  3333  0363  00F0               	movwf	?_I2C_Master_Read
  3334  0364                     l154:
  3335  0364  0008               	return
  3336  0365                     __end_of_I2C_Master_Read:
  3337                           
  3338                           	psect	text20
  3339  029B                     __ptext20:	
  3340 ;; *************** function _I2C_Master_Wait *****************
  3341 ;; Defined at:
  3342 ;;		line 32 in file "I2C.c"
  3343 ;; Parameters:    Size  Location     Type
  3344 ;;		None
  3345 ;; Auto vars:     Size  Location     Type
  3346 ;;		None
  3347 ;; Return value:  Size  Location     Type
  3348 ;;                  1    wreg      void 
  3349 ;; Registers used:
  3350 ;;		wreg, status,2
  3351 ;; Tracked objects:
  3352 ;;		On entry : 0/0
  3353 ;;		On exit  : 0/0
  3354 ;;		Unchanged: 0/0
  3355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3356 ;;      Params:         0       0       0       0       0
  3357 ;;      Locals:         0       0       0       0       0
  3358 ;;      Temps:          0       0       0       0       0
  3359 ;;      Totals:         0       0       0       0       0
  3360 ;;Total ram usage:        0 bytes
  3361 ;; Hardware stack levels used: 1
  3362 ;; This function calls:
  3363 ;;		Nothing
  3364 ;; This function is called by:
  3365 ;;		_I2C_Master_Start
  3366 ;;		_I2C_Master_Stop
  3367 ;;		_I2C_Master_Write
  3368 ;;		_I2C_Master_Read
  3369 ;;		_I2C_Master_RepeatedStart
  3370 ;; This function uses a non-reentrant model
  3371 ;;
  3372                           
  3373                           
  3374                           ;psect for function _I2C_Master_Wait
  3375  029B                     _I2C_Master_Wait:
  3376  029B                     l1264:	
  3377                           ;incstack = 0
  3378                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3379                           
  3380  029B                     l134:	
  3381                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3382                           
  3383  029B  1683               	bsf	3,5	;RP0=1, select bank1
  3384  029C  1303               	bcf	3,6	;RP1=0, select bank1
  3385  029D  1914               	btfsc	20,2	;volatile
  3386  029E  2AA0               	goto	u591
  3387  029F  2AA1               	goto	u590
  3388  02A0                     u591:
  3389  02A0  2A9B               	goto	l134
  3390  02A1                     u590:
  3391  02A1                     l1266:
  3392  02A1  0811               	movf	17,w	;volatile
  3393  02A2  391F               	andlw	31
  3394  02A3  1D03               	btfss	3,2
  3395  02A4  2AA6               	goto	u601
  3396  02A5  2AA7               	goto	u600
  3397  02A6                     u601:
  3398  02A6  2A9B               	goto	l134
  3399  02A7                     u600:
  3400  02A7                     l137:
  3401  02A7  0008               	return
  3402  02A8                     __end_of_I2C_Master_Wait:
  3403  007E                     btemp	set	126	;btemp
  3404  007E                     wtemp0	set	126
  3405                           
  3406                           	psect	config
  3407                           
  3408                           ;Config register CONFIG1 @ 0x2007
  3409                           ;	Oscillator Selection bits
  3410                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3411                           ;	Watchdog Timer Enable bit
  3412                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3413                           ;	Power-up Timer Enable bit
  3414                           ;	PWRTE = OFF, PWRT disabled
  3415                           ;	RE3/MCLR pin function select bit
  3416                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3417                           ;	Code Protection bit
  3418                           ;	CP = OFF, Program memory code protection is disabled
  3419                           ;	Data Code Protection bit
  3420                           ;	CPD = OFF, Data memory code protection is disabled
  3421                           ;	Brown Out Reset Selection bits
  3422                           ;	BOREN = OFF, BOR disabled
  3423                           ;	Internal External Switchover bit
  3424                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3425                           ;	Fail-Safe Clock Monitor Enabled bit
  3426                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3427                           ;	Low Voltage Programming Enable bit
  3428                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3429                           ;	In-Circuit Debugger Mode bit
  3430                           ;	DEBUG = 0x1, unprogrammed default
  3431  2007                     	org	8199
  3432  2007  20D4               	dw	8404
  3433                           
  3434                           ;Config register CONFIG2 @ 0x2008
  3435                           ;	Brown-out Reset Selection bit
  3436                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3437                           ;	Flash Program Memory Self Write Enable bits
  3438                           ;	WRT = OFF, Write protection off
  3439  2008                     	org	8200
  3440  2008  3FFF               	dw	16383

Data Sizes:
    Strings     27
    Constant    0
    Data        0
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     12      25
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 16
		 -> STR_4(CODE[2]), STR_3(CODE[4]), STR_2(CODE[5]), STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    _main->___awmod
    _main->_str_2_dc
    _str_2_dc->___lwdiv
    _I2C_Master_Init->___lldiv
    ___awmod->___awdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_initSETUP
    _initSETUP->_I2C_Master_Init

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    4418
                                              9 BANK0      3     3      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                            ___awdiv
                            ___awmod
                          _initSETUP
                           _str_2_dc
 ---------------------------------------------------------------------------------
 (1) _str_2_dc                                             6     4      2    1073
                                              8 COMMON     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     466
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _initSETUP                                            1     1      0     412
                                              8 BANK0      1     1      0
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     904
                                              9 COMMON     5     1      4
                                              0 BANK0      2     2      0
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     604
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     312
                                              5 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0      90
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     466
                                              4 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      66
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      44
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      44
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     174
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     273
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
   ___awdiv
   ___awmod
     ___awdiv (ARG)
   _initSETUP
     _I2C_Master_Init
       ___lldiv
   _str_2_dc
     ___lwdiv
     ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      27       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      C      19       5       31.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      27      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Sep 07 21:56:50 2021

                        pc 0002                         l99 0651                         _RH 0024  
             ___awdiv@sign 0076                         fsr 0004        ___wmul@multiplicand 0072  
                      l102 03DC                        l131 039C                        l140 0287  
                      l134 029B                        l152 035C                        l320 057A  
                      l137 02A7                        l153 035F                        l154 0364  
                      l146 0290                        l171 02CE                        l180 04B9  
                      l149 029A                        l174 02B4                        l183 0467  
                      l168 027E                        l192 0311                        l186 02EC  
                      l450 0514                        l284 031E                        l437 05E1  
                      l286 0336                        l556 0420                        _GIE 005F  
                      _RE0 0048                        _RE1 0049                        _LDR 0020  
                      u510 0525                        u511 0524                        u600 02A7  
                      u601 02A6                        u530 0539                        u610 0318  
                      u531 0538                        u611 0317                        u525 052A  
                      u550 0554                        u710 041C                        u551 0553  
                      u711 041B                        u720 046E                        u800 059C  
                      u640 0332                        u721 046D                        u801 059B  
                      u545 053B                        u705 0410                        u641 0331  
                      u625 031F                        u570 0572                        u650 03E5  
                      u571 0571                        u555 0550                        u651 03E4  
                      u635 0326                        u740 0497                        u820 05AE  
                      u900 04D7                        u580 037C                        u741 0496  
                      u821 05AD                        u901 04D6                        u565 0564  
                      u590 02A1                        u670 03F7                        u591 02A0  
                      u735 0476                        u815 05A0                        u671 03F6  
                      u760 0311                        u840 05BF                        u920 04E9  
                      u761 0310                        u841 05BE                        u921 04E8  
                      u585 0377                        u665 03E9                        u770 0358  
                      u930 04F3                        u690 0408                        u771 0357  
                      u755 049F                        u835 05AF                        u931 04F2  
                      u915 04DB                        u691 0407                        u860 05D3  
                      u780 0580                        u861 05D2                        u845 05BB  
                      u781 057F                        u685 03F8                        u870 05D8  
                      u790 058B                        u950 0506                        u871 05D7  
                      u855 05C7                        u791 058A                        u951 0505  
                      u935 04EF                        u695 0404                        u960 050B  
                      u880 04C1                        u961 050A                        u945 04FA  
                      u881 04C0                        u890 04CC                        u970 0684  
                      u891 04CB                        u971 0683                        u980 069A  
                      u981 0699                        u990 07CE                        u991 07CD  
                      fsr0 0004               ___awmod@sign 002E                       l1220 0528  
                     l1300 03EF                       l1214 027A                       l1230 0562  
                     l1222 0535                       l1310 040F                       l1302 03F3  
                     l1400 04AD                       l1240 02D0                       l1232 0563  
                     l1224 0539                       l1216 0515                       l1320 03A1  
                     l1312 0416                       l1304 03F7                       l1402 04B3  
                     l1250 02E9                       l1242 02D8                       l1410 0304  
                     l1234 056C                       l1226 0542                       l1218 0525  
                     l1330 03A8                       l1322 03A2                       l1306 0408  
                     l1314 041C                       l1420 0337                       l1412 027F  
                     l1244 02DB                       l1404 02EE                       l1500 04BA  
                     l1228 0554                       l1236 0572                       l1260 039A  
                     l1252 0365                       l1340 03B1                       l1332 03A9  
                     l1324 03A3                       l1308 040E                       l1430 0358  
                     l1422 033C                       l1414 0284                       l1270 02B9  
                     l1246 02E1                       l1406 02F1                       l1510 04CC  
                     l1502 04BD                       l1262 039B                       l1254 0369  
                     l1350 03B8                       l1342 03B4                       l1334 03AA  
                     l1326 03A4                       l1318 039D                       l1264 029B  
                     l1432 0360                       l1424 0344                       l1416 0291  
                     l1272 02BF                       l1248 02E4                       l1408 02FE  
                     l1520 04E5                       l1512 04D1                       l1504 04C1  
                     l1256 036C                       l1360 03C3                       l1352 03B9  
                     l1344 03B5                       l1336 03AB                       l1328 03A5  
                     l1280 0314                       l1440 05E2                       l1600 07B0  
                     l1266 02A1                       l1426 034D                       l1418 0296  
                     l1274 02C2                       l1522 04E9                       l1514 04D7  
                     l1530 0506                       l1506 04C6                       l1258 0399  
                     l1362 03CA                       l1354 03BA                       l1346 03B6  
                     l1338 03AC                       l1282 0318                       l1450 0642  
                     l1442 05E6                       l1610 07D3                       l1602 07B8  
                     l1428 0352                       l1436 0288                       l1276 02CB  
                     l1268 02B6                       l1380 0445                       l1372 0421  
                     l1460 0580                       l1532 050B                       l1524 04F3  
                     l1516 04DA                       l1508 04C8                       l1364 03CD  
                     l1356 03C0                       l1348 03B7                       l1292 03DD  
                     l1284 0325                       l1452 0647                       l1444 05F9  
                     l1612 07D9                       l1604 07C0                       l1540 0669  
                     l1438 028D                       l1382 02A8                       l1374 0427  
                     l1390 0484                       l1470 0594                       l1462 0585  
                     l1534 0510                       l1526 04F9                       l1518 04E1  
                     l1366 03CE                       l1358 03C2                       l1294 03DF  
                     l1286 032C                       l1278 0312                       l1454 064C  
                     l1446 0611                       l1614 07DB                       l1606 07C6  
                     l1550 0692                       l1542 066F                       l1376 0430  
                     l1392 048A                       l1384 0469                       l1480 05AA  
                     l1472 0596                       l1464 0587                       l1456 057B  
                     l1528 0500                       l1368 03CF                       l1296 03E5  
                     l1288 0332                       l1448 0624                       l1608 07CE  
                     l1560 06AE                       l1552 0695                       l1544 0674  
                     l1378 043F                       l1386 046E                       l1394 0491  
                     l1490 05CD                       l1482 05AE                       l1474 059C  
                     l1466 058B                       l1458 057C                       l1298 03E8  
                     l1570 06DE                       l1562 06BD                       l1554 069A  
                     l1546 067D                       l1538 0652                       l1396 0497  
                     l1388 047F                       l1484 05BF                       l1476 059F  
                     l1492 05D3                       l1468 0590                       l1580 0756  
                     l1572 06ED                       l1564 06C2                       l1556 06A8  
                     l1548 0684                       l1398 04A8                       l1494 05D8  
                     l1486 05C5                       l1478 05A6                       l1590 0789  
                     l1582 076D                       l1574 06F5                       l1566 06CB  
                     l1558 06A9                       l1496 05DD                       l1488 05C6  
                     l1592 0791                       l1584 0773                       l1576 071B  
                     l1568 06D9                       l1594 0797                       l1586 077B  
                     l1578 0732                       l1596 079D                       l1588 0781  
                     l1598 07A8                       STR_1 0009                       STR_2 0019  
                     STR_3 001E                       STR_4 0022                       u1000 07D9  
                     u1001 07D8                       u1017 06B6                       u1027 06E6  
                     u1037 07E3                       u1047 03C7                       u1057 02E6  
                     u1067 042B                       u1077 043A                       u1087 0447  
                     u1097 02C6                       _PEIE 005E                       _dec0 002B  
                     _dec1 0029          ?_Lcd_Write_String 0070                       _cont 0022  
                     _main 0652                       _test 0023                       btemp 007E  
                     start 0000         ??_Lcd_Write_String 0075            __end_of_Lcd_Cmd 02CF  
         ?_I2C_Master_Init 002D           ?_I2C_Master_Read 0070           ?_I2C_Master_Wait 0070  
         ?_I2C_Master_Stop 0070                      ?_main 0070            __end_of___awdiv 05E2  
          __end_of___awmod 0515                      _ANSEL 0188            __end_of___lldiv 057B  
          ___awdiv@divisor 0070            __end_of___lwdiv 0421            ___awdiv@counter 0075  
                    _PORTA 0005                      _PORTB 0006                      _PORTC 0007  
                    _PORTD 0008                      _PORTE 0009    __size_of_Lcd_Set_Cursor 0052  
                    _TRISA 0085                      _TRISB 0086                      _TRISC 0087  
                    _TRISD 0088                      _SSPIE 0463                      _TRISE 0089  
                    _SSPIF 0063                      _unit0 002C                      _unit1 002A  
                    pclath 000A                      status 0003                      wtemp0 007E  
         __end_of_Lcd_Init 0468           __end_of_Lcd_Port 027F            __initialization 07ED  
             __end_of_main 07ED                     ??_main 0036         __size_of_Lcd_Clear 000D  
        ?_I2C_Master_Start 0070          ?_I2C_Master_Write 0070         ??_I2C_Master_Start 0070  
       ??_I2C_Master_Write 0072           ___awdiv@dividend 0072                     _ANSELH 0189  
                ??_Lcd_Cmd 0071    __size_of_Lcd_Write_Char 001E                     _SSPADD 0093  
                   _TRISC3 043B                     _TRISC4 043C                     _SSPCON 0014  
                   _SSPBUF 0013                     ___wmul 0312                  ??___awdiv 0074  
                ??___awmod 007D                  ??___lldiv 0078                  ??___lwdiv 0074  
         ___awdiv@quotient 0077            ___awmod@divisor 0079            ___awmod@counter 002D  
         __end_of_str_2_dc 0652            Lcd_Set_Cursor@a 0077            Lcd_Set_Cursor@b 0074  
          Lcd_Set_Cursor@y 0079            Lcd_Set_Cursor@z 0078    __end_of__initialization 07FC  
        __end_of_Lcd_Clear 02B5             __pcstackCOMMON 0070             _Lcd_Set_Cursor 0468  
                ?_Lcd_Init 0070                  ?_Lcd_Port 0070                 __pbssBANK0 0020  
       __size_of_initSETUP 0040                 __pmaintext 0652                    ?___wmul 0070  
__size_of_Lcd_Write_String 0025     __end_of_Lcd_Set_Cursor 04BA                 ??_Lcd_Init 0074  
               ??_Lcd_Port 0070                    _SSPCON2 0091                    _SSPSTAT 0094  
               __stringtab 0003             _Lcd_Write_Char 02CF                    _Lcd_Cmd 02B5  
                  _dec0_12 0027                    _dec1_12 0026                  ?_str_2_dc 0078  
                  ___awdiv 057B                    ___awmod 04BA                    ___lldiv 0515  
          __size_of___wmul 0025                    ___lwdiv 03DD          __end_of_initSETUP 03DD  
          ?_Lcd_Set_Cursor 0074                    __ptext1 05E2                    __ptext2 0312  
                  __ptext3 03DD                    __ptext4 039D                    __ptext5 0365  
                  __ptext6 0515                    __ptext7 04BA                    __ptext8 057B  
                  __ptext9 02ED           ___awmod@dividend 007B   __size_of_I2C_Master_Init 0038  
 __size_of_I2C_Master_Read 002E   __size_of_I2C_Master_Wait 000D                    _unit0_0 0028  
 __size_of_I2C_Master_Stop 0009     __end_of_Lcd_Write_Char 02ED       end_of_initialization 07FC  
__size_of_I2C_Master_Start 0009  __size_of_I2C_Master_Write 000A            ___lldiv@divisor 0070  
          ___lldiv@counter 007D           I2C_Master_Init@c 002D           I2C_Master_Read@a 0070  
               ??_str_2_dc 007A                  Lcd_Port@a 0070                  _TRISCbits 0087  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0077          Lcd_Write_String@i 0075  
              str_2_dc@var 0078                str_2_dc@vcv 007C                  _Lcd_Clear 02A8  
           __end_of___wmul 0337           _Lcd_Write_String 02ED        start_initialization 07ED  
        __size_of_Lcd_Init 0047          __size_of_Lcd_Port 0006          ??_I2C_Master_Init 0031  
        ??_I2C_Master_Read 0072          ??_I2C_Master_Wait 0070          ??_I2C_Master_Stop 0070  
               ?_Lcd_Clear 0070                   ??___wmul 0074            Lcd_Write_Char@a 0072  
          Lcd_Write_Char@y 0074                  ___latbits 0002              __pcstackBANK0 002D  
                 ?_Lcd_Cmd 0070           _I2C_Master_Start 027F           _I2C_Master_Write 0291  
         ___lwdiv@dividend 0072           ??_Lcd_Set_Cursor 0075                   ?___awdiv 0070  
                 ?___awmod 0079                   ?___lldiv 0070                   ?___lwdiv 0070  
        __size_of_str_2_dc 0070                  __pstrings 0003                  _initSETUP 039D  
         ___lwdiv@quotient 0075             ___wmul@product 0074                   Lcd_Cmd@a 0073  
              ??_Lcd_Clear 0074                 _ADCON0bits 001F                __stringbase 0008  
               _ADCON1bits 009F          ___wmul@multiplier 0070           ??_Lcd_Write_Char 0071  
               ?_initSETUP 0070                   _Lcd_Init 0421                   _Lcd_Port 0279  
      I2C_Master_Read@temp 0074   __end_of_Lcd_Write_String 0312           __size_of_Lcd_Cmd 001A  
                 _Humidity 0025           __size_of___awdiv 0067           __size_of___awmod 005B  
         __size_of___lldiv 0066           __size_of___lwdiv 0044         __end_of__stringtab 0009  
          _I2C_Master_Init 0365            _I2C_Master_Read 0337            _I2C_Master_Wait 029B  
          _I2C_Master_Stop 0288            ___lwdiv@divisor 0070            ___lwdiv@counter 0077  
                 __ptext10 02CF                   __ptext11 0468                   __ptext20 029B  
                 __ptext12 0421                   __ptext13 02A8                   __ptext14 02B5  
                 __ptext15 0279                   __ptext16 0291                   __ptext17 0288  
                 __ptext18 027F                   __ptext19 0337              __size_of_main 019B  
                 _str_2_dc 05E2   __end_of_I2C_Master_Start 0288   __end_of_I2C_Master_Write 029B  
               _INTCONbits 000B                ??_initSETUP 0035         Lcd_Write_Char@temp 0073  
         ___lldiv@dividend 0074                  stringcode 0003                 _OSCCONbits 008F  
  __end_of_I2C_Master_Init 039D    __end_of_I2C_Master_Read 0365    __end_of_I2C_Master_Wait 02A8  
  __end_of_I2C_Master_Stop 0291         Lcd_Set_Cursor@temp 007A           ___lldiv@quotient 0079  
        I2C_Master_Write@d 0070                   stringdir 0003                   stringtab 0003  
              _SSPCON2bits 0091  
