

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Sep 07 16:15:43 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    28                           	dabs	1,0x7E,2
    29  0000                     
    30                           ; Version 2.20
    31                           ; Generated 12/02/2020 GMT
    32                           ; 
    33                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F887 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  000E                     	;# 
    79  000E                     	;# 
    80  000F                     	;# 
    81  0010                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0013                     	;# 
    85  0014                     	;# 
    86  0015                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001B                     	;# 
    95  001C                     	;# 
    96  001D                     	;# 
    97  001E                     	;# 
    98  001F                     	;# 
    99  0081                     	;# 
   100  0085                     	;# 
   101  0086                     	;# 
   102  0087                     	;# 
   103  0088                     	;# 
   104  0089                     	;# 
   105  008C                     	;# 
   106  008D                     	;# 
   107  008E                     	;# 
   108  008F                     	;# 
   109  0090                     	;# 
   110  0091                     	;# 
   111  0092                     	;# 
   112  0093                     	;# 
   113  0093                     	;# 
   114  0093                     	;# 
   115  0094                     	;# 
   116  0095                     	;# 
   117  0096                     	;# 
   118  0097                     	;# 
   119  0098                     	;# 
   120  0099                     	;# 
   121  009A                     	;# 
   122  009B                     	;# 
   123  009C                     	;# 
   124  009D                     	;# 
   125  009E                     	;# 
   126  009F                     	;# 
   127  0105                     	;# 
   128  0107                     	;# 
   129  0108                     	;# 
   130  0109                     	;# 
   131  010C                     	;# 
   132  010C                     	;# 
   133  010D                     	;# 
   134  010E                     	;# 
   135  010F                     	;# 
   136  0185                     	;# 
   137  0187                     	;# 
   138  0188                     	;# 
   139  0189                     	;# 
   140  018C                     	;# 
   141  018D                     	;# 
   142  0000                     	;# 
   143  0001                     	;# 
   144  0002                     	;# 
   145  0003                     	;# 
   146  0004                     	;# 
   147  0005                     	;# 
   148  0006                     	;# 
   149  0007                     	;# 
   150  0008                     	;# 
   151  0009                     	;# 
   152  000A                     	;# 
   153  000B                     	;# 
   154  000C                     	;# 
   155  000D                     	;# 
   156  000E                     	;# 
   157  000E                     	;# 
   158  000F                     	;# 
   159  0010                     	;# 
   160  0011                     	;# 
   161  0012                     	;# 
   162  0013                     	;# 
   163  0014                     	;# 
   164  0015                     	;# 
   165  0015                     	;# 
   166  0016                     	;# 
   167  0017                     	;# 
   168  0018                     	;# 
   169  0019                     	;# 
   170  001A                     	;# 
   171  001B                     	;# 
   172  001B                     	;# 
   173  001C                     	;# 
   174  001D                     	;# 
   175  001E                     	;# 
   176  001F                     	;# 
   177  0081                     	;# 
   178  0085                     	;# 
   179  0086                     	;# 
   180  0087                     	;# 
   181  0088                     	;# 
   182  0089                     	;# 
   183  008C                     	;# 
   184  008D                     	;# 
   185  008E                     	;# 
   186  008F                     	;# 
   187  0090                     	;# 
   188  0091                     	;# 
   189  0092                     	;# 
   190  0093                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0094                     	;# 
   194  0095                     	;# 
   195  0096                     	;# 
   196  0097                     	;# 
   197  0098                     	;# 
   198  0099                     	;# 
   199  009A                     	;# 
   200  009B                     	;# 
   201  009C                     	;# 
   202  009D                     	;# 
   203  009E                     	;# 
   204  009F                     	;# 
   205  0105                     	;# 
   206  0107                     	;# 
   207  0108                     	;# 
   208  0109                     	;# 
   209  010C                     	;# 
   210  010C                     	;# 
   211  010D                     	;# 
   212  010E                     	;# 
   213  010F                     	;# 
   214  0185                     	;# 
   215  0187                     	;# 
   216  0188                     	;# 
   217  0189                     	;# 
   218  018C                     	;# 
   219  018D                     	;# 
   220  0000                     	;# 
   221  0001                     	;# 
   222  0002                     	;# 
   223  0003                     	;# 
   224  0004                     	;# 
   225  0005                     	;# 
   226  0006                     	;# 
   227  0007                     	;# 
   228  0008                     	;# 
   229  0009                     	;# 
   230  000A                     	;# 
   231  000B                     	;# 
   232  000C                     	;# 
   233  000D                     	;# 
   234  000E                     	;# 
   235  000E                     	;# 
   236  000F                     	;# 
   237  0010                     	;# 
   238  0011                     	;# 
   239  0012                     	;# 
   240  0013                     	;# 
   241  0014                     	;# 
   242  0015                     	;# 
   243  0015                     	;# 
   244  0016                     	;# 
   245  0017                     	;# 
   246  0018                     	;# 
   247  0019                     	;# 
   248  001A                     	;# 
   249  001B                     	;# 
   250  001B                     	;# 
   251  001C                     	;# 
   252  001D                     	;# 
   253  001E                     	;# 
   254  001F                     	;# 
   255  0081                     	;# 
   256  0085                     	;# 
   257  0086                     	;# 
   258  0087                     	;# 
   259  0088                     	;# 
   260  0089                     	;# 
   261  008C                     	;# 
   262  008D                     	;# 
   263  008E                     	;# 
   264  008F                     	;# 
   265  0090                     	;# 
   266  0091                     	;# 
   267  0092                     	;# 
   268  0093                     	;# 
   269  0093                     	;# 
   270  0093                     	;# 
   271  0094                     	;# 
   272  0095                     	;# 
   273  0096                     	;# 
   274  0097                     	;# 
   275  0098                     	;# 
   276  0099                     	;# 
   277  009A                     	;# 
   278  009B                     	;# 
   279  009C                     	;# 
   280  009D                     	;# 
   281  009E                     	;# 
   282  009F                     	;# 
   283  0105                     	;# 
   284  0107                     	;# 
   285  0108                     	;# 
   286  0109                     	;# 
   287  010C                     	;# 
   288  010C                     	;# 
   289  010D                     	;# 
   290  010E                     	;# 
   291  010F                     	;# 
   292  0185                     	;# 
   293  0187                     	;# 
   294  0188                     	;# 
   295  0189                     	;# 
   296  018C                     	;# 
   297  018D                     	;# 
   298  0000                     	;# 
   299  0001                     	;# 
   300  0002                     	;# 
   301  0003                     	;# 
   302  0004                     	;# 
   303  0005                     	;# 
   304  0006                     	;# 
   305  0007                     	;# 
   306  0008                     	;# 
   307  0009                     	;# 
   308  000A                     	;# 
   309  000B                     	;# 
   310  000C                     	;# 
   311  000D                     	;# 
   312  000E                     	;# 
   313  000E                     	;# 
   314  000F                     	;# 
   315  0010                     	;# 
   316  0011                     	;# 
   317  0012                     	;# 
   318  0013                     	;# 
   319  0014                     	;# 
   320  0015                     	;# 
   321  0015                     	;# 
   322  0016                     	;# 
   323  0017                     	;# 
   324  0018                     	;# 
   325  0019                     	;# 
   326  001A                     	;# 
   327  001B                     	;# 
   328  001B                     	;# 
   329  001C                     	;# 
   330  001D                     	;# 
   331  001E                     	;# 
   332  001F                     	;# 
   333  0081                     	;# 
   334  0085                     	;# 
   335  0086                     	;# 
   336  0087                     	;# 
   337  0088                     	;# 
   338  0089                     	;# 
   339  008C                     	;# 
   340  008D                     	;# 
   341  008E                     	;# 
   342  008F                     	;# 
   343  0090                     	;# 
   344  0091                     	;# 
   345  0092                     	;# 
   346  0093                     	;# 
   347  0093                     	;# 
   348  0093                     	;# 
   349  0094                     	;# 
   350  0095                     	;# 
   351  0096                     	;# 
   352  0097                     	;# 
   353  0098                     	;# 
   354  0099                     	;# 
   355  009A                     	;# 
   356  009B                     	;# 
   357  009C                     	;# 
   358  009D                     	;# 
   359  009E                     	;# 
   360  009F                     	;# 
   361  0105                     	;# 
   362  0107                     	;# 
   363  0108                     	;# 
   364  0109                     	;# 
   365  010C                     	;# 
   366  010C                     	;# 
   367  010D                     	;# 
   368  010E                     	;# 
   369  010F                     	;# 
   370  0185                     	;# 
   371  0187                     	;# 
   372  0188                     	;# 
   373  0189                     	;# 
   374  018C                     	;# 
   375  018D                     	;# 
   376  0013                     _SSPBUF	set	19
   377  0014                     _SSPCON	set	20
   378  000B                     _INTCONbits	set	11
   379  001F                     _ADCON0bits	set	31
   380  0008                     _PORTD	set	8
   381  0007                     _PORTC	set	7
   382  0006                     _PORTB	set	6
   383  0005                     _PORTA	set	5
   384  0009                     _PORTE	set	9
   385  0049                     _RE1	set	73
   386  0048                     _RE0	set	72
   387  0063                     _SSPIF	set	99
   388  005E                     _PEIE	set	94
   389  005F                     _GIE	set	95
   390  0091                     _SSPCON2bits	set	145
   391  0087                     _TRISCbits	set	135
   392  0094                     _SSPSTAT	set	148
   393  0093                     _SSPADD	set	147
   394  0091                     _SSPCON2	set	145
   395  009F                     _ADCON1bits	set	159
   396  008F                     _OSCCONbits	set	143
   397  0089                     _TRISE	set	137
   398  0088                     _TRISD	set	136
   399  0087                     _TRISC	set	135
   400  0086                     _TRISB	set	134
   401  0085                     _TRISA	set	133
   402  0463                     _SSPIE	set	1123
   403  043C                     _TRISC4	set	1084
   404  043B                     _TRISC3	set	1083
   405  0189                     _ANSELH	set	393
   406  0188                     _ANSEL	set	392
   407                           
   408                           	psect	strings
   409  0003                     __pstrings:
   410  0003                     stringtab:
   411  0003                     __stringtab:
   412  0003                     stringcode:	
   413                           ;	String table - string pointers are 1 byte each
   414                           
   415  0003                     stringdir:
   416  0003  3000               	movlw	high stringdir
   417  0004  008A               	movwf	10
   418  0005  0804               	movf	4,w
   419  0006  0A84               	incf	4,f
   420  0007  0782               	addwf	2,f
   421  0008                     __stringbase:
   422  0008  3400               	retlw	0
   423  0009                     __end_of__stringtab:
   424  0009                     STR_1:
   425  0009  3420               	retlw	32	;' '
   426  000A  3453               	retlw	83	;'S'
   427  000B  3431               	retlw	49	;'1'
   428  000C  343A               	retlw	58	;':'
   429  000D  3420               	retlw	32	;' '
   430  000E  3420               	retlw	32	;' '
   431  000F  3420               	retlw	32	;' '
   432  0010  3453               	retlw	83	;'S'
   433  0011  3432               	retlw	50	;'2'
   434  0012  343A               	retlw	58	;':'
   435  0013  3420               	retlw	32	;' '
   436  0014  3420               	retlw	32	;' '
   437  0015  3420               	retlw	32	;' '
   438  0016  3453               	retlw	83	;'S'
   439  0017  3433               	retlw	51	;'3'
   440  0018  343A               	retlw	58	;':'
   441  0019  3400               	retlw	0
   442  001A                     STR_2:
   443  001A  3425               	retlw	37	;'%'
   444  001B  3420               	retlw	32	;' '
   445  001C  3420               	retlw	32	;' '
   446  001D  3420               	retlw	32	;' '
   447  001E  3400               	retlw	0
   448  001F                     STR_4:
   449  001F  3443               	retlw	67	;'C'
   450  0020  3420               	retlw	32	;' '
   451  0021  3420               	retlw	32	;' '
   452  0022  3400               	retlw	0
   453  0023                     STR_5:
   454  0023  3430               	retlw	48	;'0'
   455  0024  3430               	retlw	48	;'0'
   456  0025  3430               	retlw	48	;'0'
   457  0026  3400               	retlw	0
   458  0027                     STR_3:
   459  0027  34B0               	retlw	-80
   460  0028  3400               	retlw	0
   461                           
   462                           	psect	cinit
   463  07F3                     start_initialization:	
   464                           ; #config settings
   465                           
   466  07F3                     __initialization:
   467                           
   468                           ; Clear objects allocated to BANK0
   469  07F3  1283               	bcf	3,5	;RP0=0, select bank0
   470  07F4  1303               	bcf	3,6	;RP1=0, select bank0
   471  07F5  01AC               	clrf	__pbssBANK0& (0+127)
   472  07F6  01AD               	clrf	(__pbssBANK0+1)& (0+127)
   473  07F7  01AE               	clrf	(__pbssBANK0+2)& (0+127)
   474  07F8  01AF               	clrf	(__pbssBANK0+3)& (0+127)
   475  07F9  01B0               	clrf	(__pbssBANK0+4)& (0+127)
   476  07FA  01B1               	clrf	(__pbssBANK0+5)& (0+127)
   477  07FB  01B2               	clrf	(__pbssBANK0+6)& (0+127)
   478  07FC                     end_of_initialization:	
   479                           ;End of C runtime variable initialization code
   480                           
   481  07FC                     __end_of__initialization:
   482  07FC  0183               	clrf	3
   483  07FD  120A  118A  2EC0   	ljmp	_main	;jump to C main() function
   484                           
   485                           	psect	bssBANK0
   486  002C                     __pbssBANK0:
   487  002C                     _test:
   488  002C                     	ds	1
   489  002D                     _RH:
   490  002D                     	ds	1
   491  002E                     _Humidity:
   492  002E                     	ds	1
   493  002F                     _dec1:
   494  002F                     	ds	1
   495  0030                     _unit1:
   496  0030                     	ds	1
   497  0031                     _dec0:
   498  0031                     	ds	1
   499  0032                     _unit0:
   500  0032                     	ds	1
   501                           
   502                           	psect	cstackCOMMON
   503  0070                     __pcstackCOMMON:
   504  0070                     ?_initSETUP:
   505  0070                     ?_Lcd_Init:	
   506                           ; 1 bytes @ 0x0
   507                           
   508  0070                     ?_Lcd_Clear:	
   509                           ; 1 bytes @ 0x0
   510                           
   511  0070                     ?_Lcd_Write_String:	
   512                           ; 1 bytes @ 0x0
   513                           
   514  0070                     ?_I2C_Master_Start:	
   515                           ; 1 bytes @ 0x0
   516                           
   517  0070                     ??_I2C_Master_Start:	
   518                           ; 1 bytes @ 0x0
   519                           
   520  0070                     ?_I2C_Master_Write:	
   521                           ; 1 bytes @ 0x0
   522                           
   523  0070                     ?_I2C_Master_Stop:	
   524                           ; 1 bytes @ 0x0
   525                           
   526  0070                     ??_I2C_Master_Stop:	
   527                           ; 1 bytes @ 0x0
   528                           
   529  0070                     ?_Lcd_Write_Char:	
   530                           ; 1 bytes @ 0x0
   531                           
   532  0070                     ?_main:	
   533                           ; 1 bytes @ 0x0
   534                           
   535  0070                     ?_I2C_Master_Wait:	
   536                           ; 1 bytes @ 0x0
   537                           
   538  0070                     ??_I2C_Master_Wait:	
   539                           ; 1 bytes @ 0x0
   540                           
   541  0070                     ?_Lcd_Port:	
   542                           ; 1 bytes @ 0x0
   543                           
   544  0070                     ??_Lcd_Port:	
   545                           ; 1 bytes @ 0x0
   546                           
   547  0070                     ?_Lcd_Cmd:	
   548                           ; 1 bytes @ 0x0
   549                           
   550  0070                     ?_I2C_Master_Read:	
   551                           ; 1 bytes @ 0x0
   552                           
   553  0070                     ?___awdiv:	
   554                           ; 2 bytes @ 0x0
   555                           
   556  0070                     ?___lldiv:	
   557                           ; 2 bytes @ 0x0
   558                           
   559  0070                     Lcd_Port@a:	
   560                           ; 4 bytes @ 0x0
   561                           
   562  0070                     I2C_Master_Write@d:	
   563                           ; 1 bytes @ 0x0
   564                           
   565  0070                     I2C_Master_Read@a:	
   566                           ; 2 bytes @ 0x0
   567                           
   568  0070                     ___awdiv@divisor:	
   569                           ; 2 bytes @ 0x0
   570                           
   571  0070                     ___lldiv@divisor:	
   572                           ; 2 bytes @ 0x0
   573                           
   574                           
   575                           ; 4 bytes @ 0x0
   576  0070                     	ds	1
   577  0071                     ??_Lcd_Write_Char:
   578  0071                     ??_Lcd_Cmd:	
   579                           ; 1 bytes @ 0x1
   580                           
   581                           
   582                           ; 1 bytes @ 0x1
   583  0071                     	ds	1
   584  0072                     ??_I2C_Master_Write:
   585  0072                     ??_I2C_Master_Read:	
   586                           ; 1 bytes @ 0x2
   587                           
   588  0072                     Lcd_Write_Char@a:	
   589                           ; 1 bytes @ 0x2
   590                           
   591  0072                     ___awdiv@dividend:	
   592                           ; 1 bytes @ 0x2
   593                           
   594                           
   595                           ; 2 bytes @ 0x2
   596  0072                     	ds	1
   597  0073                     Lcd_Cmd@a:
   598  0073                     Lcd_Write_Char@temp:	
   599                           ; 1 bytes @ 0x3
   600                           
   601                           
   602                           ; 1 bytes @ 0x3
   603  0073                     	ds	1
   604  0074                     ??_Lcd_Init:
   605  0074                     ??_Lcd_Clear:	
   606                           ; 1 bytes @ 0x4
   607                           
   608  0074                     ?_Lcd_Set_Cursor:	
   609                           ; 1 bytes @ 0x4
   610                           
   611  0074                     ??___awdiv:	
   612                           ; 1 bytes @ 0x4
   613                           
   614  0074                     Lcd_Set_Cursor@b:	
   615                           ; 1 bytes @ 0x4
   616                           
   617  0074                     Lcd_Write_Char@y:	
   618                           ; 1 bytes @ 0x4
   619                           
   620  0074                     I2C_Master_Read@temp:	
   621                           ; 1 bytes @ 0x4
   622                           
   623  0074                     ___lldiv@dividend:	
   624                           ; 2 bytes @ 0x4
   625                           
   626                           
   627                           ; 4 bytes @ 0x4
   628  0074                     	ds	1
   629  0075                     ??_Lcd_Set_Cursor:
   630  0075                     ??_Lcd_Write_String:	
   631                           ; 1 bytes @ 0x5
   632                           
   633  0075                     ___awdiv@counter:	
   634                           ; 1 bytes @ 0x5
   635                           
   636  0075                     Lcd_Write_String@i:	
   637                           ; 1 bytes @ 0x5
   638                           
   639                           
   640                           ; 2 bytes @ 0x5
   641  0075                     	ds	1
   642  0076                     ___awdiv@sign:
   643                           
   644                           ; 1 bytes @ 0x6
   645  0076                     	ds	1
   646  0077                     Lcd_Set_Cursor@a:
   647  0077                     Lcd_Write_String@a:	
   648                           ; 1 bytes @ 0x7
   649                           
   650  0077                     ___awdiv@quotient:	
   651                           ; 1 bytes @ 0x7
   652                           
   653                           
   654                           ; 2 bytes @ 0x7
   655  0077                     	ds	1
   656  0078                     ??___lldiv:
   657  0078                     Lcd_Set_Cursor@z:	
   658                           ; 1 bytes @ 0x8
   659                           
   660                           
   661                           ; 1 bytes @ 0x8
   662  0078                     	ds	1
   663  0079                     ?___awmod:
   664  0079                     Lcd_Set_Cursor@y:	
   665                           ; 2 bytes @ 0x9
   666                           
   667  0079                     ___awmod@divisor:	
   668                           ; 1 bytes @ 0x9
   669                           
   670  0079                     ___lldiv@quotient:	
   671                           ; 2 bytes @ 0x9
   672                           
   673                           
   674                           ; 4 bytes @ 0x9
   675  0079                     	ds	1
   676  007A                     Lcd_Set_Cursor@temp:
   677                           
   678                           ; 1 bytes @ 0xA
   679  007A                     	ds	1
   680  007B                     ___awmod@dividend:
   681                           
   682                           ; 2 bytes @ 0xB
   683  007B                     	ds	2
   684  007D                     ??___awmod:
   685  007D                     ___lldiv@counter:	
   686                           ; 1 bytes @ 0xD
   687                           
   688                           
   689                           ; 1 bytes @ 0xD
   690  007D                     	ds	1
   691                           
   692                           	psect	cstackBANK0
   693  0020                     __pcstackBANK0:
   694  0020                     ?_I2C_Master_Init:
   695  0020                     ___awmod@counter:	
   696                           ; 1 bytes @ 0x0
   697                           
   698  0020                     I2C_Master_Init@c:	
   699                           ; 1 bytes @ 0x0
   700                           
   701                           
   702                           ; 4 bytes @ 0x0
   703  0020                     	ds	1
   704  0021                     ___awmod@sign:
   705                           
   706                           ; 1 bytes @ 0x1
   707  0021                     	ds	3
   708  0024                     ??_I2C_Master_Init:
   709                           
   710                           ; 1 bytes @ 0x4
   711  0024                     	ds	4
   712  0028                     ??_initSETUP:
   713                           
   714                           ; 1 bytes @ 0x8
   715  0028                     	ds	1
   716  0029                     ??_main:
   717                           
   718                           ; 1 bytes @ 0x9
   719  0029                     	ds	3
   720                           
   721                           	psect	maintext
   722  06C0                     __pmaintext:	
   723 ;;
   724 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   725 ;;
   726 ;; *************** function _main *****************
   727 ;; Defined at:
   728 ;;		line 40 in file "master.c"
   729 ;; Parameters:    Size  Location     Type
   730 ;;		None
   731 ;; Auto vars:     Size  Location     Type
   732 ;;		None
   733 ;; Return value:  Size  Location     Type
   734 ;;                  1    wreg      void 
   735 ;; Registers used:
   736 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   737 ;; Tracked objects:
   738 ;;		On entry : B00/0
   739 ;;		On exit  : 0/0
   740 ;;		Unchanged: 0/0
   741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   742 ;;      Params:         0       0       0       0       0
   743 ;;      Locals:         0       0       0       0       0
   744 ;;      Temps:          0       3       0       0       0
   745 ;;      Totals:         0       3       0       0       0
   746 ;;Total ram usage:        3 bytes
   747 ;; Hardware stack levels required when called: 3
   748 ;; This function calls:
   749 ;;		_I2C_Master_Read
   750 ;;		_I2C_Master_Start
   751 ;;		_I2C_Master_Stop
   752 ;;		_I2C_Master_Write
   753 ;;		_Lcd_Clear
   754 ;;		_Lcd_Init
   755 ;;		_Lcd_Set_Cursor
   756 ;;		_Lcd_Write_Char
   757 ;;		_Lcd_Write_String
   758 ;;		___awdiv
   759 ;;		___awmod
   760 ;;		_initSETUP
   761 ;; This function is called by:
   762 ;;		Startup code after reset
   763 ;; This function uses a non-reentrant model
   764 ;;
   765                           
   766                           
   767                           ;psect for function _main
   768  06C0                     _main:
   769  06C0                     l1382:	
   770                           ;incstack = 0
   771                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   772                           
   773                           
   774                           ;master.c: 41:     initSETUP();
   775  06C0  120A  118A  24BF  120A  118A  	fcall	_initSETUP
   776                           
   777                           ;master.c: 42:     Lcd_Init();
   778  06C5  120A  118A  24FF  120A  118A  	fcall	_Lcd_Init
   779                           
   780                           ;master.c: 43:     Lcd_Clear();
   781  06CA  120A  118A  23EF  120A  118A  	fcall	_Lcd_Clear
   782                           
   783                           ;master.c: 44:     Lcd_Set_Cursor(1,1);
   784  06CF  01F4               	clrf	Lcd_Set_Cursor@b
   785  06D0  0AF4               	incf	Lcd_Set_Cursor@b,f
   786  06D1  3001               	movlw	1
   787  06D2  120A  118A  2546  120A  118A  	fcall	_Lcd_Set_Cursor
   788  06D7                     l1384:
   789                           
   790                           ;master.c: 45:     Lcd_Write_String(" S1:   S2:   S3:");
   791  06D7  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   792  06D8  120A  118A  2434  120A  118A  	fcall	_Lcd_Write_String
   793  06DD                     l1386:
   794                           
   795                           ;master.c: 47:         I2C_Master_Start();
   796  06DD  120A  118A  23C6  120A  118A  	fcall	_I2C_Master_Start
   797  06E2                     l1388:
   798                           
   799                           ;master.c: 48:         I2C_Master_Write(0x81);
   800  06E2  3081               	movlw	129
   801  06E3  00F0               	movwf	I2C_Master_Write@d
   802  06E4  3000               	movlw	0
   803  06E5  00F1               	movwf	I2C_Master_Write@d+1
   804  06E6  120A  118A  23D8  120A  118A  	fcall	_I2C_Master_Write
   805  06EB                     l1390:
   806                           
   807                           ;master.c: 49:         if (test==0){
   808  06EB  1283               	bcf	3,5	;RP0=0, select bank0
   809  06EC  1303               	bcf	3,6	;RP1=0, select bank0
   810  06ED  082C               	movf	_test,w
   811  06EE  1D03               	btfss	3,2
   812  06EF  2EF1               	goto	u731
   813  06F0  2EF2               	goto	u730
   814  06F1                     u731:
   815  06F1  2F03               	goto	l1396
   816  06F2                     u730:
   817  06F2                     l1392:
   818                           
   819                           ;master.c: 50:                 RH=I2C_Master_Read(0);
   820  06F2  3000               	movlw	0
   821  06F3  00F0               	movwf	I2C_Master_Read@a
   822  06F4  00F1               	movwf	I2C_Master_Read@a+1
   823  06F5  120A  118A  2459  120A  118A  	fcall	_I2C_Master_Read
   824  06FA  0870               	movf	?_I2C_Master_Read,w
   825  06FB  1283               	bcf	3,5	;RP0=0, select bank0
   826  06FC  1303               	bcf	3,6	;RP1=0, select bank0
   827  06FD  00A9               	movwf	??_main
   828  06FE  0829               	movf	??_main,w
   829  06FF  00AD               	movwf	_RH
   830  0700                     l1394:
   831                           
   832                           ;master.c: 51:                 test = 1;
   833  0700  01AC               	clrf	_test
   834  0701  0AAC               	incf	_test,f
   835                           
   836                           ;master.c: 52:             }
   837  0702  2F17               	goto	l1402
   838  0703                     l1396:
   839  0703  032C               	decf	_test,w
   840  0704  1D03               	btfss	3,2
   841  0705  2F07               	goto	u741
   842  0706  2F08               	goto	u740
   843  0707                     u741:
   844  0707  2F17               	goto	l1402
   845  0708                     u740:
   846  0708                     l1398:
   847                           
   848                           ;master.c: 54:                 Humidity=I2C_Master_Read(0);
   849  0708  3000               	movlw	0
   850  0709  00F0               	movwf	I2C_Master_Read@a
   851  070A  00F1               	movwf	I2C_Master_Read@a+1
   852  070B  120A  118A  2459  120A  118A  	fcall	_I2C_Master_Read
   853  0710  0870               	movf	?_I2C_Master_Read,w
   854  0711  1283               	bcf	3,5	;RP0=0, select bank0
   855  0712  1303               	bcf	3,6	;RP1=0, select bank0
   856  0713  00A9               	movwf	??_main
   857  0714  0829               	movf	??_main,w
   858  0715  00AE               	movwf	_Humidity
   859  0716                     l1400:
   860                           
   861                           ;master.c: 55:                 test = 0;
   862  0716  01AC               	clrf	_test
   863  0717                     l1402:
   864                           
   865                           ;master.c: 57:         I2C_Master_Stop();
   866  0717  120A  118A  23CF  120A  118A  	fcall	_I2C_Master_Stop
   867  071C                     l1404:
   868                           
   869                           ;master.c: 58:         _delay((unsigned long)((200)*(8000000/4000.0)));
   870  071C  3003               	movlw	3
   871  071D  1283               	bcf	3,5	;RP0=0, select bank0
   872  071E  1303               	bcf	3,6	;RP1=0, select bank0
   873  071F  00AB               	movwf	??_main+2
   874  0720  3008               	movlw	8
   875  0721  00AA               	movwf	??_main+1
   876  0722  3076               	movlw	118
   877  0723  00A9               	movwf	??_main
   878  0724                     u757:
   879  0724  0BA9               	decfsz	??_main,f
   880  0725  2F24               	goto	u757
   881  0726  0BAA               	decfsz	??_main+1,f
   882  0727  2F24               	goto	u757
   883  0728  0BAB               	decfsz	??_main+2,f
   884  0729  2F24               	goto	u757
   885  072A  0000               	nop
   886  072B                     l1406:
   887                           
   888                           ;master.c: 59:         Lcd_Set_Cursor(2,1);
   889  072B  01F4               	clrf	Lcd_Set_Cursor@b
   890  072C  0AF4               	incf	Lcd_Set_Cursor@b,f
   891  072D  3002               	movlw	2
   892  072E  120A  118A  2546  120A  118A  	fcall	_Lcd_Set_Cursor
   893  0733                     l1408:
   894                           
   895                           ;master.c: 60:         unit0 = 48 + ((Humidity/10) %10);
   896  0733  300A               	movlw	10
   897  0734  00F9               	movwf	___awmod@divisor
   898  0735  3000               	movlw	0
   899  0736  00FA               	movwf	___awmod@divisor+1
   900  0737  300A               	movlw	10
   901  0738  00F0               	movwf	___awdiv@divisor
   902  0739  3000               	movlw	0
   903  073A  00F1               	movwf	___awdiv@divisor+1
   904  073B  1283               	bcf	3,5	;RP0=0, select bank0
   905  073C  1303               	bcf	3,6	;RP1=0, select bank0
   906  073D  082E               	movf	_Humidity,w
   907  073E  00A9               	movwf	??_main
   908  073F  01AA               	clrf	??_main+1
   909  0740  0829               	movf	??_main,w
   910  0741  00F2               	movwf	___awdiv@dividend
   911  0742  082A               	movf	??_main+1,w
   912  0743  00F3               	movwf	___awdiv@dividend+1
   913  0744  120A  118A  2659  120A  118A  	fcall	___awdiv
   914  0749  0871               	movf	?___awdiv+1,w
   915  074A  00FC               	movwf	___awmod@dividend+1
   916  074B  0870               	movf	?___awdiv,w
   917  074C  00FB               	movwf	___awmod@dividend
   918  074D  120A  118A  2598  120A  118A  	fcall	___awmod
   919  0752  0879               	movf	?___awmod,w
   920  0753  3E30               	addlw	48
   921  0754  1283               	bcf	3,5	;RP0=0, select bank0
   922  0755  1303               	bcf	3,6	;RP1=0, select bank0
   923  0756  00AB               	movwf	??_main+2
   924  0757  082B               	movf	??_main+2,w
   925  0758  00B2               	movwf	_unit0
   926  0759                     l1410:
   927                           
   928                           ;master.c: 61:         dec0 = 48 + (Humidity %10);
   929  0759  300A               	movlw	10
   930  075A  00F9               	movwf	___awmod@divisor
   931  075B  3000               	movlw	0
   932  075C  00FA               	movwf	___awmod@divisor+1
   933  075D  082E               	movf	_Humidity,w
   934  075E  00A9               	movwf	??_main
   935  075F  01AA               	clrf	??_main+1
   936  0760  0829               	movf	??_main,w
   937  0761  00FB               	movwf	___awmod@dividend
   938  0762  082A               	movf	??_main+1,w
   939  0763  00FC               	movwf	___awmod@dividend+1
   940  0764  120A  118A  2598  120A  118A  	fcall	___awmod
   941  0769  0879               	movf	?___awmod,w
   942  076A  3E30               	addlw	48
   943  076B  1283               	bcf	3,5	;RP0=0, select bank0
   944  076C  1303               	bcf	3,6	;RP1=0, select bank0
   945  076D  00AB               	movwf	??_main+2
   946  076E  082B               	movf	??_main+2,w
   947  076F  00B1               	movwf	_dec0
   948  0770                     l1412:
   949                           
   950                           ;master.c: 62:         unit1 =48 + ((RH / 10) % 10);
   951  0770  300A               	movlw	10
   952  0771  00F9               	movwf	___awmod@divisor
   953  0772  3000               	movlw	0
   954  0773  00FA               	movwf	___awmod@divisor+1
   955  0774  300A               	movlw	10
   956  0775  00F0               	movwf	___awdiv@divisor
   957  0776  3000               	movlw	0
   958  0777  00F1               	movwf	___awdiv@divisor+1
   959  0778  082D               	movf	_RH,w
   960  0779  00A9               	movwf	??_main
   961  077A  01AA               	clrf	??_main+1
   962  077B  0829               	movf	??_main,w
   963  077C  00F2               	movwf	___awdiv@dividend
   964  077D  082A               	movf	??_main+1,w
   965  077E  00F3               	movwf	___awdiv@dividend+1
   966  077F  120A  118A  2659  120A  118A  	fcall	___awdiv
   967  0784  0871               	movf	?___awdiv+1,w
   968  0785  00FC               	movwf	___awmod@dividend+1
   969  0786  0870               	movf	?___awdiv,w
   970  0787  00FB               	movwf	___awmod@dividend
   971  0788  120A  118A  2598  120A  118A  	fcall	___awmod
   972  078D  0879               	movf	?___awmod,w
   973  078E  3E30               	addlw	48
   974  078F  1283               	bcf	3,5	;RP0=0, select bank0
   975  0790  1303               	bcf	3,6	;RP1=0, select bank0
   976  0791  00AB               	movwf	??_main+2
   977  0792  082B               	movf	??_main+2,w
   978  0793  00B0               	movwf	_unit1
   979  0794                     l1414:
   980                           
   981                           ;master.c: 63:         dec1 = 48 + (RH % 10);
   982  0794  300A               	movlw	10
   983  0795  00F9               	movwf	___awmod@divisor
   984  0796  3000               	movlw	0
   985  0797  00FA               	movwf	___awmod@divisor+1
   986  0798  082D               	movf	_RH,w
   987  0799  00A9               	movwf	??_main
   988  079A  01AA               	clrf	??_main+1
   989  079B  0829               	movf	??_main,w
   990  079C  00FB               	movwf	___awmod@dividend
   991  079D  082A               	movf	??_main+1,w
   992  079E  00FC               	movwf	___awmod@dividend+1
   993  079F  120A  118A  2598  120A  118A  	fcall	___awmod
   994  07A4  0879               	movf	?___awmod,w
   995  07A5  3E30               	addlw	48
   996  07A6  1283               	bcf	3,5	;RP0=0, select bank0
   997  07A7  1303               	bcf	3,6	;RP1=0, select bank0
   998  07A8  00AB               	movwf	??_main+2
   999  07A9  082B               	movf	??_main+2,w
  1000  07AA  00AF               	movwf	_dec1
  1001  07AB                     l1416:
  1002                           
  1003                           ;master.c: 64:         Lcd_Write_Char(unit0);
  1004  07AB  0832               	movf	_unit0,w
  1005  07AC  120A  118A  2416  120A  118A  	fcall	_Lcd_Write_Char
  1006  07B1                     l1418:
  1007                           
  1008                           ;master.c: 65:         Lcd_Write_Char(dec0);
  1009  07B1  1283               	bcf	3,5	;RP0=0, select bank0
  1010  07B2  1303               	bcf	3,6	;RP1=0, select bank0
  1011  07B3  0831               	movf	_dec0,w
  1012  07B4  120A  118A  2416  120A  118A  	fcall	_Lcd_Write_Char
  1013  07B9                     l1420:
  1014                           
  1015                           ;master.c: 66:         Lcd_Write_String("%   ");
  1016  07B9  3012               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1017  07BA  120A  118A  2434  120A  118A  	fcall	_Lcd_Write_String
  1018  07BF                     l1422:
  1019                           
  1020                           ;master.c: 67:         Lcd_Write_Char(unit1);
  1021  07BF  1283               	bcf	3,5	;RP0=0, select bank0
  1022  07C0  1303               	bcf	3,6	;RP1=0, select bank0
  1023  07C1  0830               	movf	_unit1,w
  1024  07C2  120A  118A  2416  120A  118A  	fcall	_Lcd_Write_Char
  1025  07C7                     l1424:
  1026                           
  1027                           ;master.c: 68:         Lcd_Write_Char(dec1);
  1028  07C7  1283               	bcf	3,5	;RP0=0, select bank0
  1029  07C8  1303               	bcf	3,6	;RP1=0, select bank0
  1030  07C9  082F               	movf	_dec1,w
  1031  07CA  120A  118A  2416  120A  118A  	fcall	_Lcd_Write_Char
  1032  07CF                     l1426:
  1033                           
  1034                           ;master.c: 69:         Lcd_Write_Char("°");
  1035  07CF  301F               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1036  07D0  120A  118A  2416  120A  118A  	fcall	_Lcd_Write_Char
  1037  07D5                     l1428:
  1038                           
  1039                           ;master.c: 70:         Lcd_Write_String("C  ");
  1040  07D5  3017               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1041  07D6  120A  118A  2434  120A  118A  	fcall	_Lcd_Write_String
  1042  07DB                     l1430:
  1043                           
  1044                           ;master.c: 71:         Lcd_Write_String("000");
  1045  07DB  301B               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1046  07DC  120A  118A  2434  120A  118A  	fcall	_Lcd_Write_String
  1047  07E1                     l1432:
  1048                           
  1049                           ;master.c: 72:         _delay((unsigned long)((1000)*(8000000/4000.0)));
  1050  07E1  300B               	movlw	11
  1051  07E2  1283               	bcf	3,5	;RP0=0, select bank0
  1052  07E3  1303               	bcf	3,6	;RP1=0, select bank0
  1053  07E4  00AB               	movwf	??_main+2
  1054  07E5  3026               	movlw	38
  1055  07E6  00AA               	movwf	??_main+1
  1056  07E7  305D               	movlw	93
  1057  07E8  00A9               	movwf	??_main
  1058  07E9                     u767:
  1059  07E9  0BA9               	decfsz	??_main,f
  1060  07EA  2FE9               	goto	u767
  1061  07EB  0BAA               	decfsz	??_main+1,f
  1062  07EC  2FE9               	goto	u767
  1063  07ED  0BAB               	decfsz	??_main+2,f
  1064  07EE  2FE9               	goto	u767
  1065  07EF  2EDD               	goto	l1386
  1066  07F0  120A  118A  2800   	ljmp	start
  1067  07F3                     __end_of_main:
  1068                           
  1069                           	psect	text1
  1070  04BF                     __ptext1:	
  1071 ;; *************** function _initSETUP *****************
  1072 ;; Defined at:
  1073 ;;		line 77 in file "master.c"
  1074 ;; Parameters:    Size  Location     Type
  1075 ;;		None
  1076 ;; Auto vars:     Size  Location     Type
  1077 ;;		None
  1078 ;; Return value:  Size  Location     Type
  1079 ;;                  1    wreg      void 
  1080 ;; Registers used:
  1081 ;;		wreg, status,2, status,0, pclath, cstack
  1082 ;; Tracked objects:
  1083 ;;		On entry : 0/0
  1084 ;;		On exit  : 0/0
  1085 ;;		Unchanged: 0/0
  1086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1087 ;;      Params:         0       0       0       0       0
  1088 ;;      Locals:         0       0       0       0       0
  1089 ;;      Temps:          0       1       0       0       0
  1090 ;;      Totals:         0       1       0       0       0
  1091 ;;Total ram usage:        1 bytes
  1092 ;; Hardware stack levels used: 1
  1093 ;; Hardware stack levels required when called: 2
  1094 ;; This function calls:
  1095 ;;		_I2C_Master_Init
  1096 ;; This function is called by:
  1097 ;;		_main
  1098 ;; This function uses a non-reentrant model
  1099 ;;
  1100                           
  1101                           
  1102                           ;psect for function _initSETUP
  1103  04BF                     _initSETUP:
  1104  04BF                     l1178:	
  1105                           ;incstack = 0
  1106                           ; Regs used in _initSETUP: [wreg+status,2+status,0+pclath+cstack]
  1107                           
  1108                           
  1109                           ;master.c: 78:     TRISA = 0b00000001;
  1110  04BF  3001               	movlw	1
  1111  04C0  1683               	bsf	3,5	;RP0=1, select bank1
  1112  04C1  1303               	bcf	3,6	;RP1=0, select bank1
  1113  04C2  0085               	movwf	5	;volatile
  1114  04C3                     l1180:
  1115                           
  1116                           ;master.c: 79:     TRISB = 0;
  1117  04C3  0186               	clrf	6	;volatile
  1118  04C4                     l1182:
  1119                           
  1120                           ;master.c: 80:     TRISC = 0;
  1121  04C4  0187               	clrf	7	;volatile
  1122  04C5                     l1184:
  1123                           
  1124                           ;master.c: 81:     TRISD = 0;
  1125  04C5  0188               	clrf	8	;volatile
  1126  04C6                     l1186:
  1127                           
  1128                           ;master.c: 82:     TRISE = 0;
  1129  04C6  0189               	clrf	9	;volatile
  1130  04C7                     l1188:
  1131                           
  1132                           ;master.c: 83:     PORTE = 0;
  1133  04C7  1283               	bcf	3,5	;RP0=0, select bank0
  1134  04C8  1303               	bcf	3,6	;RP1=0, select bank0
  1135  04C9  0189               	clrf	9	;volatile
  1136  04CA                     l1190:
  1137                           
  1138                           ;master.c: 84:     PORTA = 0;
  1139  04CA  0185               	clrf	5	;volatile
  1140  04CB                     l1192:
  1141                           
  1142                           ;master.c: 85:     PORTB = 0;
  1143  04CB  0186               	clrf	6	;volatile
  1144  04CC                     l1194:
  1145                           
  1146                           ;master.c: 86:     PORTC = 0;
  1147  04CC  0187               	clrf	7	;volatile
  1148  04CD                     l1196:
  1149                           
  1150                           ;master.c: 87:     PORTD = 0;
  1151  04CD  0188               	clrf	8	;volatile
  1152  04CE                     l1198:
  1153                           
  1154                           ;master.c: 88:     ANSEL = 0b00000001;
  1155  04CE  3001               	movlw	1
  1156  04CF  1683               	bsf	3,5	;RP0=1, select bank3
  1157  04D0  1703               	bsf	3,6	;RP1=1, select bank3
  1158  04D1  0088               	movwf	8	;volatile
  1159                           
  1160                           ;master.c: 89:     ANSELH = 0;
  1161  04D2  0189               	clrf	9	;volatile
  1162  04D3                     l1200:
  1163                           
  1164                           ;master.c: 90:     OSCCONbits.IRCF2 = 1;
  1165  04D3  1683               	bsf	3,5	;RP0=1, select bank1
  1166  04D4  1303               	bcf	3,6	;RP1=0, select bank1
  1167  04D5  170F               	bsf	15,6	;volatile
  1168  04D6                     l1202:
  1169                           
  1170                           ;master.c: 91:     OSCCONbits.IRCF1 = 1;
  1171  04D6  168F               	bsf	15,5	;volatile
  1172  04D7                     l1204:
  1173                           
  1174                           ;master.c: 92:     OSCCONbits.IRCF0 = 1;
  1175  04D7  160F               	bsf	15,4	;volatile
  1176  04D8                     l1206:
  1177                           
  1178                           ;master.c: 93:     OSCCONbits.SCS = 1;
  1179  04D8  140F               	bsf	15,0	;volatile
  1180  04D9                     l1208:
  1181                           
  1182                           ;master.c: 95:     ADCON1bits.ADFM = 0;
  1183  04D9  139F               	bcf	31,7	;volatile
  1184  04DA                     l1210:
  1185                           
  1186                           ;master.c: 96:     ADCON1bits.VCFG0 = 0;
  1187  04DA  121F               	bcf	31,4	;volatile
  1188  04DB                     l1212:
  1189                           
  1190                           ;master.c: 97:     ADCON1bits.VCFG1 = 0;
  1191  04DB  129F               	bcf	31,5	;volatile
  1192  04DC                     l1214:
  1193                           
  1194                           ;master.c: 98:     ADCON0bits.ADCS = 0b10;
  1195  04DC  1283               	bcf	3,5	;RP0=0, select bank0
  1196  04DD  1303               	bcf	3,6	;RP1=0, select bank0
  1197  04DE  081F               	movf	31,w	;volatile
  1198  04DF  393F               	andlw	-193
  1199  04E0  3880               	iorlw	128
  1200  04E1  009F               	movwf	31	;volatile
  1201  04E2                     l1216:
  1202                           
  1203                           ;master.c: 99:     ADCON0bits.CHS = 0;
  1204  04E2  30C3               	movlw	-61
  1205  04E3  059F               	andwf	31,f	;volatile
  1206  04E4                     l1218:
  1207                           
  1208                           ;master.c: 100:     ADCON0bits.ADON = 1;
  1209  04E4  141F               	bsf	31,0	;volatile
  1210  04E5                     l1220:
  1211                           
  1212                           ;master.c: 101:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  1213  04E5  3020               	movlw	32
  1214  04E6  1283               	bcf	3,5	;RP0=0, select bank0
  1215  04E7  1303               	bcf	3,6	;RP1=0, select bank0
  1216  04E8  00A8               	movwf	??_initSETUP
  1217  04E9                     u777:
  1218  04E9  0BA8               	decfsz	??_initSETUP,f
  1219  04EA  2CE9               	goto	u777
  1220  04EB  0000               	nop
  1221  04EC                     l1222:
  1222                           
  1223                           ;master.c: 102:     ADCON0bits.GO = 1;
  1224  04EC  1283               	bcf	3,5	;RP0=0, select bank0
  1225  04ED  1303               	bcf	3,6	;RP1=0, select bank0
  1226  04EE  149F               	bsf	31,1	;volatile
  1227  04EF                     l1224:
  1228                           
  1229                           ;master.c: 104:     INTCONbits.GIE = 1;
  1230  04EF  178B               	bsf	11,7	;volatile
  1231  04F0                     l1226:
  1232                           
  1233                           ;master.c: 105:     INTCONbits.PEIE =1;
  1234  04F0  170B               	bsf	11,6	;volatile
  1235  04F1                     l1228:
  1236                           
  1237                           ;master.c: 106:     I2C_Master_Init(100000);
  1238  04F1  3000               	movlw	0
  1239  04F2  00A3               	movwf	I2C_Master_Init@c+3
  1240  04F3  3001               	movlw	1
  1241  04F4  00A2               	movwf	I2C_Master_Init@c+2
  1242  04F5  3086               	movlw	134
  1243  04F6  00A1               	movwf	I2C_Master_Init@c+1
  1244  04F7  30A0               	movlw	160
  1245  04F8  00A0               	movwf	I2C_Master_Init@c
  1246  04F9  120A  118A  2487  120A  118A  	fcall	_I2C_Master_Init
  1247  04FE                     l84:
  1248  04FE  0008               	return
  1249  04FF                     __end_of_initSETUP:
  1250                           
  1251                           	psect	text2
  1252  0487                     __ptext2:	
  1253 ;; *************** function _I2C_Master_Init *****************
  1254 ;; Defined at:
  1255 ;;		line 16 in file "I2C.c"
  1256 ;; Parameters:    Size  Location     Type
  1257 ;;  c               4    0[BANK0 ] const unsigned long 
  1258 ;; Auto vars:     Size  Location     Type
  1259 ;;		None
  1260 ;; Return value:  Size  Location     Type
  1261 ;;                  1    wreg      void 
  1262 ;; Registers used:
  1263 ;;		wreg, status,2, status,0, pclath, cstack
  1264 ;; Tracked objects:
  1265 ;;		On entry : 0/0
  1266 ;;		On exit  : 0/0
  1267 ;;		Unchanged: 0/0
  1268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1269 ;;      Params:         0       4       0       0       0
  1270 ;;      Locals:         0       0       0       0       0
  1271 ;;      Temps:          0       4       0       0       0
  1272 ;;      Totals:         0       8       0       0       0
  1273 ;;Total ram usage:        8 bytes
  1274 ;; Hardware stack levels used: 1
  1275 ;; Hardware stack levels required when called: 1
  1276 ;; This function calls:
  1277 ;;		___lldiv
  1278 ;; This function is called by:
  1279 ;;		_initSETUP
  1280 ;; This function uses a non-reentrant model
  1281 ;;
  1282                           
  1283                           
  1284                           ;psect for function _I2C_Master_Init
  1285  0487                     _I2C_Master_Init:
  1286  0487                     l1152:	
  1287                           ;incstack = 0
  1288                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1289                           
  1290                           
  1291                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  1292  0487  3028               	movlw	40
  1293  0488  1283               	bcf	3,5	;RP0=0, select bank0
  1294  0489  1303               	bcf	3,6	;RP1=0, select bank0
  1295  048A  0094               	movwf	20	;volatile
  1296  048B                     l1154:
  1297                           
  1298                           ;I2C.c: 19:     SSPCON2 = 0;
  1299  048B  1683               	bsf	3,5	;RP0=1, select bank1
  1300  048C  1303               	bcf	3,6	;RP1=0, select bank1
  1301  048D  0191               	clrf	17	;volatile
  1302  048E                     l1156:
  1303                           
  1304                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  1305  048E  1283               	bcf	3,5	;RP0=0, select bank0
  1306  048F  1303               	bcf	3,6	;RP1=0, select bank0
  1307  0490  0820               	movf	I2C_Master_Init@c,w
  1308  0491  00A4               	movwf	??_I2C_Master_Init
  1309  0492  0821               	movf	I2C_Master_Init@c+1,w
  1310  0493  00A5               	movwf	??_I2C_Master_Init+1
  1311  0494  0822               	movf	I2C_Master_Init@c+2,w
  1312  0495  00A6               	movwf	??_I2C_Master_Init+2
  1313  0496  0823               	movf	I2C_Master_Init@c+3,w
  1314  0497  00A7               	movwf	??_I2C_Master_Init+3
  1315  0498  3002               	movlw	2
  1316  0499                     u455:
  1317  0499  1003               	clrc
  1318  049A  0DA4               	rlf	??_I2C_Master_Init,f
  1319  049B  0DA5               	rlf	??_I2C_Master_Init+1,f
  1320  049C  0DA6               	rlf	??_I2C_Master_Init+2,f
  1321  049D  0DA7               	rlf	??_I2C_Master_Init+3,f
  1322  049E                     u450:
  1323  049E  3EFF               	addlw	-1
  1324  049F  1D03               	skipz
  1325  04A0  2C99               	goto	u455
  1326  04A1  0827               	movf	??_I2C_Master_Init+3,w
  1327  04A2  00F3               	movwf	___lldiv@divisor+3
  1328  04A3  0826               	movf	??_I2C_Master_Init+2,w
  1329  04A4  00F2               	movwf	___lldiv@divisor+2
  1330  04A5  0825               	movf	??_I2C_Master_Init+1,w
  1331  04A6  00F1               	movwf	___lldiv@divisor+1
  1332  04A7  0824               	movf	??_I2C_Master_Init,w
  1333  04A8  00F0               	movwf	___lldiv@divisor
  1334  04A9  3000               	movlw	0
  1335  04AA  00F7               	movwf	___lldiv@dividend+3
  1336  04AB  307A               	movlw	122
  1337  04AC  00F6               	movwf	___lldiv@dividend+2
  1338  04AD  3012               	movlw	18
  1339  04AE  00F5               	movwf	___lldiv@dividend+1
  1340  04AF  3000               	movlw	0
  1341  04B0  00F4               	movwf	___lldiv@dividend
  1342  04B1  120A  118A  25F3  120A  118A  	fcall	___lldiv
  1343  04B6  0870               	movf	?___lldiv,w
  1344  04B7  3EFF               	addlw	255
  1345  04B8  1683               	bsf	3,5	;RP0=1, select bank1
  1346  04B9  1303               	bcf	3,6	;RP1=0, select bank1
  1347  04BA  0093               	movwf	19	;volatile
  1348  04BB                     l1158:
  1349                           
  1350                           ;I2C.c: 21:     SSPSTAT = 0;
  1351  04BB  0194               	clrf	20	;volatile
  1352  04BC                     l1160:
  1353                           
  1354                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  1355  04BC  1587               	bsf	7,3	;volatile
  1356  04BD                     l1162:
  1357                           
  1358                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  1359  04BD  1607               	bsf	7,4	;volatile
  1360  04BE                     l113:
  1361  04BE  0008               	return
  1362  04BF                     __end_of_I2C_Master_Init:
  1363                           
  1364                           	psect	text3
  1365  05F3                     __ptext3:	
  1366 ;; *************** function ___lldiv *****************
  1367 ;; Defined at:
  1368 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
  1369 ;; Parameters:    Size  Location     Type
  1370 ;;  divisor         4    0[COMMON] unsigned long 
  1371 ;;  dividend        4    4[COMMON] unsigned long 
  1372 ;; Auto vars:     Size  Location     Type
  1373 ;;  quotient        4    9[COMMON] unsigned long 
  1374 ;;  counter         1   13[COMMON] unsigned char 
  1375 ;; Return value:  Size  Location     Type
  1376 ;;                  4    0[COMMON] unsigned long 
  1377 ;; Registers used:
  1378 ;;		wreg, status,2, status,0
  1379 ;; Tracked objects:
  1380 ;;		On entry : 0/0
  1381 ;;		On exit  : 0/0
  1382 ;;		Unchanged: 0/0
  1383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1384 ;;      Params:         8       0       0       0       0
  1385 ;;      Locals:         5       0       0       0       0
  1386 ;;      Temps:          1       0       0       0       0
  1387 ;;      Totals:        14       0       0       0       0
  1388 ;;Total ram usage:       14 bytes
  1389 ;; Hardware stack levels used: 1
  1390 ;; This function calls:
  1391 ;;		Nothing
  1392 ;; This function is called by:
  1393 ;;		_I2C_Master_Init
  1394 ;; This function uses a non-reentrant model
  1395 ;;
  1396                           
  1397                           
  1398                           ;psect for function ___lldiv
  1399  05F3                     ___lldiv:
  1400  05F3                     l1116:	
  1401                           ;incstack = 0
  1402                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1403                           
  1404  05F3  3000               	movlw	0
  1405  05F4  00FC               	movwf	___lldiv@quotient+3
  1406  05F5  3000               	movlw	0
  1407  05F6  00FB               	movwf	___lldiv@quotient+2
  1408  05F7  3000               	movlw	0
  1409  05F8  00FA               	movwf	___lldiv@quotient+1
  1410  05F9  3000               	movlw	0
  1411  05FA  00F9               	movwf	___lldiv@quotient
  1412  05FB  0873               	movf	___lldiv@divisor+3,w
  1413  05FC  0472               	iorwf	___lldiv@divisor+2,w
  1414  05FD  0471               	iorwf	___lldiv@divisor+1,w
  1415  05FE  0470               	iorwf	___lldiv@divisor,w
  1416  05FF  1903               	skipnz
  1417  0600  2E02               	goto	u381
  1418  0601  2E03               	goto	u380
  1419  0602                     u381:
  1420  0602  2E50               	goto	l1136
  1421  0603                     u380:
  1422  0603                     l1118:
  1423  0603  01FD               	clrf	___lldiv@counter
  1424  0604  0AFD               	incf	___lldiv@counter,f
  1425  0605  2E13               	goto	l1122
  1426  0606                     l1120:
  1427  0606  3001               	movlw	1
  1428  0607  00F8               	movwf	??___lldiv
  1429  0608                     u395:
  1430  0608  1003               	clrc
  1431  0609  0DF0               	rlf	___lldiv@divisor,f
  1432  060A  0DF1               	rlf	___lldiv@divisor+1,f
  1433  060B  0DF2               	rlf	___lldiv@divisor+2,f
  1434  060C  0DF3               	rlf	___lldiv@divisor+3,f
  1435  060D  0BF8               	decfsz	??___lldiv,f
  1436  060E  2E08               	goto	u395
  1437  060F  3001               	movlw	1
  1438  0610  00F8               	movwf	??___lldiv
  1439  0611  0878               	movf	??___lldiv,w
  1440  0612  07FD               	addwf	___lldiv@counter,f
  1441  0613                     l1122:
  1442  0613  1FF3               	btfss	___lldiv@divisor+3,7
  1443  0614  2E16               	goto	u401
  1444  0615  2E17               	goto	u400
  1445  0616                     u401:
  1446  0616  2E06               	goto	l1120
  1447  0617                     u400:
  1448  0617                     l1124:
  1449  0617  3001               	movlw	1
  1450  0618  00F8               	movwf	??___lldiv
  1451  0619                     u415:
  1452  0619  1003               	clrc
  1453  061A  0DF9               	rlf	___lldiv@quotient,f
  1454  061B  0DFA               	rlf	___lldiv@quotient+1,f
  1455  061C  0DFB               	rlf	___lldiv@quotient+2,f
  1456  061D  0DFC               	rlf	___lldiv@quotient+3,f
  1457  061E  0BF8               	decfsz	??___lldiv,f
  1458  061F  2E19               	goto	u415
  1459  0620                     l1126:
  1460  0620  0873               	movf	___lldiv@divisor+3,w
  1461  0621  0277               	subwf	___lldiv@dividend+3,w
  1462  0622  1D03               	skipz
  1463  0623  2E2E               	goto	u425
  1464  0624  0872               	movf	___lldiv@divisor+2,w
  1465  0625  0276               	subwf	___lldiv@dividend+2,w
  1466  0626  1D03               	skipz
  1467  0627  2E2E               	goto	u425
  1468  0628  0871               	movf	___lldiv@divisor+1,w
  1469  0629  0275               	subwf	___lldiv@dividend+1,w
  1470  062A  1D03               	skipz
  1471  062B  2E2E               	goto	u425
  1472  062C  0870               	movf	___lldiv@divisor,w
  1473  062D  0274               	subwf	___lldiv@dividend,w
  1474  062E                     u425:
  1475  062E  1C03               	skipc
  1476  062F  2E31               	goto	u421
  1477  0630  2E32               	goto	u420
  1478  0631                     u421:
  1479  0631  2E41               	goto	l1132
  1480  0632                     u420:
  1481  0632                     l1128:
  1482  0632  0870               	movf	___lldiv@divisor,w
  1483  0633  02F4               	subwf	___lldiv@dividend,f
  1484  0634  0871               	movf	___lldiv@divisor+1,w
  1485  0635  1C03               	skipc
  1486  0636  0F71               	incfsz	___lldiv@divisor+1,w
  1487  0637  02F5               	subwf	___lldiv@dividend+1,f
  1488  0638  0872               	movf	___lldiv@divisor+2,w
  1489  0639  1C03               	skipc
  1490  063A  0F72               	incfsz	___lldiv@divisor+2,w
  1491  063B  02F6               	subwf	___lldiv@dividend+2,f
  1492  063C  0873               	movf	___lldiv@divisor+3,w
  1493  063D  1C03               	skipc
  1494  063E  0F73               	incfsz	___lldiv@divisor+3,w
  1495  063F  02F7               	subwf	___lldiv@dividend+3,f
  1496  0640                     l1130:
  1497  0640  1479               	bsf	___lldiv@quotient,0
  1498  0641                     l1132:
  1499  0641  3001               	movlw	1
  1500  0642                     u435:
  1501  0642  1003               	clrc
  1502  0643  0CF3               	rrf	___lldiv@divisor+3,f
  1503  0644  0CF2               	rrf	___lldiv@divisor+2,f
  1504  0645  0CF1               	rrf	___lldiv@divisor+1,f
  1505  0646  0CF0               	rrf	___lldiv@divisor,f
  1506  0647  3EFF               	addlw	-1
  1507  0648  1D03               	skipz
  1508  0649  2E42               	goto	u435
  1509  064A                     l1134:
  1510  064A  3001               	movlw	1
  1511  064B  02FD               	subwf	___lldiv@counter,f
  1512  064C  1D03               	btfss	3,2
  1513  064D  2E4F               	goto	u441
  1514  064E  2E50               	goto	u440
  1515  064F                     u441:
  1516  064F  2E17               	goto	l1124
  1517  0650                     u440:
  1518  0650                     l1136:
  1519  0650  087C               	movf	___lldiv@quotient+3,w
  1520  0651  00F3               	movwf	?___lldiv+3
  1521  0652  087B               	movf	___lldiv@quotient+2,w
  1522  0653  00F2               	movwf	?___lldiv+2
  1523  0654  087A               	movf	___lldiv@quotient+1,w
  1524  0655  00F1               	movwf	?___lldiv+1
  1525  0656  0879               	movf	___lldiv@quotient,w
  1526  0657  00F0               	movwf	?___lldiv
  1527  0658                     l302:
  1528  0658  0008               	return
  1529  0659                     __end_of___lldiv:
  1530                           
  1531                           	psect	text4
  1532  0598                     __ptext4:	
  1533 ;; *************** function ___awmod *****************
  1534 ;; Defined at:
  1535 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  1536 ;; Parameters:    Size  Location     Type
  1537 ;;  divisor         2    9[COMMON] int 
  1538 ;;  dividend        2   11[COMMON] int 
  1539 ;; Auto vars:     Size  Location     Type
  1540 ;;  sign            1    1[BANK0 ] unsigned char 
  1541 ;;  counter         1    0[BANK0 ] unsigned char 
  1542 ;; Return value:  Size  Location     Type
  1543 ;;                  2    9[COMMON] int 
  1544 ;; Registers used:
  1545 ;;		wreg, status,2, status,0
  1546 ;; Tracked objects:
  1547 ;;		On entry : 0/0
  1548 ;;		On exit  : 0/0
  1549 ;;		Unchanged: 0/0
  1550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1551 ;;      Params:         4       0       0       0       0
  1552 ;;      Locals:         0       2       0       0       0
  1553 ;;      Temps:          1       0       0       0       0
  1554 ;;      Totals:         5       2       0       0       0
  1555 ;;Total ram usage:        7 bytes
  1556 ;; Hardware stack levels used: 1
  1557 ;; This function calls:
  1558 ;;		Nothing
  1559 ;; This function is called by:
  1560 ;;		_main
  1561 ;; This function uses a non-reentrant model
  1562 ;;
  1563                           
  1564                           
  1565                           ;psect for function ___awmod
  1566  0598                     ___awmod:
  1567  0598                     l1344:	
  1568                           ;incstack = 0
  1569                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1570                           
  1571  0598  1283               	bcf	3,5	;RP0=0, select bank0
  1572  0599  1303               	bcf	3,6	;RP1=0, select bank0
  1573  059A  01A1               	clrf	___awmod@sign
  1574  059B                     l1346:
  1575  059B  1FFC               	btfss	___awmod@dividend+1,7
  1576  059C  2D9E               	goto	u641
  1577  059D  2D9F               	goto	u640
  1578  059E                     u641:
  1579  059E  2DA6               	goto	l1352
  1580  059F                     u640:
  1581  059F                     l1348:
  1582  059F  09FB               	comf	___awmod@dividend,f
  1583  05A0  09FC               	comf	___awmod@dividend+1,f
  1584  05A1  0AFB               	incf	___awmod@dividend,f
  1585  05A2  1903               	skipnz
  1586  05A3  0AFC               	incf	___awmod@dividend+1,f
  1587  05A4                     l1350:
  1588  05A4  01A1               	clrf	___awmod@sign
  1589  05A5  0AA1               	incf	___awmod@sign,f
  1590  05A6                     l1352:
  1591  05A6  1FFA               	btfss	___awmod@divisor+1,7
  1592  05A7  2DA9               	goto	u651
  1593  05A8  2DAA               	goto	u650
  1594  05A9                     u651:
  1595  05A9  2DAF               	goto	l1356
  1596  05AA                     u650:
  1597  05AA                     l1354:
  1598  05AA  09F9               	comf	___awmod@divisor,f
  1599  05AB  09FA               	comf	___awmod@divisor+1,f
  1600  05AC  0AF9               	incf	___awmod@divisor,f
  1601  05AD  1903               	skipnz
  1602  05AE  0AFA               	incf	___awmod@divisor+1,f
  1603  05AF                     l1356:
  1604  05AF  0879               	movf	___awmod@divisor,w
  1605  05B0  047A               	iorwf	___awmod@divisor+1,w
  1606  05B1  1903               	btfsc	3,2
  1607  05B2  2DB4               	goto	u661
  1608  05B3  2DB5               	goto	u660
  1609  05B4                     u661:
  1610  05B4  2DE4               	goto	l1374
  1611  05B5                     u660:
  1612  05B5                     l1358:
  1613  05B5  01A0               	clrf	___awmod@counter
  1614  05B6  0AA0               	incf	___awmod@counter,f
  1615  05B7  2DC3               	goto	l1364
  1616  05B8                     l1360:
  1617  05B8  3001               	movlw	1
  1618  05B9                     u675:
  1619  05B9  1003               	clrc
  1620  05BA  0DF9               	rlf	___awmod@divisor,f
  1621  05BB  0DFA               	rlf	___awmod@divisor+1,f
  1622  05BC  3EFF               	addlw	-1
  1623  05BD  1D03               	skipz
  1624  05BE  2DB9               	goto	u675
  1625  05BF                     l1362:
  1626  05BF  3001               	movlw	1
  1627  05C0  00FD               	movwf	??___awmod
  1628  05C1  087D               	movf	??___awmod,w
  1629  05C2  07A0               	addwf	___awmod@counter,f
  1630  05C3                     l1364:
  1631  05C3  1FFA               	btfss	___awmod@divisor+1,7
  1632  05C4  2DC6               	goto	u681
  1633  05C5  2DC7               	goto	u680
  1634  05C6                     u681:
  1635  05C6  2DB8               	goto	l1360
  1636  05C7                     u680:
  1637  05C7                     l1366:
  1638  05C7  087A               	movf	___awmod@divisor+1,w
  1639  05C8  027C               	subwf	___awmod@dividend+1,w
  1640  05C9  1D03               	skipz
  1641  05CA  2DCD               	goto	u695
  1642  05CB  0879               	movf	___awmod@divisor,w
  1643  05CC  027B               	subwf	___awmod@dividend,w
  1644  05CD                     u695:
  1645  05CD  1C03               	skipc
  1646  05CE  2DD0               	goto	u691
  1647  05CF  2DD1               	goto	u690
  1648  05D0                     u691:
  1649  05D0  2DD7               	goto	l1370
  1650  05D1                     u690:
  1651  05D1                     l1368:
  1652  05D1  0879               	movf	___awmod@divisor,w
  1653  05D2  02FB               	subwf	___awmod@dividend,f
  1654  05D3  087A               	movf	___awmod@divisor+1,w
  1655  05D4  1C03               	skipc
  1656  05D5  03FC               	decf	___awmod@dividend+1,f
  1657  05D6  02FC               	subwf	___awmod@dividend+1,f
  1658  05D7                     l1370:
  1659  05D7  3001               	movlw	1
  1660  05D8                     u705:
  1661  05D8  1003               	clrc
  1662  05D9  0CFA               	rrf	___awmod@divisor+1,f
  1663  05DA  0CF9               	rrf	___awmod@divisor,f
  1664  05DB  3EFF               	addlw	-1
  1665  05DC  1D03               	skipz
  1666  05DD  2DD8               	goto	u705
  1667  05DE                     l1372:
  1668  05DE  3001               	movlw	1
  1669  05DF  02A0               	subwf	___awmod@counter,f
  1670  05E0  1D03               	btfss	3,2
  1671  05E1  2DE3               	goto	u711
  1672  05E2  2DE4               	goto	u710
  1673  05E3                     u711:
  1674  05E3  2DC7               	goto	l1366
  1675  05E4                     u710:
  1676  05E4                     l1374:
  1677  05E4  0821               	movf	___awmod@sign,w
  1678  05E5  1903               	btfsc	3,2
  1679  05E6  2DE8               	goto	u721
  1680  05E7  2DE9               	goto	u720
  1681  05E8                     u721:
  1682  05E8  2DEE               	goto	l1378
  1683  05E9                     u720:
  1684  05E9                     l1376:
  1685  05E9  09FB               	comf	___awmod@dividend,f
  1686  05EA  09FC               	comf	___awmod@dividend+1,f
  1687  05EB  0AFB               	incf	___awmod@dividend,f
  1688  05EC  1903               	skipnz
  1689  05ED  0AFC               	incf	___awmod@dividend+1,f
  1690  05EE                     l1378:
  1691  05EE  087C               	movf	___awmod@dividend+1,w
  1692  05EF  00FA               	movwf	?___awmod+1
  1693  05F0  087B               	movf	___awmod@dividend,w
  1694  05F1  00F9               	movwf	?___awmod
  1695  05F2                     l432:
  1696  05F2  0008               	return
  1697  05F3                     __end_of___awmod:
  1698                           
  1699                           	psect	text5
  1700  0659                     __ptext5:	
  1701 ;; *************** function ___awdiv *****************
  1702 ;; Defined at:
  1703 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  1704 ;; Parameters:    Size  Location     Type
  1705 ;;  divisor         2    0[COMMON] int 
  1706 ;;  dividend        2    2[COMMON] int 
  1707 ;; Auto vars:     Size  Location     Type
  1708 ;;  quotient        2    7[COMMON] int 
  1709 ;;  sign            1    6[COMMON] unsigned char 
  1710 ;;  counter         1    5[COMMON] unsigned char 
  1711 ;; Return value:  Size  Location     Type
  1712 ;;                  2    0[COMMON] int 
  1713 ;; Registers used:
  1714 ;;		wreg, status,2, status,0
  1715 ;; Tracked objects:
  1716 ;;		On entry : 0/0
  1717 ;;		On exit  : 0/0
  1718 ;;		Unchanged: 0/0
  1719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1720 ;;      Params:         4       0       0       0       0
  1721 ;;      Locals:         4       0       0       0       0
  1722 ;;      Temps:          1       0       0       0       0
  1723 ;;      Totals:         9       0       0       0       0
  1724 ;;Total ram usage:        9 bytes
  1725 ;; Hardware stack levels used: 1
  1726 ;; This function calls:
  1727 ;;		Nothing
  1728 ;; This function is called by:
  1729 ;;		_main
  1730 ;; This function uses a non-reentrant model
  1731 ;;
  1732                           
  1733                           
  1734                           ;psect for function ___awdiv
  1735  0659                     ___awdiv:
  1736  0659                     l1300:	
  1737                           ;incstack = 0
  1738                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1739                           
  1740  0659  01F6               	clrf	___awdiv@sign
  1741  065A                     l1302:
  1742  065A  1FF1               	btfss	___awdiv@divisor+1,7
  1743  065B  2E5D               	goto	u541
  1744  065C  2E5E               	goto	u540
  1745  065D                     u541:
  1746  065D  2E65               	goto	l1308
  1747  065E                     u540:
  1748  065E                     l1304:
  1749  065E  09F0               	comf	___awdiv@divisor,f
  1750  065F  09F1               	comf	___awdiv@divisor+1,f
  1751  0660  0AF0               	incf	___awdiv@divisor,f
  1752  0661  1903               	skipnz
  1753  0662  0AF1               	incf	___awdiv@divisor+1,f
  1754  0663                     l1306:
  1755  0663  01F6               	clrf	___awdiv@sign
  1756  0664  0AF6               	incf	___awdiv@sign,f
  1757  0665                     l1308:
  1758  0665  1FF3               	btfss	___awdiv@dividend+1,7
  1759  0666  2E68               	goto	u551
  1760  0667  2E69               	goto	u550
  1761  0668                     u551:
  1762  0668  2E72               	goto	l1314
  1763  0669                     u550:
  1764  0669                     l1310:
  1765  0669  09F2               	comf	___awdiv@dividend,f
  1766  066A  09F3               	comf	___awdiv@dividend+1,f
  1767  066B  0AF2               	incf	___awdiv@dividend,f
  1768  066C  1903               	skipnz
  1769  066D  0AF3               	incf	___awdiv@dividend+1,f
  1770  066E                     l1312:
  1771  066E  3001               	movlw	1
  1772  066F  00F4               	movwf	??___awdiv
  1773  0670  0874               	movf	??___awdiv,w
  1774  0671  06F6               	xorwf	___awdiv@sign,f
  1775  0672                     l1314:
  1776  0672  01F7               	clrf	___awdiv@quotient
  1777  0673  01F8               	clrf	___awdiv@quotient+1
  1778  0674                     l1316:
  1779  0674  0870               	movf	___awdiv@divisor,w
  1780  0675  0471               	iorwf	___awdiv@divisor+1,w
  1781  0676  1903               	btfsc	3,2
  1782  0677  2E79               	goto	u561
  1783  0678  2E7A               	goto	u560
  1784  0679                     u561:
  1785  0679  2EB1               	goto	l1336
  1786  067A                     u560:
  1787  067A                     l1318:
  1788  067A  01F5               	clrf	___awdiv@counter
  1789  067B  0AF5               	incf	___awdiv@counter,f
  1790  067C  2E88               	goto	l1324
  1791  067D                     l1320:
  1792  067D  3001               	movlw	1
  1793  067E                     u575:
  1794  067E  1003               	clrc
  1795  067F  0DF0               	rlf	___awdiv@divisor,f
  1796  0680  0DF1               	rlf	___awdiv@divisor+1,f
  1797  0681  3EFF               	addlw	-1
  1798  0682  1D03               	skipz
  1799  0683  2E7E               	goto	u575
  1800  0684                     l1322:
  1801  0684  3001               	movlw	1
  1802  0685  00F4               	movwf	??___awdiv
  1803  0686  0874               	movf	??___awdiv,w
  1804  0687  07F5               	addwf	___awdiv@counter,f
  1805  0688                     l1324:
  1806  0688  1FF1               	btfss	___awdiv@divisor+1,7
  1807  0689  2E8B               	goto	u581
  1808  068A  2E8C               	goto	u580
  1809  068B                     u581:
  1810  068B  2E7D               	goto	l1320
  1811  068C                     u580:
  1812  068C                     l1326:
  1813  068C  3001               	movlw	1
  1814  068D                     u595:
  1815  068D  1003               	clrc
  1816  068E  0DF7               	rlf	___awdiv@quotient,f
  1817  068F  0DF8               	rlf	___awdiv@quotient+1,f
  1818  0690  3EFF               	addlw	-1
  1819  0691  1D03               	skipz
  1820  0692  2E8D               	goto	u595
  1821  0693  0871               	movf	___awdiv@divisor+1,w
  1822  0694  0273               	subwf	___awdiv@dividend+1,w
  1823  0695  1D03               	skipz
  1824  0696  2E99               	goto	u605
  1825  0697  0870               	movf	___awdiv@divisor,w
  1826  0698  0272               	subwf	___awdiv@dividend,w
  1827  0699                     u605:
  1828  0699  1C03               	skipc
  1829  069A  2E9C               	goto	u601
  1830  069B  2E9D               	goto	u600
  1831  069C                     u601:
  1832  069C  2EA4               	goto	l1332
  1833  069D                     u600:
  1834  069D                     l1328:
  1835  069D  0870               	movf	___awdiv@divisor,w
  1836  069E  02F2               	subwf	___awdiv@dividend,f
  1837  069F  0871               	movf	___awdiv@divisor+1,w
  1838  06A0  1C03               	skipc
  1839  06A1  03F3               	decf	___awdiv@dividend+1,f
  1840  06A2  02F3               	subwf	___awdiv@dividend+1,f
  1841  06A3                     l1330:
  1842  06A3  1477               	bsf	___awdiv@quotient,0
  1843  06A4                     l1332:
  1844  06A4  3001               	movlw	1
  1845  06A5                     u615:
  1846  06A5  1003               	clrc
  1847  06A6  0CF1               	rrf	___awdiv@divisor+1,f
  1848  06A7  0CF0               	rrf	___awdiv@divisor,f
  1849  06A8  3EFF               	addlw	-1
  1850  06A9  1D03               	skipz
  1851  06AA  2EA5               	goto	u615
  1852  06AB                     l1334:
  1853  06AB  3001               	movlw	1
  1854  06AC  02F5               	subwf	___awdiv@counter,f
  1855  06AD  1D03               	btfss	3,2
  1856  06AE  2EB0               	goto	u621
  1857  06AF  2EB1               	goto	u620
  1858  06B0                     u621:
  1859  06B0  2E8C               	goto	l1326
  1860  06B1                     u620:
  1861  06B1                     l1336:
  1862  06B1  0876               	movf	___awdiv@sign,w
  1863  06B2  1903               	btfsc	3,2
  1864  06B3  2EB5               	goto	u631
  1865  06B4  2EB6               	goto	u630
  1866  06B5                     u631:
  1867  06B5  2EBB               	goto	l1340
  1868  06B6                     u630:
  1869  06B6                     l1338:
  1870  06B6  09F7               	comf	___awdiv@quotient,f
  1871  06B7  09F8               	comf	___awdiv@quotient+1,f
  1872  06B8  0AF7               	incf	___awdiv@quotient,f
  1873  06B9  1903               	skipnz
  1874  06BA  0AF8               	incf	___awdiv@quotient+1,f
  1875  06BB                     l1340:
  1876  06BB  0878               	movf	___awdiv@quotient+1,w
  1877  06BC  00F1               	movwf	?___awdiv+1
  1878  06BD  0877               	movf	___awdiv@quotient,w
  1879  06BE  00F0               	movwf	?___awdiv
  1880  06BF                     l419:
  1881  06BF  0008               	return
  1882  06C0                     __end_of___awdiv:
  1883                           
  1884                           	psect	text6
  1885  0434                     __ptext6:	
  1886 ;; *************** function _Lcd_Write_String *****************
  1887 ;; Defined at:
  1888 ;;		line 77 in file "LCD.c"
  1889 ;; Parameters:    Size  Location     Type
  1890 ;;  a               1    wreg     PTR unsigned char 
  1891 ;;		 -> STR_5(4), STR_4(4), STR_2(5), STR_1(17), 
  1892 ;; Auto vars:     Size  Location     Type
  1893 ;;  a               1    7[COMMON] PTR unsigned char 
  1894 ;;		 -> STR_5(4), STR_4(4), STR_2(5), STR_1(17), 
  1895 ;;  i               2    5[COMMON] int 
  1896 ;; Return value:  Size  Location     Type
  1897 ;;                  1    wreg      void 
  1898 ;; Registers used:
  1899 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1900 ;; Tracked objects:
  1901 ;;		On entry : 0/0
  1902 ;;		On exit  : 0/0
  1903 ;;		Unchanged: 0/0
  1904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1905 ;;      Params:         0       0       0       0       0
  1906 ;;      Locals:         3       0       0       0       0
  1907 ;;      Temps:          0       0       0       0       0
  1908 ;;      Totals:         3       0       0       0       0
  1909 ;;Total ram usage:        3 bytes
  1910 ;; Hardware stack levels used: 1
  1911 ;; Hardware stack levels required when called: 2
  1912 ;; This function calls:
  1913 ;;		_Lcd_Write_Char
  1914 ;; This function is called by:
  1915 ;;		_main
  1916 ;; This function uses a non-reentrant model
  1917 ;;
  1918                           
  1919                           
  1920                           ;psect for function _Lcd_Write_String
  1921  0434                     _Lcd_Write_String:
  1922                           
  1923                           ;incstack = 0
  1924                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1925                           ;Lcd_Write_String@a stored from wreg
  1926  0434  00F7               	movwf	Lcd_Write_String@a
  1927  0435                     l1264:
  1928                           
  1929                           ;LCD.c: 78:     int i;;LCD.c: 79:     for (i = 0; a[i] != '\0'; i++)
  1930  0435  01F5               	clrf	Lcd_Write_String@i
  1931  0436  01F6               	clrf	Lcd_Write_String@i+1
  1932  0437  2C4B               	goto	l1270
  1933  0438                     l1266:
  1934                           
  1935                           ;LCD.c: 80:         Lcd_Write_Char(a[i]);
  1936  0438  0875               	movf	Lcd_Write_String@i,w
  1937  0439  0777               	addwf	Lcd_Write_String@a,w
  1938  043A  0084               	movwf	4
  1939  043B  120A  118A  2003  120A  118A  	fcall	stringdir
  1940  0440  120A  118A  2416  120A  118A  	fcall	_Lcd_Write_Char
  1941  0445                     l1268:
  1942  0445  3001               	movlw	1
  1943  0446  07F5               	addwf	Lcd_Write_String@i,f
  1944  0447  1803               	skipnc
  1945  0448  0AF6               	incf	Lcd_Write_String@i+1,f
  1946  0449  3000               	movlw	0
  1947  044A  07F6               	addwf	Lcd_Write_String@i+1,f
  1948  044B                     l1270:
  1949  044B  0875               	movf	Lcd_Write_String@i,w
  1950  044C  0777               	addwf	Lcd_Write_String@a,w
  1951  044D  0084               	movwf	4
  1952  044E  120A  118A  2003  120A  118A  	fcall	stringdir
  1953  0453  3A00               	xorlw	0
  1954  0454  1D03               	skipz
  1955  0455  2C57               	goto	u521
  1956  0456  2C58               	goto	u520
  1957  0457                     u521:
  1958  0457  2C38               	goto	l1266
  1959  0458                     u520:
  1960  0458                     l174:
  1961  0458  0008               	return
  1962  0459                     __end_of_Lcd_Write_String:
  1963                           
  1964                           	psect	text7
  1965  0416                     __ptext7:	
  1966 ;; *************** function _Lcd_Write_Char *****************
  1967 ;; Defined at:
  1968 ;;		line 65 in file "LCD.c"
  1969 ;; Parameters:    Size  Location     Type
  1970 ;;  a               1    wreg     unsigned char 
  1971 ;; Auto vars:     Size  Location     Type
  1972 ;;  a               1    2[COMMON] unsigned char 
  1973 ;;  y               1    4[COMMON] unsigned char 
  1974 ;;  temp            1    3[COMMON] unsigned char 
  1975 ;; Return value:  Size  Location     Type
  1976 ;;                  1    wreg      void 
  1977 ;; Registers used:
  1978 ;;		wreg, status,2, status,0, pclath, cstack
  1979 ;; Tracked objects:
  1980 ;;		On entry : 0/0
  1981 ;;		On exit  : 0/0
  1982 ;;		Unchanged: 0/0
  1983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1984 ;;      Params:         0       0       0       0       0
  1985 ;;      Locals:         3       0       0       0       0
  1986 ;;      Temps:          1       0       0       0       0
  1987 ;;      Totals:         4       0       0       0       0
  1988 ;;Total ram usage:        4 bytes
  1989 ;; Hardware stack levels used: 1
  1990 ;; Hardware stack levels required when called: 1
  1991 ;; This function calls:
  1992 ;;		_Lcd_Port
  1993 ;; This function is called by:
  1994 ;;		_main
  1995 ;;		_Lcd_Write_String
  1996 ;; This function uses a non-reentrant model
  1997 ;;
  1998                           
  1999                           
  2000                           ;psect for function _Lcd_Write_Char
  2001  0416                     _Lcd_Write_Char:
  2002                           
  2003                           ;incstack = 0
  2004                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2005                           ;Lcd_Write_Char@a stored from wreg
  2006  0416  00F2               	movwf	Lcd_Write_Char@a
  2007  0417                     l1140:
  2008                           
  2009                           ;LCD.c: 66:     char temp, y;;LCD.c: 67:     temp = a;
  2010  0417  0872               	movf	Lcd_Write_Char@a,w
  2011  0418  00F1               	movwf	??_Lcd_Write_Char
  2012  0419  0871               	movf	??_Lcd_Write_Char,w
  2013  041A  00F3               	movwf	Lcd_Write_Char@temp
  2014                           
  2015                           ;LCD.c: 68:     y = temp;
  2016  041B  0873               	movf	Lcd_Write_Char@temp,w
  2017  041C  00F1               	movwf	??_Lcd_Write_Char
  2018  041D  0871               	movf	??_Lcd_Write_Char,w
  2019  041E  00F4               	movwf	Lcd_Write_Char@y
  2020  041F                     l1142:
  2021                           
  2022                           ;LCD.c: 69:     RE0 = 1;
  2023  041F  1283               	bcf	3,5	;RP0=0, select bank0
  2024  0420  1303               	bcf	3,6	;RP1=0, select bank0
  2025  0421  1409               	bsf	9,0	;volatile
  2026  0422                     l1144:
  2027                           
  2028                           ;LCD.c: 70:     Lcd_Port(y);
  2029  0422  0874               	movf	Lcd_Write_Char@y,w
  2030  0423  120A  118A  23C0  120A  118A  	fcall	_Lcd_Port
  2031  0428                     l1146:
  2032                           
  2033                           ;LCD.c: 71:     RE1 = 1;
  2034  0428  1283               	bcf	3,5	;RP0=0, select bank0
  2035  0429  1303               	bcf	3,6	;RP1=0, select bank0
  2036  042A  1489               	bsf	9,1	;volatile
  2037  042B                     l1148:
  2038                           
  2039                           ;LCD.c: 72:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2040  042B  301A               	movlw	26
  2041  042C  00F1               	movwf	??_Lcd_Write_Char
  2042  042D                     u787:
  2043  042D  0BF1               	decfsz	??_Lcd_Write_Char,f
  2044  042E  2C2D               	goto	u787
  2045  042F  0000               	nop
  2046  0430                     l1150:
  2047                           
  2048                           ;LCD.c: 73:     RE1 = 0;
  2049  0430  1283               	bcf	3,5	;RP0=0, select bank0
  2050  0431  1303               	bcf	3,6	;RP1=0, select bank0
  2051  0432  1089               	bcf	9,1	;volatile
  2052  0433                     l168:
  2053  0433  0008               	return
  2054  0434                     __end_of_Lcd_Write_Char:
  2055                           
  2056                           	psect	text8
  2057  0546                     __ptext8:	
  2058 ;; *************** function _Lcd_Set_Cursor *****************
  2059 ;; Defined at:
  2060 ;;		line 30 in file "LCD.c"
  2061 ;; Parameters:    Size  Location     Type
  2062 ;;  a               1    wreg     unsigned char 
  2063 ;;  b               1    4[COMMON] unsigned char 
  2064 ;; Auto vars:     Size  Location     Type
  2065 ;;  a               1    7[COMMON] unsigned char 
  2066 ;;  temp            1   10[COMMON] unsigned char 
  2067 ;;  y               1    9[COMMON] unsigned char 
  2068 ;;  z               1    8[COMMON] unsigned char 
  2069 ;; Return value:  Size  Location     Type
  2070 ;;                  1    wreg      void 
  2071 ;; Registers used:
  2072 ;;		wreg, status,2, status,0, pclath, cstack
  2073 ;; Tracked objects:
  2074 ;;		On entry : 0/0
  2075 ;;		On exit  : 0/0
  2076 ;;		Unchanged: 0/0
  2077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2078 ;;      Params:         1       0       0       0       0
  2079 ;;      Locals:         4       0       0       0       0
  2080 ;;      Temps:          2       0       0       0       0
  2081 ;;      Totals:         7       0       0       0       0
  2082 ;;Total ram usage:        7 bytes
  2083 ;; Hardware stack levels used: 1
  2084 ;; Hardware stack levels required when called: 2
  2085 ;; This function calls:
  2086 ;;		_Lcd_Cmd
  2087 ;; This function is called by:
  2088 ;;		_main
  2089 ;; This function uses a non-reentrant model
  2090 ;;
  2091                           
  2092                           
  2093                           ;psect for function _Lcd_Set_Cursor
  2094  0546                     _Lcd_Set_Cursor:
  2095                           
  2096                           ;incstack = 0
  2097                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2098                           ;Lcd_Set_Cursor@a stored from wreg
  2099  0546  00F7               	movwf	Lcd_Set_Cursor@a
  2100  0547                     l1244:
  2101                           
  2102                           ;LCD.c: 31:     char temp, z, y;;LCD.c: 32:     if (a == 1) {
  2103  0547  0377               	decf	Lcd_Set_Cursor@a,w
  2104  0548  1D03               	btfss	3,2
  2105  0549  2D4B               	goto	u481
  2106  054A  2D4C               	goto	u480
  2107  054B                     u481:
  2108  054B  2D6F               	goto	l1254
  2109  054C                     u480:
  2110  054C                     l1246:
  2111                           
  2112                           ;LCD.c: 33:         temp = 0x80 + b - 1;
  2113  054C  0874               	movf	Lcd_Set_Cursor@b,w
  2114  054D  3E7F               	addlw	127
  2115  054E  00F5               	movwf	??_Lcd_Set_Cursor
  2116  054F  0875               	movf	??_Lcd_Set_Cursor,w
  2117  0550  00FA               	movwf	Lcd_Set_Cursor@temp
  2118                           
  2119                           ;LCD.c: 34:         z = temp >> 4;
  2120  0551  087A               	movf	Lcd_Set_Cursor@temp,w
  2121  0552  00F5               	movwf	??_Lcd_Set_Cursor
  2122  0553  3004               	movlw	4
  2123  0554                     u495:
  2124  0554  1003               	clrc
  2125  0555  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2126  0556  3EFF               	addlw	-1
  2127  0557  1D03               	skipz
  2128  0558  2D54               	goto	u495
  2129  0559  0875               	movf	??_Lcd_Set_Cursor,w
  2130  055A  00F6               	movwf	??_Lcd_Set_Cursor+1
  2131  055B  0876               	movf	??_Lcd_Set_Cursor+1,w
  2132  055C  00F8               	movwf	Lcd_Set_Cursor@z
  2133  055D                     l1248:
  2134                           
  2135                           ;LCD.c: 35:         y = temp & 0x0F;
  2136  055D  087A               	movf	Lcd_Set_Cursor@temp,w
  2137  055E  390F               	andlw	15
  2138  055F  00F5               	movwf	??_Lcd_Set_Cursor
  2139  0560  0875               	movf	??_Lcd_Set_Cursor,w
  2140  0561  00F9               	movwf	Lcd_Set_Cursor@y
  2141  0562                     l1250:
  2142                           
  2143                           ;LCD.c: 36:         Lcd_Cmd(z);
  2144  0562  0878               	movf	Lcd_Set_Cursor@z,w
  2145  0563  120A  118A  23FC  120A  118A  	fcall	_Lcd_Cmd
  2146  0568                     l1252:
  2147                           
  2148                           ;LCD.c: 37:         Lcd_Cmd(y);
  2149  0568  0879               	movf	Lcd_Set_Cursor@y,w
  2150  0569  120A  118A  23FC  120A  118A  	fcall	_Lcd_Cmd
  2151                           
  2152                           ;LCD.c: 38:     } else if (a == 2) {
  2153  056E  2D97               	goto	l162
  2154  056F                     l1254:
  2155  056F  3002               	movlw	2
  2156  0570  0677               	xorwf	Lcd_Set_Cursor@a,w
  2157  0571  1D03               	btfss	3,2
  2158  0572  2D74               	goto	u501
  2159  0573  2D75               	goto	u500
  2160  0574                     u501:
  2161  0574  2D97               	goto	l162
  2162  0575                     u500:
  2163  0575                     l1256:
  2164                           
  2165                           ;LCD.c: 39:         temp = 0xC0 + b - 1;
  2166  0575  0874               	movf	Lcd_Set_Cursor@b,w
  2167  0576  3EBF               	addlw	191
  2168  0577  00F5               	movwf	??_Lcd_Set_Cursor
  2169  0578  0875               	movf	??_Lcd_Set_Cursor,w
  2170  0579  00FA               	movwf	Lcd_Set_Cursor@temp
  2171                           
  2172                           ;LCD.c: 40:         z = temp >> 4;
  2173  057A  087A               	movf	Lcd_Set_Cursor@temp,w
  2174  057B  00F5               	movwf	??_Lcd_Set_Cursor
  2175  057C  3004               	movlw	4
  2176  057D                     u515:
  2177  057D  1003               	clrc
  2178  057E  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2179  057F  3EFF               	addlw	-1
  2180  0580  1D03               	skipz
  2181  0581  2D7D               	goto	u515
  2182  0582  0875               	movf	??_Lcd_Set_Cursor,w
  2183  0583  00F6               	movwf	??_Lcd_Set_Cursor+1
  2184  0584  0876               	movf	??_Lcd_Set_Cursor+1,w
  2185  0585  00F8               	movwf	Lcd_Set_Cursor@z
  2186  0586                     l1258:
  2187                           
  2188                           ;LCD.c: 41:         y = temp & 0xF0;
  2189  0586  087A               	movf	Lcd_Set_Cursor@temp,w
  2190  0587  39F0               	andlw	240
  2191  0588  00F5               	movwf	??_Lcd_Set_Cursor
  2192  0589  0875               	movf	??_Lcd_Set_Cursor,w
  2193  058A  00F9               	movwf	Lcd_Set_Cursor@y
  2194  058B                     l1260:
  2195                           
  2196                           ;LCD.c: 42:         Lcd_Cmd(z);
  2197  058B  0878               	movf	Lcd_Set_Cursor@z,w
  2198  058C  120A  118A  23FC  120A  118A  	fcall	_Lcd_Cmd
  2199  0591                     l1262:
  2200                           
  2201                           ;LCD.c: 43:         Lcd_Cmd(y);
  2202  0591  0879               	movf	Lcd_Set_Cursor@y,w
  2203  0592  120A  118A  23FC  120A  118A  	fcall	_Lcd_Cmd
  2204  0597                     l162:
  2205  0597  0008               	return
  2206  0598                     __end_of_Lcd_Set_Cursor:
  2207                           
  2208                           	psect	text9
  2209  04FF                     __ptext9:	
  2210 ;; *************** function _Lcd_Init *****************
  2211 ;; Defined at:
  2212 ;;		line 47 in file "LCD.c"
  2213 ;; Parameters:    Size  Location     Type
  2214 ;;		None
  2215 ;; Auto vars:     Size  Location     Type
  2216 ;;		None
  2217 ;; Return value:  Size  Location     Type
  2218 ;;                  1    wreg      void 
  2219 ;; Registers used:
  2220 ;;		wreg, status,2, status,0, pclath, cstack
  2221 ;; Tracked objects:
  2222 ;;		On entry : 0/0
  2223 ;;		On exit  : 0/0
  2224 ;;		Unchanged: 0/0
  2225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2226 ;;      Params:         0       0       0       0       0
  2227 ;;      Locals:         0       0       0       0       0
  2228 ;;      Temps:          2       0       0       0       0
  2229 ;;      Totals:         2       0       0       0       0
  2230 ;;Total ram usage:        2 bytes
  2231 ;; Hardware stack levels used: 1
  2232 ;; Hardware stack levels required when called: 2
  2233 ;; This function calls:
  2234 ;;		_Lcd_Cmd
  2235 ;;		_Lcd_Port
  2236 ;; This function is called by:
  2237 ;;		_main
  2238 ;; This function uses a non-reentrant model
  2239 ;;
  2240                           
  2241                           
  2242                           ;psect for function _Lcd_Init
  2243  04FF                     _Lcd_Init:
  2244  04FF                     l1232:	
  2245                           ;incstack = 0
  2246                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2247                           
  2248                           
  2249                           ;LCD.c: 48:     Lcd_Port(0x00);
  2250  04FF  3000               	movlw	0
  2251  0500  120A  118A  23C0  120A  118A  	fcall	_Lcd_Port
  2252  0505                     l1234:
  2253                           
  2254                           ;LCD.c: 49:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2255  0505  3034               	movlw	52
  2256  0506  00F5               	movwf	??_Lcd_Init+1
  2257  0507  30F1               	movlw	241
  2258  0508  00F4               	movwf	??_Lcd_Init
  2259  0509                     u797:
  2260  0509  0BF4               	decfsz	??_Lcd_Init,f
  2261  050A  2D09               	goto	u797
  2262  050B  0BF5               	decfsz	??_Lcd_Init+1,f
  2263  050C  2D09               	goto	u797
  2264  050D  2D0E               	nop2
  2265  050E                     l1236:
  2266                           
  2267                           ;LCD.c: 50:     Lcd_Cmd(0x30);
  2268  050E  3030               	movlw	48
  2269  050F  120A  118A  23FC  120A  118A  	fcall	_Lcd_Cmd
  2270                           
  2271                           ;LCD.c: 51:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2272  0514  300D               	movlw	13
  2273  0515  00F5               	movwf	??_Lcd_Init+1
  2274  0516  30FB               	movlw	251
  2275  0517  00F4               	movwf	??_Lcd_Init
  2276  0518                     u807:
  2277  0518  0BF4               	decfsz	??_Lcd_Init,f
  2278  0519  2D18               	goto	u807
  2279  051A  0BF5               	decfsz	??_Lcd_Init+1,f
  2280  051B  2D18               	goto	u807
  2281  051C  2D1D               	nop2
  2282  051D                     l1238:
  2283                           
  2284                           ;LCD.c: 52:     Lcd_Cmd(0x30);
  2285  051D  3030               	movlw	48
  2286  051E  120A  118A  23FC  120A  118A  	fcall	_Lcd_Cmd
  2287  0523                     l1240:
  2288                           
  2289                           ;LCD.c: 53:     _delay((unsigned long)((200)*(8000000/4000000.0)));
  2290  0523  3085               	movlw	133
  2291  0524  00F4               	movwf	??_Lcd_Init
  2292  0525                     u817:
  2293  0525  0BF4               	decfsz	??_Lcd_Init,f
  2294  0526  2D25               	goto	u817
  2295                           
  2296                           ;LCD.c: 54:     Lcd_Cmd(0x30);
  2297  0527  3030               	movlw	48
  2298  0528  120A  118A  23FC  120A  118A  	fcall	_Lcd_Cmd
  2299                           
  2300                           ;LCD.c: 56:     Lcd_Cmd(0x3C);
  2301  052D  303C               	movlw	60
  2302  052E  120A  118A  23FC  120A  118A  	fcall	_Lcd_Cmd
  2303                           
  2304                           ;LCD.c: 58:     Lcd_Cmd(0x08);
  2305  0533  3008               	movlw	8
  2306  0534  120A  118A  23FC  120A  118A  	fcall	_Lcd_Cmd
  2307                           
  2308                           ;LCD.c: 60:     Lcd_Cmd(0x01);
  2309  0539  3001               	movlw	1
  2310  053A  120A  118A  23FC  120A  118A  	fcall	_Lcd_Cmd
  2311                           
  2312                           ;LCD.c: 62:     Lcd_Cmd(0x06);
  2313  053F  3006               	movlw	6
  2314  0540  120A  118A  23FC  120A  118A  	fcall	_Lcd_Cmd
  2315  0545                     l165:
  2316  0545  0008               	return
  2317  0546                     __end_of_Lcd_Init:
  2318                           
  2319                           	psect	text10
  2320  03EF                     __ptext10:	
  2321 ;; *************** function _Lcd_Clear *****************
  2322 ;; Defined at:
  2323 ;;		line 25 in file "LCD.c"
  2324 ;; Parameters:    Size  Location     Type
  2325 ;;		None
  2326 ;; Auto vars:     Size  Location     Type
  2327 ;;		None
  2328 ;; Return value:  Size  Location     Type
  2329 ;;                  1    wreg      void 
  2330 ;; Registers used:
  2331 ;;		wreg, status,2, status,0, pclath, cstack
  2332 ;; Tracked objects:
  2333 ;;		On entry : 0/0
  2334 ;;		On exit  : 0/0
  2335 ;;		Unchanged: 0/0
  2336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2337 ;;      Params:         0       0       0       0       0
  2338 ;;      Locals:         0       0       0       0       0
  2339 ;;      Temps:          0       0       0       0       0
  2340 ;;      Totals:         0       0       0       0       0
  2341 ;;Total ram usage:        0 bytes
  2342 ;; Hardware stack levels used: 1
  2343 ;; Hardware stack levels required when called: 2
  2344 ;; This function calls:
  2345 ;;		_Lcd_Cmd
  2346 ;; This function is called by:
  2347 ;;		_main
  2348 ;; This function uses a non-reentrant model
  2349 ;;
  2350                           
  2351                           
  2352                           ;psect for function _Lcd_Clear
  2353  03EF                     _Lcd_Clear:
  2354  03EF                     l1242:	
  2355                           ;incstack = 0
  2356                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2357                           
  2358                           
  2359                           ;LCD.c: 26:     Lcd_Cmd(0);
  2360  03EF  3000               	movlw	0
  2361  03F0  120A  118A  23FC  120A  118A  	fcall	_Lcd_Cmd
  2362                           
  2363                           ;LCD.c: 27:     Lcd_Cmd(1);
  2364  03F5  3001               	movlw	1
  2365  03F6  120A  118A  23FC  120A  118A  	fcall	_Lcd_Cmd
  2366  03FB                     l156:
  2367  03FB  0008               	return
  2368  03FC                     __end_of_Lcd_Clear:
  2369                           
  2370                           	psect	text11
  2371  03FC                     __ptext11:	
  2372 ;; *************** function _Lcd_Cmd *****************
  2373 ;; Defined at:
  2374 ;;		line 17 in file "LCD.c"
  2375 ;; Parameters:    Size  Location     Type
  2376 ;;  a               1    wreg     unsigned char 
  2377 ;; Auto vars:     Size  Location     Type
  2378 ;;  a               1    3[COMMON] unsigned char 
  2379 ;; Return value:  Size  Location     Type
  2380 ;;                  1    wreg      void 
  2381 ;; Registers used:
  2382 ;;		wreg, status,2, status,0, pclath, cstack
  2383 ;; Tracked objects:
  2384 ;;		On entry : 0/0
  2385 ;;		On exit  : 0/0
  2386 ;;		Unchanged: 0/0
  2387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2388 ;;      Params:         0       0       0       0       0
  2389 ;;      Locals:         1       0       0       0       0
  2390 ;;      Temps:          2       0       0       0       0
  2391 ;;      Totals:         3       0       0       0       0
  2392 ;;Total ram usage:        3 bytes
  2393 ;; Hardware stack levels used: 1
  2394 ;; Hardware stack levels required when called: 1
  2395 ;; This function calls:
  2396 ;;		_Lcd_Port
  2397 ;; This function is called by:
  2398 ;;		_Lcd_Clear
  2399 ;;		_Lcd_Set_Cursor
  2400 ;;		_Lcd_Init
  2401 ;;		_Lcd_Shift_Right
  2402 ;;		_Lcd_Shift_Left
  2403 ;; This function uses a non-reentrant model
  2404 ;;
  2405                           
  2406                           
  2407                           ;psect for function _Lcd_Cmd
  2408  03FC                     _Lcd_Cmd:
  2409                           
  2410                           ;incstack = 0
  2411                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2412                           ;Lcd_Cmd@a stored from wreg
  2413  03FC  00F3               	movwf	Lcd_Cmd@a
  2414  03FD                     l1168:
  2415                           
  2416                           ;LCD.c: 18:     RE0 = 0;
  2417  03FD  1283               	bcf	3,5	;RP0=0, select bank0
  2418  03FE  1303               	bcf	3,6	;RP1=0, select bank0
  2419  03FF  1009               	bcf	9,0	;volatile
  2420  0400                     l1170:
  2421                           
  2422                           ;LCD.c: 19:     Lcd_Port(a);
  2423  0400  0873               	movf	Lcd_Cmd@a,w
  2424  0401  120A  118A  23C0  120A  118A  	fcall	_Lcd_Port
  2425  0406                     l1172:
  2426                           
  2427                           ;LCD.c: 20:     RE1 = 1;
  2428  0406  1283               	bcf	3,5	;RP0=0, select bank0
  2429  0407  1303               	bcf	3,6	;RP1=0, select bank0
  2430  0408  1489               	bsf	9,1	;volatile
  2431  0409                     l1174:
  2432                           
  2433                           ;LCD.c: 21:     _delay((unsigned long)((4)*(8000000/4000.0)));
  2434  0409  300B               	movlw	11
  2435  040A  00F2               	movwf	??_Lcd_Cmd+1
  2436  040B  3062               	movlw	98
  2437  040C  00F1               	movwf	??_Lcd_Cmd
  2438  040D                     u827:
  2439  040D  0BF1               	decfsz	??_Lcd_Cmd,f
  2440  040E  2C0D               	goto	u827
  2441  040F  0BF2               	decfsz	??_Lcd_Cmd+1,f
  2442  0410  2C0D               	goto	u827
  2443  0411  0000               	nop
  2444  0412                     l1176:
  2445                           
  2446                           ;LCD.c: 22:     RE1 = 0;
  2447  0412  1283               	bcf	3,5	;RP0=0, select bank0
  2448  0413  1303               	bcf	3,6	;RP1=0, select bank0
  2449  0414  1089               	bcf	9,1	;volatile
  2450  0415                     l153:
  2451  0415  0008               	return
  2452  0416                     __end_of_Lcd_Cmd:
  2453                           
  2454                           	psect	text12
  2455  03C0                     __ptext12:	
  2456 ;; *************** function _Lcd_Port *****************
  2457 ;; Defined at:
  2458 ;;		line 12 in file "LCD.c"
  2459 ;; Parameters:    Size  Location     Type
  2460 ;;  a               1    wreg     unsigned char 
  2461 ;; Auto vars:     Size  Location     Type
  2462 ;;  a               1    0[COMMON] unsigned char 
  2463 ;; Return value:  Size  Location     Type
  2464 ;;                  1    wreg      void 
  2465 ;; Registers used:
  2466 ;;		wreg
  2467 ;; Tracked objects:
  2468 ;;		On entry : 0/0
  2469 ;;		On exit  : 0/0
  2470 ;;		Unchanged: 0/0
  2471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2472 ;;      Params:         0       0       0       0       0
  2473 ;;      Locals:         1       0       0       0       0
  2474 ;;      Temps:          0       0       0       0       0
  2475 ;;      Totals:         1       0       0       0       0
  2476 ;;Total ram usage:        1 bytes
  2477 ;; Hardware stack levels used: 1
  2478 ;; This function calls:
  2479 ;;		Nothing
  2480 ;; This function is called by:
  2481 ;;		_Lcd_Cmd
  2482 ;;		_Lcd_Init
  2483 ;;		_Lcd_Write_Char
  2484 ;; This function uses a non-reentrant model
  2485 ;;
  2486                           
  2487                           
  2488                           ;psect for function _Lcd_Port
  2489  03C0                     _Lcd_Port:
  2490                           
  2491                           ;incstack = 0
  2492                           ; Regs used in _Lcd_Port: [wreg]
  2493                           ;Lcd_Port@a stored from wreg
  2494  03C0  00F0               	movwf	Lcd_Port@a
  2495  03C1                     l1114:
  2496                           
  2497                           ;LCD.c: 13:     PORTD = a;
  2498  03C1  0870               	movf	Lcd_Port@a,w
  2499  03C2  1283               	bcf	3,5	;RP0=0, select bank0
  2500  03C3  1303               	bcf	3,6	;RP1=0, select bank0
  2501  03C4  0088               	movwf	8	;volatile
  2502  03C5                     l150:
  2503  03C5  0008               	return
  2504  03C6                     __end_of_Lcd_Port:
  2505                           
  2506                           	psect	text13
  2507  03D8                     __ptext13:	
  2508 ;; *************** function _I2C_Master_Write *****************
  2509 ;; Defined at:
  2510 ;;		line 65 in file "I2C.c"
  2511 ;; Parameters:    Size  Location     Type
  2512 ;;  d               2    0[COMMON] unsigned int 
  2513 ;; Auto vars:     Size  Location     Type
  2514 ;;		None
  2515 ;; Return value:  Size  Location     Type
  2516 ;;                  1    wreg      void 
  2517 ;; Registers used:
  2518 ;;		wreg, status,2, status,0, pclath, cstack
  2519 ;; Tracked objects:
  2520 ;;		On entry : 0/0
  2521 ;;		On exit  : 0/0
  2522 ;;		Unchanged: 0/0
  2523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2524 ;;      Params:         2       0       0       0       0
  2525 ;;      Locals:         0       0       0       0       0
  2526 ;;      Temps:          0       0       0       0       0
  2527 ;;      Totals:         2       0       0       0       0
  2528 ;;Total ram usage:        2 bytes
  2529 ;; Hardware stack levels used: 1
  2530 ;; Hardware stack levels required when called: 1
  2531 ;; This function calls:
  2532 ;;		_I2C_Master_Wait
  2533 ;; This function is called by:
  2534 ;;		_main
  2535 ;; This function uses a non-reentrant model
  2536 ;;
  2537                           
  2538                           
  2539                           ;psect for function _I2C_Master_Write
  2540  03D8                     _I2C_Master_Write:
  2541  03D8                     l1276:	
  2542                           ;incstack = 0
  2543                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2544                           
  2545                           
  2546                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  2547  03D8  120A  118A  23E2  120A  118A  	fcall	_I2C_Master_Wait
  2548  03DD                     l1278:
  2549                           
  2550                           ;I2C.c: 68:     SSPBUF = d;
  2551  03DD  0870               	movf	I2C_Master_Write@d,w
  2552  03DE  1283               	bcf	3,5	;RP0=0, select bank0
  2553  03DF  1303               	bcf	3,6	;RP1=0, select bank0
  2554  03E0  0093               	movwf	19	;volatile
  2555  03E1                     l131:
  2556  03E1  0008               	return
  2557  03E2                     __end_of_I2C_Master_Write:
  2558                           
  2559                           	psect	text14
  2560  03CF                     __ptext14:	
  2561 ;; *************** function _I2C_Master_Stop *****************
  2562 ;; Defined at:
  2563 ;;		line 55 in file "I2C.c"
  2564 ;; Parameters:    Size  Location     Type
  2565 ;;		None
  2566 ;; Auto vars:     Size  Location     Type
  2567 ;;		None
  2568 ;; Return value:  Size  Location     Type
  2569 ;;                  1    wreg      void 
  2570 ;; Registers used:
  2571 ;;		wreg, status,2, status,0, pclath, cstack
  2572 ;; Tracked objects:
  2573 ;;		On entry : 0/0
  2574 ;;		On exit  : 0/0
  2575 ;;		Unchanged: 0/0
  2576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2577 ;;      Params:         0       0       0       0       0
  2578 ;;      Locals:         0       0       0       0       0
  2579 ;;      Temps:          0       0       0       0       0
  2580 ;;      Totals:         0       0       0       0       0
  2581 ;;Total ram usage:        0 bytes
  2582 ;; Hardware stack levels used: 1
  2583 ;; Hardware stack levels required when called: 1
  2584 ;; This function calls:
  2585 ;;		_I2C_Master_Wait
  2586 ;; This function is called by:
  2587 ;;		_main
  2588 ;; This function uses a non-reentrant model
  2589 ;;
  2590                           
  2591                           
  2592                           ;psect for function _I2C_Master_Stop
  2593  03CF                     _I2C_Master_Stop:
  2594  03CF                     l1296:	
  2595                           ;incstack = 0
  2596                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2597                           
  2598                           
  2599                           ;I2C.c: 57:     I2C_Master_Wait();
  2600  03CF  120A  118A  23E2  120A  118A  	fcall	_I2C_Master_Wait
  2601  03D4                     l1298:
  2602                           
  2603                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  2604  03D4  1683               	bsf	3,5	;RP0=1, select bank1
  2605  03D5  1303               	bcf	3,6	;RP1=0, select bank1
  2606  03D6  1511               	bsf	17,2	;volatile
  2607  03D7                     l128:
  2608  03D7  0008               	return
  2609  03D8                     __end_of_I2C_Master_Stop:
  2610                           
  2611                           	psect	text15
  2612  03C6                     __ptext15:	
  2613 ;; *************** function _I2C_Master_Start *****************
  2614 ;; Defined at:
  2615 ;;		line 39 in file "I2C.c"
  2616 ;; Parameters:    Size  Location     Type
  2617 ;;		None
  2618 ;; Auto vars:     Size  Location     Type
  2619 ;;		None
  2620 ;; Return value:  Size  Location     Type
  2621 ;;                  1    wreg      void 
  2622 ;; Registers used:
  2623 ;;		wreg, status,2, status,0, pclath, cstack
  2624 ;; Tracked objects:
  2625 ;;		On entry : 0/0
  2626 ;;		On exit  : 0/0
  2627 ;;		Unchanged: 0/0
  2628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2629 ;;      Params:         0       0       0       0       0
  2630 ;;      Locals:         0       0       0       0       0
  2631 ;;      Temps:          0       0       0       0       0
  2632 ;;      Totals:         0       0       0       0       0
  2633 ;;Total ram usage:        0 bytes
  2634 ;; Hardware stack levels used: 1
  2635 ;; Hardware stack levels required when called: 1
  2636 ;; This function calls:
  2637 ;;		_I2C_Master_Wait
  2638 ;; This function is called by:
  2639 ;;		_main
  2640 ;; This function uses a non-reentrant model
  2641 ;;
  2642                           
  2643                           
  2644                           ;psect for function _I2C_Master_Start
  2645  03C6                     _I2C_Master_Start:
  2646  03C6                     l1272:	
  2647                           ;incstack = 0
  2648                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2649                           
  2650                           
  2651                           ;I2C.c: 41:     I2C_Master_Wait();
  2652  03C6  120A  118A  23E2  120A  118A  	fcall	_I2C_Master_Wait
  2653  03CB                     l1274:
  2654                           
  2655                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  2656  03CB  1683               	bsf	3,5	;RP0=1, select bank1
  2657  03CC  1303               	bcf	3,6	;RP1=0, select bank1
  2658  03CD  1411               	bsf	17,0	;volatile
  2659  03CE                     l122:
  2660  03CE  0008               	return
  2661  03CF                     __end_of_I2C_Master_Start:
  2662                           
  2663                           	psect	text16
  2664  0459                     __ptext16:	
  2665 ;; *************** function _I2C_Master_Read *****************
  2666 ;; Defined at:
  2667 ;;		line 74 in file "I2C.c"
  2668 ;; Parameters:    Size  Location     Type
  2669 ;;  a               2    0[COMMON] unsigned short 
  2670 ;; Auto vars:     Size  Location     Type
  2671 ;;  temp            2    4[COMMON] unsigned short 
  2672 ;; Return value:  Size  Location     Type
  2673 ;;                  2    0[COMMON] unsigned short 
  2674 ;; Registers used:
  2675 ;;		wreg, status,2, status,0, pclath, cstack
  2676 ;; Tracked objects:
  2677 ;;		On entry : 0/0
  2678 ;;		On exit  : 0/0
  2679 ;;		Unchanged: 0/0
  2680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2681 ;;      Params:         2       0       0       0       0
  2682 ;;      Locals:         2       0       0       0       0
  2683 ;;      Temps:          2       0       0       0       0
  2684 ;;      Totals:         6       0       0       0       0
  2685 ;;Total ram usage:        6 bytes
  2686 ;; Hardware stack levels used: 1
  2687 ;; Hardware stack levels required when called: 1
  2688 ;; This function calls:
  2689 ;;		_I2C_Master_Wait
  2690 ;; This function is called by:
  2691 ;;		_main
  2692 ;; This function uses a non-reentrant model
  2693 ;;
  2694                           
  2695                           
  2696                           ;psect for function _I2C_Master_Read
  2697  0459                     _I2C_Master_Read:
  2698  0459                     l1280:	
  2699                           ;incstack = 0
  2700                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  2701                           
  2702                           
  2703                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  2704  0459  120A  118A  23E2  120A  118A  	fcall	_I2C_Master_Wait
  2705  045E                     l1282:
  2706                           
  2707                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  2708  045E  1683               	bsf	3,5	;RP0=1, select bank1
  2709  045F  1303               	bcf	3,6	;RP1=0, select bank1
  2710  0460  1591               	bsf	17,3	;volatile
  2711                           
  2712                           ;I2C.c: 79:     I2C_Master_Wait();
  2713  0461  120A  118A  23E2  120A  118A  	fcall	_I2C_Master_Wait
  2714  0466                     l1284:
  2715                           
  2716                           ;I2C.c: 80:     temp = SSPBUF;
  2717  0466  1283               	bcf	3,5	;RP0=0, select bank0
  2718  0467  1303               	bcf	3,6	;RP1=0, select bank0
  2719  0468  0813               	movf	19,w	;volatile
  2720  0469  00F2               	movwf	??_I2C_Master_Read
  2721  046A  01F3               	clrf	??_I2C_Master_Read+1
  2722  046B  0872               	movf	??_I2C_Master_Read,w
  2723  046C  00F4               	movwf	I2C_Master_Read@temp
  2724  046D  0873               	movf	??_I2C_Master_Read+1,w
  2725  046E  00F5               	movwf	I2C_Master_Read@temp+1
  2726  046F                     l1286:
  2727                           
  2728                           ;I2C.c: 81:     I2C_Master_Wait();
  2729  046F  120A  118A  23E2  120A  118A  	fcall	_I2C_Master_Wait
  2730  0474                     l1288:
  2731                           
  2732                           ;I2C.c: 82:     if(a == 1){
  2733  0474  0370               	decf	I2C_Master_Read@a,w
  2734  0475  0471               	iorwf	I2C_Master_Read@a+1,w
  2735  0476  1D03               	btfss	3,2
  2736  0477  2C79               	goto	u531
  2737  0478  2C7A               	goto	u530
  2738  0479                     u531:
  2739  0479  2C7E               	goto	l134
  2740  047A                     u530:
  2741  047A                     l1290:
  2742                           
  2743                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  2744  047A  1683               	bsf	3,5	;RP0=1, select bank1
  2745  047B  1303               	bcf	3,6	;RP1=0, select bank1
  2746  047C  1291               	bcf	17,5	;volatile
  2747                           
  2748                           ;I2C.c: 84:     }else{
  2749  047D  2C81               	goto	l135
  2750  047E                     l134:
  2751                           
  2752                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  2753  047E  1683               	bsf	3,5	;RP0=1, select bank1
  2754  047F  1303               	bcf	3,6	;RP1=0, select bank1
  2755  0480  1691               	bsf	17,5	;volatile
  2756  0481                     l135:	
  2757                           ;I2C.c: 86:     }
  2758                           
  2759                           
  2760                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  2761  0481  1611               	bsf	17,4	;volatile
  2762  0482                     l1292:
  2763                           
  2764                           ;I2C.c: 88:     return temp;
  2765  0482  0875               	movf	I2C_Master_Read@temp+1,w
  2766  0483  00F1               	movwf	?_I2C_Master_Read+1
  2767  0484  0874               	movf	I2C_Master_Read@temp,w
  2768  0485  00F0               	movwf	?_I2C_Master_Read
  2769  0486                     l136:
  2770  0486  0008               	return
  2771  0487                     __end_of_I2C_Master_Read:
  2772                           
  2773                           	psect	text17
  2774  03E2                     __ptext17:	
  2775 ;; *************** function _I2C_Master_Wait *****************
  2776 ;; Defined at:
  2777 ;;		line 32 in file "I2C.c"
  2778 ;; Parameters:    Size  Location     Type
  2779 ;;		None
  2780 ;; Auto vars:     Size  Location     Type
  2781 ;;		None
  2782 ;; Return value:  Size  Location     Type
  2783 ;;                  1    wreg      void 
  2784 ;; Registers used:
  2785 ;;		wreg, status,2
  2786 ;; Tracked objects:
  2787 ;;		On entry : 0/0
  2788 ;;		On exit  : 0/0
  2789 ;;		Unchanged: 0/0
  2790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2791 ;;      Params:         0       0       0       0       0
  2792 ;;      Locals:         0       0       0       0       0
  2793 ;;      Temps:          0       0       0       0       0
  2794 ;;      Totals:         0       0       0       0       0
  2795 ;;Total ram usage:        0 bytes
  2796 ;; Hardware stack levels used: 1
  2797 ;; This function calls:
  2798 ;;		Nothing
  2799 ;; This function is called by:
  2800 ;;		_I2C_Master_Start
  2801 ;;		_I2C_Master_Stop
  2802 ;;		_I2C_Master_Write
  2803 ;;		_I2C_Master_Read
  2804 ;;		_I2C_Master_RepeatedStart
  2805 ;; This function uses a non-reentrant model
  2806 ;;
  2807                           
  2808                           
  2809                           ;psect for function _I2C_Master_Wait
  2810  03E2                     _I2C_Master_Wait:
  2811  03E2                     l1164:	
  2812                           ;incstack = 0
  2813                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  2814                           
  2815  03E2                     l116:	
  2816                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  2817                           
  2818  03E2  1683               	bsf	3,5	;RP0=1, select bank1
  2819  03E3  1303               	bcf	3,6	;RP1=0, select bank1
  2820  03E4  1914               	btfsc	20,2	;volatile
  2821  03E5  2BE7               	goto	u461
  2822  03E6  2BE8               	goto	u460
  2823  03E7                     u461:
  2824  03E7  2BE2               	goto	l116
  2825  03E8                     u460:
  2826  03E8                     l1166:
  2827  03E8  0811               	movf	17,w	;volatile
  2828  03E9  391F               	andlw	31
  2829  03EA  1D03               	btfss	3,2
  2830  03EB  2BED               	goto	u471
  2831  03EC  2BEE               	goto	u470
  2832  03ED                     u471:
  2833  03ED  2BE2               	goto	l116
  2834  03EE                     u470:
  2835  03EE                     l119:
  2836  03EE  0008               	return
  2837  03EF                     __end_of_I2C_Master_Wait:
  2838  007E                     btemp	set	126	;btemp
  2839  007E                     wtemp0	set	126
  2840                           
  2841                           	psect	config
  2842                           
  2843                           ;Config register CONFIG1 @ 0x2007
  2844                           ;	Oscillator Selection bits
  2845                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2846                           ;	Watchdog Timer Enable bit
  2847                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2848                           ;	Power-up Timer Enable bit
  2849                           ;	PWRTE = OFF, PWRT disabled
  2850                           ;	RE3/MCLR pin function select bit
  2851                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2852                           ;	Code Protection bit
  2853                           ;	CP = OFF, Program memory code protection is disabled
  2854                           ;	Data Code Protection bit
  2855                           ;	CPD = OFF, Data memory code protection is disabled
  2856                           ;	Brown Out Reset Selection bits
  2857                           ;	BOREN = OFF, BOR disabled
  2858                           ;	Internal External Switchover bit
  2859                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2860                           ;	Fail-Safe Clock Monitor Enabled bit
  2861                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2862                           ;	Low Voltage Programming Enable bit
  2863                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2864                           ;	In-Circuit Debugger Mode bit
  2865                           ;	DEBUG = 0x1, unprogrammed default
  2866  2007                     	org	8199
  2867  2007  20D4               	dw	8404
  2868                           
  2869                           ;Config register CONFIG2 @ 0x2008
  2870                           ;	Brown-out Reset Selection bit
  2871                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2872                           ;	Flash Program Memory Self Write Enable bits
  2873                           ;	WRT = OFF, Write protection off
  2874  2008                     	org	8200
  2875  2008  3FFF               	dw	16383

Data Sizes:
    Strings     32
    Constant    0
    Data        0
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     12      19
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_5(CODE[4]), STR_4(CODE[4]), STR_2(CODE[5]), STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->___awmod
    _I2C_Master_Init->___lldiv
    ___awmod->___awdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_initSETUP
    _initSETUP->_I2C_Master_Init

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    3193
                                              9 BANK0      3     3      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                            ___awdiv
                            ___awmod
                          _initSETUP
 ---------------------------------------------------------------------------------
 (1) _initSETUP                                            1     1      0     412
                                              8 BANK0      1     1      0
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     904
                                              9 COMMON     5     1      4
                                              0 BANK0      2     2      0
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     604
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     312
                                              5 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0      90
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     466
                                              4 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      66
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      44
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      44
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2      98
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     197
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
   ___awdiv
   ___awmod
     ___awdiv (ARG)
   _initSETUP
     _I2C_Master_Init
       ___lldiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      21       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      C      13       5       23.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      21      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Sep 07 16:15:43 2021

                        pc 0002                         l84 04FE                         _RH 002D  
             ___awdiv@sign 0076                         fsr 0004                        l113 04BE  
                      l122 03CE                        l131 03E1                        l116 03E2  
                      l134 047E                        l150 03C5                        l302 0658  
                      l119 03EE                        l135 0481                        l136 0486  
                      l128 03D7                        l153 0415                        l162 0597  
                      l156 03FB                        l165 0545                        l174 0458  
                      l168 0433                        l432 05F2                        l419 06BF  
                      _GIE 005F                        _RE0 0048                        _RE1 0049  
                      u400 0617                        u401 0616                        u500 0575  
                      u420 0632                        u501 0574                        u421 0631  
                      u415 0619                        u520 0458                        u600 069D  
                      u440 0650                        u521 0457                        u601 069C  
                      u441 064F                        u425 062E                        u530 047A  
                      u450 049E                        u531 0479                        u515 057D  
                      u435 0642                        u460 03E8                        u620 06B1  
                      u540 065E                        u380 0603                        u461 03E7  
                      u621 06B0                        u605 0699                        u541 065D  
                      u381 0602                        u470 03EE                        u630 06B6  
                      u550 0669                        u710 05E4                        u471 03ED  
                      u631 06B5                        u615 06A5                        u551 0668  
                      u711 05E3                        u455 0499                        u480 054C  
                      u560 067A                        u720 05E9                        u640 059F  
                      u481 054B                        u561 0679                        u721 05E8  
                      u705 05D8                        u641 059E                        u650 05AA  
                      u730 06F2                        u651 05A9                        u395 0608  
                      u731 06F1                        u580 068C                        u660 05B5  
                      u740 0708                        u581 068B                        u661 05B4  
                      u741 0707                        u807 0518                        u495 0554  
                      u575 067E                        u680 05C7                        u817 0525  
                      u681 05C6                        u690 05D1                        u827 040D  
                      u595 068D                        u691 05D0                        u675 05B9  
                      u757 0724                        u695 05CD                        u767 07E9  
                      u777 04E9                        u787 042D                        u797 0509  
                      fsr0 0004               ___awmod@sign 0021                       l1120 0606  
                     l1200 04D3                       l1114 03C1                       l1130 0640  
                     l1122 0613                       l1210 04DA                       l1202 04D6  
                     l1140 0417                       l1300 0659                       l1132 0641  
                     l1124 0617                       l1116 05F3                       l1220 04E5  
                     l1212 04DB                       l1204 04D7                       l1150 0430  
                     l1142 041F                       l1310 0669                       l1302 065A  
                     l1134 064A                       l1126 0620                       l1118 0603  
                     l1222 04EC                       l1214 04DC                       l1206 04D8  
                     l1240 0523                       l1232 04FF                       l1144 0422  
                     l1320 067D                       l1312 066E                       l1304 065E  
                     l1128 0632                       l1136 0650                       l1160 04BC  
                     l1152 0487                       l1224 04EF                       l1216 04E2  
                     l1208 04D9                       l1400 0716                       l1170 0400  
                     l1242 03EF                       l1234 0505                       l1250 0562  
                     l1146 0428                       l1330 06A3                       l1322 0684  
                     l1314 0672                       l1306 0663                       l1162 04BD  
                     l1154 048B                       l1226 04F0                       l1218 04E4  
                     l1410 0759                       l1402 0717                       l1164 03E2  
                     l1172 0406                       l1236 050E                       l1260 058B  
                     l1252 0568                       l1244 0547                       l1148 042B  
                     l1340 06BB                       l1332 06A4                       l1324 0688  
                     l1316 0674                       l1308 0665                       l1156 048E  
                     l1228 04F1                       l1180 04C3                       l1420 07B9  
                     l1412 0770                       l1404 071C                       l1166 03E8  
                     l1174 0409                       l1238 051D                       l1262 0591  
                     l1246 054C                       l1254 056F                       l1270 044B  
                     l1334 06AB                       l1326 068C                       l1318 067A  
                     l1350 05A4                       l1158 04BB                       l1190 04CA  
                     l1182 04C4                       l1430 07DB                       l1422 07BF  
                     l1414 0794                       l1406 072B                       l1280 0459  
                     l1272 03C6                       l1176 0412                       l1168 03FD  
                     l1256 0575                       l1248 055D                       l1264 0435  
                     l1328 069D                       l1336 06B1                       l1360 05B8  
                     l1352 05A6                       l1344 0598                       l1192 04CB  
                     l1184 04C5                       l1432 07E1                       l1424 07C7  
                     l1416 07AB                       l1408 0733                       l1290 047A  
                     l1282 045E                       l1274 03CB                       l1258 0586  
                     l1266 0438                       l1338 06B6                       l1370 05D7  
                     l1362 05BF                       l1354 05AA                       l1346 059B  
                     l1194 04CC                       l1186 04C6                       l1178 04BF  
                     l1426 07CF                       l1418 07B1                       l1292 0482  
                     l1284 0466                       l1276 03D8                       l1268 0445  
                     l1372 05DE                       l1364 05C3                       l1356 05AF  
                     l1348 059F                       l1196 04CD                       l1188 04C7  
                     l1428 07D5                       l1286 046F                       l1278 03DD  
                     l1366 05C7                       l1358 05B5                       l1374 05E4  
                     l1198 04CE                       l1390 06EB                       l1382 06C0  
                     l1288 0474                       l1296 03CF                       l1376 05E9  
                     l1368 05D1                       l1392 06F2                       l1384 06D7  
                     l1298 03D4                       l1378 05EE                       l1394 0700  
                     l1386 06DD                       l1396 0703                       l1388 06E2  
                     l1398 0708                       STR_1 0009                       STR_2 001A  
                     STR_3 0027                       STR_4 001F                       STR_5 0023  
                     _PEIE 005E                       _dec0 0031                       _dec1 002F  
        ?_Lcd_Write_String 0070                       _main 06C0                       _test 002C  
                     btemp 007E                       start 0000         ??_Lcd_Write_String 0075  
          __end_of_Lcd_Cmd 0416           ?_I2C_Master_Init 0020           ?_I2C_Master_Read 0070  
         ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070                      ?_main 0070  
          __end_of___awdiv 06C0            __end_of___awmod 05F3                      _ANSEL 0188  
          __end_of___lldiv 0659            ___awdiv@divisor 0070            ___awdiv@counter 0075  
                    _PORTA 0005                      _PORTB 0006                      _PORTC 0007  
                    _PORTD 0008                      _PORTE 0009    __size_of_Lcd_Set_Cursor 0052  
                    _TRISA 0085                      _TRISB 0086                      _TRISC 0087  
                    _TRISD 0088                      _SSPIE 0463                      _TRISE 0089  
                    _SSPIF 0063                      _unit0 0032                      _unit1 0030  
                    pclath 000A                      status 0003                      wtemp0 007E  
         __end_of_Lcd_Init 0546           __end_of_Lcd_Port 03C6            __initialization 07F3  
             __end_of_main 07F3                     ??_main 0029         __size_of_Lcd_Clear 000D  
        ?_I2C_Master_Start 0070          ?_I2C_Master_Write 0070         ??_I2C_Master_Start 0070  
       ??_I2C_Master_Write 0072           ___awdiv@dividend 0072                     _ANSELH 0189  
                ??_Lcd_Cmd 0071    __size_of_Lcd_Write_Char 001E                     _SSPADD 0093  
                   _TRISC3 043B                     _TRISC4 043C                     _SSPCON 0014  
                   _SSPBUF 0013                  ??___awdiv 0074                  ??___awmod 007D  
                ??___lldiv 0078           ___awdiv@quotient 0077            ___awmod@divisor 0079  
          ___awmod@counter 0020            Lcd_Set_Cursor@a 0077            Lcd_Set_Cursor@b 0074  
          Lcd_Set_Cursor@y 0079            Lcd_Set_Cursor@z 0078    __end_of__initialization 07FC  
        __end_of_Lcd_Clear 03FC             __pcstackCOMMON 0070             _Lcd_Set_Cursor 0546  
                ?_Lcd_Init 0070                  ?_Lcd_Port 0070                 __pbssBANK0 002C  
       __size_of_initSETUP 0040                 __pmaintext 06C0  __size_of_Lcd_Write_String 0025  
   __end_of_Lcd_Set_Cursor 0598                 ??_Lcd_Init 0074                 ??_Lcd_Port 0070  
                  _SSPCON2 0091                    _SSPSTAT 0094                 __stringtab 0003  
           _Lcd_Write_Char 0416                    _Lcd_Cmd 03FC                    ___awdiv 0659  
                  ___awmod 0598                    ___lldiv 05F3          __end_of_initSETUP 04FF  
          ?_Lcd_Set_Cursor 0074                    __ptext1 04BF                    __ptext2 0487  
                  __ptext3 05F3                    __ptext4 0598                    __ptext5 0659  
                  __ptext6 0434                    __ptext7 0416                    __ptext8 0546  
                  __ptext9 04FF           ___awmod@dividend 007B   __size_of_I2C_Master_Init 0038  
 __size_of_I2C_Master_Read 002E   __size_of_I2C_Master_Wait 000D   __size_of_I2C_Master_Stop 0009  
   __end_of_Lcd_Write_Char 0434       end_of_initialization 07FC  __size_of_I2C_Master_Start 0009  
__size_of_I2C_Master_Write 000A            ___lldiv@divisor 0070            ___lldiv@counter 007D  
         I2C_Master_Init@c 0020           I2C_Master_Read@a 0070                  Lcd_Port@a 0070  
                _TRISCbits 0087            ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0077  
        Lcd_Write_String@i 0075                  _Lcd_Clear 03EF           _Lcd_Write_String 0434  
      start_initialization 07F3          __size_of_Lcd_Init 0047          __size_of_Lcd_Port 0006  
        ??_I2C_Master_Init 0024          ??_I2C_Master_Read 0072          ??_I2C_Master_Wait 0070  
        ??_I2C_Master_Stop 0070                 ?_Lcd_Clear 0070            Lcd_Write_Char@a 0072  
          Lcd_Write_Char@y 0074                  ___latbits 0002              __pcstackBANK0 0020  
                 ?_Lcd_Cmd 0070           _I2C_Master_Start 03C6           _I2C_Master_Write 03D8  
         ??_Lcd_Set_Cursor 0075                   ?___awdiv 0070                   ?___awmod 0079  
                 ?___lldiv 0070                  __pstrings 0003                  _initSETUP 04BF  
                 Lcd_Cmd@a 0073                ??_Lcd_Clear 0074                 _ADCON0bits 001F  
              __stringbase 0008                 _ADCON1bits 009F           ??_Lcd_Write_Char 0071  
               ?_initSETUP 0070                   _Lcd_Init 04FF                   _Lcd_Port 03C0  
      I2C_Master_Read@temp 0074   __end_of_Lcd_Write_String 0459           __size_of_Lcd_Cmd 001A  
                 _Humidity 002E           __size_of___awdiv 0067           __size_of___awmod 005B  
         __size_of___lldiv 0066         __end_of__stringtab 0009            _I2C_Master_Init 0487  
          _I2C_Master_Read 0459            _I2C_Master_Wait 03E2            _I2C_Master_Stop 03CF  
                 __ptext10 03EF                   __ptext11 03FC                   __ptext12 03C0  
                 __ptext13 03D8                   __ptext14 03CF                   __ptext15 03C6  
                 __ptext16 0459                   __ptext17 03E2              __size_of_main 0133  
 __end_of_I2C_Master_Start 03CF   __end_of_I2C_Master_Write 03E2                 _INTCONbits 000B  
              ??_initSETUP 0028         Lcd_Write_Char@temp 0073           ___lldiv@dividend 0074  
                stringcode 0003                 _OSCCONbits 008F    __end_of_I2C_Master_Init 04BF  
  __end_of_I2C_Master_Read 0487    __end_of_I2C_Master_Wait 03EF    __end_of_I2C_Master_Stop 03D8  
       Lcd_Set_Cursor@temp 007A           ___lldiv@quotient 0079          I2C_Master_Write@d 0070  
                 stringdir 0003                   stringtab 0003                _SSPCON2bits 0091  
