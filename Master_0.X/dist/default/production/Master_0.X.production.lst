

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Sep 07 18:27:26 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    28                           	dabs	1,0x7E,2
    29  0000                     
    30                           ; Version 2.20
    31                           ; Generated 12/02/2020 GMT
    32                           ; 
    33                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F887 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  000E                     	;# 
    79  000E                     	;# 
    80  000F                     	;# 
    81  0010                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0013                     	;# 
    85  0014                     	;# 
    86  0015                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001B                     	;# 
    95  001C                     	;# 
    96  001D                     	;# 
    97  001E                     	;# 
    98  001F                     	;# 
    99  0081                     	;# 
   100  0085                     	;# 
   101  0086                     	;# 
   102  0087                     	;# 
   103  0088                     	;# 
   104  0089                     	;# 
   105  008C                     	;# 
   106  008D                     	;# 
   107  008E                     	;# 
   108  008F                     	;# 
   109  0090                     	;# 
   110  0091                     	;# 
   111  0092                     	;# 
   112  0093                     	;# 
   113  0093                     	;# 
   114  0093                     	;# 
   115  0094                     	;# 
   116  0095                     	;# 
   117  0096                     	;# 
   118  0097                     	;# 
   119  0098                     	;# 
   120  0099                     	;# 
   121  009A                     	;# 
   122  009B                     	;# 
   123  009C                     	;# 
   124  009D                     	;# 
   125  009E                     	;# 
   126  009F                     	;# 
   127  0105                     	;# 
   128  0107                     	;# 
   129  0108                     	;# 
   130  0109                     	;# 
   131  010C                     	;# 
   132  010C                     	;# 
   133  010D                     	;# 
   134  010E                     	;# 
   135  010F                     	;# 
   136  0185                     	;# 
   137  0187                     	;# 
   138  0188                     	;# 
   139  0189                     	;# 
   140  018C                     	;# 
   141  018D                     	;# 
   142  0000                     	;# 
   143  0001                     	;# 
   144  0002                     	;# 
   145  0003                     	;# 
   146  0004                     	;# 
   147  0005                     	;# 
   148  0006                     	;# 
   149  0007                     	;# 
   150  0008                     	;# 
   151  0009                     	;# 
   152  000A                     	;# 
   153  000B                     	;# 
   154  000C                     	;# 
   155  000D                     	;# 
   156  000E                     	;# 
   157  000E                     	;# 
   158  000F                     	;# 
   159  0010                     	;# 
   160  0011                     	;# 
   161  0012                     	;# 
   162  0013                     	;# 
   163  0014                     	;# 
   164  0015                     	;# 
   165  0015                     	;# 
   166  0016                     	;# 
   167  0017                     	;# 
   168  0018                     	;# 
   169  0019                     	;# 
   170  001A                     	;# 
   171  001B                     	;# 
   172  001B                     	;# 
   173  001C                     	;# 
   174  001D                     	;# 
   175  001E                     	;# 
   176  001F                     	;# 
   177  0081                     	;# 
   178  0085                     	;# 
   179  0086                     	;# 
   180  0087                     	;# 
   181  0088                     	;# 
   182  0089                     	;# 
   183  008C                     	;# 
   184  008D                     	;# 
   185  008E                     	;# 
   186  008F                     	;# 
   187  0090                     	;# 
   188  0091                     	;# 
   189  0092                     	;# 
   190  0093                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0094                     	;# 
   194  0095                     	;# 
   195  0096                     	;# 
   196  0097                     	;# 
   197  0098                     	;# 
   198  0099                     	;# 
   199  009A                     	;# 
   200  009B                     	;# 
   201  009C                     	;# 
   202  009D                     	;# 
   203  009E                     	;# 
   204  009F                     	;# 
   205  0105                     	;# 
   206  0107                     	;# 
   207  0108                     	;# 
   208  0109                     	;# 
   209  010C                     	;# 
   210  010C                     	;# 
   211  010D                     	;# 
   212  010E                     	;# 
   213  010F                     	;# 
   214  0185                     	;# 
   215  0187                     	;# 
   216  0188                     	;# 
   217  0189                     	;# 
   218  018C                     	;# 
   219  018D                     	;# 
   220  0000                     	;# 
   221  0001                     	;# 
   222  0002                     	;# 
   223  0003                     	;# 
   224  0004                     	;# 
   225  0005                     	;# 
   226  0006                     	;# 
   227  0007                     	;# 
   228  0008                     	;# 
   229  0009                     	;# 
   230  000A                     	;# 
   231  000B                     	;# 
   232  000C                     	;# 
   233  000D                     	;# 
   234  000E                     	;# 
   235  000E                     	;# 
   236  000F                     	;# 
   237  0010                     	;# 
   238  0011                     	;# 
   239  0012                     	;# 
   240  0013                     	;# 
   241  0014                     	;# 
   242  0015                     	;# 
   243  0015                     	;# 
   244  0016                     	;# 
   245  0017                     	;# 
   246  0018                     	;# 
   247  0019                     	;# 
   248  001A                     	;# 
   249  001B                     	;# 
   250  001B                     	;# 
   251  001C                     	;# 
   252  001D                     	;# 
   253  001E                     	;# 
   254  001F                     	;# 
   255  0081                     	;# 
   256  0085                     	;# 
   257  0086                     	;# 
   258  0087                     	;# 
   259  0088                     	;# 
   260  0089                     	;# 
   261  008C                     	;# 
   262  008D                     	;# 
   263  008E                     	;# 
   264  008F                     	;# 
   265  0090                     	;# 
   266  0091                     	;# 
   267  0092                     	;# 
   268  0093                     	;# 
   269  0093                     	;# 
   270  0093                     	;# 
   271  0094                     	;# 
   272  0095                     	;# 
   273  0096                     	;# 
   274  0097                     	;# 
   275  0098                     	;# 
   276  0099                     	;# 
   277  009A                     	;# 
   278  009B                     	;# 
   279  009C                     	;# 
   280  009D                     	;# 
   281  009E                     	;# 
   282  009F                     	;# 
   283  0105                     	;# 
   284  0107                     	;# 
   285  0108                     	;# 
   286  0109                     	;# 
   287  010C                     	;# 
   288  010C                     	;# 
   289  010D                     	;# 
   290  010E                     	;# 
   291  010F                     	;# 
   292  0185                     	;# 
   293  0187                     	;# 
   294  0188                     	;# 
   295  0189                     	;# 
   296  018C                     	;# 
   297  018D                     	;# 
   298  0000                     	;# 
   299  0001                     	;# 
   300  0002                     	;# 
   301  0003                     	;# 
   302  0004                     	;# 
   303  0005                     	;# 
   304  0006                     	;# 
   305  0007                     	;# 
   306  0008                     	;# 
   307  0009                     	;# 
   308  000A                     	;# 
   309  000B                     	;# 
   310  000C                     	;# 
   311  000D                     	;# 
   312  000E                     	;# 
   313  000E                     	;# 
   314  000F                     	;# 
   315  0010                     	;# 
   316  0011                     	;# 
   317  0012                     	;# 
   318  0013                     	;# 
   319  0014                     	;# 
   320  0015                     	;# 
   321  0015                     	;# 
   322  0016                     	;# 
   323  0017                     	;# 
   324  0018                     	;# 
   325  0019                     	;# 
   326  001A                     	;# 
   327  001B                     	;# 
   328  001B                     	;# 
   329  001C                     	;# 
   330  001D                     	;# 
   331  001E                     	;# 
   332  001F                     	;# 
   333  0081                     	;# 
   334  0085                     	;# 
   335  0086                     	;# 
   336  0087                     	;# 
   337  0088                     	;# 
   338  0089                     	;# 
   339  008C                     	;# 
   340  008D                     	;# 
   341  008E                     	;# 
   342  008F                     	;# 
   343  0090                     	;# 
   344  0091                     	;# 
   345  0092                     	;# 
   346  0093                     	;# 
   347  0093                     	;# 
   348  0093                     	;# 
   349  0094                     	;# 
   350  0095                     	;# 
   351  0096                     	;# 
   352  0097                     	;# 
   353  0098                     	;# 
   354  0099                     	;# 
   355  009A                     	;# 
   356  009B                     	;# 
   357  009C                     	;# 
   358  009D                     	;# 
   359  009E                     	;# 
   360  009F                     	;# 
   361  0105                     	;# 
   362  0107                     	;# 
   363  0108                     	;# 
   364  0109                     	;# 
   365  010C                     	;# 
   366  010C                     	;# 
   367  010D                     	;# 
   368  010E                     	;# 
   369  010F                     	;# 
   370  0185                     	;# 
   371  0187                     	;# 
   372  0188                     	;# 
   373  0189                     	;# 
   374  018C                     	;# 
   375  018D                     	;# 
   376  0013                     _SSPBUF	set	19
   377  0014                     _SSPCON	set	20
   378  000B                     _INTCONbits	set	11
   379  001F                     _ADCON0bits	set	31
   380  0008                     _PORTD	set	8
   381  0007                     _PORTC	set	7
   382  0006                     _PORTB	set	6
   383  0005                     _PORTA	set	5
   384  0009                     _PORTE	set	9
   385  0049                     _RE1	set	73
   386  0048                     _RE0	set	72
   387  0063                     _SSPIF	set	99
   388  005E                     _PEIE	set	94
   389  005F                     _GIE	set	95
   390  0091                     _SSPCON2bits	set	145
   391  0087                     _TRISCbits	set	135
   392  0094                     _SSPSTAT	set	148
   393  0093                     _SSPADD	set	147
   394  0091                     _SSPCON2	set	145
   395  009F                     _ADCON1bits	set	159
   396  008F                     _OSCCONbits	set	143
   397  0089                     _TRISE	set	137
   398  0088                     _TRISD	set	136
   399  0087                     _TRISC	set	135
   400  0086                     _TRISB	set	134
   401  0085                     _TRISA	set	133
   402  0463                     _SSPIE	set	1123
   403  043C                     _TRISC4	set	1084
   404  043B                     _TRISC3	set	1083
   405  0189                     _ANSELH	set	393
   406  0188                     _ANSEL	set	392
   407                           
   408                           	psect	strings
   409  0003                     __pstrings:
   410  0003                     stringtab:
   411  0003                     __stringtab:
   412  0003                     stringcode:	
   413                           ;	String table - string pointers are 1 byte each
   414                           
   415  0003                     stringdir:
   416  0003  3000               	movlw	high stringdir
   417  0004  008A               	movwf	10
   418  0005  0804               	movf	4,w
   419  0006  0A84               	incf	4,f
   420  0007  0782               	addwf	2,f
   421  0008                     __stringbase:
   422  0008  3400               	retlw	0
   423  0009                     __end_of__stringtab:
   424  0009                     STR_1:
   425  0009  3420               	retlw	32	;' '
   426  000A  3453               	retlw	83	;'S'
   427  000B  3431               	retlw	49	;'1'
   428  000C  343A               	retlw	58	;':'
   429  000D  3420               	retlw	32	;' '
   430  000E  3420               	retlw	32	;' '
   431  000F  3420               	retlw	32	;' '
   432  0010  3453               	retlw	83	;'S'
   433  0011  3432               	retlw	50	;'2'
   434  0012  343A               	retlw	58	;':'
   435  0013  3420               	retlw	32	;' '
   436  0014  3420               	retlw	32	;' '
   437  0015  3420               	retlw	32	;' '
   438  0016  3453               	retlw	83	;'S'
   439  0017  3433               	retlw	51	;'3'
   440  0018  343A               	retlw	58	;':'
   441  0019  3400               	retlw	0
   442  001A                     STR_2:
   443  001A  3425               	retlw	37	;'%'
   444  001B  3420               	retlw	32	;' '
   445  001C  3420               	retlw	32	;' '
   446  001D  3420               	retlw	32	;' '
   447  001E  3400               	retlw	0
   448  001F                     STR_3:
   449  001F  3443               	retlw	67	;'C'
   450  0020  3420               	retlw	32	;' '
   451  0021  3420               	retlw	32	;' '
   452  0022  3400               	retlw	0
   453  0023                     STR_4:
   454  0023  3430               	retlw	48	;'0'
   455  0024  3430               	retlw	48	;'0'
   456  0025  3430               	retlw	48	;'0'
   457  0026  3400               	retlw	0
   458  0027                     STR_5:
   459  0027  3430               	retlw	48	;'0'
   460  0028  3430               	retlw	48	;'0'
   461  0029  3431               	retlw	49	;'1'
   462  002A  3400               	retlw	0
   463                           
   464                           	psect	cinit
   465  07F3                     start_initialization:	
   466                           ; #config settings
   467                           
   468  07F3                     __initialization:
   469                           
   470                           ; Clear objects allocated to BANK0
   471  07F3  1283               	bcf	3,5	;RP0=0, select bank0
   472  07F4  1303               	bcf	3,6	;RP1=0, select bank0
   473  07F5  01AC               	clrf	__pbssBANK0& (0+127)
   474  07F6  01AD               	clrf	(__pbssBANK0+1)& (0+127)
   475  07F7  01AE               	clrf	(__pbssBANK0+2)& (0+127)
   476  07F8  01AF               	clrf	(__pbssBANK0+3)& (0+127)
   477  07F9  01B0               	clrf	(__pbssBANK0+4)& (0+127)
   478  07FA  01B1               	clrf	(__pbssBANK0+5)& (0+127)
   479  07FB  01B2               	clrf	(__pbssBANK0+6)& (0+127)
   480  07FC                     end_of_initialization:	
   481                           ;End of C runtime variable initialization code
   482                           
   483  07FC                     __end_of__initialization:
   484  07FC  0183               	clrf	3
   485  07FD  120A  118A  2EAB   	ljmp	_main	;jump to C main() function
   486                           
   487                           	psect	bssBANK0
   488  002C                     __pbssBANK0:
   489  002C                     _test:
   490  002C                     	ds	1
   491  002D                     _RH:
   492  002D                     	ds	1
   493  002E                     _Humidity:
   494  002E                     	ds	1
   495  002F                     _dec1:
   496  002F                     	ds	1
   497  0030                     _unit1:
   498  0030                     	ds	1
   499  0031                     _dec0:
   500  0031                     	ds	1
   501  0032                     _unit0:
   502  0032                     	ds	1
   503                           
   504                           	psect	cstackCOMMON
   505  0070                     __pcstackCOMMON:
   506  0070                     ?_initSETUP:
   507  0070                     ?_Lcd_Init:	
   508                           ; 1 bytes @ 0x0
   509                           
   510  0070                     ?_Lcd_Clear:	
   511                           ; 1 bytes @ 0x0
   512                           
   513  0070                     ?_Lcd_Write_String:	
   514                           ; 1 bytes @ 0x0
   515                           
   516  0070                     ?_I2C_Master_Start:	
   517                           ; 1 bytes @ 0x0
   518                           
   519  0070                     ??_I2C_Master_Start:	
   520                           ; 1 bytes @ 0x0
   521                           
   522  0070                     ?_I2C_Master_Write:	
   523                           ; 1 bytes @ 0x0
   524                           
   525  0070                     ?_I2C_Master_Stop:	
   526                           ; 1 bytes @ 0x0
   527                           
   528  0070                     ??_I2C_Master_Stop:	
   529                           ; 1 bytes @ 0x0
   530                           
   531  0070                     ?_Lcd_Write_Char:	
   532                           ; 1 bytes @ 0x0
   533                           
   534  0070                     ?_main:	
   535                           ; 1 bytes @ 0x0
   536                           
   537  0070                     ?_I2C_Master_Wait:	
   538                           ; 1 bytes @ 0x0
   539                           
   540  0070                     ??_I2C_Master_Wait:	
   541                           ; 1 bytes @ 0x0
   542                           
   543  0070                     ?_Lcd_Port:	
   544                           ; 1 bytes @ 0x0
   545                           
   546  0070                     ??_Lcd_Port:	
   547                           ; 1 bytes @ 0x0
   548                           
   549  0070                     ?_Lcd_Cmd:	
   550                           ; 1 bytes @ 0x0
   551                           
   552  0070                     ?_I2C_Master_Read:	
   553                           ; 1 bytes @ 0x0
   554                           
   555  0070                     ?___awdiv:	
   556                           ; 2 bytes @ 0x0
   557                           
   558  0070                     ?___lldiv:	
   559                           ; 2 bytes @ 0x0
   560                           
   561  0070                     Lcd_Port@a:	
   562                           ; 4 bytes @ 0x0
   563                           
   564  0070                     I2C_Master_Write@d:	
   565                           ; 1 bytes @ 0x0
   566                           
   567  0070                     I2C_Master_Read@a:	
   568                           ; 2 bytes @ 0x0
   569                           
   570  0070                     ___awdiv@divisor:	
   571                           ; 2 bytes @ 0x0
   572                           
   573  0070                     ___lldiv@divisor:	
   574                           ; 2 bytes @ 0x0
   575                           
   576                           
   577                           ; 4 bytes @ 0x0
   578  0070                     	ds	1
   579  0071                     ??_Lcd_Write_Char:
   580  0071                     ??_Lcd_Cmd:	
   581                           ; 1 bytes @ 0x1
   582                           
   583                           
   584                           ; 1 bytes @ 0x1
   585  0071                     	ds	1
   586  0072                     ??_I2C_Master_Write:
   587  0072                     ??_I2C_Master_Read:	
   588                           ; 1 bytes @ 0x2
   589                           
   590  0072                     Lcd_Write_Char@a:	
   591                           ; 1 bytes @ 0x2
   592                           
   593  0072                     ___awdiv@dividend:	
   594                           ; 1 bytes @ 0x2
   595                           
   596                           
   597                           ; 2 bytes @ 0x2
   598  0072                     	ds	1
   599  0073                     Lcd_Cmd@a:
   600  0073                     Lcd_Write_Char@temp:	
   601                           ; 1 bytes @ 0x3
   602                           
   603                           
   604                           ; 1 bytes @ 0x3
   605  0073                     	ds	1
   606  0074                     ??_Lcd_Init:
   607  0074                     ??_Lcd_Clear:	
   608                           ; 1 bytes @ 0x4
   609                           
   610  0074                     ?_Lcd_Set_Cursor:	
   611                           ; 1 bytes @ 0x4
   612                           
   613  0074                     ??___awdiv:	
   614                           ; 1 bytes @ 0x4
   615                           
   616  0074                     Lcd_Set_Cursor@b:	
   617                           ; 1 bytes @ 0x4
   618                           
   619  0074                     Lcd_Write_Char@y:	
   620                           ; 1 bytes @ 0x4
   621                           
   622  0074                     I2C_Master_Read@temp:	
   623                           ; 1 bytes @ 0x4
   624                           
   625  0074                     ___lldiv@dividend:	
   626                           ; 2 bytes @ 0x4
   627                           
   628                           
   629                           ; 4 bytes @ 0x4
   630  0074                     	ds	1
   631  0075                     ??_Lcd_Set_Cursor:
   632  0075                     ??_Lcd_Write_String:	
   633                           ; 1 bytes @ 0x5
   634                           
   635  0075                     ___awdiv@counter:	
   636                           ; 1 bytes @ 0x5
   637                           
   638  0075                     Lcd_Write_String@i:	
   639                           ; 1 bytes @ 0x5
   640                           
   641                           
   642                           ; 2 bytes @ 0x5
   643  0075                     	ds	1
   644  0076                     ___awdiv@sign:
   645                           
   646                           ; 1 bytes @ 0x6
   647  0076                     	ds	1
   648  0077                     Lcd_Set_Cursor@a:
   649  0077                     Lcd_Write_String@a:	
   650                           ; 1 bytes @ 0x7
   651                           
   652  0077                     ___awdiv@quotient:	
   653                           ; 1 bytes @ 0x7
   654                           
   655                           
   656                           ; 2 bytes @ 0x7
   657  0077                     	ds	1
   658  0078                     ??___lldiv:
   659  0078                     Lcd_Set_Cursor@z:	
   660                           ; 1 bytes @ 0x8
   661                           
   662                           
   663                           ; 1 bytes @ 0x8
   664  0078                     	ds	1
   665  0079                     ?___awmod:
   666  0079                     Lcd_Set_Cursor@y:	
   667                           ; 2 bytes @ 0x9
   668                           
   669  0079                     ___awmod@divisor:	
   670                           ; 1 bytes @ 0x9
   671                           
   672  0079                     ___lldiv@quotient:	
   673                           ; 2 bytes @ 0x9
   674                           
   675                           
   676                           ; 4 bytes @ 0x9
   677  0079                     	ds	1
   678  007A                     Lcd_Set_Cursor@temp:
   679                           
   680                           ; 1 bytes @ 0xA
   681  007A                     	ds	1
   682  007B                     ___awmod@dividend:
   683                           
   684                           ; 2 bytes @ 0xB
   685  007B                     	ds	2
   686  007D                     ??___awmod:
   687  007D                     ___lldiv@counter:	
   688                           ; 1 bytes @ 0xD
   689                           
   690                           
   691                           ; 1 bytes @ 0xD
   692  007D                     	ds	1
   693                           
   694                           	psect	cstackBANK0
   695  0020                     __pcstackBANK0:
   696  0020                     ?_I2C_Master_Init:
   697  0020                     ___awmod@counter:	
   698                           ; 1 bytes @ 0x0
   699                           
   700  0020                     I2C_Master_Init@c:	
   701                           ; 1 bytes @ 0x0
   702                           
   703                           
   704                           ; 4 bytes @ 0x0
   705  0020                     	ds	1
   706  0021                     ___awmod@sign:
   707                           
   708                           ; 1 bytes @ 0x1
   709  0021                     	ds	3
   710  0024                     ??_I2C_Master_Init:
   711                           
   712                           ; 1 bytes @ 0x4
   713  0024                     	ds	4
   714  0028                     ??_initSETUP:
   715                           
   716                           ; 1 bytes @ 0x8
   717  0028                     	ds	1
   718  0029                     ??_main:
   719                           
   720                           ; 1 bytes @ 0x9
   721  0029                     	ds	3
   722                           
   723                           	psect	maintext
   724  06AB                     __pmaintext:	
   725 ;;
   726 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   727 ;;
   728 ;; *************** function _main *****************
   729 ;; Defined at:
   730 ;;		line 40 in file "master.c"
   731 ;; Parameters:    Size  Location     Type
   732 ;;		None
   733 ;; Auto vars:     Size  Location     Type
   734 ;;		None
   735 ;; Return value:  Size  Location     Type
   736 ;;                  1    wreg      void 
   737 ;; Registers used:
   738 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   739 ;; Tracked objects:
   740 ;;		On entry : B00/0
   741 ;;		On exit  : 0/0
   742 ;;		Unchanged: 0/0
   743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   744 ;;      Params:         0       0       0       0       0
   745 ;;      Locals:         0       0       0       0       0
   746 ;;      Temps:          0       3       0       0       0
   747 ;;      Totals:         0       3       0       0       0
   748 ;;Total ram usage:        3 bytes
   749 ;; Hardware stack levels required when called: 3
   750 ;; This function calls:
   751 ;;		_I2C_Master_Read
   752 ;;		_I2C_Master_Start
   753 ;;		_I2C_Master_Stop
   754 ;;		_I2C_Master_Write
   755 ;;		_Lcd_Clear
   756 ;;		_Lcd_Init
   757 ;;		_Lcd_Set_Cursor
   758 ;;		_Lcd_Write_Char
   759 ;;		_Lcd_Write_String
   760 ;;		___awdiv
   761 ;;		___awmod
   762 ;;		_initSETUP
   763 ;; This function is called by:
   764 ;;		Startup code after reset
   765 ;; This function uses a non-reentrant model
   766 ;;
   767                           
   768                           
   769                           ;psect for function _main
   770  06AB                     _main:
   771  06AB                     l1391:	
   772                           ;incstack = 0
   773                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   774                           
   775                           
   776                           ;master.c: 41:     initSETUP();
   777  06AB  120A  118A  24AA  120A  118A  	fcall	_initSETUP
   778                           
   779                           ;master.c: 42:     Lcd_Init();
   780  06B0  120A  118A  24EA  120A  118A  	fcall	_Lcd_Init
   781                           
   782                           ;master.c: 43:     Lcd_Clear();
   783  06B5  120A  118A  23DA  120A  118A  	fcall	_Lcd_Clear
   784                           
   785                           ;master.c: 44:     Lcd_Set_Cursor(1,1);
   786  06BA  01F4               	clrf	Lcd_Set_Cursor@b
   787  06BB  0AF4               	incf	Lcd_Set_Cursor@b,f
   788  06BC  3001               	movlw	1
   789  06BD  120A  118A  2531  120A  118A  	fcall	_Lcd_Set_Cursor
   790  06C2                     l1393:
   791                           
   792                           ;master.c: 45:     Lcd_Write_String(" S1:   S2:   S3:");
   793  06C2  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   794  06C3  120A  118A  241F  120A  118A  	fcall	_Lcd_Write_String
   795  06C8                     l1395:
   796                           
   797                           ;master.c: 47:         I2C_Master_Start();
   798  06C8  120A  118A  23B1  120A  118A  	fcall	_I2C_Master_Start
   799  06CD                     l1397:
   800                           
   801                           ;master.c: 48:         I2C_Master_Write(0x81);
   802  06CD  3081               	movlw	129
   803  06CE  00F0               	movwf	I2C_Master_Write@d
   804  06CF  3000               	movlw	0
   805  06D0  00F1               	movwf	I2C_Master_Write@d+1
   806  06D1  120A  118A  23C3  120A  118A  	fcall	_I2C_Master_Write
   807  06D6                     l1399:
   808                           
   809                           ;master.c: 49:         if (test==0){
   810  06D6  1283               	bcf	3,5	;RP0=0, select bank0
   811  06D7  1303               	bcf	3,6	;RP1=0, select bank0
   812  06D8  082C               	movf	_test,w
   813  06D9  1D03               	btfss	3,2
   814  06DA  2EDC               	goto	u751
   815  06DB  2EDD               	goto	u750
   816  06DC                     u751:
   817  06DC  2EEE               	goto	l1405
   818  06DD                     u750:
   819  06DD                     l1401:
   820                           
   821                           ;master.c: 50:                 RH=I2C_Master_Read(0);
   822  06DD  3000               	movlw	0
   823  06DE  00F0               	movwf	I2C_Master_Read@a
   824  06DF  00F1               	movwf	I2C_Master_Read@a+1
   825  06E0  120A  118A  2444  120A  118A  	fcall	_I2C_Master_Read
   826  06E5  0870               	movf	?_I2C_Master_Read,w
   827  06E6  1283               	bcf	3,5	;RP0=0, select bank0
   828  06E7  1303               	bcf	3,6	;RP1=0, select bank0
   829  06E8  00A9               	movwf	??_main
   830  06E9  0829               	movf	??_main,w
   831  06EA  00AD               	movwf	_RH
   832  06EB                     l1403:
   833                           
   834                           ;master.c: 51:                 test = 1;
   835  06EB  01AC               	clrf	_test
   836  06EC  0AAC               	incf	_test,f
   837                           
   838                           ;master.c: 52:             }
   839  06ED  2F02               	goto	l1411
   840  06EE                     l1405:
   841  06EE  032C               	decf	_test,w
   842  06EF  1D03               	btfss	3,2
   843  06F0  2EF2               	goto	u761
   844  06F1  2EF3               	goto	u760
   845  06F2                     u761:
   846  06F2  2F02               	goto	l1411
   847  06F3                     u760:
   848  06F3                     l1407:
   849                           
   850                           ;master.c: 54:                 Humidity=I2C_Master_Read(0);
   851  06F3  3000               	movlw	0
   852  06F4  00F0               	movwf	I2C_Master_Read@a
   853  06F5  00F1               	movwf	I2C_Master_Read@a+1
   854  06F6  120A  118A  2444  120A  118A  	fcall	_I2C_Master_Read
   855  06FB  0870               	movf	?_I2C_Master_Read,w
   856  06FC  1283               	bcf	3,5	;RP0=0, select bank0
   857  06FD  1303               	bcf	3,6	;RP1=0, select bank0
   858  06FE  00A9               	movwf	??_main
   859  06FF  0829               	movf	??_main,w
   860  0700  00AE               	movwf	_Humidity
   861  0701                     l1409:
   862                           
   863                           ;master.c: 55:                 test = 0;
   864  0701  01AC               	clrf	_test
   865  0702                     l1411:
   866                           
   867                           ;master.c: 57:         I2C_Master_Stop();
   868  0702  120A  118A  23BA  120A  118A  	fcall	_I2C_Master_Stop
   869  0707                     l1413:
   870                           
   871                           ;master.c: 58:         _delay((unsigned long)((200)*(8000000/4000.0)));
   872  0707  3003               	movlw	3
   873  0708  1283               	bcf	3,5	;RP0=0, select bank0
   874  0709  1303               	bcf	3,6	;RP1=0, select bank0
   875  070A  00AB               	movwf	??_main+2
   876  070B  3008               	movlw	8
   877  070C  00AA               	movwf	??_main+1
   878  070D  3076               	movlw	118
   879  070E  00A9               	movwf	??_main
   880  070F                     u797:
   881  070F  0BA9               	decfsz	??_main,f
   882  0710  2F0F               	goto	u797
   883  0711  0BAA               	decfsz	??_main+1,f
   884  0712  2F0F               	goto	u797
   885  0713  0BAB               	decfsz	??_main+2,f
   886  0714  2F0F               	goto	u797
   887  0715  0000               	nop
   888  0716                     l1415:
   889                           
   890                           ;master.c: 59:         Lcd_Set_Cursor(2,1);
   891  0716  01F4               	clrf	Lcd_Set_Cursor@b
   892  0717  0AF4               	incf	Lcd_Set_Cursor@b,f
   893  0718  3002               	movlw	2
   894  0719  120A  118A  2531  120A  118A  	fcall	_Lcd_Set_Cursor
   895  071E                     l1417:
   896                           
   897                           ;master.c: 60:         unit0 = 48 + ((Humidity/10) %10);
   898  071E  300A               	movlw	10
   899  071F  00F9               	movwf	___awmod@divisor
   900  0720  3000               	movlw	0
   901  0721  00FA               	movwf	___awmod@divisor+1
   902  0722  300A               	movlw	10
   903  0723  00F0               	movwf	___awdiv@divisor
   904  0724  3000               	movlw	0
   905  0725  00F1               	movwf	___awdiv@divisor+1
   906  0726  1283               	bcf	3,5	;RP0=0, select bank0
   907  0727  1303               	bcf	3,6	;RP1=0, select bank0
   908  0728  082E               	movf	_Humidity,w
   909  0729  00A9               	movwf	??_main
   910  072A  01AA               	clrf	??_main+1
   911  072B  0829               	movf	??_main,w
   912  072C  00F2               	movwf	___awdiv@dividend
   913  072D  082A               	movf	??_main+1,w
   914  072E  00F3               	movwf	___awdiv@dividend+1
   915  072F  120A  118A  2644  120A  118A  	fcall	___awdiv
   916  0734  0871               	movf	?___awdiv+1,w
   917  0735  00FC               	movwf	___awmod@dividend+1
   918  0736  0870               	movf	?___awdiv,w
   919  0737  00FB               	movwf	___awmod@dividend
   920  0738  120A  118A  2583  120A  118A  	fcall	___awmod
   921  073D  0879               	movf	?___awmod,w
   922  073E  3E30               	addlw	48
   923  073F  1283               	bcf	3,5	;RP0=0, select bank0
   924  0740  1303               	bcf	3,6	;RP1=0, select bank0
   925  0741  00AB               	movwf	??_main+2
   926  0742  082B               	movf	??_main+2,w
   927  0743  00B2               	movwf	_unit0
   928  0744                     l1419:
   929                           
   930                           ;master.c: 61:         dec0 = 48 + (Humidity %10);
   931  0744  300A               	movlw	10
   932  0745  00F9               	movwf	___awmod@divisor
   933  0746  3000               	movlw	0
   934  0747  00FA               	movwf	___awmod@divisor+1
   935  0748  082E               	movf	_Humidity,w
   936  0749  00A9               	movwf	??_main
   937  074A  01AA               	clrf	??_main+1
   938  074B  0829               	movf	??_main,w
   939  074C  00FB               	movwf	___awmod@dividend
   940  074D  082A               	movf	??_main+1,w
   941  074E  00FC               	movwf	___awmod@dividend+1
   942  074F  120A  118A  2583  120A  118A  	fcall	___awmod
   943  0754  0879               	movf	?___awmod,w
   944  0755  3E30               	addlw	48
   945  0756  1283               	bcf	3,5	;RP0=0, select bank0
   946  0757  1303               	bcf	3,6	;RP1=0, select bank0
   947  0758  00AB               	movwf	??_main+2
   948  0759  082B               	movf	??_main+2,w
   949  075A  00B1               	movwf	_dec0
   950  075B                     l1421:
   951                           
   952                           ;master.c: 62:         unit1 =48 + ((RH / 10) % 10);
   953  075B  300A               	movlw	10
   954  075C  00F9               	movwf	___awmod@divisor
   955  075D  3000               	movlw	0
   956  075E  00FA               	movwf	___awmod@divisor+1
   957  075F  300A               	movlw	10
   958  0760  00F0               	movwf	___awdiv@divisor
   959  0761  3000               	movlw	0
   960  0762  00F1               	movwf	___awdiv@divisor+1
   961  0763  082D               	movf	_RH,w
   962  0764  00A9               	movwf	??_main
   963  0765  01AA               	clrf	??_main+1
   964  0766  0829               	movf	??_main,w
   965  0767  00F2               	movwf	___awdiv@dividend
   966  0768  082A               	movf	??_main+1,w
   967  0769  00F3               	movwf	___awdiv@dividend+1
   968  076A  120A  118A  2644  120A  118A  	fcall	___awdiv
   969  076F  0871               	movf	?___awdiv+1,w
   970  0770  00FC               	movwf	___awmod@dividend+1
   971  0771  0870               	movf	?___awdiv,w
   972  0772  00FB               	movwf	___awmod@dividend
   973  0773  120A  118A  2583  120A  118A  	fcall	___awmod
   974  0778  0879               	movf	?___awmod,w
   975  0779  3E30               	addlw	48
   976  077A  1283               	bcf	3,5	;RP0=0, select bank0
   977  077B  1303               	bcf	3,6	;RP1=0, select bank0
   978  077C  00AB               	movwf	??_main+2
   979  077D  082B               	movf	??_main+2,w
   980  077E  00B0               	movwf	_unit1
   981  077F                     l1423:
   982                           
   983                           ;master.c: 63:         dec1 = 48 + (RH % 10);
   984  077F  300A               	movlw	10
   985  0780  00F9               	movwf	___awmod@divisor
   986  0781  3000               	movlw	0
   987  0782  00FA               	movwf	___awmod@divisor+1
   988  0783  082D               	movf	_RH,w
   989  0784  00A9               	movwf	??_main
   990  0785  01AA               	clrf	??_main+1
   991  0786  0829               	movf	??_main,w
   992  0787  00FB               	movwf	___awmod@dividend
   993  0788  082A               	movf	??_main+1,w
   994  0789  00FC               	movwf	___awmod@dividend+1
   995  078A  120A  118A  2583  120A  118A  	fcall	___awmod
   996  078F  0879               	movf	?___awmod,w
   997  0790  3E30               	addlw	48
   998  0791  1283               	bcf	3,5	;RP0=0, select bank0
   999  0792  1303               	bcf	3,6	;RP1=0, select bank0
  1000  0793  00AB               	movwf	??_main+2
  1001  0794  082B               	movf	??_main+2,w
  1002  0795  00AF               	movwf	_dec1
  1003  0796                     l1425:
  1004                           
  1005                           ;master.c: 64:         Lcd_Write_Char(unit0);
  1006  0796  0832               	movf	_unit0,w
  1007  0797  120A  118A  2401  120A  118A  	fcall	_Lcd_Write_Char
  1008  079C                     l1427:
  1009                           
  1010                           ;master.c: 65:         Lcd_Write_Char(dec0);
  1011  079C  1283               	bcf	3,5	;RP0=0, select bank0
  1012  079D  1303               	bcf	3,6	;RP1=0, select bank0
  1013  079E  0831               	movf	_dec0,w
  1014  079F  120A  118A  2401  120A  118A  	fcall	_Lcd_Write_Char
  1015  07A4                     l1429:
  1016                           
  1017                           ;master.c: 66:         Lcd_Write_String("%   ");
  1018  07A4  3012               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1019  07A5  120A  118A  241F  120A  118A  	fcall	_Lcd_Write_String
  1020  07AA                     l1431:
  1021                           
  1022                           ;master.c: 67:         Lcd_Write_Char(unit1);
  1023  07AA  1283               	bcf	3,5	;RP0=0, select bank0
  1024  07AB  1303               	bcf	3,6	;RP1=0, select bank0
  1025  07AC  0830               	movf	_unit1,w
  1026  07AD  120A  118A  2401  120A  118A  	fcall	_Lcd_Write_Char
  1027  07B2                     l1433:
  1028                           
  1029                           ;master.c: 68:         Lcd_Write_Char(dec1);
  1030  07B2  1283               	bcf	3,5	;RP0=0, select bank0
  1031  07B3  1303               	bcf	3,6	;RP1=0, select bank0
  1032  07B4  082F               	movf	_dec1,w
  1033  07B5  120A  118A  2401  120A  118A  	fcall	_Lcd_Write_Char
  1034  07BA                     l1435:
  1035                           
  1036                           ;master.c: 69:         Lcd_Write_Char(223);
  1037  07BA  30DF               	movlw	223
  1038  07BB  120A  118A  2401  120A  118A  	fcall	_Lcd_Write_Char
  1039  07C0                     l1437:
  1040                           
  1041                           ;master.c: 70:         Lcd_Write_String("C  ");
  1042  07C0  3017               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1043  07C1  120A  118A  241F  120A  118A  	fcall	_Lcd_Write_String
  1044  07C6                     l1439:
  1045                           
  1046                           ;master.c: 71:         if (RH<32){
  1047  07C6  3020               	movlw	32
  1048  07C7  1283               	bcf	3,5	;RP0=0, select bank0
  1049  07C8  1303               	bcf	3,6	;RP1=0, select bank0
  1050  07C9  022D               	subwf	_RH,w
  1051  07CA  1803               	skipnc
  1052  07CB  2FCD               	goto	u771
  1053  07CC  2FCE               	goto	u770
  1054  07CD                     u771:
  1055  07CD  2FD5               	goto	l1443
  1056  07CE                     u770:
  1057  07CE                     l1441:
  1058                           
  1059                           ;master.c: 72:         Lcd_Write_String("000");
  1060  07CE  301B               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1061  07CF  120A  118A  241F  120A  118A  	fcall	_Lcd_Write_String
  1062                           
  1063                           ;master.c: 73:         }
  1064  07D4  2FE1               	goto	l1447
  1065  07D5                     l1443:
  1066  07D5  3021               	movlw	33
  1067  07D6  022D               	subwf	_RH,w
  1068  07D7  1C03               	skipc
  1069  07D8  2FDA               	goto	u781
  1070  07D9  2FDB               	goto	u780
  1071  07DA                     u781:
  1072  07DA  2FE1               	goto	l1447
  1073  07DB                     u780:
  1074  07DB                     l1445:
  1075                           
  1076                           ;master.c: 75:         Lcd_Write_String("001");
  1077  07DB  301F               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1078  07DC  120A  118A  241F  120A  118A  	fcall	_Lcd_Write_String
  1079  07E1                     l1447:
  1080                           
  1081                           ;master.c: 78:         _delay((unsigned long)((1000)*(8000000/4000.0)));
  1082  07E1  300B               	movlw	11
  1083  07E2  1283               	bcf	3,5	;RP0=0, select bank0
  1084  07E3  1303               	bcf	3,6	;RP1=0, select bank0
  1085  07E4  00AB               	movwf	??_main+2
  1086  07E5  3026               	movlw	38
  1087  07E6  00AA               	movwf	??_main+1
  1088  07E7  305D               	movlw	93
  1089  07E8  00A9               	movwf	??_main
  1090  07E9                     u807:
  1091  07E9  0BA9               	decfsz	??_main,f
  1092  07EA  2FE9               	goto	u807
  1093  07EB  0BAA               	decfsz	??_main+1,f
  1094  07EC  2FE9               	goto	u807
  1095  07ED  0BAB               	decfsz	??_main+2,f
  1096  07EE  2FE9               	goto	u807
  1097  07EF  2EC8               	goto	l1395
  1098  07F0  120A  118A  2800   	ljmp	start
  1099  07F3                     __end_of_main:
  1100                           
  1101                           	psect	text1
  1102  04AA                     __ptext1:	
  1103 ;; *************** function _initSETUP *****************
  1104 ;; Defined at:
  1105 ;;		line 83 in file "master.c"
  1106 ;; Parameters:    Size  Location     Type
  1107 ;;		None
  1108 ;; Auto vars:     Size  Location     Type
  1109 ;;		None
  1110 ;; Return value:  Size  Location     Type
  1111 ;;                  1    wreg      void 
  1112 ;; Registers used:
  1113 ;;		wreg, status,2, status,0, pclath, cstack
  1114 ;; Tracked objects:
  1115 ;;		On entry : 0/0
  1116 ;;		On exit  : 0/0
  1117 ;;		Unchanged: 0/0
  1118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1119 ;;      Params:         0       0       0       0       0
  1120 ;;      Locals:         0       0       0       0       0
  1121 ;;      Temps:          0       1       0       0       0
  1122 ;;      Totals:         0       1       0       0       0
  1123 ;;Total ram usage:        1 bytes
  1124 ;; Hardware stack levels used: 1
  1125 ;; Hardware stack levels required when called: 2
  1126 ;; This function calls:
  1127 ;;		_I2C_Master_Init
  1128 ;; This function is called by:
  1129 ;;		_main
  1130 ;; This function uses a non-reentrant model
  1131 ;;
  1132                           
  1133                           
  1134                           ;psect for function _initSETUP
  1135  04AA                     _initSETUP:
  1136  04AA                     l1187:	
  1137                           ;incstack = 0
  1138                           ; Regs used in _initSETUP: [wreg+status,2+status,0+pclath+cstack]
  1139                           
  1140                           
  1141                           ;master.c: 84:     TRISA = 0b00000001;
  1142  04AA  3001               	movlw	1
  1143  04AB  1683               	bsf	3,5	;RP0=1, select bank1
  1144  04AC  1303               	bcf	3,6	;RP1=0, select bank1
  1145  04AD  0085               	movwf	5	;volatile
  1146  04AE                     l1189:
  1147                           
  1148                           ;master.c: 85:     TRISB = 0;
  1149  04AE  0186               	clrf	6	;volatile
  1150  04AF                     l1191:
  1151                           
  1152                           ;master.c: 86:     TRISC = 0;
  1153  04AF  0187               	clrf	7	;volatile
  1154  04B0                     l1193:
  1155                           
  1156                           ;master.c: 87:     TRISD = 0;
  1157  04B0  0188               	clrf	8	;volatile
  1158  04B1                     l1195:
  1159                           
  1160                           ;master.c: 88:     TRISE = 0;
  1161  04B1  0189               	clrf	9	;volatile
  1162  04B2                     l1197:
  1163                           
  1164                           ;master.c: 89:     PORTE = 0;
  1165  04B2  1283               	bcf	3,5	;RP0=0, select bank0
  1166  04B3  1303               	bcf	3,6	;RP1=0, select bank0
  1167  04B4  0189               	clrf	9	;volatile
  1168  04B5                     l1199:
  1169                           
  1170                           ;master.c: 90:     PORTA = 0;
  1171  04B5  0185               	clrf	5	;volatile
  1172  04B6                     l1201:
  1173                           
  1174                           ;master.c: 91:     PORTB = 0;
  1175  04B6  0186               	clrf	6	;volatile
  1176  04B7                     l1203:
  1177                           
  1178                           ;master.c: 92:     PORTC = 0;
  1179  04B7  0187               	clrf	7	;volatile
  1180  04B8                     l1205:
  1181                           
  1182                           ;master.c: 93:     PORTD = 0;
  1183  04B8  0188               	clrf	8	;volatile
  1184  04B9                     l1207:
  1185                           
  1186                           ;master.c: 94:     ANSEL = 0b00000001;
  1187  04B9  3001               	movlw	1
  1188  04BA  1683               	bsf	3,5	;RP0=1, select bank3
  1189  04BB  1703               	bsf	3,6	;RP1=1, select bank3
  1190  04BC  0088               	movwf	8	;volatile
  1191                           
  1192                           ;master.c: 95:     ANSELH = 0;
  1193  04BD  0189               	clrf	9	;volatile
  1194  04BE                     l1209:
  1195                           
  1196                           ;master.c: 96:     OSCCONbits.IRCF2 = 1;
  1197  04BE  1683               	bsf	3,5	;RP0=1, select bank1
  1198  04BF  1303               	bcf	3,6	;RP1=0, select bank1
  1199  04C0  170F               	bsf	15,6	;volatile
  1200  04C1                     l1211:
  1201                           
  1202                           ;master.c: 97:     OSCCONbits.IRCF1 = 1;
  1203  04C1  168F               	bsf	15,5	;volatile
  1204  04C2                     l1213:
  1205                           
  1206                           ;master.c: 98:     OSCCONbits.IRCF0 = 1;
  1207  04C2  160F               	bsf	15,4	;volatile
  1208  04C3                     l1215:
  1209                           
  1210                           ;master.c: 99:     OSCCONbits.SCS = 1;
  1211  04C3  140F               	bsf	15,0	;volatile
  1212  04C4                     l1217:
  1213                           
  1214                           ;master.c: 101:     ADCON1bits.ADFM = 0;
  1215  04C4  139F               	bcf	31,7	;volatile
  1216  04C5                     l1219:
  1217                           
  1218                           ;master.c: 102:     ADCON1bits.VCFG0 = 0;
  1219  04C5  121F               	bcf	31,4	;volatile
  1220  04C6                     l1221:
  1221                           
  1222                           ;master.c: 103:     ADCON1bits.VCFG1 = 0;
  1223  04C6  129F               	bcf	31,5	;volatile
  1224  04C7                     l1223:
  1225                           
  1226                           ;master.c: 104:     ADCON0bits.ADCS = 0b10;
  1227  04C7  1283               	bcf	3,5	;RP0=0, select bank0
  1228  04C8  1303               	bcf	3,6	;RP1=0, select bank0
  1229  04C9  081F               	movf	31,w	;volatile
  1230  04CA  393F               	andlw	-193
  1231  04CB  3880               	iorlw	128
  1232  04CC  009F               	movwf	31	;volatile
  1233  04CD                     l1225:
  1234                           
  1235                           ;master.c: 105:     ADCON0bits.CHS = 0;
  1236  04CD  30C3               	movlw	-61
  1237  04CE  059F               	andwf	31,f	;volatile
  1238  04CF                     l1227:
  1239                           
  1240                           ;master.c: 106:     ADCON0bits.ADON = 1;
  1241  04CF  141F               	bsf	31,0	;volatile
  1242  04D0                     l1229:
  1243                           
  1244                           ;master.c: 107:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  1245  04D0  3020               	movlw	32
  1246  04D1  1283               	bcf	3,5	;RP0=0, select bank0
  1247  04D2  1303               	bcf	3,6	;RP1=0, select bank0
  1248  04D3  00A8               	movwf	??_initSETUP
  1249  04D4                     u817:
  1250  04D4  0BA8               	decfsz	??_initSETUP,f
  1251  04D5  2CD4               	goto	u817
  1252  04D6  0000               	nop
  1253  04D7                     l1231:
  1254                           
  1255                           ;master.c: 108:     ADCON0bits.GO = 1;
  1256  04D7  1283               	bcf	3,5	;RP0=0, select bank0
  1257  04D8  1303               	bcf	3,6	;RP1=0, select bank0
  1258  04D9  149F               	bsf	31,1	;volatile
  1259  04DA                     l1233:
  1260                           
  1261                           ;master.c: 110:     INTCONbits.GIE = 1;
  1262  04DA  178B               	bsf	11,7	;volatile
  1263  04DB                     l1235:
  1264                           
  1265                           ;master.c: 111:     INTCONbits.PEIE =1;
  1266  04DB  170B               	bsf	11,6	;volatile
  1267  04DC                     l1237:
  1268                           
  1269                           ;master.c: 112:     I2C_Master_Init(100000);
  1270  04DC  3000               	movlw	0
  1271  04DD  00A3               	movwf	I2C_Master_Init@c+3
  1272  04DE  3001               	movlw	1
  1273  04DF  00A2               	movwf	I2C_Master_Init@c+2
  1274  04E0  3086               	movlw	134
  1275  04E1  00A1               	movwf	I2C_Master_Init@c+1
  1276  04E2  30A0               	movlw	160
  1277  04E3  00A0               	movwf	I2C_Master_Init@c
  1278  04E4  120A  118A  2472  120A  118A  	fcall	_I2C_Master_Init
  1279  04E9                     l87:
  1280  04E9  0008               	return
  1281  04EA                     __end_of_initSETUP:
  1282                           
  1283                           	psect	text2
  1284  0472                     __ptext2:	
  1285 ;; *************** function _I2C_Master_Init *****************
  1286 ;; Defined at:
  1287 ;;		line 16 in file "I2C.c"
  1288 ;; Parameters:    Size  Location     Type
  1289 ;;  c               4    0[BANK0 ] const unsigned long 
  1290 ;; Auto vars:     Size  Location     Type
  1291 ;;		None
  1292 ;; Return value:  Size  Location     Type
  1293 ;;                  1    wreg      void 
  1294 ;; Registers used:
  1295 ;;		wreg, status,2, status,0, pclath, cstack
  1296 ;; Tracked objects:
  1297 ;;		On entry : 0/0
  1298 ;;		On exit  : 0/0
  1299 ;;		Unchanged: 0/0
  1300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1301 ;;      Params:         0       4       0       0       0
  1302 ;;      Locals:         0       0       0       0       0
  1303 ;;      Temps:          0       4       0       0       0
  1304 ;;      Totals:         0       8       0       0       0
  1305 ;;Total ram usage:        8 bytes
  1306 ;; Hardware stack levels used: 1
  1307 ;; Hardware stack levels required when called: 1
  1308 ;; This function calls:
  1309 ;;		___lldiv
  1310 ;; This function is called by:
  1311 ;;		_initSETUP
  1312 ;; This function uses a non-reentrant model
  1313 ;;
  1314                           
  1315                           
  1316                           ;psect for function _I2C_Master_Init
  1317  0472                     _I2C_Master_Init:
  1318  0472                     l1161:	
  1319                           ;incstack = 0
  1320                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1321                           
  1322                           
  1323                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  1324  0472  3028               	movlw	40
  1325  0473  1283               	bcf	3,5	;RP0=0, select bank0
  1326  0474  1303               	bcf	3,6	;RP1=0, select bank0
  1327  0475  0094               	movwf	20	;volatile
  1328  0476                     l1163:
  1329                           
  1330                           ;I2C.c: 19:     SSPCON2 = 0;
  1331  0476  1683               	bsf	3,5	;RP0=1, select bank1
  1332  0477  1303               	bcf	3,6	;RP1=0, select bank1
  1333  0478  0191               	clrf	17	;volatile
  1334  0479                     l1165:
  1335                           
  1336                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  1337  0479  1283               	bcf	3,5	;RP0=0, select bank0
  1338  047A  1303               	bcf	3,6	;RP1=0, select bank0
  1339  047B  0820               	movf	I2C_Master_Init@c,w
  1340  047C  00A4               	movwf	??_I2C_Master_Init
  1341  047D  0821               	movf	I2C_Master_Init@c+1,w
  1342  047E  00A5               	movwf	??_I2C_Master_Init+1
  1343  047F  0822               	movf	I2C_Master_Init@c+2,w
  1344  0480  00A6               	movwf	??_I2C_Master_Init+2
  1345  0481  0823               	movf	I2C_Master_Init@c+3,w
  1346  0482  00A7               	movwf	??_I2C_Master_Init+3
  1347  0483  3002               	movlw	2
  1348  0484                     u475:
  1349  0484  1003               	clrc
  1350  0485  0DA4               	rlf	??_I2C_Master_Init,f
  1351  0486  0DA5               	rlf	??_I2C_Master_Init+1,f
  1352  0487  0DA6               	rlf	??_I2C_Master_Init+2,f
  1353  0488  0DA7               	rlf	??_I2C_Master_Init+3,f
  1354  0489                     u470:
  1355  0489  3EFF               	addlw	-1
  1356  048A  1D03               	skipz
  1357  048B  2C84               	goto	u475
  1358  048C  0827               	movf	??_I2C_Master_Init+3,w
  1359  048D  00F3               	movwf	___lldiv@divisor+3
  1360  048E  0826               	movf	??_I2C_Master_Init+2,w
  1361  048F  00F2               	movwf	___lldiv@divisor+2
  1362  0490  0825               	movf	??_I2C_Master_Init+1,w
  1363  0491  00F1               	movwf	___lldiv@divisor+1
  1364  0492  0824               	movf	??_I2C_Master_Init,w
  1365  0493  00F0               	movwf	___lldiv@divisor
  1366  0494  3000               	movlw	0
  1367  0495  00F7               	movwf	___lldiv@dividend+3
  1368  0496  307A               	movlw	122
  1369  0497  00F6               	movwf	___lldiv@dividend+2
  1370  0498  3012               	movlw	18
  1371  0499  00F5               	movwf	___lldiv@dividend+1
  1372  049A  3000               	movlw	0
  1373  049B  00F4               	movwf	___lldiv@dividend
  1374  049C  120A  118A  25DE  120A  118A  	fcall	___lldiv
  1375  04A1  0870               	movf	?___lldiv,w
  1376  04A2  3EFF               	addlw	255
  1377  04A3  1683               	bsf	3,5	;RP0=1, select bank1
  1378  04A4  1303               	bcf	3,6	;RP1=0, select bank1
  1379  04A5  0093               	movwf	19	;volatile
  1380  04A6                     l1167:
  1381                           
  1382                           ;I2C.c: 21:     SSPSTAT = 0;
  1383  04A6  0194               	clrf	20	;volatile
  1384  04A7                     l1169:
  1385                           
  1386                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  1387  04A7  1587               	bsf	7,3	;volatile
  1388  04A8                     l1171:
  1389                           
  1390                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  1391  04A8  1607               	bsf	7,4	;volatile
  1392  04A9                     l116:
  1393  04A9  0008               	return
  1394  04AA                     __end_of_I2C_Master_Init:
  1395                           
  1396                           	psect	text3
  1397  05DE                     __ptext3:	
  1398 ;; *************** function ___lldiv *****************
  1399 ;; Defined at:
  1400 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
  1401 ;; Parameters:    Size  Location     Type
  1402 ;;  divisor         4    0[COMMON] unsigned long 
  1403 ;;  dividend        4    4[COMMON] unsigned long 
  1404 ;; Auto vars:     Size  Location     Type
  1405 ;;  quotient        4    9[COMMON] unsigned long 
  1406 ;;  counter         1   13[COMMON] unsigned char 
  1407 ;; Return value:  Size  Location     Type
  1408 ;;                  4    0[COMMON] unsigned long 
  1409 ;; Registers used:
  1410 ;;		wreg, status,2, status,0
  1411 ;; Tracked objects:
  1412 ;;		On entry : 0/0
  1413 ;;		On exit  : 0/0
  1414 ;;		Unchanged: 0/0
  1415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1416 ;;      Params:         8       0       0       0       0
  1417 ;;      Locals:         5       0       0       0       0
  1418 ;;      Temps:          1       0       0       0       0
  1419 ;;      Totals:        14       0       0       0       0
  1420 ;;Total ram usage:       14 bytes
  1421 ;; Hardware stack levels used: 1
  1422 ;; This function calls:
  1423 ;;		Nothing
  1424 ;; This function is called by:
  1425 ;;		_I2C_Master_Init
  1426 ;; This function uses a non-reentrant model
  1427 ;;
  1428                           
  1429                           
  1430                           ;psect for function ___lldiv
  1431  05DE                     ___lldiv:
  1432  05DE                     l1125:	
  1433                           ;incstack = 0
  1434                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1435                           
  1436  05DE  3000               	movlw	0
  1437  05DF  00FC               	movwf	___lldiv@quotient+3
  1438  05E0  3000               	movlw	0
  1439  05E1  00FB               	movwf	___lldiv@quotient+2
  1440  05E2  3000               	movlw	0
  1441  05E3  00FA               	movwf	___lldiv@quotient+1
  1442  05E4  3000               	movlw	0
  1443  05E5  00F9               	movwf	___lldiv@quotient
  1444  05E6  0873               	movf	___lldiv@divisor+3,w
  1445  05E7  0472               	iorwf	___lldiv@divisor+2,w
  1446  05E8  0471               	iorwf	___lldiv@divisor+1,w
  1447  05E9  0470               	iorwf	___lldiv@divisor,w
  1448  05EA  1903               	skipnz
  1449  05EB  2DED               	goto	u401
  1450  05EC  2DEE               	goto	u400
  1451  05ED                     u401:
  1452  05ED  2E3B               	goto	l1145
  1453  05EE                     u400:
  1454  05EE                     l1127:
  1455  05EE  01FD               	clrf	___lldiv@counter
  1456  05EF  0AFD               	incf	___lldiv@counter,f
  1457  05F0  2DFE               	goto	l1131
  1458  05F1                     l1129:
  1459  05F1  3001               	movlw	1
  1460  05F2  00F8               	movwf	??___lldiv
  1461  05F3                     u415:
  1462  05F3  1003               	clrc
  1463  05F4  0DF0               	rlf	___lldiv@divisor,f
  1464  05F5  0DF1               	rlf	___lldiv@divisor+1,f
  1465  05F6  0DF2               	rlf	___lldiv@divisor+2,f
  1466  05F7  0DF3               	rlf	___lldiv@divisor+3,f
  1467  05F8  0BF8               	decfsz	??___lldiv,f
  1468  05F9  2DF3               	goto	u415
  1469  05FA  3001               	movlw	1
  1470  05FB  00F8               	movwf	??___lldiv
  1471  05FC  0878               	movf	??___lldiv,w
  1472  05FD  07FD               	addwf	___lldiv@counter,f
  1473  05FE                     l1131:
  1474  05FE  1FF3               	btfss	___lldiv@divisor+3,7
  1475  05FF  2E01               	goto	u421
  1476  0600  2E02               	goto	u420
  1477  0601                     u421:
  1478  0601  2DF1               	goto	l1129
  1479  0602                     u420:
  1480  0602                     l1133:
  1481  0602  3001               	movlw	1
  1482  0603  00F8               	movwf	??___lldiv
  1483  0604                     u435:
  1484  0604  1003               	clrc
  1485  0605  0DF9               	rlf	___lldiv@quotient,f
  1486  0606  0DFA               	rlf	___lldiv@quotient+1,f
  1487  0607  0DFB               	rlf	___lldiv@quotient+2,f
  1488  0608  0DFC               	rlf	___lldiv@quotient+3,f
  1489  0609  0BF8               	decfsz	??___lldiv,f
  1490  060A  2E04               	goto	u435
  1491  060B                     l1135:
  1492  060B  0873               	movf	___lldiv@divisor+3,w
  1493  060C  0277               	subwf	___lldiv@dividend+3,w
  1494  060D  1D03               	skipz
  1495  060E  2E19               	goto	u445
  1496  060F  0872               	movf	___lldiv@divisor+2,w
  1497  0610  0276               	subwf	___lldiv@dividend+2,w
  1498  0611  1D03               	skipz
  1499  0612  2E19               	goto	u445
  1500  0613  0871               	movf	___lldiv@divisor+1,w
  1501  0614  0275               	subwf	___lldiv@dividend+1,w
  1502  0615  1D03               	skipz
  1503  0616  2E19               	goto	u445
  1504  0617  0870               	movf	___lldiv@divisor,w
  1505  0618  0274               	subwf	___lldiv@dividend,w
  1506  0619                     u445:
  1507  0619  1C03               	skipc
  1508  061A  2E1C               	goto	u441
  1509  061B  2E1D               	goto	u440
  1510  061C                     u441:
  1511  061C  2E2C               	goto	l1141
  1512  061D                     u440:
  1513  061D                     l1137:
  1514  061D  0870               	movf	___lldiv@divisor,w
  1515  061E  02F4               	subwf	___lldiv@dividend,f
  1516  061F  0871               	movf	___lldiv@divisor+1,w
  1517  0620  1C03               	skipc
  1518  0621  0F71               	incfsz	___lldiv@divisor+1,w
  1519  0622  02F5               	subwf	___lldiv@dividend+1,f
  1520  0623  0872               	movf	___lldiv@divisor+2,w
  1521  0624  1C03               	skipc
  1522  0625  0F72               	incfsz	___lldiv@divisor+2,w
  1523  0626  02F6               	subwf	___lldiv@dividend+2,f
  1524  0627  0873               	movf	___lldiv@divisor+3,w
  1525  0628  1C03               	skipc
  1526  0629  0F73               	incfsz	___lldiv@divisor+3,w
  1527  062A  02F7               	subwf	___lldiv@dividend+3,f
  1528  062B                     l1139:
  1529  062B  1479               	bsf	___lldiv@quotient,0
  1530  062C                     l1141:
  1531  062C  3001               	movlw	1
  1532  062D                     u455:
  1533  062D  1003               	clrc
  1534  062E  0CF3               	rrf	___lldiv@divisor+3,f
  1535  062F  0CF2               	rrf	___lldiv@divisor+2,f
  1536  0630  0CF1               	rrf	___lldiv@divisor+1,f
  1537  0631  0CF0               	rrf	___lldiv@divisor,f
  1538  0632  3EFF               	addlw	-1
  1539  0633  1D03               	skipz
  1540  0634  2E2D               	goto	u455
  1541  0635                     l1143:
  1542  0635  3001               	movlw	1
  1543  0636  02FD               	subwf	___lldiv@counter,f
  1544  0637  1D03               	btfss	3,2
  1545  0638  2E3A               	goto	u461
  1546  0639  2E3B               	goto	u460
  1547  063A                     u461:
  1548  063A  2E02               	goto	l1133
  1549  063B                     u460:
  1550  063B                     l1145:
  1551  063B  087C               	movf	___lldiv@quotient+3,w
  1552  063C  00F3               	movwf	?___lldiv+3
  1553  063D  087B               	movf	___lldiv@quotient+2,w
  1554  063E  00F2               	movwf	?___lldiv+2
  1555  063F  087A               	movf	___lldiv@quotient+1,w
  1556  0640  00F1               	movwf	?___lldiv+1
  1557  0641  0879               	movf	___lldiv@quotient,w
  1558  0642  00F0               	movwf	?___lldiv
  1559  0643                     l305:
  1560  0643  0008               	return
  1561  0644                     __end_of___lldiv:
  1562                           
  1563                           	psect	text4
  1564  0583                     __ptext4:	
  1565 ;; *************** function ___awmod *****************
  1566 ;; Defined at:
  1567 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  1568 ;; Parameters:    Size  Location     Type
  1569 ;;  divisor         2    9[COMMON] int 
  1570 ;;  dividend        2   11[COMMON] int 
  1571 ;; Auto vars:     Size  Location     Type
  1572 ;;  sign            1    1[BANK0 ] unsigned char 
  1573 ;;  counter         1    0[BANK0 ] unsigned char 
  1574 ;; Return value:  Size  Location     Type
  1575 ;;                  2    9[COMMON] int 
  1576 ;; Registers used:
  1577 ;;		wreg, status,2, status,0
  1578 ;; Tracked objects:
  1579 ;;		On entry : 0/0
  1580 ;;		On exit  : 0/0
  1581 ;;		Unchanged: 0/0
  1582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1583 ;;      Params:         4       0       0       0       0
  1584 ;;      Locals:         0       2       0       0       0
  1585 ;;      Temps:          1       0       0       0       0
  1586 ;;      Totals:         5       2       0       0       0
  1587 ;;Total ram usage:        7 bytes
  1588 ;; Hardware stack levels used: 1
  1589 ;; This function calls:
  1590 ;;		Nothing
  1591 ;; This function is called by:
  1592 ;;		_main
  1593 ;; This function uses a non-reentrant model
  1594 ;;
  1595                           
  1596                           
  1597                           ;psect for function ___awmod
  1598  0583                     ___awmod:
  1599  0583                     l1353:	
  1600                           ;incstack = 0
  1601                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1602                           
  1603  0583  1283               	bcf	3,5	;RP0=0, select bank0
  1604  0584  1303               	bcf	3,6	;RP1=0, select bank0
  1605  0585  01A1               	clrf	___awmod@sign
  1606  0586                     l1355:
  1607  0586  1FFC               	btfss	___awmod@dividend+1,7
  1608  0587  2D89               	goto	u661
  1609  0588  2D8A               	goto	u660
  1610  0589                     u661:
  1611  0589  2D91               	goto	l1361
  1612  058A                     u660:
  1613  058A                     l1357:
  1614  058A  09FB               	comf	___awmod@dividend,f
  1615  058B  09FC               	comf	___awmod@dividend+1,f
  1616  058C  0AFB               	incf	___awmod@dividend,f
  1617  058D  1903               	skipnz
  1618  058E  0AFC               	incf	___awmod@dividend+1,f
  1619  058F                     l1359:
  1620  058F  01A1               	clrf	___awmod@sign
  1621  0590  0AA1               	incf	___awmod@sign,f
  1622  0591                     l1361:
  1623  0591  1FFA               	btfss	___awmod@divisor+1,7
  1624  0592  2D94               	goto	u671
  1625  0593  2D95               	goto	u670
  1626  0594                     u671:
  1627  0594  2D9A               	goto	l1365
  1628  0595                     u670:
  1629  0595                     l1363:
  1630  0595  09F9               	comf	___awmod@divisor,f
  1631  0596  09FA               	comf	___awmod@divisor+1,f
  1632  0597  0AF9               	incf	___awmod@divisor,f
  1633  0598  1903               	skipnz
  1634  0599  0AFA               	incf	___awmod@divisor+1,f
  1635  059A                     l1365:
  1636  059A  0879               	movf	___awmod@divisor,w
  1637  059B  047A               	iorwf	___awmod@divisor+1,w
  1638  059C  1903               	btfsc	3,2
  1639  059D  2D9F               	goto	u681
  1640  059E  2DA0               	goto	u680
  1641  059F                     u681:
  1642  059F  2DCF               	goto	l1383
  1643  05A0                     u680:
  1644  05A0                     l1367:
  1645  05A0  01A0               	clrf	___awmod@counter
  1646  05A1  0AA0               	incf	___awmod@counter,f
  1647  05A2  2DAE               	goto	l1373
  1648  05A3                     l1369:
  1649  05A3  3001               	movlw	1
  1650  05A4                     u695:
  1651  05A4  1003               	clrc
  1652  05A5  0DF9               	rlf	___awmod@divisor,f
  1653  05A6  0DFA               	rlf	___awmod@divisor+1,f
  1654  05A7  3EFF               	addlw	-1
  1655  05A8  1D03               	skipz
  1656  05A9  2DA4               	goto	u695
  1657  05AA                     l1371:
  1658  05AA  3001               	movlw	1
  1659  05AB  00FD               	movwf	??___awmod
  1660  05AC  087D               	movf	??___awmod,w
  1661  05AD  07A0               	addwf	___awmod@counter,f
  1662  05AE                     l1373:
  1663  05AE  1FFA               	btfss	___awmod@divisor+1,7
  1664  05AF  2DB1               	goto	u701
  1665  05B0  2DB2               	goto	u700
  1666  05B1                     u701:
  1667  05B1  2DA3               	goto	l1369
  1668  05B2                     u700:
  1669  05B2                     l1375:
  1670  05B2  087A               	movf	___awmod@divisor+1,w
  1671  05B3  027C               	subwf	___awmod@dividend+1,w
  1672  05B4  1D03               	skipz
  1673  05B5  2DB8               	goto	u715
  1674  05B6  0879               	movf	___awmod@divisor,w
  1675  05B7  027B               	subwf	___awmod@dividend,w
  1676  05B8                     u715:
  1677  05B8  1C03               	skipc
  1678  05B9  2DBB               	goto	u711
  1679  05BA  2DBC               	goto	u710
  1680  05BB                     u711:
  1681  05BB  2DC2               	goto	l1379
  1682  05BC                     u710:
  1683  05BC                     l1377:
  1684  05BC  0879               	movf	___awmod@divisor,w
  1685  05BD  02FB               	subwf	___awmod@dividend,f
  1686  05BE  087A               	movf	___awmod@divisor+1,w
  1687  05BF  1C03               	skipc
  1688  05C0  03FC               	decf	___awmod@dividend+1,f
  1689  05C1  02FC               	subwf	___awmod@dividend+1,f
  1690  05C2                     l1379:
  1691  05C2  3001               	movlw	1
  1692  05C3                     u725:
  1693  05C3  1003               	clrc
  1694  05C4  0CFA               	rrf	___awmod@divisor+1,f
  1695  05C5  0CF9               	rrf	___awmod@divisor,f
  1696  05C6  3EFF               	addlw	-1
  1697  05C7  1D03               	skipz
  1698  05C8  2DC3               	goto	u725
  1699  05C9                     l1381:
  1700  05C9  3001               	movlw	1
  1701  05CA  02A0               	subwf	___awmod@counter,f
  1702  05CB  1D03               	btfss	3,2
  1703  05CC  2DCE               	goto	u731
  1704  05CD  2DCF               	goto	u730
  1705  05CE                     u731:
  1706  05CE  2DB2               	goto	l1375
  1707  05CF                     u730:
  1708  05CF                     l1383:
  1709  05CF  0821               	movf	___awmod@sign,w
  1710  05D0  1903               	btfsc	3,2
  1711  05D1  2DD3               	goto	u741
  1712  05D2  2DD4               	goto	u740
  1713  05D3                     u741:
  1714  05D3  2DD9               	goto	l1387
  1715  05D4                     u740:
  1716  05D4                     l1385:
  1717  05D4  09FB               	comf	___awmod@dividend,f
  1718  05D5  09FC               	comf	___awmod@dividend+1,f
  1719  05D6  0AFB               	incf	___awmod@dividend,f
  1720  05D7  1903               	skipnz
  1721  05D8  0AFC               	incf	___awmod@dividend+1,f
  1722  05D9                     l1387:
  1723  05D9  087C               	movf	___awmod@dividend+1,w
  1724  05DA  00FA               	movwf	?___awmod+1
  1725  05DB  087B               	movf	___awmod@dividend,w
  1726  05DC  00F9               	movwf	?___awmod
  1727  05DD                     l435:
  1728  05DD  0008               	return
  1729  05DE                     __end_of___awmod:
  1730                           
  1731                           	psect	text5
  1732  0644                     __ptext5:	
  1733 ;; *************** function ___awdiv *****************
  1734 ;; Defined at:
  1735 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  1736 ;; Parameters:    Size  Location     Type
  1737 ;;  divisor         2    0[COMMON] int 
  1738 ;;  dividend        2    2[COMMON] int 
  1739 ;; Auto vars:     Size  Location     Type
  1740 ;;  quotient        2    7[COMMON] int 
  1741 ;;  sign            1    6[COMMON] unsigned char 
  1742 ;;  counter         1    5[COMMON] unsigned char 
  1743 ;; Return value:  Size  Location     Type
  1744 ;;                  2    0[COMMON] int 
  1745 ;; Registers used:
  1746 ;;		wreg, status,2, status,0
  1747 ;; Tracked objects:
  1748 ;;		On entry : 0/0
  1749 ;;		On exit  : 0/0
  1750 ;;		Unchanged: 0/0
  1751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1752 ;;      Params:         4       0       0       0       0
  1753 ;;      Locals:         4       0       0       0       0
  1754 ;;      Temps:          1       0       0       0       0
  1755 ;;      Totals:         9       0       0       0       0
  1756 ;;Total ram usage:        9 bytes
  1757 ;; Hardware stack levels used: 1
  1758 ;; This function calls:
  1759 ;;		Nothing
  1760 ;; This function is called by:
  1761 ;;		_main
  1762 ;; This function uses a non-reentrant model
  1763 ;;
  1764                           
  1765                           
  1766                           ;psect for function ___awdiv
  1767  0644                     ___awdiv:
  1768  0644                     l1309:	
  1769                           ;incstack = 0
  1770                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1771                           
  1772  0644  01F6               	clrf	___awdiv@sign
  1773  0645                     l1311:
  1774  0645  1FF1               	btfss	___awdiv@divisor+1,7
  1775  0646  2E48               	goto	u561
  1776  0647  2E49               	goto	u560
  1777  0648                     u561:
  1778  0648  2E50               	goto	l1317
  1779  0649                     u560:
  1780  0649                     l1313:
  1781  0649  09F0               	comf	___awdiv@divisor,f
  1782  064A  09F1               	comf	___awdiv@divisor+1,f
  1783  064B  0AF0               	incf	___awdiv@divisor,f
  1784  064C  1903               	skipnz
  1785  064D  0AF1               	incf	___awdiv@divisor+1,f
  1786  064E                     l1315:
  1787  064E  01F6               	clrf	___awdiv@sign
  1788  064F  0AF6               	incf	___awdiv@sign,f
  1789  0650                     l1317:
  1790  0650  1FF3               	btfss	___awdiv@dividend+1,7
  1791  0651  2E53               	goto	u571
  1792  0652  2E54               	goto	u570
  1793  0653                     u571:
  1794  0653  2E5D               	goto	l1323
  1795  0654                     u570:
  1796  0654                     l1319:
  1797  0654  09F2               	comf	___awdiv@dividend,f
  1798  0655  09F3               	comf	___awdiv@dividend+1,f
  1799  0656  0AF2               	incf	___awdiv@dividend,f
  1800  0657  1903               	skipnz
  1801  0658  0AF3               	incf	___awdiv@dividend+1,f
  1802  0659                     l1321:
  1803  0659  3001               	movlw	1
  1804  065A  00F4               	movwf	??___awdiv
  1805  065B  0874               	movf	??___awdiv,w
  1806  065C  06F6               	xorwf	___awdiv@sign,f
  1807  065D                     l1323:
  1808  065D  01F7               	clrf	___awdiv@quotient
  1809  065E  01F8               	clrf	___awdiv@quotient+1
  1810  065F                     l1325:
  1811  065F  0870               	movf	___awdiv@divisor,w
  1812  0660  0471               	iorwf	___awdiv@divisor+1,w
  1813  0661  1903               	btfsc	3,2
  1814  0662  2E64               	goto	u581
  1815  0663  2E65               	goto	u580
  1816  0664                     u581:
  1817  0664  2E9C               	goto	l1345
  1818  0665                     u580:
  1819  0665                     l1327:
  1820  0665  01F5               	clrf	___awdiv@counter
  1821  0666  0AF5               	incf	___awdiv@counter,f
  1822  0667  2E73               	goto	l1333
  1823  0668                     l1329:
  1824  0668  3001               	movlw	1
  1825  0669                     u595:
  1826  0669  1003               	clrc
  1827  066A  0DF0               	rlf	___awdiv@divisor,f
  1828  066B  0DF1               	rlf	___awdiv@divisor+1,f
  1829  066C  3EFF               	addlw	-1
  1830  066D  1D03               	skipz
  1831  066E  2E69               	goto	u595
  1832  066F                     l1331:
  1833  066F  3001               	movlw	1
  1834  0670  00F4               	movwf	??___awdiv
  1835  0671  0874               	movf	??___awdiv,w
  1836  0672  07F5               	addwf	___awdiv@counter,f
  1837  0673                     l1333:
  1838  0673  1FF1               	btfss	___awdiv@divisor+1,7
  1839  0674  2E76               	goto	u601
  1840  0675  2E77               	goto	u600
  1841  0676                     u601:
  1842  0676  2E68               	goto	l1329
  1843  0677                     u600:
  1844  0677                     l1335:
  1845  0677  3001               	movlw	1
  1846  0678                     u615:
  1847  0678  1003               	clrc
  1848  0679  0DF7               	rlf	___awdiv@quotient,f
  1849  067A  0DF8               	rlf	___awdiv@quotient+1,f
  1850  067B  3EFF               	addlw	-1
  1851  067C  1D03               	skipz
  1852  067D  2E78               	goto	u615
  1853  067E  0871               	movf	___awdiv@divisor+1,w
  1854  067F  0273               	subwf	___awdiv@dividend+1,w
  1855  0680  1D03               	skipz
  1856  0681  2E84               	goto	u625
  1857  0682  0870               	movf	___awdiv@divisor,w
  1858  0683  0272               	subwf	___awdiv@dividend,w
  1859  0684                     u625:
  1860  0684  1C03               	skipc
  1861  0685  2E87               	goto	u621
  1862  0686  2E88               	goto	u620
  1863  0687                     u621:
  1864  0687  2E8F               	goto	l1341
  1865  0688                     u620:
  1866  0688                     l1337:
  1867  0688  0870               	movf	___awdiv@divisor,w
  1868  0689  02F2               	subwf	___awdiv@dividend,f
  1869  068A  0871               	movf	___awdiv@divisor+1,w
  1870  068B  1C03               	skipc
  1871  068C  03F3               	decf	___awdiv@dividend+1,f
  1872  068D  02F3               	subwf	___awdiv@dividend+1,f
  1873  068E                     l1339:
  1874  068E  1477               	bsf	___awdiv@quotient,0
  1875  068F                     l1341:
  1876  068F  3001               	movlw	1
  1877  0690                     u635:
  1878  0690  1003               	clrc
  1879  0691  0CF1               	rrf	___awdiv@divisor+1,f
  1880  0692  0CF0               	rrf	___awdiv@divisor,f
  1881  0693  3EFF               	addlw	-1
  1882  0694  1D03               	skipz
  1883  0695  2E90               	goto	u635
  1884  0696                     l1343:
  1885  0696  3001               	movlw	1
  1886  0697  02F5               	subwf	___awdiv@counter,f
  1887  0698  1D03               	btfss	3,2
  1888  0699  2E9B               	goto	u641
  1889  069A  2E9C               	goto	u640
  1890  069B                     u641:
  1891  069B  2E77               	goto	l1335
  1892  069C                     u640:
  1893  069C                     l1345:
  1894  069C  0876               	movf	___awdiv@sign,w
  1895  069D  1903               	btfsc	3,2
  1896  069E  2EA0               	goto	u651
  1897  069F  2EA1               	goto	u650
  1898  06A0                     u651:
  1899  06A0  2EA6               	goto	l1349
  1900  06A1                     u650:
  1901  06A1                     l1347:
  1902  06A1  09F7               	comf	___awdiv@quotient,f
  1903  06A2  09F8               	comf	___awdiv@quotient+1,f
  1904  06A3  0AF7               	incf	___awdiv@quotient,f
  1905  06A4  1903               	skipnz
  1906  06A5  0AF8               	incf	___awdiv@quotient+1,f
  1907  06A6                     l1349:
  1908  06A6  0878               	movf	___awdiv@quotient+1,w
  1909  06A7  00F1               	movwf	?___awdiv+1
  1910  06A8  0877               	movf	___awdiv@quotient,w
  1911  06A9  00F0               	movwf	?___awdiv
  1912  06AA                     l422:
  1913  06AA  0008               	return
  1914  06AB                     __end_of___awdiv:
  1915                           
  1916                           	psect	text6
  1917  041F                     __ptext6:	
  1918 ;; *************** function _Lcd_Write_String *****************
  1919 ;; Defined at:
  1920 ;;		line 77 in file "LCD.c"
  1921 ;; Parameters:    Size  Location     Type
  1922 ;;  a               1    wreg     PTR unsigned char 
  1923 ;;		 -> STR_5(4), STR_4(4), STR_3(4), STR_2(5), 
  1924 ;;		 -> STR_1(17), 
  1925 ;; Auto vars:     Size  Location     Type
  1926 ;;  a               1    7[COMMON] PTR unsigned char 
  1927 ;;		 -> STR_5(4), STR_4(4), STR_3(4), STR_2(5), 
  1928 ;;		 -> STR_1(17), 
  1929 ;;  i               2    5[COMMON] int 
  1930 ;; Return value:  Size  Location     Type
  1931 ;;                  1    wreg      void 
  1932 ;; Registers used:
  1933 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1934 ;; Tracked objects:
  1935 ;;		On entry : 0/0
  1936 ;;		On exit  : 0/0
  1937 ;;		Unchanged: 0/0
  1938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1939 ;;      Params:         0       0       0       0       0
  1940 ;;      Locals:         3       0       0       0       0
  1941 ;;      Temps:          0       0       0       0       0
  1942 ;;      Totals:         3       0       0       0       0
  1943 ;;Total ram usage:        3 bytes
  1944 ;; Hardware stack levels used: 1
  1945 ;; Hardware stack levels required when called: 2
  1946 ;; This function calls:
  1947 ;;		_Lcd_Write_Char
  1948 ;; This function is called by:
  1949 ;;		_main
  1950 ;; This function uses a non-reentrant model
  1951 ;;
  1952                           
  1953                           
  1954                           ;psect for function _Lcd_Write_String
  1955  041F                     _Lcd_Write_String:
  1956                           
  1957                           ;incstack = 0
  1958                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1959                           ;Lcd_Write_String@a stored from wreg
  1960  041F  00F7               	movwf	Lcd_Write_String@a
  1961  0420                     l1273:
  1962                           
  1963                           ;LCD.c: 78:     int i;;LCD.c: 79:     for (i = 0; a[i] != '\0'; i++)
  1964  0420  01F5               	clrf	Lcd_Write_String@i
  1965  0421  01F6               	clrf	Lcd_Write_String@i+1
  1966  0422  2C36               	goto	l1279
  1967  0423                     l1275:
  1968                           
  1969                           ;LCD.c: 80:         Lcd_Write_Char(a[i]);
  1970  0423  0875               	movf	Lcd_Write_String@i,w
  1971  0424  0777               	addwf	Lcd_Write_String@a,w
  1972  0425  0084               	movwf	4
  1973  0426  120A  118A  2003  120A  118A  	fcall	stringdir
  1974  042B  120A  118A  2401  120A  118A  	fcall	_Lcd_Write_Char
  1975  0430                     l1277:
  1976  0430  3001               	movlw	1
  1977  0431  07F5               	addwf	Lcd_Write_String@i,f
  1978  0432  1803               	skipnc
  1979  0433  0AF6               	incf	Lcd_Write_String@i+1,f
  1980  0434  3000               	movlw	0
  1981  0435  07F6               	addwf	Lcd_Write_String@i+1,f
  1982  0436                     l1279:
  1983  0436  0875               	movf	Lcd_Write_String@i,w
  1984  0437  0777               	addwf	Lcd_Write_String@a,w
  1985  0438  0084               	movwf	4
  1986  0439  120A  118A  2003  120A  118A  	fcall	stringdir
  1987  043E  3A00               	xorlw	0
  1988  043F  1D03               	skipz
  1989  0440  2C42               	goto	u541
  1990  0441  2C43               	goto	u540
  1991  0442                     u541:
  1992  0442  2C23               	goto	l1275
  1993  0443                     u540:
  1994  0443                     l177:
  1995  0443  0008               	return
  1996  0444                     __end_of_Lcd_Write_String:
  1997                           
  1998                           	psect	text7
  1999  0401                     __ptext7:	
  2000 ;; *************** function _Lcd_Write_Char *****************
  2001 ;; Defined at:
  2002 ;;		line 65 in file "LCD.c"
  2003 ;; Parameters:    Size  Location     Type
  2004 ;;  a               1    wreg     unsigned char 
  2005 ;; Auto vars:     Size  Location     Type
  2006 ;;  a               1    2[COMMON] unsigned char 
  2007 ;;  y               1    4[COMMON] unsigned char 
  2008 ;;  temp            1    3[COMMON] unsigned char 
  2009 ;; Return value:  Size  Location     Type
  2010 ;;                  1    wreg      void 
  2011 ;; Registers used:
  2012 ;;		wreg, status,2, status,0, pclath, cstack
  2013 ;; Tracked objects:
  2014 ;;		On entry : 0/0
  2015 ;;		On exit  : 0/0
  2016 ;;		Unchanged: 0/0
  2017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2018 ;;      Params:         0       0       0       0       0
  2019 ;;      Locals:         3       0       0       0       0
  2020 ;;      Temps:          1       0       0       0       0
  2021 ;;      Totals:         4       0       0       0       0
  2022 ;;Total ram usage:        4 bytes
  2023 ;; Hardware stack levels used: 1
  2024 ;; Hardware stack levels required when called: 1
  2025 ;; This function calls:
  2026 ;;		_Lcd_Port
  2027 ;; This function is called by:
  2028 ;;		_main
  2029 ;;		_Lcd_Write_String
  2030 ;; This function uses a non-reentrant model
  2031 ;;
  2032                           
  2033                           
  2034                           ;psect for function _Lcd_Write_Char
  2035  0401                     _Lcd_Write_Char:
  2036                           
  2037                           ;incstack = 0
  2038                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2039                           ;Lcd_Write_Char@a stored from wreg
  2040  0401  00F2               	movwf	Lcd_Write_Char@a
  2041  0402                     l1149:
  2042                           
  2043                           ;LCD.c: 66:     char temp, y;;LCD.c: 67:     temp = a;
  2044  0402  0872               	movf	Lcd_Write_Char@a,w
  2045  0403  00F1               	movwf	??_Lcd_Write_Char
  2046  0404  0871               	movf	??_Lcd_Write_Char,w
  2047  0405  00F3               	movwf	Lcd_Write_Char@temp
  2048                           
  2049                           ;LCD.c: 68:     y = temp;
  2050  0406  0873               	movf	Lcd_Write_Char@temp,w
  2051  0407  00F1               	movwf	??_Lcd_Write_Char
  2052  0408  0871               	movf	??_Lcd_Write_Char,w
  2053  0409  00F4               	movwf	Lcd_Write_Char@y
  2054  040A                     l1151:
  2055                           
  2056                           ;LCD.c: 69:     RE0 = 1;
  2057  040A  1283               	bcf	3,5	;RP0=0, select bank0
  2058  040B  1303               	bcf	3,6	;RP1=0, select bank0
  2059  040C  1409               	bsf	9,0	;volatile
  2060  040D                     l1153:
  2061                           
  2062                           ;LCD.c: 70:     Lcd_Port(y);
  2063  040D  0874               	movf	Lcd_Write_Char@y,w
  2064  040E  120A  118A  23AB  120A  118A  	fcall	_Lcd_Port
  2065  0413                     l1155:
  2066                           
  2067                           ;LCD.c: 71:     RE1 = 1;
  2068  0413  1283               	bcf	3,5	;RP0=0, select bank0
  2069  0414  1303               	bcf	3,6	;RP1=0, select bank0
  2070  0415  1489               	bsf	9,1	;volatile
  2071  0416                     l1157:
  2072                           
  2073                           ;LCD.c: 72:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2074  0416  301A               	movlw	26
  2075  0417  00F1               	movwf	??_Lcd_Write_Char
  2076  0418                     u827:
  2077  0418  0BF1               	decfsz	??_Lcd_Write_Char,f
  2078  0419  2C18               	goto	u827
  2079  041A  0000               	nop
  2080  041B                     l1159:
  2081                           
  2082                           ;LCD.c: 73:     RE1 = 0;
  2083  041B  1283               	bcf	3,5	;RP0=0, select bank0
  2084  041C  1303               	bcf	3,6	;RP1=0, select bank0
  2085  041D  1089               	bcf	9,1	;volatile
  2086  041E                     l171:
  2087  041E  0008               	return
  2088  041F                     __end_of_Lcd_Write_Char:
  2089                           
  2090                           	psect	text8
  2091  0531                     __ptext8:	
  2092 ;; *************** function _Lcd_Set_Cursor *****************
  2093 ;; Defined at:
  2094 ;;		line 30 in file "LCD.c"
  2095 ;; Parameters:    Size  Location     Type
  2096 ;;  a               1    wreg     unsigned char 
  2097 ;;  b               1    4[COMMON] unsigned char 
  2098 ;; Auto vars:     Size  Location     Type
  2099 ;;  a               1    7[COMMON] unsigned char 
  2100 ;;  temp            1   10[COMMON] unsigned char 
  2101 ;;  y               1    9[COMMON] unsigned char 
  2102 ;;  z               1    8[COMMON] unsigned char 
  2103 ;; Return value:  Size  Location     Type
  2104 ;;                  1    wreg      void 
  2105 ;; Registers used:
  2106 ;;		wreg, status,2, status,0, pclath, cstack
  2107 ;; Tracked objects:
  2108 ;;		On entry : 0/0
  2109 ;;		On exit  : 0/0
  2110 ;;		Unchanged: 0/0
  2111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2112 ;;      Params:         1       0       0       0       0
  2113 ;;      Locals:         4       0       0       0       0
  2114 ;;      Temps:          2       0       0       0       0
  2115 ;;      Totals:         7       0       0       0       0
  2116 ;;Total ram usage:        7 bytes
  2117 ;; Hardware stack levels used: 1
  2118 ;; Hardware stack levels required when called: 2
  2119 ;; This function calls:
  2120 ;;		_Lcd_Cmd
  2121 ;; This function is called by:
  2122 ;;		_main
  2123 ;; This function uses a non-reentrant model
  2124 ;;
  2125                           
  2126                           
  2127                           ;psect for function _Lcd_Set_Cursor
  2128  0531                     _Lcd_Set_Cursor:
  2129                           
  2130                           ;incstack = 0
  2131                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2132                           ;Lcd_Set_Cursor@a stored from wreg
  2133  0531  00F7               	movwf	Lcd_Set_Cursor@a
  2134  0532                     l1253:
  2135                           
  2136                           ;LCD.c: 31:     char temp, z, y;;LCD.c: 32:     if (a == 1) {
  2137  0532  0377               	decf	Lcd_Set_Cursor@a,w
  2138  0533  1D03               	btfss	3,2
  2139  0534  2D36               	goto	u501
  2140  0535  2D37               	goto	u500
  2141  0536                     u501:
  2142  0536  2D5A               	goto	l1263
  2143  0537                     u500:
  2144  0537                     l1255:
  2145                           
  2146                           ;LCD.c: 33:         temp = 0x80 + b - 1;
  2147  0537  0874               	movf	Lcd_Set_Cursor@b,w
  2148  0538  3E7F               	addlw	127
  2149  0539  00F5               	movwf	??_Lcd_Set_Cursor
  2150  053A  0875               	movf	??_Lcd_Set_Cursor,w
  2151  053B  00FA               	movwf	Lcd_Set_Cursor@temp
  2152                           
  2153                           ;LCD.c: 34:         z = temp >> 4;
  2154  053C  087A               	movf	Lcd_Set_Cursor@temp,w
  2155  053D  00F5               	movwf	??_Lcd_Set_Cursor
  2156  053E  3004               	movlw	4
  2157  053F                     u515:
  2158  053F  1003               	clrc
  2159  0540  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2160  0541  3EFF               	addlw	-1
  2161  0542  1D03               	skipz
  2162  0543  2D3F               	goto	u515
  2163  0544  0875               	movf	??_Lcd_Set_Cursor,w
  2164  0545  00F6               	movwf	??_Lcd_Set_Cursor+1
  2165  0546  0876               	movf	??_Lcd_Set_Cursor+1,w
  2166  0547  00F8               	movwf	Lcd_Set_Cursor@z
  2167  0548                     l1257:
  2168                           
  2169                           ;LCD.c: 35:         y = temp & 0x0F;
  2170  0548  087A               	movf	Lcd_Set_Cursor@temp,w
  2171  0549  390F               	andlw	15
  2172  054A  00F5               	movwf	??_Lcd_Set_Cursor
  2173  054B  0875               	movf	??_Lcd_Set_Cursor,w
  2174  054C  00F9               	movwf	Lcd_Set_Cursor@y
  2175  054D                     l1259:
  2176                           
  2177                           ;LCD.c: 36:         Lcd_Cmd(z);
  2178  054D  0878               	movf	Lcd_Set_Cursor@z,w
  2179  054E  120A  118A  23E7  120A  118A  	fcall	_Lcd_Cmd
  2180  0553                     l1261:
  2181                           
  2182                           ;LCD.c: 37:         Lcd_Cmd(y);
  2183  0553  0879               	movf	Lcd_Set_Cursor@y,w
  2184  0554  120A  118A  23E7  120A  118A  	fcall	_Lcd_Cmd
  2185                           
  2186                           ;LCD.c: 38:     } else if (a == 2) {
  2187  0559  2D82               	goto	l165
  2188  055A                     l1263:
  2189  055A  3002               	movlw	2
  2190  055B  0677               	xorwf	Lcd_Set_Cursor@a,w
  2191  055C  1D03               	btfss	3,2
  2192  055D  2D5F               	goto	u521
  2193  055E  2D60               	goto	u520
  2194  055F                     u521:
  2195  055F  2D82               	goto	l165
  2196  0560                     u520:
  2197  0560                     l1265:
  2198                           
  2199                           ;LCD.c: 39:         temp = 0xC0 + b - 1;
  2200  0560  0874               	movf	Lcd_Set_Cursor@b,w
  2201  0561  3EBF               	addlw	191
  2202  0562  00F5               	movwf	??_Lcd_Set_Cursor
  2203  0563  0875               	movf	??_Lcd_Set_Cursor,w
  2204  0564  00FA               	movwf	Lcd_Set_Cursor@temp
  2205                           
  2206                           ;LCD.c: 40:         z = temp >> 4;
  2207  0565  087A               	movf	Lcd_Set_Cursor@temp,w
  2208  0566  00F5               	movwf	??_Lcd_Set_Cursor
  2209  0567  3004               	movlw	4
  2210  0568                     u535:
  2211  0568  1003               	clrc
  2212  0569  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2213  056A  3EFF               	addlw	-1
  2214  056B  1D03               	skipz
  2215  056C  2D68               	goto	u535
  2216  056D  0875               	movf	??_Lcd_Set_Cursor,w
  2217  056E  00F6               	movwf	??_Lcd_Set_Cursor+1
  2218  056F  0876               	movf	??_Lcd_Set_Cursor+1,w
  2219  0570  00F8               	movwf	Lcd_Set_Cursor@z
  2220  0571                     l1267:
  2221                           
  2222                           ;LCD.c: 41:         y = temp & 0xF0;
  2223  0571  087A               	movf	Lcd_Set_Cursor@temp,w
  2224  0572  39F0               	andlw	240
  2225  0573  00F5               	movwf	??_Lcd_Set_Cursor
  2226  0574  0875               	movf	??_Lcd_Set_Cursor,w
  2227  0575  00F9               	movwf	Lcd_Set_Cursor@y
  2228  0576                     l1269:
  2229                           
  2230                           ;LCD.c: 42:         Lcd_Cmd(z);
  2231  0576  0878               	movf	Lcd_Set_Cursor@z,w
  2232  0577  120A  118A  23E7  120A  118A  	fcall	_Lcd_Cmd
  2233  057C                     l1271:
  2234                           
  2235                           ;LCD.c: 43:         Lcd_Cmd(y);
  2236  057C  0879               	movf	Lcd_Set_Cursor@y,w
  2237  057D  120A  118A  23E7  120A  118A  	fcall	_Lcd_Cmd
  2238  0582                     l165:
  2239  0582  0008               	return
  2240  0583                     __end_of_Lcd_Set_Cursor:
  2241                           
  2242                           	psect	text9
  2243  04EA                     __ptext9:	
  2244 ;; *************** function _Lcd_Init *****************
  2245 ;; Defined at:
  2246 ;;		line 47 in file "LCD.c"
  2247 ;; Parameters:    Size  Location     Type
  2248 ;;		None
  2249 ;; Auto vars:     Size  Location     Type
  2250 ;;		None
  2251 ;; Return value:  Size  Location     Type
  2252 ;;                  1    wreg      void 
  2253 ;; Registers used:
  2254 ;;		wreg, status,2, status,0, pclath, cstack
  2255 ;; Tracked objects:
  2256 ;;		On entry : 0/0
  2257 ;;		On exit  : 0/0
  2258 ;;		Unchanged: 0/0
  2259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2260 ;;      Params:         0       0       0       0       0
  2261 ;;      Locals:         0       0       0       0       0
  2262 ;;      Temps:          2       0       0       0       0
  2263 ;;      Totals:         2       0       0       0       0
  2264 ;;Total ram usage:        2 bytes
  2265 ;; Hardware stack levels used: 1
  2266 ;; Hardware stack levels required when called: 2
  2267 ;; This function calls:
  2268 ;;		_Lcd_Cmd
  2269 ;;		_Lcd_Port
  2270 ;; This function is called by:
  2271 ;;		_main
  2272 ;; This function uses a non-reentrant model
  2273 ;;
  2274                           
  2275                           
  2276                           ;psect for function _Lcd_Init
  2277  04EA                     _Lcd_Init:
  2278  04EA                     l1241:	
  2279                           ;incstack = 0
  2280                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2281                           
  2282                           
  2283                           ;LCD.c: 48:     Lcd_Port(0x00);
  2284  04EA  3000               	movlw	0
  2285  04EB  120A  118A  23AB  120A  118A  	fcall	_Lcd_Port
  2286  04F0                     l1243:
  2287                           
  2288                           ;LCD.c: 49:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2289  04F0  3034               	movlw	52
  2290  04F1  00F5               	movwf	??_Lcd_Init+1
  2291  04F2  30F1               	movlw	241
  2292  04F3  00F4               	movwf	??_Lcd_Init
  2293  04F4                     u837:
  2294  04F4  0BF4               	decfsz	??_Lcd_Init,f
  2295  04F5  2CF4               	goto	u837
  2296  04F6  0BF5               	decfsz	??_Lcd_Init+1,f
  2297  04F7  2CF4               	goto	u837
  2298  04F8  2CF9               	nop2
  2299  04F9                     l1245:
  2300                           
  2301                           ;LCD.c: 50:     Lcd_Cmd(0x30);
  2302  04F9  3030               	movlw	48
  2303  04FA  120A  118A  23E7  120A  118A  	fcall	_Lcd_Cmd
  2304                           
  2305                           ;LCD.c: 51:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2306  04FF  300D               	movlw	13
  2307  0500  00F5               	movwf	??_Lcd_Init+1
  2308  0501  30FB               	movlw	251
  2309  0502  00F4               	movwf	??_Lcd_Init
  2310  0503                     u847:
  2311  0503  0BF4               	decfsz	??_Lcd_Init,f
  2312  0504  2D03               	goto	u847
  2313  0505  0BF5               	decfsz	??_Lcd_Init+1,f
  2314  0506  2D03               	goto	u847
  2315  0507  2D08               	nop2
  2316  0508                     l1247:
  2317                           
  2318                           ;LCD.c: 52:     Lcd_Cmd(0x30);
  2319  0508  3030               	movlw	48
  2320  0509  120A  118A  23E7  120A  118A  	fcall	_Lcd_Cmd
  2321  050E                     l1249:
  2322                           
  2323                           ;LCD.c: 53:     _delay((unsigned long)((200)*(8000000/4000000.0)));
  2324  050E  3085               	movlw	133
  2325  050F  00F4               	movwf	??_Lcd_Init
  2326  0510                     u857:
  2327  0510  0BF4               	decfsz	??_Lcd_Init,f
  2328  0511  2D10               	goto	u857
  2329                           
  2330                           ;LCD.c: 54:     Lcd_Cmd(0x30);
  2331  0512  3030               	movlw	48
  2332  0513  120A  118A  23E7  120A  118A  	fcall	_Lcd_Cmd
  2333                           
  2334                           ;LCD.c: 56:     Lcd_Cmd(0x3C);
  2335  0518  303C               	movlw	60
  2336  0519  120A  118A  23E7  120A  118A  	fcall	_Lcd_Cmd
  2337                           
  2338                           ;LCD.c: 58:     Lcd_Cmd(0x08);
  2339  051E  3008               	movlw	8
  2340  051F  120A  118A  23E7  120A  118A  	fcall	_Lcd_Cmd
  2341                           
  2342                           ;LCD.c: 60:     Lcd_Cmd(0x01);
  2343  0524  3001               	movlw	1
  2344  0525  120A  118A  23E7  120A  118A  	fcall	_Lcd_Cmd
  2345                           
  2346                           ;LCD.c: 62:     Lcd_Cmd(0x06);
  2347  052A  3006               	movlw	6
  2348  052B  120A  118A  23E7  120A  118A  	fcall	_Lcd_Cmd
  2349  0530                     l168:
  2350  0530  0008               	return
  2351  0531                     __end_of_Lcd_Init:
  2352                           
  2353                           	psect	text10
  2354  03DA                     __ptext10:	
  2355 ;; *************** function _Lcd_Clear *****************
  2356 ;; Defined at:
  2357 ;;		line 25 in file "LCD.c"
  2358 ;; Parameters:    Size  Location     Type
  2359 ;;		None
  2360 ;; Auto vars:     Size  Location     Type
  2361 ;;		None
  2362 ;; Return value:  Size  Location     Type
  2363 ;;                  1    wreg      void 
  2364 ;; Registers used:
  2365 ;;		wreg, status,2, status,0, pclath, cstack
  2366 ;; Tracked objects:
  2367 ;;		On entry : 0/0
  2368 ;;		On exit  : 0/0
  2369 ;;		Unchanged: 0/0
  2370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2371 ;;      Params:         0       0       0       0       0
  2372 ;;      Locals:         0       0       0       0       0
  2373 ;;      Temps:          0       0       0       0       0
  2374 ;;      Totals:         0       0       0       0       0
  2375 ;;Total ram usage:        0 bytes
  2376 ;; Hardware stack levels used: 1
  2377 ;; Hardware stack levels required when called: 2
  2378 ;; This function calls:
  2379 ;;		_Lcd_Cmd
  2380 ;; This function is called by:
  2381 ;;		_main
  2382 ;; This function uses a non-reentrant model
  2383 ;;
  2384                           
  2385                           
  2386                           ;psect for function _Lcd_Clear
  2387  03DA                     _Lcd_Clear:
  2388  03DA                     l1251:	
  2389                           ;incstack = 0
  2390                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2391                           
  2392                           
  2393                           ;LCD.c: 26:     Lcd_Cmd(0);
  2394  03DA  3000               	movlw	0
  2395  03DB  120A  118A  23E7  120A  118A  	fcall	_Lcd_Cmd
  2396                           
  2397                           ;LCD.c: 27:     Lcd_Cmd(1);
  2398  03E0  3001               	movlw	1
  2399  03E1  120A  118A  23E7  120A  118A  	fcall	_Lcd_Cmd
  2400  03E6                     l159:
  2401  03E6  0008               	return
  2402  03E7                     __end_of_Lcd_Clear:
  2403                           
  2404                           	psect	text11
  2405  03E7                     __ptext11:	
  2406 ;; *************** function _Lcd_Cmd *****************
  2407 ;; Defined at:
  2408 ;;		line 17 in file "LCD.c"
  2409 ;; Parameters:    Size  Location     Type
  2410 ;;  a               1    wreg     unsigned char 
  2411 ;; Auto vars:     Size  Location     Type
  2412 ;;  a               1    3[COMMON] unsigned char 
  2413 ;; Return value:  Size  Location     Type
  2414 ;;                  1    wreg      void 
  2415 ;; Registers used:
  2416 ;;		wreg, status,2, status,0, pclath, cstack
  2417 ;; Tracked objects:
  2418 ;;		On entry : 0/0
  2419 ;;		On exit  : 0/0
  2420 ;;		Unchanged: 0/0
  2421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2422 ;;      Params:         0       0       0       0       0
  2423 ;;      Locals:         1       0       0       0       0
  2424 ;;      Temps:          2       0       0       0       0
  2425 ;;      Totals:         3       0       0       0       0
  2426 ;;Total ram usage:        3 bytes
  2427 ;; Hardware stack levels used: 1
  2428 ;; Hardware stack levels required when called: 1
  2429 ;; This function calls:
  2430 ;;		_Lcd_Port
  2431 ;; This function is called by:
  2432 ;;		_Lcd_Clear
  2433 ;;		_Lcd_Set_Cursor
  2434 ;;		_Lcd_Init
  2435 ;;		_Lcd_Shift_Right
  2436 ;;		_Lcd_Shift_Left
  2437 ;; This function uses a non-reentrant model
  2438 ;;
  2439                           
  2440                           
  2441                           ;psect for function _Lcd_Cmd
  2442  03E7                     _Lcd_Cmd:
  2443                           
  2444                           ;incstack = 0
  2445                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2446                           ;Lcd_Cmd@a stored from wreg
  2447  03E7  00F3               	movwf	Lcd_Cmd@a
  2448  03E8                     l1177:
  2449                           
  2450                           ;LCD.c: 18:     RE0 = 0;
  2451  03E8  1283               	bcf	3,5	;RP0=0, select bank0
  2452  03E9  1303               	bcf	3,6	;RP1=0, select bank0
  2453  03EA  1009               	bcf	9,0	;volatile
  2454  03EB                     l1179:
  2455                           
  2456                           ;LCD.c: 19:     Lcd_Port(a);
  2457  03EB  0873               	movf	Lcd_Cmd@a,w
  2458  03EC  120A  118A  23AB  120A  118A  	fcall	_Lcd_Port
  2459  03F1                     l1181:
  2460                           
  2461                           ;LCD.c: 20:     RE1 = 1;
  2462  03F1  1283               	bcf	3,5	;RP0=0, select bank0
  2463  03F2  1303               	bcf	3,6	;RP1=0, select bank0
  2464  03F3  1489               	bsf	9,1	;volatile
  2465  03F4                     l1183:
  2466                           
  2467                           ;LCD.c: 21:     _delay((unsigned long)((4)*(8000000/4000.0)));
  2468  03F4  300B               	movlw	11
  2469  03F5  00F2               	movwf	??_Lcd_Cmd+1
  2470  03F6  3062               	movlw	98
  2471  03F7  00F1               	movwf	??_Lcd_Cmd
  2472  03F8                     u867:
  2473  03F8  0BF1               	decfsz	??_Lcd_Cmd,f
  2474  03F9  2BF8               	goto	u867
  2475  03FA  0BF2               	decfsz	??_Lcd_Cmd+1,f
  2476  03FB  2BF8               	goto	u867
  2477  03FC  0000               	nop
  2478  03FD                     l1185:
  2479                           
  2480                           ;LCD.c: 22:     RE1 = 0;
  2481  03FD  1283               	bcf	3,5	;RP0=0, select bank0
  2482  03FE  1303               	bcf	3,6	;RP1=0, select bank0
  2483  03FF  1089               	bcf	9,1	;volatile
  2484  0400                     l156:
  2485  0400  0008               	return
  2486  0401                     __end_of_Lcd_Cmd:
  2487                           
  2488                           	psect	text12
  2489  03AB                     __ptext12:	
  2490 ;; *************** function _Lcd_Port *****************
  2491 ;; Defined at:
  2492 ;;		line 12 in file "LCD.c"
  2493 ;; Parameters:    Size  Location     Type
  2494 ;;  a               1    wreg     unsigned char 
  2495 ;; Auto vars:     Size  Location     Type
  2496 ;;  a               1    0[COMMON] unsigned char 
  2497 ;; Return value:  Size  Location     Type
  2498 ;;                  1    wreg      void 
  2499 ;; Registers used:
  2500 ;;		wreg
  2501 ;; Tracked objects:
  2502 ;;		On entry : 0/0
  2503 ;;		On exit  : 0/0
  2504 ;;		Unchanged: 0/0
  2505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2506 ;;      Params:         0       0       0       0       0
  2507 ;;      Locals:         1       0       0       0       0
  2508 ;;      Temps:          0       0       0       0       0
  2509 ;;      Totals:         1       0       0       0       0
  2510 ;;Total ram usage:        1 bytes
  2511 ;; Hardware stack levels used: 1
  2512 ;; This function calls:
  2513 ;;		Nothing
  2514 ;; This function is called by:
  2515 ;;		_Lcd_Cmd
  2516 ;;		_Lcd_Init
  2517 ;;		_Lcd_Write_Char
  2518 ;; This function uses a non-reentrant model
  2519 ;;
  2520                           
  2521                           
  2522                           ;psect for function _Lcd_Port
  2523  03AB                     _Lcd_Port:
  2524                           
  2525                           ;incstack = 0
  2526                           ; Regs used in _Lcd_Port: [wreg]
  2527                           ;Lcd_Port@a stored from wreg
  2528  03AB  00F0               	movwf	Lcd_Port@a
  2529  03AC                     l1123:
  2530                           
  2531                           ;LCD.c: 13:     PORTD = a;
  2532  03AC  0870               	movf	Lcd_Port@a,w
  2533  03AD  1283               	bcf	3,5	;RP0=0, select bank0
  2534  03AE  1303               	bcf	3,6	;RP1=0, select bank0
  2535  03AF  0088               	movwf	8	;volatile
  2536  03B0                     l153:
  2537  03B0  0008               	return
  2538  03B1                     __end_of_Lcd_Port:
  2539                           
  2540                           	psect	text13
  2541  03C3                     __ptext13:	
  2542 ;; *************** function _I2C_Master_Write *****************
  2543 ;; Defined at:
  2544 ;;		line 65 in file "I2C.c"
  2545 ;; Parameters:    Size  Location     Type
  2546 ;;  d               2    0[COMMON] unsigned int 
  2547 ;; Auto vars:     Size  Location     Type
  2548 ;;		None
  2549 ;; Return value:  Size  Location     Type
  2550 ;;                  1    wreg      void 
  2551 ;; Registers used:
  2552 ;;		wreg, status,2, status,0, pclath, cstack
  2553 ;; Tracked objects:
  2554 ;;		On entry : 0/0
  2555 ;;		On exit  : 0/0
  2556 ;;		Unchanged: 0/0
  2557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2558 ;;      Params:         2       0       0       0       0
  2559 ;;      Locals:         0       0       0       0       0
  2560 ;;      Temps:          0       0       0       0       0
  2561 ;;      Totals:         2       0       0       0       0
  2562 ;;Total ram usage:        2 bytes
  2563 ;; Hardware stack levels used: 1
  2564 ;; Hardware stack levels required when called: 1
  2565 ;; This function calls:
  2566 ;;		_I2C_Master_Wait
  2567 ;; This function is called by:
  2568 ;;		_main
  2569 ;; This function uses a non-reentrant model
  2570 ;;
  2571                           
  2572                           
  2573                           ;psect for function _I2C_Master_Write
  2574  03C3                     _I2C_Master_Write:
  2575  03C3                     l1285:	
  2576                           ;incstack = 0
  2577                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2578                           
  2579                           
  2580                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  2581  03C3  120A  118A  23CD  120A  118A  	fcall	_I2C_Master_Wait
  2582  03C8                     l1287:
  2583                           
  2584                           ;I2C.c: 68:     SSPBUF = d;
  2585  03C8  0870               	movf	I2C_Master_Write@d,w
  2586  03C9  1283               	bcf	3,5	;RP0=0, select bank0
  2587  03CA  1303               	bcf	3,6	;RP1=0, select bank0
  2588  03CB  0093               	movwf	19	;volatile
  2589  03CC                     l134:
  2590  03CC  0008               	return
  2591  03CD                     __end_of_I2C_Master_Write:
  2592                           
  2593                           	psect	text14
  2594  03BA                     __ptext14:	
  2595 ;; *************** function _I2C_Master_Stop *****************
  2596 ;; Defined at:
  2597 ;;		line 55 in file "I2C.c"
  2598 ;; Parameters:    Size  Location     Type
  2599 ;;		None
  2600 ;; Auto vars:     Size  Location     Type
  2601 ;;		None
  2602 ;; Return value:  Size  Location     Type
  2603 ;;                  1    wreg      void 
  2604 ;; Registers used:
  2605 ;;		wreg, status,2, status,0, pclath, cstack
  2606 ;; Tracked objects:
  2607 ;;		On entry : 0/0
  2608 ;;		On exit  : 0/0
  2609 ;;		Unchanged: 0/0
  2610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2611 ;;      Params:         0       0       0       0       0
  2612 ;;      Locals:         0       0       0       0       0
  2613 ;;      Temps:          0       0       0       0       0
  2614 ;;      Totals:         0       0       0       0       0
  2615 ;;Total ram usage:        0 bytes
  2616 ;; Hardware stack levels used: 1
  2617 ;; Hardware stack levels required when called: 1
  2618 ;; This function calls:
  2619 ;;		_I2C_Master_Wait
  2620 ;; This function is called by:
  2621 ;;		_main
  2622 ;; This function uses a non-reentrant model
  2623 ;;
  2624                           
  2625                           
  2626                           ;psect for function _I2C_Master_Stop
  2627  03BA                     _I2C_Master_Stop:
  2628  03BA                     l1305:	
  2629                           ;incstack = 0
  2630                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2631                           
  2632                           
  2633                           ;I2C.c: 57:     I2C_Master_Wait();
  2634  03BA  120A  118A  23CD  120A  118A  	fcall	_I2C_Master_Wait
  2635  03BF                     l1307:
  2636                           
  2637                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  2638  03BF  1683               	bsf	3,5	;RP0=1, select bank1
  2639  03C0  1303               	bcf	3,6	;RP1=0, select bank1
  2640  03C1  1511               	bsf	17,2	;volatile
  2641  03C2                     l131:
  2642  03C2  0008               	return
  2643  03C3                     __end_of_I2C_Master_Stop:
  2644                           
  2645                           	psect	text15
  2646  03B1                     __ptext15:	
  2647 ;; *************** function _I2C_Master_Start *****************
  2648 ;; Defined at:
  2649 ;;		line 39 in file "I2C.c"
  2650 ;; Parameters:    Size  Location     Type
  2651 ;;		None
  2652 ;; Auto vars:     Size  Location     Type
  2653 ;;		None
  2654 ;; Return value:  Size  Location     Type
  2655 ;;                  1    wreg      void 
  2656 ;; Registers used:
  2657 ;;		wreg, status,2, status,0, pclath, cstack
  2658 ;; Tracked objects:
  2659 ;;		On entry : 0/0
  2660 ;;		On exit  : 0/0
  2661 ;;		Unchanged: 0/0
  2662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2663 ;;      Params:         0       0       0       0       0
  2664 ;;      Locals:         0       0       0       0       0
  2665 ;;      Temps:          0       0       0       0       0
  2666 ;;      Totals:         0       0       0       0       0
  2667 ;;Total ram usage:        0 bytes
  2668 ;; Hardware stack levels used: 1
  2669 ;; Hardware stack levels required when called: 1
  2670 ;; This function calls:
  2671 ;;		_I2C_Master_Wait
  2672 ;; This function is called by:
  2673 ;;		_main
  2674 ;; This function uses a non-reentrant model
  2675 ;;
  2676                           
  2677                           
  2678                           ;psect for function _I2C_Master_Start
  2679  03B1                     _I2C_Master_Start:
  2680  03B1                     l1281:	
  2681                           ;incstack = 0
  2682                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2683                           
  2684                           
  2685                           ;I2C.c: 41:     I2C_Master_Wait();
  2686  03B1  120A  118A  23CD  120A  118A  	fcall	_I2C_Master_Wait
  2687  03B6                     l1283:
  2688                           
  2689                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  2690  03B6  1683               	bsf	3,5	;RP0=1, select bank1
  2691  03B7  1303               	bcf	3,6	;RP1=0, select bank1
  2692  03B8  1411               	bsf	17,0	;volatile
  2693  03B9                     l125:
  2694  03B9  0008               	return
  2695  03BA                     __end_of_I2C_Master_Start:
  2696                           
  2697                           	psect	text16
  2698  0444                     __ptext16:	
  2699 ;; *************** function _I2C_Master_Read *****************
  2700 ;; Defined at:
  2701 ;;		line 74 in file "I2C.c"
  2702 ;; Parameters:    Size  Location     Type
  2703 ;;  a               2    0[COMMON] unsigned short 
  2704 ;; Auto vars:     Size  Location     Type
  2705 ;;  temp            2    4[COMMON] unsigned short 
  2706 ;; Return value:  Size  Location     Type
  2707 ;;                  2    0[COMMON] unsigned short 
  2708 ;; Registers used:
  2709 ;;		wreg, status,2, status,0, pclath, cstack
  2710 ;; Tracked objects:
  2711 ;;		On entry : 0/0
  2712 ;;		On exit  : 0/0
  2713 ;;		Unchanged: 0/0
  2714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2715 ;;      Params:         2       0       0       0       0
  2716 ;;      Locals:         2       0       0       0       0
  2717 ;;      Temps:          2       0       0       0       0
  2718 ;;      Totals:         6       0       0       0       0
  2719 ;;Total ram usage:        6 bytes
  2720 ;; Hardware stack levels used: 1
  2721 ;; Hardware stack levels required when called: 1
  2722 ;; This function calls:
  2723 ;;		_I2C_Master_Wait
  2724 ;; This function is called by:
  2725 ;;		_main
  2726 ;; This function uses a non-reentrant model
  2727 ;;
  2728                           
  2729                           
  2730                           ;psect for function _I2C_Master_Read
  2731  0444                     _I2C_Master_Read:
  2732  0444                     l1289:	
  2733                           ;incstack = 0
  2734                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  2735                           
  2736                           
  2737                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  2738  0444  120A  118A  23CD  120A  118A  	fcall	_I2C_Master_Wait
  2739  0449                     l1291:
  2740                           
  2741                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  2742  0449  1683               	bsf	3,5	;RP0=1, select bank1
  2743  044A  1303               	bcf	3,6	;RP1=0, select bank1
  2744  044B  1591               	bsf	17,3	;volatile
  2745                           
  2746                           ;I2C.c: 79:     I2C_Master_Wait();
  2747  044C  120A  118A  23CD  120A  118A  	fcall	_I2C_Master_Wait
  2748  0451                     l1293:
  2749                           
  2750                           ;I2C.c: 80:     temp = SSPBUF;
  2751  0451  1283               	bcf	3,5	;RP0=0, select bank0
  2752  0452  1303               	bcf	3,6	;RP1=0, select bank0
  2753  0453  0813               	movf	19,w	;volatile
  2754  0454  00F2               	movwf	??_I2C_Master_Read
  2755  0455  01F3               	clrf	??_I2C_Master_Read+1
  2756  0456  0872               	movf	??_I2C_Master_Read,w
  2757  0457  00F4               	movwf	I2C_Master_Read@temp
  2758  0458  0873               	movf	??_I2C_Master_Read+1,w
  2759  0459  00F5               	movwf	I2C_Master_Read@temp+1
  2760  045A                     l1295:
  2761                           
  2762                           ;I2C.c: 81:     I2C_Master_Wait();
  2763  045A  120A  118A  23CD  120A  118A  	fcall	_I2C_Master_Wait
  2764  045F                     l1297:
  2765                           
  2766                           ;I2C.c: 82:     if(a == 1){
  2767  045F  0370               	decf	I2C_Master_Read@a,w
  2768  0460  0471               	iorwf	I2C_Master_Read@a+1,w
  2769  0461  1D03               	btfss	3,2
  2770  0462  2C64               	goto	u551
  2771  0463  2C65               	goto	u550
  2772  0464                     u551:
  2773  0464  2C69               	goto	l137
  2774  0465                     u550:
  2775  0465                     l1299:
  2776                           
  2777                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  2778  0465  1683               	bsf	3,5	;RP0=1, select bank1
  2779  0466  1303               	bcf	3,6	;RP1=0, select bank1
  2780  0467  1291               	bcf	17,5	;volatile
  2781                           
  2782                           ;I2C.c: 84:     }else{
  2783  0468  2C6C               	goto	l138
  2784  0469                     l137:
  2785                           
  2786                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  2787  0469  1683               	bsf	3,5	;RP0=1, select bank1
  2788  046A  1303               	bcf	3,6	;RP1=0, select bank1
  2789  046B  1691               	bsf	17,5	;volatile
  2790  046C                     l138:	
  2791                           ;I2C.c: 86:     }
  2792                           
  2793                           
  2794                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  2795  046C  1611               	bsf	17,4	;volatile
  2796  046D                     l1301:
  2797                           
  2798                           ;I2C.c: 88:     return temp;
  2799  046D  0875               	movf	I2C_Master_Read@temp+1,w
  2800  046E  00F1               	movwf	?_I2C_Master_Read+1
  2801  046F  0874               	movf	I2C_Master_Read@temp,w
  2802  0470  00F0               	movwf	?_I2C_Master_Read
  2803  0471                     l139:
  2804  0471  0008               	return
  2805  0472                     __end_of_I2C_Master_Read:
  2806                           
  2807                           	psect	text17
  2808  03CD                     __ptext17:	
  2809 ;; *************** function _I2C_Master_Wait *****************
  2810 ;; Defined at:
  2811 ;;		line 32 in file "I2C.c"
  2812 ;; Parameters:    Size  Location     Type
  2813 ;;		None
  2814 ;; Auto vars:     Size  Location     Type
  2815 ;;		None
  2816 ;; Return value:  Size  Location     Type
  2817 ;;                  1    wreg      void 
  2818 ;; Registers used:
  2819 ;;		wreg, status,2
  2820 ;; Tracked objects:
  2821 ;;		On entry : 0/0
  2822 ;;		On exit  : 0/0
  2823 ;;		Unchanged: 0/0
  2824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2825 ;;      Params:         0       0       0       0       0
  2826 ;;      Locals:         0       0       0       0       0
  2827 ;;      Temps:          0       0       0       0       0
  2828 ;;      Totals:         0       0       0       0       0
  2829 ;;Total ram usage:        0 bytes
  2830 ;; Hardware stack levels used: 1
  2831 ;; This function calls:
  2832 ;;		Nothing
  2833 ;; This function is called by:
  2834 ;;		_I2C_Master_Start
  2835 ;;		_I2C_Master_Stop
  2836 ;;		_I2C_Master_Write
  2837 ;;		_I2C_Master_Read
  2838 ;;		_I2C_Master_RepeatedStart
  2839 ;; This function uses a non-reentrant model
  2840 ;;
  2841                           
  2842                           
  2843                           ;psect for function _I2C_Master_Wait
  2844  03CD                     _I2C_Master_Wait:
  2845  03CD                     l1173:	
  2846                           ;incstack = 0
  2847                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  2848                           
  2849  03CD                     l119:	
  2850                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  2851                           
  2852  03CD  1683               	bsf	3,5	;RP0=1, select bank1
  2853  03CE  1303               	bcf	3,6	;RP1=0, select bank1
  2854  03CF  1914               	btfsc	20,2	;volatile
  2855  03D0  2BD2               	goto	u481
  2856  03D1  2BD3               	goto	u480
  2857  03D2                     u481:
  2858  03D2  2BCD               	goto	l119
  2859  03D3                     u480:
  2860  03D3                     l1175:
  2861  03D3  0811               	movf	17,w	;volatile
  2862  03D4  391F               	andlw	31
  2863  03D5  1D03               	btfss	3,2
  2864  03D6  2BD8               	goto	u491
  2865  03D7  2BD9               	goto	u490
  2866  03D8                     u491:
  2867  03D8  2BCD               	goto	l119
  2868  03D9                     u490:
  2869  03D9                     l122:
  2870  03D9  0008               	return
  2871  03DA                     __end_of_I2C_Master_Wait:
  2872  007E                     btemp	set	126	;btemp
  2873  007E                     wtemp0	set	126
  2874                           
  2875                           	psect	config
  2876                           
  2877                           ;Config register CONFIG1 @ 0x2007
  2878                           ;	Oscillator Selection bits
  2879                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2880                           ;	Watchdog Timer Enable bit
  2881                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2882                           ;	Power-up Timer Enable bit
  2883                           ;	PWRTE = OFF, PWRT disabled
  2884                           ;	RE3/MCLR pin function select bit
  2885                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2886                           ;	Code Protection bit
  2887                           ;	CP = OFF, Program memory code protection is disabled
  2888                           ;	Data Code Protection bit
  2889                           ;	CPD = OFF, Data memory code protection is disabled
  2890                           ;	Brown Out Reset Selection bits
  2891                           ;	BOREN = OFF, BOR disabled
  2892                           ;	Internal External Switchover bit
  2893                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2894                           ;	Fail-Safe Clock Monitor Enabled bit
  2895                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2896                           ;	Low Voltage Programming Enable bit
  2897                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2898                           ;	In-Circuit Debugger Mode bit
  2899                           ;	DEBUG = 0x1, unprogrammed default
  2900  2007                     	org	8199
  2901  2007  20D4               	dw	8404
  2902                           
  2903                           ;Config register CONFIG2 @ 0x2008
  2904                           ;	Brown-out Reset Selection bit
  2905                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2906                           ;	Flash Program Memory Self Write Enable bits
  2907                           ;	WRT = OFF, Write protection off
  2908  2008                     	org	8200
  2909  2008  3FFF               	dw	16383

Data Sizes:
    Strings     34
    Constant    0
    Data        0
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     12      19
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_5(CODE[4]), STR_4(CODE[4]), STR_3(CODE[4]), STR_2(CODE[5]), 
		 -> STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->___awmod
    _I2C_Master_Init->___lldiv
    ___awmod->___awdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_initSETUP
    _initSETUP->_I2C_Master_Init

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    3226
                                              9 BANK0      3     3      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                            ___awdiv
                            ___awmod
                          _initSETUP
 ---------------------------------------------------------------------------------
 (1) _initSETUP                                            1     1      0     412
                                              8 BANK0      1     1      0
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     904
                                              9 COMMON     5     1      4
                                              0 BANK0      2     2      0
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     604
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     345
                                              5 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0      90
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     466
                                              4 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      66
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      44
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      44
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2      98
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     197
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
   ___awdiv
   ___awmod
     ___awdiv (ARG)
   _initSETUP
     _I2C_Master_Init
       ___lldiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      21       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      C      13       5       23.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      21      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Sep 07 18:27:26 2021

                        pc 0002                         l87 04E9                         _RH 002D  
             ___awdiv@sign 0076                         fsr 0004                        l122 03D9  
                      l131 03C2                        l116 04A9                        l125 03B9  
                      l134 03CC                        l119 03CD                        l137 0469  
                      l153 03B0                        l305 0643                        l138 046C  
                      l139 0471                        l171 041E                        l156 0400  
                      l165 0582                        l422 06AA                        l159 03E6  
                      l168 0530                        l177 0443                        l435 05DD  
                      _GIE 005F                        _RE0 0048                        _RE1 0049  
                      u400 05EE                        u401 05ED                        u500 0537  
                      u420 0602                        u501 0536                        u421 0601  
                      u415 05F3                        u520 0560                        u600 0677  
                      u440 061D                        u521 055F                        u601 0676  
                      u441 061C                        u515 053F                        u435 0604  
                      u540 0443                        u620 0688                        u700 05B2  
                      u460 063B                        u541 0442                        u621 0687  
                      u701 05B1                        u461 063A                        u445 0619  
                      u550 0465                        u710 05BC                        u470 0489  
                      u551 0464                        u535 0568                        u615 0678  
                      u711 05BB                        u455 062D                        u480 03D3  
                      u640 069C                        u560 0649                        u481 03D2  
                      u641 069B                        u625 0684                        u561 0648  
                      u490 03D9                        u650 06A1                        u570 0654  
                      u730 05CF                        u491 03D8                        u651 06A0  
                      u635 0690                        u571 0653                        u731 05CE  
                      u715 05B8                        u475 0484                        u580 0665  
                      u740 05D4                        u660 058A                        u581 0664  
                      u741 05D3                        u725 05C3                        u661 0589  
                      u670 0595                        u750 06DD                        u671 0594  
                      u807 07E9                        u751 06DC                        u680 05A0  
                      u760 06F3                        u681 059F                        u817 04D4  
                      u761 06F2                        u770 07CE                        u827 0418  
                      u595 0669                        u771 07CD                        u780 07DB  
                      u837 04F4                        u781 07DA                        u847 0503  
                      u695 05A4                        u857 0510                        u867 03F8  
                      u797 070F                        fsr0 0004               ___awmod@sign 0021  
                     l1201 04B6                       l1123 03AC                       l1131 05FE  
                     l1211 04C1                       l1203 04B7                       l1301 046D  
                     l1141 062C                       l1133 0602                       l1125 05DE  
                     l1221 04C6                       l1213 04C2                       l1205 04B8  
                     l1151 040A                       l1311 0645                       l1143 0635  
                     l1135 060B                       l1127 05EE                       l1231 04D7  
                     l1223 04C7                       l1215 04C3                       l1207 04B9  
                     l1305 03BA                       l1241 04EA                       l1153 040D  
                     l1321 0659                       l1313 0649                       l1137 061D  
                     l1129 05F1                       l1145 063B                       l1161 0472  
                     l1233 04DA                       l1225 04CD                       l1217 04C4  
                     l1209 04BE                       l1401 06DD                       l1307 03BF  
                     l1251 03DA                       l1243 04F0                       l1155 0413  
                     l1331 066F                       l1323 065D                       l1315 064E  
                     l1139 062B                       l1171 04A8                       l1163 0476  
                     l1235 04DB                       l1227 04CF                       l1219 04C5  
                     l1411 0702                       l1403 06EB                       l1173 03CD  
                     l1181 03F1                       l1245 04F9                       l1261 0553  
                     l1253 0532                       l1157 0416                       l1149 0402  
                     l1341 068F                       l1333 0673                       l1325 065F  
                     l1317 0650                       l1309 0644                       l1165 0479  
                     l1237 04DC                       l1229 04D0                       l1421 075B  
                     l1413 0707                       l1405 06EE                       l1175 03D3  
                     l1183 03F4                       l1247 0508                       l1271 057C  
                     l1255 0537                       l1263 055A                       l1159 041B  
                     l1343 0696                       l1335 0677                       l1327 0665  
                     l1319 0654                       l1167 04A6                       l1191 04AF  
                     l1431 07AA                       l1423 077F                       l1415 0716  
                     l1407 06F3                       l1281 03B1                       l1185 03FD  
                     l1177 03E8                       l1249 050E                       l1265 0560  
                     l1257 0548                       l1273 0420                       l1337 0688  
                     l1329 0668                       l1345 069C                       l1361 0591  
                     l1353 0583                       l1169 04A7                       l1193 04B0  
                     l1441 07CE                       l1433 07B2                       l1425 0796  
                     l1417 071E                       l1409 0701                       l1291 0449  
                     l1283 03B6                       l1179 03EB                       l1267 0571  
                     l1259 054D                       l1275 0423                       l1347 06A1  
                     l1339 068E                       l1371 05AA                       l1363 0595  
                     l1355 0586                       l1195 04B1                       l1187 04AA  
                     l1443 07D5                       l1435 07BA                       l1427 079C  
                     l1419 0744                       l1293 0451                       l1285 03C3  
                     l1269 0576                       l1277 0430                       l1349 06A6  
                     l1381 05C9                       l1373 05AE                       l1365 059A  
                     l1357 058A                       l1197 04B2                       l1189 04AE  
                     l1445 07DB                       l1437 07C0                       l1429 07A4  
                     l1295 045A                       l1287 03C8                       l1279 0436  
                     l1375 05B2                       l1367 05A0                       l1383 05CF  
                     l1359 058F                       l1199 04B5                       l1447 07E1  
                     l1439 07C6                       l1391 06AB                       l1297 045F  
                     l1289 0444                       l1385 05D4                       l1377 05BC  
                     l1369 05A3                       l1393 06C2                       l1299 0465  
                     l1387 05D9                       l1379 05C2                       l1395 06C8  
                     l1397 06CD                       l1399 06D6                       STR_1 0009  
                     STR_2 001A                       STR_3 001F                       STR_4 0023  
                     STR_5 0027                       _PEIE 005E                       _dec0 0031  
                     _dec1 002F          ?_Lcd_Write_String 0070                       _main 06AB  
                     _test 002C                       btemp 007E                       start 0000  
       ??_Lcd_Write_String 0075            __end_of_Lcd_Cmd 0401           ?_I2C_Master_Init 0020  
         ?_I2C_Master_Read 0070           ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070  
                    ?_main 0070            __end_of___awdiv 06AB            __end_of___awmod 05DE  
                    _ANSEL 0188            __end_of___lldiv 0644            ___awdiv@divisor 0070  
          ___awdiv@counter 0075                      _PORTA 0005                      _PORTB 0006  
                    _PORTC 0007                      _PORTD 0008                      _PORTE 0009  
  __size_of_Lcd_Set_Cursor 0052                      _TRISA 0085                      _TRISB 0086  
                    _TRISC 0087                      _TRISD 0088                      _SSPIE 0463  
                    _TRISE 0089                      _SSPIF 0063                      _unit0 0032  
                    _unit1 0030                      pclath 000A                      status 0003  
                    wtemp0 007E           __end_of_Lcd_Init 0531           __end_of_Lcd_Port 03B1  
          __initialization 07F3               __end_of_main 07F3                     ??_main 0029  
       __size_of_Lcd_Clear 000D          ?_I2C_Master_Start 0070          ?_I2C_Master_Write 0070  
       ??_I2C_Master_Start 0070         ??_I2C_Master_Write 0072           ___awdiv@dividend 0072  
                   _ANSELH 0189                  ??_Lcd_Cmd 0071    __size_of_Lcd_Write_Char 001E  
                   _SSPADD 0093                     _TRISC3 043B                     _TRISC4 043C  
                   _SSPCON 0014                     _SSPBUF 0013                  ??___awdiv 0074  
                ??___awmod 007D                  ??___lldiv 0078           ___awdiv@quotient 0077  
          ___awmod@divisor 0079            ___awmod@counter 0020            Lcd_Set_Cursor@a 0077  
          Lcd_Set_Cursor@b 0074            Lcd_Set_Cursor@y 0079            Lcd_Set_Cursor@z 0078  
  __end_of__initialization 07FC          __end_of_Lcd_Clear 03E7             __pcstackCOMMON 0070  
           _Lcd_Set_Cursor 0531                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
               __pbssBANK0 002C         __size_of_initSETUP 0040                 __pmaintext 06AB  
__size_of_Lcd_Write_String 0025     __end_of_Lcd_Set_Cursor 0583                 ??_Lcd_Init 0074  
               ??_Lcd_Port 0070                    _SSPCON2 0091                    _SSPSTAT 0094  
               __stringtab 0003             _Lcd_Write_Char 0401                    _Lcd_Cmd 03E7  
                  ___awdiv 0644                    ___awmod 0583                    ___lldiv 05DE  
        __end_of_initSETUP 04EA            ?_Lcd_Set_Cursor 0074                    __ptext1 04AA  
                  __ptext2 0472                    __ptext3 05DE                    __ptext4 0583  
                  __ptext5 0644                    __ptext6 041F                    __ptext7 0401  
                  __ptext8 0531                    __ptext9 04EA           ___awmod@dividend 007B  
 __size_of_I2C_Master_Init 0038   __size_of_I2C_Master_Read 002E   __size_of_I2C_Master_Wait 000D  
 __size_of_I2C_Master_Stop 0009     __end_of_Lcd_Write_Char 041F       end_of_initialization 07FC  
__size_of_I2C_Master_Start 0009  __size_of_I2C_Master_Write 000A            ___lldiv@divisor 0070  
          ___lldiv@counter 007D           I2C_Master_Init@c 0020           I2C_Master_Read@a 0070  
                Lcd_Port@a 0070                  _TRISCbits 0087            ?_Lcd_Write_Char 0070  
        Lcd_Write_String@a 0077          Lcd_Write_String@i 0075                  _Lcd_Clear 03DA  
         _Lcd_Write_String 041F        start_initialization 07F3          __size_of_Lcd_Init 0047  
        __size_of_Lcd_Port 0006          ??_I2C_Master_Init 0024          ??_I2C_Master_Read 0072  
        ??_I2C_Master_Wait 0070          ??_I2C_Master_Stop 0070                 ?_Lcd_Clear 0070  
          Lcd_Write_Char@a 0072            Lcd_Write_Char@y 0074                  ___latbits 0002  
            __pcstackBANK0 0020                   ?_Lcd_Cmd 0070           _I2C_Master_Start 03B1  
         _I2C_Master_Write 03C3           ??_Lcd_Set_Cursor 0075                   ?___awdiv 0070  
                 ?___awmod 0079                   ?___lldiv 0070                  __pstrings 0003  
                _initSETUP 04AA                   Lcd_Cmd@a 0073                ??_Lcd_Clear 0074  
               _ADCON0bits 001F                __stringbase 0008                 _ADCON1bits 009F  
         ??_Lcd_Write_Char 0071                 ?_initSETUP 0070                   _Lcd_Init 04EA  
                 _Lcd_Port 03AB        I2C_Master_Read@temp 0074   __end_of_Lcd_Write_String 0444  
         __size_of_Lcd_Cmd 001A                   _Humidity 002E           __size_of___awdiv 0067  
         __size_of___awmod 005B           __size_of___lldiv 0066         __end_of__stringtab 0009  
          _I2C_Master_Init 0472            _I2C_Master_Read 0444            _I2C_Master_Wait 03CD  
          _I2C_Master_Stop 03BA                   __ptext10 03DA                   __ptext11 03E7  
                 __ptext12 03AB                   __ptext13 03C3                   __ptext14 03BA  
                 __ptext15 03B1                   __ptext16 0444                   __ptext17 03CD  
            __size_of_main 0148   __end_of_I2C_Master_Start 03BA   __end_of_I2C_Master_Write 03CD  
               _INTCONbits 000B                ??_initSETUP 0028         Lcd_Write_Char@temp 0073  
         ___lldiv@dividend 0074                  stringcode 0003                 _OSCCONbits 008F  
  __end_of_I2C_Master_Init 04AA    __end_of_I2C_Master_Read 0472    __end_of_I2C_Master_Wait 03DA  
  __end_of_I2C_Master_Stop 03C3         Lcd_Set_Cursor@temp 007A           ___lldiv@quotient 0079  
        I2C_Master_Write@d 0070                   stringdir 0003                   stringtab 0003  
              _SSPCON2bits 0091  
