

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Sep 07 09:36:58 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    28                           	dabs	1,0x7E,2
    29  0000                     
    30                           ; Version 2.20
    31                           ; Generated 12/02/2020 GMT
    32                           ; 
    33                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F887 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  000E                     	;# 
    79  000E                     	;# 
    80  000F                     	;# 
    81  0010                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0013                     	;# 
    85  0014                     	;# 
    86  0015                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001B                     	;# 
    95  001C                     	;# 
    96  001D                     	;# 
    97  001E                     	;# 
    98  001F                     	;# 
    99  0081                     	;# 
   100  0085                     	;# 
   101  0086                     	;# 
   102  0087                     	;# 
   103  0088                     	;# 
   104  0089                     	;# 
   105  008C                     	;# 
   106  008D                     	;# 
   107  008E                     	;# 
   108  008F                     	;# 
   109  0090                     	;# 
   110  0091                     	;# 
   111  0092                     	;# 
   112  0093                     	;# 
   113  0093                     	;# 
   114  0093                     	;# 
   115  0094                     	;# 
   116  0095                     	;# 
   117  0096                     	;# 
   118  0097                     	;# 
   119  0098                     	;# 
   120  0099                     	;# 
   121  009A                     	;# 
   122  009B                     	;# 
   123  009C                     	;# 
   124  009D                     	;# 
   125  009E                     	;# 
   126  009F                     	;# 
   127  0105                     	;# 
   128  0107                     	;# 
   129  0108                     	;# 
   130  0109                     	;# 
   131  010C                     	;# 
   132  010C                     	;# 
   133  010D                     	;# 
   134  010E                     	;# 
   135  010F                     	;# 
   136  0185                     	;# 
   137  0187                     	;# 
   138  0188                     	;# 
   139  0189                     	;# 
   140  018C                     	;# 
   141  018D                     	;# 
   142  0000                     	;# 
   143  0001                     	;# 
   144  0002                     	;# 
   145  0003                     	;# 
   146  0004                     	;# 
   147  0005                     	;# 
   148  0006                     	;# 
   149  0007                     	;# 
   150  0008                     	;# 
   151  0009                     	;# 
   152  000A                     	;# 
   153  000B                     	;# 
   154  000C                     	;# 
   155  000D                     	;# 
   156  000E                     	;# 
   157  000E                     	;# 
   158  000F                     	;# 
   159  0010                     	;# 
   160  0011                     	;# 
   161  0012                     	;# 
   162  0013                     	;# 
   163  0014                     	;# 
   164  0015                     	;# 
   165  0015                     	;# 
   166  0016                     	;# 
   167  0017                     	;# 
   168  0018                     	;# 
   169  0019                     	;# 
   170  001A                     	;# 
   171  001B                     	;# 
   172  001B                     	;# 
   173  001C                     	;# 
   174  001D                     	;# 
   175  001E                     	;# 
   176  001F                     	;# 
   177  0081                     	;# 
   178  0085                     	;# 
   179  0086                     	;# 
   180  0087                     	;# 
   181  0088                     	;# 
   182  0089                     	;# 
   183  008C                     	;# 
   184  008D                     	;# 
   185  008E                     	;# 
   186  008F                     	;# 
   187  0090                     	;# 
   188  0091                     	;# 
   189  0092                     	;# 
   190  0093                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0094                     	;# 
   194  0095                     	;# 
   195  0096                     	;# 
   196  0097                     	;# 
   197  0098                     	;# 
   198  0099                     	;# 
   199  009A                     	;# 
   200  009B                     	;# 
   201  009C                     	;# 
   202  009D                     	;# 
   203  009E                     	;# 
   204  009F                     	;# 
   205  0105                     	;# 
   206  0107                     	;# 
   207  0108                     	;# 
   208  0109                     	;# 
   209  010C                     	;# 
   210  010C                     	;# 
   211  010D                     	;# 
   212  010E                     	;# 
   213  010F                     	;# 
   214  0185                     	;# 
   215  0187                     	;# 
   216  0188                     	;# 
   217  0189                     	;# 
   218  018C                     	;# 
   219  018D                     	;# 
   220  0000                     	;# 
   221  0001                     	;# 
   222  0002                     	;# 
   223  0003                     	;# 
   224  0004                     	;# 
   225  0005                     	;# 
   226  0006                     	;# 
   227  0007                     	;# 
   228  0008                     	;# 
   229  0009                     	;# 
   230  000A                     	;# 
   231  000B                     	;# 
   232  000C                     	;# 
   233  000D                     	;# 
   234  000E                     	;# 
   235  000E                     	;# 
   236  000F                     	;# 
   237  0010                     	;# 
   238  0011                     	;# 
   239  0012                     	;# 
   240  0013                     	;# 
   241  0014                     	;# 
   242  0015                     	;# 
   243  0015                     	;# 
   244  0016                     	;# 
   245  0017                     	;# 
   246  0018                     	;# 
   247  0019                     	;# 
   248  001A                     	;# 
   249  001B                     	;# 
   250  001B                     	;# 
   251  001C                     	;# 
   252  001D                     	;# 
   253  001E                     	;# 
   254  001F                     	;# 
   255  0081                     	;# 
   256  0085                     	;# 
   257  0086                     	;# 
   258  0087                     	;# 
   259  0088                     	;# 
   260  0089                     	;# 
   261  008C                     	;# 
   262  008D                     	;# 
   263  008E                     	;# 
   264  008F                     	;# 
   265  0090                     	;# 
   266  0091                     	;# 
   267  0092                     	;# 
   268  0093                     	;# 
   269  0093                     	;# 
   270  0093                     	;# 
   271  0094                     	;# 
   272  0095                     	;# 
   273  0096                     	;# 
   274  0097                     	;# 
   275  0098                     	;# 
   276  0099                     	;# 
   277  009A                     	;# 
   278  009B                     	;# 
   279  009C                     	;# 
   280  009D                     	;# 
   281  009E                     	;# 
   282  009F                     	;# 
   283  0105                     	;# 
   284  0107                     	;# 
   285  0108                     	;# 
   286  0109                     	;# 
   287  010C                     	;# 
   288  010C                     	;# 
   289  010D                     	;# 
   290  010E                     	;# 
   291  010F                     	;# 
   292  0185                     	;# 
   293  0187                     	;# 
   294  0188                     	;# 
   295  0189                     	;# 
   296  018C                     	;# 
   297  018D                     	;# 
   298  0000                     	;# 
   299  0001                     	;# 
   300  0002                     	;# 
   301  0003                     	;# 
   302  0004                     	;# 
   303  0005                     	;# 
   304  0006                     	;# 
   305  0007                     	;# 
   306  0008                     	;# 
   307  0009                     	;# 
   308  000A                     	;# 
   309  000B                     	;# 
   310  000C                     	;# 
   311  000D                     	;# 
   312  000E                     	;# 
   313  000E                     	;# 
   314  000F                     	;# 
   315  0010                     	;# 
   316  0011                     	;# 
   317  0012                     	;# 
   318  0013                     	;# 
   319  0014                     	;# 
   320  0015                     	;# 
   321  0015                     	;# 
   322  0016                     	;# 
   323  0017                     	;# 
   324  0018                     	;# 
   325  0019                     	;# 
   326  001A                     	;# 
   327  001B                     	;# 
   328  001B                     	;# 
   329  001C                     	;# 
   330  001D                     	;# 
   331  001E                     	;# 
   332  001F                     	;# 
   333  0081                     	;# 
   334  0085                     	;# 
   335  0086                     	;# 
   336  0087                     	;# 
   337  0088                     	;# 
   338  0089                     	;# 
   339  008C                     	;# 
   340  008D                     	;# 
   341  008E                     	;# 
   342  008F                     	;# 
   343  0090                     	;# 
   344  0091                     	;# 
   345  0092                     	;# 
   346  0093                     	;# 
   347  0093                     	;# 
   348  0093                     	;# 
   349  0094                     	;# 
   350  0095                     	;# 
   351  0096                     	;# 
   352  0097                     	;# 
   353  0098                     	;# 
   354  0099                     	;# 
   355  009A                     	;# 
   356  009B                     	;# 
   357  009C                     	;# 
   358  009D                     	;# 
   359  009E                     	;# 
   360  009F                     	;# 
   361  0105                     	;# 
   362  0107                     	;# 
   363  0108                     	;# 
   364  0109                     	;# 
   365  010C                     	;# 
   366  010C                     	;# 
   367  010D                     	;# 
   368  010E                     	;# 
   369  010F                     	;# 
   370  0185                     	;# 
   371  0187                     	;# 
   372  0188                     	;# 
   373  0189                     	;# 
   374  018C                     	;# 
   375  018D                     	;# 
   376  0013                     _SSPBUF	set	19
   377  0014                     _SSPCON	set	20
   378  000B                     _INTCONbits	set	11
   379  001F                     _ADCON0bits	set	31
   380  0008                     _PORTD	set	8
   381  0007                     _PORTC	set	7
   382  0006                     _PORTB	set	6
   383  0005                     _PORTA	set	5
   384  0009                     _PORTE	set	9
   385  0049                     _RE1	set	73
   386  0048                     _RE0	set	72
   387  0063                     _SSPIF	set	99
   388  005E                     _PEIE	set	94
   389  005F                     _GIE	set	95
   390  0091                     _SSPCON2bits	set	145
   391  0087                     _TRISCbits	set	135
   392  0094                     _SSPSTAT	set	148
   393  0093                     _SSPADD	set	147
   394  0091                     _SSPCON2	set	145
   395  009F                     _ADCON1bits	set	159
   396  008F                     _OSCCONbits	set	143
   397  0089                     _TRISE	set	137
   398  0088                     _TRISD	set	136
   399  0087                     _TRISC	set	135
   400  0086                     _TRISB	set	134
   401  0085                     _TRISA	set	133
   402  0463                     _SSPIE	set	1123
   403  043C                     _TRISC4	set	1084
   404  043B                     _TRISC3	set	1083
   405  0189                     _ANSELH	set	393
   406  0188                     _ANSEL	set	392
   407                           
   408                           	psect	strings
   409  0003                     __pstrings:
   410  0003                     stringtab:
   411  0003                     __stringtab:
   412  0003                     stringcode:	
   413                           ;	String table - string pointers are 1 byte each
   414                           
   415  0003                     stringdir:
   416  0003  3000               	movlw	high stringdir
   417  0004  008A               	movwf	10
   418  0005  0804               	movf	4,w
   419  0006  0A84               	incf	4,f
   420  0007  0782               	addwf	2,f
   421  0008                     __stringbase:
   422  0008  3400               	retlw	0
   423  0009                     __end_of__stringtab:
   424  0009                     STR_1:
   425  0009  3420               	retlw	32	;' '
   426  000A  3453               	retlw	83	;'S'
   427  000B  3431               	retlw	49	;'1'
   428  000C  343A               	retlw	58	;':'
   429  000D  3420               	retlw	32	;' '
   430  000E  3420               	retlw	32	;' '
   431  000F  3420               	retlw	32	;' '
   432  0010  3453               	retlw	83	;'S'
   433  0011  3432               	retlw	50	;'2'
   434  0012  343A               	retlw	58	;':'
   435  0013  3420               	retlw	32	;' '
   436  0014  3420               	retlw	32	;' '
   437  0015  3420               	retlw	32	;' '
   438  0016  3453               	retlw	83	;'S'
   439  0017  3433               	retlw	51	;'3'
   440  0018  343A               	retlw	58	;':'
   441  0019  3400               	retlw	0
   442  001A                     STR_2:
   443  001A  3425               	retlw	37	;'%'
   444  001B  3420               	retlw	32	;' '
   445  001C  3420               	retlw	32	;' '
   446  001D  3420               	retlw	32	;' '
   447  001E  3400               	retlw	0
   448  001F                     STR_4:
   449  001F  3443               	retlw	67	;'C'
   450  0020  3420               	retlw	32	;' '
   451  0021  3420               	retlw	32	;' '
   452  0022  3400               	retlw	0
   453  0023                     STR_5:
   454  0023  3430               	retlw	48	;'0'
   455  0024  3430               	retlw	48	;'0'
   456  0025  3430               	retlw	48	;'0'
   457  0026  3400               	retlw	0
   458  0027                     STR_3:
   459  0027  34B0               	retlw	-80
   460  0028  3400               	retlw	0
   461                           
   462                           	psect	cinit
   463  07F4                     start_initialization:	
   464                           ; #config settings
   465                           
   466  07F4                     __initialization:
   467                           
   468                           ; Clear objects allocated to BANK0
   469  07F4  1283               	bcf	3,5	;RP0=0, select bank0
   470  07F5  1303               	bcf	3,6	;RP1=0, select bank0
   471  07F6  01AC               	clrf	__pbssBANK0& (0+127)
   472  07F7  01AD               	clrf	(__pbssBANK0+1)& (0+127)
   473  07F8  01AE               	clrf	(__pbssBANK0+2)& (0+127)
   474  07F9  01AF               	clrf	(__pbssBANK0+3)& (0+127)
   475  07FA  01B0               	clrf	(__pbssBANK0+4)& (0+127)
   476  07FB  01B1               	clrf	(__pbssBANK0+5)& (0+127)
   477  07FC                     end_of_initialization:	
   478                           ;End of C runtime variable initialization code
   479                           
   480  07FC                     __end_of__initialization:
   481  07FC  0183               	clrf	3
   482  07FD  120A  118A  2F14   	ljmp	_main	;jump to C main() function
   483                           
   484                           	psect	bssBANK0
   485  002C                     __pbssBANK0:
   486  002C                     _RH:
   487  002C                     	ds	1
   488  002D                     _Humidity:
   489  002D                     	ds	1
   490  002E                     _dec1:
   491  002E                     	ds	1
   492  002F                     _unit1:
   493  002F                     	ds	1
   494  0030                     _dec0:
   495  0030                     	ds	1
   496  0031                     _unit0:
   497  0031                     	ds	1
   498                           
   499                           	psect	cstackCOMMON
   500  0070                     __pcstackCOMMON:
   501  0070                     ?_initSETUP:
   502  0070                     ?_Lcd_Init:	
   503                           ; 1 bytes @ 0x0
   504                           
   505  0070                     ?_Lcd_Clear:	
   506                           ; 1 bytes @ 0x0
   507                           
   508  0070                     ?_Lcd_Write_String:	
   509                           ; 1 bytes @ 0x0
   510                           
   511  0070                     ?_I2C_Master_Start:	
   512                           ; 1 bytes @ 0x0
   513                           
   514  0070                     ??_I2C_Master_Start:	
   515                           ; 1 bytes @ 0x0
   516                           
   517  0070                     ?_I2C_Master_Write:	
   518                           ; 1 bytes @ 0x0
   519                           
   520  0070                     ?_I2C_Master_Stop:	
   521                           ; 1 bytes @ 0x0
   522                           
   523  0070                     ??_I2C_Master_Stop:	
   524                           ; 1 bytes @ 0x0
   525                           
   526  0070                     ?_Lcd_Write_Char:	
   527                           ; 1 bytes @ 0x0
   528                           
   529  0070                     ?_main:	
   530                           ; 1 bytes @ 0x0
   531                           
   532  0070                     ?_I2C_Master_Wait:	
   533                           ; 1 bytes @ 0x0
   534                           
   535  0070                     ??_I2C_Master_Wait:	
   536                           ; 1 bytes @ 0x0
   537                           
   538  0070                     ?_Lcd_Port:	
   539                           ; 1 bytes @ 0x0
   540                           
   541  0070                     ??_Lcd_Port:	
   542                           ; 1 bytes @ 0x0
   543                           
   544  0070                     ?_Lcd_Cmd:	
   545                           ; 1 bytes @ 0x0
   546                           
   547  0070                     ?_I2C_Master_Read:	
   548                           ; 1 bytes @ 0x0
   549                           
   550  0070                     ?___awdiv:	
   551                           ; 2 bytes @ 0x0
   552                           
   553  0070                     ?___lldiv:	
   554                           ; 2 bytes @ 0x0
   555                           
   556  0070                     Lcd_Port@a:	
   557                           ; 4 bytes @ 0x0
   558                           
   559  0070                     I2C_Master_Write@d:	
   560                           ; 1 bytes @ 0x0
   561                           
   562  0070                     I2C_Master_Read@a:	
   563                           ; 2 bytes @ 0x0
   564                           
   565  0070                     ___awdiv@divisor:	
   566                           ; 2 bytes @ 0x0
   567                           
   568  0070                     ___lldiv@divisor:	
   569                           ; 2 bytes @ 0x0
   570                           
   571                           
   572                           ; 4 bytes @ 0x0
   573  0070                     	ds	1
   574  0071                     ??_Lcd_Write_Char:
   575  0071                     ??_Lcd_Cmd:	
   576                           ; 1 bytes @ 0x1
   577                           
   578                           
   579                           ; 1 bytes @ 0x1
   580  0071                     	ds	1
   581  0072                     ??_I2C_Master_Write:
   582  0072                     ??_I2C_Master_Read:	
   583                           ; 1 bytes @ 0x2
   584                           
   585  0072                     Lcd_Write_Char@a:	
   586                           ; 1 bytes @ 0x2
   587                           
   588  0072                     ___awdiv@dividend:	
   589                           ; 1 bytes @ 0x2
   590                           
   591                           
   592                           ; 2 bytes @ 0x2
   593  0072                     	ds	1
   594  0073                     Lcd_Cmd@a:
   595  0073                     Lcd_Write_Char@temp:	
   596                           ; 1 bytes @ 0x3
   597                           
   598                           
   599                           ; 1 bytes @ 0x3
   600  0073                     	ds	1
   601  0074                     ??_Lcd_Init:
   602  0074                     ??_Lcd_Clear:	
   603                           ; 1 bytes @ 0x4
   604                           
   605  0074                     ?_Lcd_Set_Cursor:	
   606                           ; 1 bytes @ 0x4
   607                           
   608  0074                     ??___awdiv:	
   609                           ; 1 bytes @ 0x4
   610                           
   611  0074                     Lcd_Set_Cursor@b:	
   612                           ; 1 bytes @ 0x4
   613                           
   614  0074                     Lcd_Write_Char@y:	
   615                           ; 1 bytes @ 0x4
   616                           
   617  0074                     I2C_Master_Read@temp:	
   618                           ; 1 bytes @ 0x4
   619                           
   620  0074                     ___lldiv@dividend:	
   621                           ; 2 bytes @ 0x4
   622                           
   623                           
   624                           ; 4 bytes @ 0x4
   625  0074                     	ds	1
   626  0075                     ??_Lcd_Set_Cursor:
   627  0075                     ??_Lcd_Write_String:	
   628                           ; 1 bytes @ 0x5
   629                           
   630  0075                     ___awdiv@counter:	
   631                           ; 1 bytes @ 0x5
   632                           
   633  0075                     Lcd_Write_String@i:	
   634                           ; 1 bytes @ 0x5
   635                           
   636                           
   637                           ; 2 bytes @ 0x5
   638  0075                     	ds	1
   639  0076                     ___awdiv@sign:
   640                           
   641                           ; 1 bytes @ 0x6
   642  0076                     	ds	1
   643  0077                     Lcd_Set_Cursor@a:
   644  0077                     Lcd_Write_String@a:	
   645                           ; 1 bytes @ 0x7
   646                           
   647  0077                     ___awdiv@quotient:	
   648                           ; 1 bytes @ 0x7
   649                           
   650                           
   651                           ; 2 bytes @ 0x7
   652  0077                     	ds	1
   653  0078                     ??___lldiv:
   654  0078                     Lcd_Set_Cursor@z:	
   655                           ; 1 bytes @ 0x8
   656                           
   657                           
   658                           ; 1 bytes @ 0x8
   659  0078                     	ds	1
   660  0079                     ?___awmod:
   661  0079                     Lcd_Set_Cursor@y:	
   662                           ; 2 bytes @ 0x9
   663                           
   664  0079                     ___awmod@divisor:	
   665                           ; 1 bytes @ 0x9
   666                           
   667  0079                     ___lldiv@quotient:	
   668                           ; 2 bytes @ 0x9
   669                           
   670                           
   671                           ; 4 bytes @ 0x9
   672  0079                     	ds	1
   673  007A                     Lcd_Set_Cursor@temp:
   674                           
   675                           ; 1 bytes @ 0xA
   676  007A                     	ds	1
   677  007B                     ___awmod@dividend:
   678                           
   679                           ; 2 bytes @ 0xB
   680  007B                     	ds	2
   681  007D                     ??___awmod:
   682  007D                     ___lldiv@counter:	
   683                           ; 1 bytes @ 0xD
   684                           
   685                           
   686                           ; 1 bytes @ 0xD
   687  007D                     	ds	1
   688                           
   689                           	psect	cstackBANK0
   690  0020                     __pcstackBANK0:
   691  0020                     ?_I2C_Master_Init:
   692  0020                     ___awmod@counter:	
   693                           ; 1 bytes @ 0x0
   694                           
   695  0020                     I2C_Master_Init@c:	
   696                           ; 1 bytes @ 0x0
   697                           
   698                           
   699                           ; 4 bytes @ 0x0
   700  0020                     	ds	1
   701  0021                     ___awmod@sign:
   702                           
   703                           ; 1 bytes @ 0x1
   704  0021                     	ds	3
   705  0024                     ??_I2C_Master_Init:
   706                           
   707                           ; 1 bytes @ 0x4
   708  0024                     	ds	4
   709  0028                     ??_initSETUP:
   710                           
   711                           ; 1 bytes @ 0x8
   712  0028                     	ds	1
   713  0029                     ??_main:
   714                           
   715                           ; 1 bytes @ 0x9
   716  0029                     	ds	3
   717                           
   718                           	psect	maintext
   719  0714                     __pmaintext:	
   720 ;;
   721 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   722 ;;
   723 ;; *************** function _main *****************
   724 ;; Defined at:
   725 ;;		line 40 in file "master.c"
   726 ;; Parameters:    Size  Location     Type
   727 ;;		None
   728 ;; Auto vars:     Size  Location     Type
   729 ;;		None
   730 ;; Return value:  Size  Location     Type
   731 ;;                  1    wreg      void 
   732 ;; Registers used:
   733 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   734 ;; Tracked objects:
   735 ;;		On entry : B00/0
   736 ;;		On exit  : 0/0
   737 ;;		Unchanged: 0/0
   738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   739 ;;      Params:         0       0       0       0       0
   740 ;;      Locals:         0       0       0       0       0
   741 ;;      Temps:          0       3       0       0       0
   742 ;;      Totals:         0       3       0       0       0
   743 ;;Total ram usage:        3 bytes
   744 ;; Hardware stack levels required when called: 3
   745 ;; This function calls:
   746 ;;		_I2C_Master_Read
   747 ;;		_I2C_Master_Start
   748 ;;		_I2C_Master_Stop
   749 ;;		_I2C_Master_Write
   750 ;;		_Lcd_Clear
   751 ;;		_Lcd_Init
   752 ;;		_Lcd_Set_Cursor
   753 ;;		_Lcd_Write_Char
   754 ;;		_Lcd_Write_String
   755 ;;		___awdiv
   756 ;;		___awmod
   757 ;;		_initSETUP
   758 ;; This function is called by:
   759 ;;		Startup code after reset
   760 ;; This function uses a non-reentrant model
   761 ;;
   762                           
   763                           
   764                           ;psect for function _main
   765  0714                     _main:
   766  0714                     l1367:	
   767                           ;incstack = 0
   768                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   769                           
   770                           
   771                           ;master.c: 41:     initSETUP();
   772  0714  120A  118A  2513  120A  118A  	fcall	_initSETUP
   773                           
   774                           ;master.c: 42:     Lcd_Init();
   775  0719  120A  118A  2553  120A  118A  	fcall	_Lcd_Init
   776                           
   777                           ;master.c: 43:     Lcd_Clear();
   778  071E  120A  118A  2443  120A  118A  	fcall	_Lcd_Clear
   779                           
   780                           ;master.c: 44:     Lcd_Set_Cursor(1,1);
   781  0723  01F4               	clrf	Lcd_Set_Cursor@b
   782  0724  0AF4               	incf	Lcd_Set_Cursor@b,f
   783  0725  3001               	movlw	1
   784  0726  120A  118A  259A  120A  118A  	fcall	_Lcd_Set_Cursor
   785  072B                     l1369:
   786                           
   787                           ;master.c: 45:     Lcd_Write_String(" S1:   S2:   S3:");
   788  072B  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   789  072C  120A  118A  2488  120A  118A  	fcall	_Lcd_Write_String
   790  0731                     l1371:
   791                           
   792                           ;master.c: 47:         I2C_Master_Start();
   793  0731  120A  118A  241A  120A  118A  	fcall	_I2C_Master_Start
   794  0736                     l1373:
   795                           
   796                           ;master.c: 48:         I2C_Master_Write(0x81);
   797  0736  3081               	movlw	129
   798  0737  00F0               	movwf	I2C_Master_Write@d
   799  0738  3000               	movlw	0
   800  0739  00F1               	movwf	I2C_Master_Write@d+1
   801  073A  120A  118A  242C  120A  118A  	fcall	_I2C_Master_Write
   802  073F                     l1375:
   803                           
   804                           ;master.c: 49:         RH = I2C_Master_Read(0);
   805  073F  3000               	movlw	0
   806  0740  00F0               	movwf	I2C_Master_Read@a
   807  0741  00F1               	movwf	I2C_Master_Read@a+1
   808  0742  120A  118A  24AD  120A  118A  	fcall	_I2C_Master_Read
   809  0747  0870               	movf	?_I2C_Master_Read,w
   810  0748  1283               	bcf	3,5	;RP0=0, select bank0
   811  0749  1303               	bcf	3,6	;RP1=0, select bank0
   812  074A  00A9               	movwf	??_main
   813  074B  0829               	movf	??_main,w
   814  074C  00AC               	movwf	_RH
   815  074D                     l1377:
   816                           
   817                           ;master.c: 50:         I2C_Master_Stop();
   818  074D  120A  118A  2423  120A  118A  	fcall	_I2C_Master_Stop
   819  0752                     l1379:
   820                           
   821                           ;master.c: 51:         _delay((unsigned long)((200)*(8000000/4000.0)));
   822  0752  3003               	movlw	3
   823  0753  1283               	bcf	3,5	;RP0=0, select bank0
   824  0754  1303               	bcf	3,6	;RP1=0, select bank0
   825  0755  00AB               	movwf	??_main+2
   826  0756  3008               	movlw	8
   827  0757  00AA               	movwf	??_main+1
   828  0758  3076               	movlw	118
   829  0759  00A9               	movwf	??_main
   830  075A                     u717:
   831  075A  0BA9               	decfsz	??_main,f
   832  075B  2F5A               	goto	u717
   833  075C  0BAA               	decfsz	??_main+1,f
   834  075D  2F5A               	goto	u717
   835  075E  0BAB               	decfsz	??_main+2,f
   836  075F  2F5A               	goto	u717
   837  0760  0000               	nop
   838  0761                     l1381:
   839                           
   840                           ;master.c: 53:         Lcd_Set_Cursor(2,1);
   841  0761  01F4               	clrf	Lcd_Set_Cursor@b
   842  0762  0AF4               	incf	Lcd_Set_Cursor@b,f
   843  0763  3002               	movlw	2
   844  0764  120A  118A  259A  120A  118A  	fcall	_Lcd_Set_Cursor
   845  0769                     l1383:
   846                           
   847                           ;master.c: 54:         unit0 = 48 + ((Humidity/10) %10);
   848  0769  3030               	movlw	48
   849  076A  1283               	bcf	3,5	;RP0=0, select bank0
   850  076B  1303               	bcf	3,6	;RP1=0, select bank0
   851  076C  00A9               	movwf	??_main
   852  076D  0829               	movf	??_main,w
   853  076E  00B1               	movwf	_unit0
   854  076F                     l1385:
   855                           
   856                           ;master.c: 55:         dec0 = 48 + (Humidity %10);
   857  076F  3030               	movlw	48
   858  0770  00A9               	movwf	??_main
   859  0771  0829               	movf	??_main,w
   860  0772  00B0               	movwf	_dec0
   861  0773                     l1387:
   862                           
   863                           ;master.c: 56:         unit1 =48 + ((RH / 10) % 10);
   864  0773  300A               	movlw	10
   865  0774  00F9               	movwf	___awmod@divisor
   866  0775  3000               	movlw	0
   867  0776  00FA               	movwf	___awmod@divisor+1
   868  0777  300A               	movlw	10
   869  0778  00F0               	movwf	___awdiv@divisor
   870  0779  3000               	movlw	0
   871  077A  00F1               	movwf	___awdiv@divisor+1
   872  077B  082C               	movf	_RH,w
   873  077C  00A9               	movwf	??_main
   874  077D  01AA               	clrf	??_main+1
   875  077E  0829               	movf	??_main,w
   876  077F  00F2               	movwf	___awdiv@dividend
   877  0780  082A               	movf	??_main+1,w
   878  0781  00F3               	movwf	___awdiv@dividend+1
   879  0782  120A  118A  26AD  120A  118A  	fcall	___awdiv
   880  0787  0871               	movf	?___awdiv+1,w
   881  0788  00FC               	movwf	___awmod@dividend+1
   882  0789  0870               	movf	?___awdiv,w
   883  078A  00FB               	movwf	___awmod@dividend
   884  078B  120A  118A  25EC  120A  118A  	fcall	___awmod
   885  0790  0879               	movf	?___awmod,w
   886  0791  3E30               	addlw	48
   887  0792  1283               	bcf	3,5	;RP0=0, select bank0
   888  0793  1303               	bcf	3,6	;RP1=0, select bank0
   889  0794  00AB               	movwf	??_main+2
   890  0795  082B               	movf	??_main+2,w
   891  0796  00AF               	movwf	_unit1
   892  0797                     l1389:
   893                           
   894                           ;master.c: 57:         dec1 = 48 + (RH % 10);
   895  0797  300A               	movlw	10
   896  0798  00F9               	movwf	___awmod@divisor
   897  0799  3000               	movlw	0
   898  079A  00FA               	movwf	___awmod@divisor+1
   899  079B  082C               	movf	_RH,w
   900  079C  00A9               	movwf	??_main
   901  079D  01AA               	clrf	??_main+1
   902  079E  0829               	movf	??_main,w
   903  079F  00FB               	movwf	___awmod@dividend
   904  07A0  082A               	movf	??_main+1,w
   905  07A1  00FC               	movwf	___awmod@dividend+1
   906  07A2  120A  118A  25EC  120A  118A  	fcall	___awmod
   907  07A7  0879               	movf	?___awmod,w
   908  07A8  3E30               	addlw	48
   909  07A9  1283               	bcf	3,5	;RP0=0, select bank0
   910  07AA  1303               	bcf	3,6	;RP1=0, select bank0
   911  07AB  00AB               	movwf	??_main+2
   912  07AC  082B               	movf	??_main+2,w
   913  07AD  00AE               	movwf	_dec1
   914  07AE                     l1391:
   915                           
   916                           ;master.c: 58:         Lcd_Write_Char(unit0);
   917  07AE  3030               	movlw	48
   918  07AF  120A  118A  246A  120A  118A  	fcall	_Lcd_Write_Char
   919  07B4                     l1393:
   920                           
   921                           ;master.c: 59:         Lcd_Write_Char(dec0);
   922  07B4  3030               	movlw	48
   923  07B5  120A  118A  246A  120A  118A  	fcall	_Lcd_Write_Char
   924  07BA                     l1395:
   925                           
   926                           ;master.c: 60:         Lcd_Write_String("%   ");
   927  07BA  3012               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   928  07BB  120A  118A  2488  120A  118A  	fcall	_Lcd_Write_String
   929  07C0                     l1397:
   930                           
   931                           ;master.c: 61:         Lcd_Write_Char(unit1);
   932  07C0  1283               	bcf	3,5	;RP0=0, select bank0
   933  07C1  1303               	bcf	3,6	;RP1=0, select bank0
   934  07C2  082F               	movf	_unit1,w
   935  07C3  120A  118A  246A  120A  118A  	fcall	_Lcd_Write_Char
   936  07C8                     l1399:
   937                           
   938                           ;master.c: 62:         Lcd_Write_Char(dec1);
   939  07C8  1283               	bcf	3,5	;RP0=0, select bank0
   940  07C9  1303               	bcf	3,6	;RP1=0, select bank0
   941  07CA  082E               	movf	_dec1,w
   942  07CB  120A  118A  246A  120A  118A  	fcall	_Lcd_Write_Char
   943  07D0                     l1401:
   944                           
   945                           ;master.c: 63:         Lcd_Write_Char("°");
   946  07D0  301F               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   947  07D1  120A  118A  246A  120A  118A  	fcall	_Lcd_Write_Char
   948  07D6                     l1403:
   949                           
   950                           ;master.c: 64:         Lcd_Write_String("C  ");
   951  07D6  3017               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   952  07D7  120A  118A  2488  120A  118A  	fcall	_Lcd_Write_String
   953  07DC                     l1405:
   954                           
   955                           ;master.c: 65:         Lcd_Write_String("000");
   956  07DC  301B               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   957  07DD  120A  118A  2488  120A  118A  	fcall	_Lcd_Write_String
   958  07E2                     l1407:
   959                           
   960                           ;master.c: 66:         _delay((unsigned long)((1000)*(8000000/4000.0)));
   961  07E2  300B               	movlw	11
   962  07E3  1283               	bcf	3,5	;RP0=0, select bank0
   963  07E4  1303               	bcf	3,6	;RP1=0, select bank0
   964  07E5  00AB               	movwf	??_main+2
   965  07E6  3026               	movlw	38
   966  07E7  00AA               	movwf	??_main+1
   967  07E8  305D               	movlw	93
   968  07E9  00A9               	movwf	??_main
   969  07EA                     u727:
   970  07EA  0BA9               	decfsz	??_main,f
   971  07EB  2FEA               	goto	u727
   972  07EC  0BAA               	decfsz	??_main+1,f
   973  07ED  2FEA               	goto	u727
   974  07EE  0BAB               	decfsz	??_main+2,f
   975  07EF  2FEA               	goto	u727
   976  07F0  2F31               	goto	l1371
   977  07F1  120A  118A  2800   	ljmp	start
   978  07F4                     __end_of_main:
   979                           
   980                           	psect	text1
   981  0513                     __ptext1:	
   982 ;; *************** function _initSETUP *****************
   983 ;; Defined at:
   984 ;;		line 71 in file "master.c"
   985 ;; Parameters:    Size  Location     Type
   986 ;;		None
   987 ;; Auto vars:     Size  Location     Type
   988 ;;		None
   989 ;; Return value:  Size  Location     Type
   990 ;;                  1    wreg      void 
   991 ;; Registers used:
   992 ;;		wreg, status,2, status,0, pclath, cstack
   993 ;; Tracked objects:
   994 ;;		On entry : 0/0
   995 ;;		On exit  : 0/0
   996 ;;		Unchanged: 0/0
   997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   998 ;;      Params:         0       0       0       0       0
   999 ;;      Locals:         0       0       0       0       0
  1000 ;;      Temps:          0       1       0       0       0
  1001 ;;      Totals:         0       1       0       0       0
  1002 ;;Total ram usage:        1 bytes
  1003 ;; Hardware stack levels used: 1
  1004 ;; Hardware stack levels required when called: 2
  1005 ;; This function calls:
  1006 ;;		_I2C_Master_Init
  1007 ;; This function is called by:
  1008 ;;		_main
  1009 ;; This function uses a non-reentrant model
  1010 ;;
  1011                           
  1012                           
  1013                           ;psect for function _initSETUP
  1014  0513                     _initSETUP:
  1015  0513                     l1163:	
  1016                           ;incstack = 0
  1017                           ; Regs used in _initSETUP: [wreg+status,2+status,0+pclath+cstack]
  1018                           
  1019                           
  1020                           ;master.c: 72:     TRISA = 0b00000001;
  1021  0513  3001               	movlw	1
  1022  0514  1683               	bsf	3,5	;RP0=1, select bank1
  1023  0515  1303               	bcf	3,6	;RP1=0, select bank1
  1024  0516  0085               	movwf	5	;volatile
  1025  0517                     l1165:
  1026                           
  1027                           ;master.c: 73:     TRISB = 0;
  1028  0517  0186               	clrf	6	;volatile
  1029  0518                     l1167:
  1030                           
  1031                           ;master.c: 74:     TRISC = 0;
  1032  0518  0187               	clrf	7	;volatile
  1033  0519                     l1169:
  1034                           
  1035                           ;master.c: 75:     TRISD = 0;
  1036  0519  0188               	clrf	8	;volatile
  1037  051A                     l1171:
  1038                           
  1039                           ;master.c: 76:     TRISE = 0;
  1040  051A  0189               	clrf	9	;volatile
  1041  051B                     l1173:
  1042                           
  1043                           ;master.c: 77:     PORTE = 0;
  1044  051B  1283               	bcf	3,5	;RP0=0, select bank0
  1045  051C  1303               	bcf	3,6	;RP1=0, select bank0
  1046  051D  0189               	clrf	9	;volatile
  1047  051E                     l1175:
  1048                           
  1049                           ;master.c: 78:     PORTA = 0;
  1050  051E  0185               	clrf	5	;volatile
  1051  051F                     l1177:
  1052                           
  1053                           ;master.c: 79:     PORTB = 0;
  1054  051F  0186               	clrf	6	;volatile
  1055  0520                     l1179:
  1056                           
  1057                           ;master.c: 80:     PORTC = 0;
  1058  0520  0187               	clrf	7	;volatile
  1059  0521                     l1181:
  1060                           
  1061                           ;master.c: 81:     PORTD = 0;
  1062  0521  0188               	clrf	8	;volatile
  1063  0522                     l1183:
  1064                           
  1065                           ;master.c: 82:     ANSEL = 0b00000001;
  1066  0522  3001               	movlw	1
  1067  0523  1683               	bsf	3,5	;RP0=1, select bank3
  1068  0524  1703               	bsf	3,6	;RP1=1, select bank3
  1069  0525  0088               	movwf	8	;volatile
  1070                           
  1071                           ;master.c: 83:     ANSELH = 0;
  1072  0526  0189               	clrf	9	;volatile
  1073  0527                     l1185:
  1074                           
  1075                           ;master.c: 84:     OSCCONbits.IRCF2 = 1;
  1076  0527  1683               	bsf	3,5	;RP0=1, select bank1
  1077  0528  1303               	bcf	3,6	;RP1=0, select bank1
  1078  0529  170F               	bsf	15,6	;volatile
  1079  052A                     l1187:
  1080                           
  1081                           ;master.c: 85:     OSCCONbits.IRCF1 = 1;
  1082  052A  168F               	bsf	15,5	;volatile
  1083  052B                     l1189:
  1084                           
  1085                           ;master.c: 86:     OSCCONbits.IRCF0 = 1;
  1086  052B  160F               	bsf	15,4	;volatile
  1087  052C                     l1191:
  1088                           
  1089                           ;master.c: 87:     OSCCONbits.SCS = 1;
  1090  052C  140F               	bsf	15,0	;volatile
  1091  052D                     l1193:
  1092                           
  1093                           ;master.c: 89:     ADCON1bits.ADFM = 0;
  1094  052D  139F               	bcf	31,7	;volatile
  1095  052E                     l1195:
  1096                           
  1097                           ;master.c: 90:     ADCON1bits.VCFG0 = 0;
  1098  052E  121F               	bcf	31,4	;volatile
  1099  052F                     l1197:
  1100                           
  1101                           ;master.c: 91:     ADCON1bits.VCFG1 = 0;
  1102  052F  129F               	bcf	31,5	;volatile
  1103  0530                     l1199:
  1104                           
  1105                           ;master.c: 92:     ADCON0bits.ADCS = 0b10;
  1106  0530  1283               	bcf	3,5	;RP0=0, select bank0
  1107  0531  1303               	bcf	3,6	;RP1=0, select bank0
  1108  0532  081F               	movf	31,w	;volatile
  1109  0533  393F               	andlw	-193
  1110  0534  3880               	iorlw	128
  1111  0535  009F               	movwf	31	;volatile
  1112  0536                     l1201:
  1113                           
  1114                           ;master.c: 93:     ADCON0bits.CHS = 0;
  1115  0536  30C3               	movlw	-61
  1116  0537  059F               	andwf	31,f	;volatile
  1117  0538                     l1203:
  1118                           
  1119                           ;master.c: 94:     ADCON0bits.ADON = 1;
  1120  0538  141F               	bsf	31,0	;volatile
  1121  0539                     l1205:
  1122                           
  1123                           ;master.c: 95:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  1124  0539  3020               	movlw	32
  1125  053A  1283               	bcf	3,5	;RP0=0, select bank0
  1126  053B  1303               	bcf	3,6	;RP1=0, select bank0
  1127  053C  00A8               	movwf	??_initSETUP
  1128  053D                     u737:
  1129  053D  0BA8               	decfsz	??_initSETUP,f
  1130  053E  2D3D               	goto	u737
  1131  053F  0000               	nop
  1132  0540                     l1207:
  1133                           
  1134                           ;master.c: 96:     ADCON0bits.GO = 1;
  1135  0540  1283               	bcf	3,5	;RP0=0, select bank0
  1136  0541  1303               	bcf	3,6	;RP1=0, select bank0
  1137  0542  149F               	bsf	31,1	;volatile
  1138  0543                     l1209:
  1139                           
  1140                           ;master.c: 98:     INTCONbits.GIE = 1;
  1141  0543  178B               	bsf	11,7	;volatile
  1142  0544                     l1211:
  1143                           
  1144                           ;master.c: 99:     INTCONbits.PEIE =1;
  1145  0544  170B               	bsf	11,6	;volatile
  1146  0545                     l1213:
  1147                           
  1148                           ;master.c: 100:     I2C_Master_Init(100000);
  1149  0545  3000               	movlw	0
  1150  0546  00A3               	movwf	I2C_Master_Init@c+3
  1151  0547  3001               	movlw	1
  1152  0548  00A2               	movwf	I2C_Master_Init@c+2
  1153  0549  3086               	movlw	134
  1154  054A  00A1               	movwf	I2C_Master_Init@c+1
  1155  054B  30A0               	movlw	160
  1156  054C  00A0               	movwf	I2C_Master_Init@c
  1157  054D  120A  118A  24DB  120A  118A  	fcall	_I2C_Master_Init
  1158  0552                     l79:
  1159  0552  0008               	return
  1160  0553                     __end_of_initSETUP:
  1161                           
  1162                           	psect	text2
  1163  04DB                     __ptext2:	
  1164 ;; *************** function _I2C_Master_Init *****************
  1165 ;; Defined at:
  1166 ;;		line 16 in file "I2C.c"
  1167 ;; Parameters:    Size  Location     Type
  1168 ;;  c               4    0[BANK0 ] const unsigned long 
  1169 ;; Auto vars:     Size  Location     Type
  1170 ;;		None
  1171 ;; Return value:  Size  Location     Type
  1172 ;;                  1    wreg      void 
  1173 ;; Registers used:
  1174 ;;		wreg, status,2, status,0, pclath, cstack
  1175 ;; Tracked objects:
  1176 ;;		On entry : 0/0
  1177 ;;		On exit  : 0/0
  1178 ;;		Unchanged: 0/0
  1179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1180 ;;      Params:         0       4       0       0       0
  1181 ;;      Locals:         0       0       0       0       0
  1182 ;;      Temps:          0       4       0       0       0
  1183 ;;      Totals:         0       8       0       0       0
  1184 ;;Total ram usage:        8 bytes
  1185 ;; Hardware stack levels used: 1
  1186 ;; Hardware stack levels required when called: 1
  1187 ;; This function calls:
  1188 ;;		___lldiv
  1189 ;; This function is called by:
  1190 ;;		_initSETUP
  1191 ;; This function uses a non-reentrant model
  1192 ;;
  1193                           
  1194                           
  1195                           ;psect for function _I2C_Master_Init
  1196  04DB                     _I2C_Master_Init:
  1197  04DB                     l1137:	
  1198                           ;incstack = 0
  1199                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1200                           
  1201                           
  1202                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  1203  04DB  3028               	movlw	40
  1204  04DC  1283               	bcf	3,5	;RP0=0, select bank0
  1205  04DD  1303               	bcf	3,6	;RP1=0, select bank0
  1206  04DE  0094               	movwf	20	;volatile
  1207  04DF                     l1139:
  1208                           
  1209                           ;I2C.c: 19:     SSPCON2 = 0;
  1210  04DF  1683               	bsf	3,5	;RP0=1, select bank1
  1211  04E0  1303               	bcf	3,6	;RP1=0, select bank1
  1212  04E1  0191               	clrf	17	;volatile
  1213  04E2                     l1141:
  1214                           
  1215                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  1216  04E2  1283               	bcf	3,5	;RP0=0, select bank0
  1217  04E3  1303               	bcf	3,6	;RP1=0, select bank0
  1218  04E4  0820               	movf	I2C_Master_Init@c,w
  1219  04E5  00A4               	movwf	??_I2C_Master_Init
  1220  04E6  0821               	movf	I2C_Master_Init@c+1,w
  1221  04E7  00A5               	movwf	??_I2C_Master_Init+1
  1222  04E8  0822               	movf	I2C_Master_Init@c+2,w
  1223  04E9  00A6               	movwf	??_I2C_Master_Init+2
  1224  04EA  0823               	movf	I2C_Master_Init@c+3,w
  1225  04EB  00A7               	movwf	??_I2C_Master_Init+3
  1226  04EC  3002               	movlw	2
  1227  04ED                     u435:
  1228  04ED  1003               	clrc
  1229  04EE  0DA4               	rlf	??_I2C_Master_Init,f
  1230  04EF  0DA5               	rlf	??_I2C_Master_Init+1,f
  1231  04F0  0DA6               	rlf	??_I2C_Master_Init+2,f
  1232  04F1  0DA7               	rlf	??_I2C_Master_Init+3,f
  1233  04F2                     u430:
  1234  04F2  3EFF               	addlw	-1
  1235  04F3  1D03               	skipz
  1236  04F4  2CED               	goto	u435
  1237  04F5  0827               	movf	??_I2C_Master_Init+3,w
  1238  04F6  00F3               	movwf	___lldiv@divisor+3
  1239  04F7  0826               	movf	??_I2C_Master_Init+2,w
  1240  04F8  00F2               	movwf	___lldiv@divisor+2
  1241  04F9  0825               	movf	??_I2C_Master_Init+1,w
  1242  04FA  00F1               	movwf	___lldiv@divisor+1
  1243  04FB  0824               	movf	??_I2C_Master_Init,w
  1244  04FC  00F0               	movwf	___lldiv@divisor
  1245  04FD  3000               	movlw	0
  1246  04FE  00F7               	movwf	___lldiv@dividend+3
  1247  04FF  307A               	movlw	122
  1248  0500  00F6               	movwf	___lldiv@dividend+2
  1249  0501  3012               	movlw	18
  1250  0502  00F5               	movwf	___lldiv@dividend+1
  1251  0503  3000               	movlw	0
  1252  0504  00F4               	movwf	___lldiv@dividend
  1253  0505  120A  118A  2647  120A  118A  	fcall	___lldiv
  1254  050A  0870               	movf	?___lldiv,w
  1255  050B  3EFF               	addlw	255
  1256  050C  1683               	bsf	3,5	;RP0=1, select bank1
  1257  050D  1303               	bcf	3,6	;RP1=0, select bank1
  1258  050E  0093               	movwf	19	;volatile
  1259  050F                     l1143:
  1260                           
  1261                           ;I2C.c: 21:     SSPSTAT = 0;
  1262  050F  0194               	clrf	20	;volatile
  1263  0510                     l1145:
  1264                           
  1265                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  1266  0510  1587               	bsf	7,3	;volatile
  1267  0511                     l1147:
  1268                           
  1269                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  1270  0511  1607               	bsf	7,4	;volatile
  1271  0512                     l108:
  1272  0512  0008               	return
  1273  0513                     __end_of_I2C_Master_Init:
  1274                           
  1275                           	psect	text3
  1276  0647                     __ptext3:	
  1277 ;; *************** function ___lldiv *****************
  1278 ;; Defined at:
  1279 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
  1280 ;; Parameters:    Size  Location     Type
  1281 ;;  divisor         4    0[COMMON] unsigned long 
  1282 ;;  dividend        4    4[COMMON] unsigned long 
  1283 ;; Auto vars:     Size  Location     Type
  1284 ;;  quotient        4    9[COMMON] unsigned long 
  1285 ;;  counter         1   13[COMMON] unsigned char 
  1286 ;; Return value:  Size  Location     Type
  1287 ;;                  4    0[COMMON] unsigned long 
  1288 ;; Registers used:
  1289 ;;		wreg, status,2, status,0
  1290 ;; Tracked objects:
  1291 ;;		On entry : 0/0
  1292 ;;		On exit  : 0/0
  1293 ;;		Unchanged: 0/0
  1294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1295 ;;      Params:         8       0       0       0       0
  1296 ;;      Locals:         5       0       0       0       0
  1297 ;;      Temps:          1       0       0       0       0
  1298 ;;      Totals:        14       0       0       0       0
  1299 ;;Total ram usage:       14 bytes
  1300 ;; Hardware stack levels used: 1
  1301 ;; This function calls:
  1302 ;;		Nothing
  1303 ;; This function is called by:
  1304 ;;		_I2C_Master_Init
  1305 ;; This function uses a non-reentrant model
  1306 ;;
  1307                           
  1308                           
  1309                           ;psect for function ___lldiv
  1310  0647                     ___lldiv:
  1311  0647                     l1101:	
  1312                           ;incstack = 0
  1313                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1314                           
  1315  0647  3000               	movlw	0
  1316  0648  00FC               	movwf	___lldiv@quotient+3
  1317  0649  3000               	movlw	0
  1318  064A  00FB               	movwf	___lldiv@quotient+2
  1319  064B  3000               	movlw	0
  1320  064C  00FA               	movwf	___lldiv@quotient+1
  1321  064D  3000               	movlw	0
  1322  064E  00F9               	movwf	___lldiv@quotient
  1323  064F  0873               	movf	___lldiv@divisor+3,w
  1324  0650  0472               	iorwf	___lldiv@divisor+2,w
  1325  0651  0471               	iorwf	___lldiv@divisor+1,w
  1326  0652  0470               	iorwf	___lldiv@divisor,w
  1327  0653  1903               	skipnz
  1328  0654  2E56               	goto	u361
  1329  0655  2E57               	goto	u360
  1330  0656                     u361:
  1331  0656  2EA4               	goto	l1121
  1332  0657                     u360:
  1333  0657                     l1103:
  1334  0657  01FD               	clrf	___lldiv@counter
  1335  0658  0AFD               	incf	___lldiv@counter,f
  1336  0659  2E67               	goto	l1107
  1337  065A                     l1105:
  1338  065A  3001               	movlw	1
  1339  065B  00F8               	movwf	??___lldiv
  1340  065C                     u375:
  1341  065C  1003               	clrc
  1342  065D  0DF0               	rlf	___lldiv@divisor,f
  1343  065E  0DF1               	rlf	___lldiv@divisor+1,f
  1344  065F  0DF2               	rlf	___lldiv@divisor+2,f
  1345  0660  0DF3               	rlf	___lldiv@divisor+3,f
  1346  0661  0BF8               	decfsz	??___lldiv,f
  1347  0662  2E5C               	goto	u375
  1348  0663  3001               	movlw	1
  1349  0664  00F8               	movwf	??___lldiv
  1350  0665  0878               	movf	??___lldiv,w
  1351  0666  07FD               	addwf	___lldiv@counter,f
  1352  0667                     l1107:
  1353  0667  1FF3               	btfss	___lldiv@divisor+3,7
  1354  0668  2E6A               	goto	u381
  1355  0669  2E6B               	goto	u380
  1356  066A                     u381:
  1357  066A  2E5A               	goto	l1105
  1358  066B                     u380:
  1359  066B                     l1109:
  1360  066B  3001               	movlw	1
  1361  066C  00F8               	movwf	??___lldiv
  1362  066D                     u395:
  1363  066D  1003               	clrc
  1364  066E  0DF9               	rlf	___lldiv@quotient,f
  1365  066F  0DFA               	rlf	___lldiv@quotient+1,f
  1366  0670  0DFB               	rlf	___lldiv@quotient+2,f
  1367  0671  0DFC               	rlf	___lldiv@quotient+3,f
  1368  0672  0BF8               	decfsz	??___lldiv,f
  1369  0673  2E6D               	goto	u395
  1370  0674                     l1111:
  1371  0674  0873               	movf	___lldiv@divisor+3,w
  1372  0675  0277               	subwf	___lldiv@dividend+3,w
  1373  0676  1D03               	skipz
  1374  0677  2E82               	goto	u405
  1375  0678  0872               	movf	___lldiv@divisor+2,w
  1376  0679  0276               	subwf	___lldiv@dividend+2,w
  1377  067A  1D03               	skipz
  1378  067B  2E82               	goto	u405
  1379  067C  0871               	movf	___lldiv@divisor+1,w
  1380  067D  0275               	subwf	___lldiv@dividend+1,w
  1381  067E  1D03               	skipz
  1382  067F  2E82               	goto	u405
  1383  0680  0870               	movf	___lldiv@divisor,w
  1384  0681  0274               	subwf	___lldiv@dividend,w
  1385  0682                     u405:
  1386  0682  1C03               	skipc
  1387  0683  2E85               	goto	u401
  1388  0684  2E86               	goto	u400
  1389  0685                     u401:
  1390  0685  2E95               	goto	l1117
  1391  0686                     u400:
  1392  0686                     l1113:
  1393  0686  0870               	movf	___lldiv@divisor,w
  1394  0687  02F4               	subwf	___lldiv@dividend,f
  1395  0688  0871               	movf	___lldiv@divisor+1,w
  1396  0689  1C03               	skipc
  1397  068A  0F71               	incfsz	___lldiv@divisor+1,w
  1398  068B  02F5               	subwf	___lldiv@dividend+1,f
  1399  068C  0872               	movf	___lldiv@divisor+2,w
  1400  068D  1C03               	skipc
  1401  068E  0F72               	incfsz	___lldiv@divisor+2,w
  1402  068F  02F6               	subwf	___lldiv@dividend+2,f
  1403  0690  0873               	movf	___lldiv@divisor+3,w
  1404  0691  1C03               	skipc
  1405  0692  0F73               	incfsz	___lldiv@divisor+3,w
  1406  0693  02F7               	subwf	___lldiv@dividend+3,f
  1407  0694                     l1115:
  1408  0694  1479               	bsf	___lldiv@quotient,0
  1409  0695                     l1117:
  1410  0695  3001               	movlw	1
  1411  0696                     u415:
  1412  0696  1003               	clrc
  1413  0697  0CF3               	rrf	___lldiv@divisor+3,f
  1414  0698  0CF2               	rrf	___lldiv@divisor+2,f
  1415  0699  0CF1               	rrf	___lldiv@divisor+1,f
  1416  069A  0CF0               	rrf	___lldiv@divisor,f
  1417  069B  3EFF               	addlw	-1
  1418  069C  1D03               	skipz
  1419  069D  2E96               	goto	u415
  1420  069E                     l1119:
  1421  069E  3001               	movlw	1
  1422  069F  02FD               	subwf	___lldiv@counter,f
  1423  06A0  1D03               	btfss	3,2
  1424  06A1  2EA3               	goto	u421
  1425  06A2  2EA4               	goto	u420
  1426  06A3                     u421:
  1427  06A3  2E6B               	goto	l1109
  1428  06A4                     u420:
  1429  06A4                     l1121:
  1430  06A4  087C               	movf	___lldiv@quotient+3,w
  1431  06A5  00F3               	movwf	?___lldiv+3
  1432  06A6  087B               	movf	___lldiv@quotient+2,w
  1433  06A7  00F2               	movwf	?___lldiv+2
  1434  06A8  087A               	movf	___lldiv@quotient+1,w
  1435  06A9  00F1               	movwf	?___lldiv+1
  1436  06AA  0879               	movf	___lldiv@quotient,w
  1437  06AB  00F0               	movwf	?___lldiv
  1438  06AC                     l297:
  1439  06AC  0008               	return
  1440  06AD                     __end_of___lldiv:
  1441                           
  1442                           	psect	text4
  1443  05EC                     __ptext4:	
  1444 ;; *************** function ___awmod *****************
  1445 ;; Defined at:
  1446 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  1447 ;; Parameters:    Size  Location     Type
  1448 ;;  divisor         2    9[COMMON] int 
  1449 ;;  dividend        2   11[COMMON] int 
  1450 ;; Auto vars:     Size  Location     Type
  1451 ;;  sign            1    1[BANK0 ] unsigned char 
  1452 ;;  counter         1    0[BANK0 ] unsigned char 
  1453 ;; Return value:  Size  Location     Type
  1454 ;;                  2    9[COMMON] int 
  1455 ;; Registers used:
  1456 ;;		wreg, status,2, status,0
  1457 ;; Tracked objects:
  1458 ;;		On entry : 0/0
  1459 ;;		On exit  : 0/0
  1460 ;;		Unchanged: 0/0
  1461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1462 ;;      Params:         4       0       0       0       0
  1463 ;;      Locals:         0       2       0       0       0
  1464 ;;      Temps:          1       0       0       0       0
  1465 ;;      Totals:         5       2       0       0       0
  1466 ;;Total ram usage:        7 bytes
  1467 ;; Hardware stack levels used: 1
  1468 ;; This function calls:
  1469 ;;		Nothing
  1470 ;; This function is called by:
  1471 ;;		_main
  1472 ;; This function uses a non-reentrant model
  1473 ;;
  1474                           
  1475                           
  1476                           ;psect for function ___awmod
  1477  05EC                     ___awmod:
  1478  05EC                     l1329:	
  1479                           ;incstack = 0
  1480                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1481                           
  1482  05EC  1283               	bcf	3,5	;RP0=0, select bank0
  1483  05ED  1303               	bcf	3,6	;RP1=0, select bank0
  1484  05EE  01A1               	clrf	___awmod@sign
  1485  05EF                     l1331:
  1486  05EF  1FFC               	btfss	___awmod@dividend+1,7
  1487  05F0  2DF2               	goto	u621
  1488  05F1  2DF3               	goto	u620
  1489  05F2                     u621:
  1490  05F2  2DFA               	goto	l1337
  1491  05F3                     u620:
  1492  05F3                     l1333:
  1493  05F3  09FB               	comf	___awmod@dividend,f
  1494  05F4  09FC               	comf	___awmod@dividend+1,f
  1495  05F5  0AFB               	incf	___awmod@dividend,f
  1496  05F6  1903               	skipnz
  1497  05F7  0AFC               	incf	___awmod@dividend+1,f
  1498  05F8                     l1335:
  1499  05F8  01A1               	clrf	___awmod@sign
  1500  05F9  0AA1               	incf	___awmod@sign,f
  1501  05FA                     l1337:
  1502  05FA  1FFA               	btfss	___awmod@divisor+1,7
  1503  05FB  2DFD               	goto	u631
  1504  05FC  2DFE               	goto	u630
  1505  05FD                     u631:
  1506  05FD  2E03               	goto	l1341
  1507  05FE                     u630:
  1508  05FE                     l1339:
  1509  05FE  09F9               	comf	___awmod@divisor,f
  1510  05FF  09FA               	comf	___awmod@divisor+1,f
  1511  0600  0AF9               	incf	___awmod@divisor,f
  1512  0601  1903               	skipnz
  1513  0602  0AFA               	incf	___awmod@divisor+1,f
  1514  0603                     l1341:
  1515  0603  0879               	movf	___awmod@divisor,w
  1516  0604  047A               	iorwf	___awmod@divisor+1,w
  1517  0605  1903               	btfsc	3,2
  1518  0606  2E08               	goto	u641
  1519  0607  2E09               	goto	u640
  1520  0608                     u641:
  1521  0608  2E38               	goto	l1359
  1522  0609                     u640:
  1523  0609                     l1343:
  1524  0609  01A0               	clrf	___awmod@counter
  1525  060A  0AA0               	incf	___awmod@counter,f
  1526  060B  2E17               	goto	l1349
  1527  060C                     l1345:
  1528  060C  3001               	movlw	1
  1529  060D                     u655:
  1530  060D  1003               	clrc
  1531  060E  0DF9               	rlf	___awmod@divisor,f
  1532  060F  0DFA               	rlf	___awmod@divisor+1,f
  1533  0610  3EFF               	addlw	-1
  1534  0611  1D03               	skipz
  1535  0612  2E0D               	goto	u655
  1536  0613                     l1347:
  1537  0613  3001               	movlw	1
  1538  0614  00FD               	movwf	??___awmod
  1539  0615  087D               	movf	??___awmod,w
  1540  0616  07A0               	addwf	___awmod@counter,f
  1541  0617                     l1349:
  1542  0617  1FFA               	btfss	___awmod@divisor+1,7
  1543  0618  2E1A               	goto	u661
  1544  0619  2E1B               	goto	u660
  1545  061A                     u661:
  1546  061A  2E0C               	goto	l1345
  1547  061B                     u660:
  1548  061B                     l1351:
  1549  061B  087A               	movf	___awmod@divisor+1,w
  1550  061C  027C               	subwf	___awmod@dividend+1,w
  1551  061D  1D03               	skipz
  1552  061E  2E21               	goto	u675
  1553  061F  0879               	movf	___awmod@divisor,w
  1554  0620  027B               	subwf	___awmod@dividend,w
  1555  0621                     u675:
  1556  0621  1C03               	skipc
  1557  0622  2E24               	goto	u671
  1558  0623  2E25               	goto	u670
  1559  0624                     u671:
  1560  0624  2E2B               	goto	l1355
  1561  0625                     u670:
  1562  0625                     l1353:
  1563  0625  0879               	movf	___awmod@divisor,w
  1564  0626  02FB               	subwf	___awmod@dividend,f
  1565  0627  087A               	movf	___awmod@divisor+1,w
  1566  0628  1C03               	skipc
  1567  0629  03FC               	decf	___awmod@dividend+1,f
  1568  062A  02FC               	subwf	___awmod@dividend+1,f
  1569  062B                     l1355:
  1570  062B  3001               	movlw	1
  1571  062C                     u685:
  1572  062C  1003               	clrc
  1573  062D  0CFA               	rrf	___awmod@divisor+1,f
  1574  062E  0CF9               	rrf	___awmod@divisor,f
  1575  062F  3EFF               	addlw	-1
  1576  0630  1D03               	skipz
  1577  0631  2E2C               	goto	u685
  1578  0632                     l1357:
  1579  0632  3001               	movlw	1
  1580  0633  02A0               	subwf	___awmod@counter,f
  1581  0634  1D03               	btfss	3,2
  1582  0635  2E37               	goto	u691
  1583  0636  2E38               	goto	u690
  1584  0637                     u691:
  1585  0637  2E1B               	goto	l1351
  1586  0638                     u690:
  1587  0638                     l1359:
  1588  0638  0821               	movf	___awmod@sign,w
  1589  0639  1903               	btfsc	3,2
  1590  063A  2E3C               	goto	u701
  1591  063B  2E3D               	goto	u700
  1592  063C                     u701:
  1593  063C  2E42               	goto	l1363
  1594  063D                     u700:
  1595  063D                     l1361:
  1596  063D  09FB               	comf	___awmod@dividend,f
  1597  063E  09FC               	comf	___awmod@dividend+1,f
  1598  063F  0AFB               	incf	___awmod@dividend,f
  1599  0640  1903               	skipnz
  1600  0641  0AFC               	incf	___awmod@dividend+1,f
  1601  0642                     l1363:
  1602  0642  087C               	movf	___awmod@dividend+1,w
  1603  0643  00FA               	movwf	?___awmod+1
  1604  0644  087B               	movf	___awmod@dividend,w
  1605  0645  00F9               	movwf	?___awmod
  1606  0646                     l427:
  1607  0646  0008               	return
  1608  0647                     __end_of___awmod:
  1609                           
  1610                           	psect	text5
  1611  06AD                     __ptext5:	
  1612 ;; *************** function ___awdiv *****************
  1613 ;; Defined at:
  1614 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  1615 ;; Parameters:    Size  Location     Type
  1616 ;;  divisor         2    0[COMMON] int 
  1617 ;;  dividend        2    2[COMMON] int 
  1618 ;; Auto vars:     Size  Location     Type
  1619 ;;  quotient        2    7[COMMON] int 
  1620 ;;  sign            1    6[COMMON] unsigned char 
  1621 ;;  counter         1    5[COMMON] unsigned char 
  1622 ;; Return value:  Size  Location     Type
  1623 ;;                  2    0[COMMON] int 
  1624 ;; Registers used:
  1625 ;;		wreg, status,2, status,0
  1626 ;; Tracked objects:
  1627 ;;		On entry : 0/0
  1628 ;;		On exit  : 0/0
  1629 ;;		Unchanged: 0/0
  1630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1631 ;;      Params:         4       0       0       0       0
  1632 ;;      Locals:         4       0       0       0       0
  1633 ;;      Temps:          1       0       0       0       0
  1634 ;;      Totals:         9       0       0       0       0
  1635 ;;Total ram usage:        9 bytes
  1636 ;; Hardware stack levels used: 1
  1637 ;; This function calls:
  1638 ;;		Nothing
  1639 ;; This function is called by:
  1640 ;;		_main
  1641 ;; This function uses a non-reentrant model
  1642 ;;
  1643                           
  1644                           
  1645                           ;psect for function ___awdiv
  1646  06AD                     ___awdiv:
  1647  06AD                     l1285:	
  1648                           ;incstack = 0
  1649                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1650                           
  1651  06AD  01F6               	clrf	___awdiv@sign
  1652  06AE                     l1287:
  1653  06AE  1FF1               	btfss	___awdiv@divisor+1,7
  1654  06AF  2EB1               	goto	u521
  1655  06B0  2EB2               	goto	u520
  1656  06B1                     u521:
  1657  06B1  2EB9               	goto	l1293
  1658  06B2                     u520:
  1659  06B2                     l1289:
  1660  06B2  09F0               	comf	___awdiv@divisor,f
  1661  06B3  09F1               	comf	___awdiv@divisor+1,f
  1662  06B4  0AF0               	incf	___awdiv@divisor,f
  1663  06B5  1903               	skipnz
  1664  06B6  0AF1               	incf	___awdiv@divisor+1,f
  1665  06B7                     l1291:
  1666  06B7  01F6               	clrf	___awdiv@sign
  1667  06B8  0AF6               	incf	___awdiv@sign,f
  1668  06B9                     l1293:
  1669  06B9  1FF3               	btfss	___awdiv@dividend+1,7
  1670  06BA  2EBC               	goto	u531
  1671  06BB  2EBD               	goto	u530
  1672  06BC                     u531:
  1673  06BC  2EC6               	goto	l1299
  1674  06BD                     u530:
  1675  06BD                     l1295:
  1676  06BD  09F2               	comf	___awdiv@dividend,f
  1677  06BE  09F3               	comf	___awdiv@dividend+1,f
  1678  06BF  0AF2               	incf	___awdiv@dividend,f
  1679  06C0  1903               	skipnz
  1680  06C1  0AF3               	incf	___awdiv@dividend+1,f
  1681  06C2                     l1297:
  1682  06C2  3001               	movlw	1
  1683  06C3  00F4               	movwf	??___awdiv
  1684  06C4  0874               	movf	??___awdiv,w
  1685  06C5  06F6               	xorwf	___awdiv@sign,f
  1686  06C6                     l1299:
  1687  06C6  01F7               	clrf	___awdiv@quotient
  1688  06C7  01F8               	clrf	___awdiv@quotient+1
  1689  06C8                     l1301:
  1690  06C8  0870               	movf	___awdiv@divisor,w
  1691  06C9  0471               	iorwf	___awdiv@divisor+1,w
  1692  06CA  1903               	btfsc	3,2
  1693  06CB  2ECD               	goto	u541
  1694  06CC  2ECE               	goto	u540
  1695  06CD                     u541:
  1696  06CD  2F05               	goto	l1321
  1697  06CE                     u540:
  1698  06CE                     l1303:
  1699  06CE  01F5               	clrf	___awdiv@counter
  1700  06CF  0AF5               	incf	___awdiv@counter,f
  1701  06D0  2EDC               	goto	l1309
  1702  06D1                     l1305:
  1703  06D1  3001               	movlw	1
  1704  06D2                     u555:
  1705  06D2  1003               	clrc
  1706  06D3  0DF0               	rlf	___awdiv@divisor,f
  1707  06D4  0DF1               	rlf	___awdiv@divisor+1,f
  1708  06D5  3EFF               	addlw	-1
  1709  06D6  1D03               	skipz
  1710  06D7  2ED2               	goto	u555
  1711  06D8                     l1307:
  1712  06D8  3001               	movlw	1
  1713  06D9  00F4               	movwf	??___awdiv
  1714  06DA  0874               	movf	??___awdiv,w
  1715  06DB  07F5               	addwf	___awdiv@counter,f
  1716  06DC                     l1309:
  1717  06DC  1FF1               	btfss	___awdiv@divisor+1,7
  1718  06DD  2EDF               	goto	u561
  1719  06DE  2EE0               	goto	u560
  1720  06DF                     u561:
  1721  06DF  2ED1               	goto	l1305
  1722  06E0                     u560:
  1723  06E0                     l1311:
  1724  06E0  3001               	movlw	1
  1725  06E1                     u575:
  1726  06E1  1003               	clrc
  1727  06E2  0DF7               	rlf	___awdiv@quotient,f
  1728  06E3  0DF8               	rlf	___awdiv@quotient+1,f
  1729  06E4  3EFF               	addlw	-1
  1730  06E5  1D03               	skipz
  1731  06E6  2EE1               	goto	u575
  1732  06E7  0871               	movf	___awdiv@divisor+1,w
  1733  06E8  0273               	subwf	___awdiv@dividend+1,w
  1734  06E9  1D03               	skipz
  1735  06EA  2EED               	goto	u585
  1736  06EB  0870               	movf	___awdiv@divisor,w
  1737  06EC  0272               	subwf	___awdiv@dividend,w
  1738  06ED                     u585:
  1739  06ED  1C03               	skipc
  1740  06EE  2EF0               	goto	u581
  1741  06EF  2EF1               	goto	u580
  1742  06F0                     u581:
  1743  06F0  2EF8               	goto	l1317
  1744  06F1                     u580:
  1745  06F1                     l1313:
  1746  06F1  0870               	movf	___awdiv@divisor,w
  1747  06F2  02F2               	subwf	___awdiv@dividend,f
  1748  06F3  0871               	movf	___awdiv@divisor+1,w
  1749  06F4  1C03               	skipc
  1750  06F5  03F3               	decf	___awdiv@dividend+1,f
  1751  06F6  02F3               	subwf	___awdiv@dividend+1,f
  1752  06F7                     l1315:
  1753  06F7  1477               	bsf	___awdiv@quotient,0
  1754  06F8                     l1317:
  1755  06F8  3001               	movlw	1
  1756  06F9                     u595:
  1757  06F9  1003               	clrc
  1758  06FA  0CF1               	rrf	___awdiv@divisor+1,f
  1759  06FB  0CF0               	rrf	___awdiv@divisor,f
  1760  06FC  3EFF               	addlw	-1
  1761  06FD  1D03               	skipz
  1762  06FE  2EF9               	goto	u595
  1763  06FF                     l1319:
  1764  06FF  3001               	movlw	1
  1765  0700  02F5               	subwf	___awdiv@counter,f
  1766  0701  1D03               	btfss	3,2
  1767  0702  2F04               	goto	u601
  1768  0703  2F05               	goto	u600
  1769  0704                     u601:
  1770  0704  2EE0               	goto	l1311
  1771  0705                     u600:
  1772  0705                     l1321:
  1773  0705  0876               	movf	___awdiv@sign,w
  1774  0706  1903               	btfsc	3,2
  1775  0707  2F09               	goto	u611
  1776  0708  2F0A               	goto	u610
  1777  0709                     u611:
  1778  0709  2F0F               	goto	l1325
  1779  070A                     u610:
  1780  070A                     l1323:
  1781  070A  09F7               	comf	___awdiv@quotient,f
  1782  070B  09F8               	comf	___awdiv@quotient+1,f
  1783  070C  0AF7               	incf	___awdiv@quotient,f
  1784  070D  1903               	skipnz
  1785  070E  0AF8               	incf	___awdiv@quotient+1,f
  1786  070F                     l1325:
  1787  070F  0878               	movf	___awdiv@quotient+1,w
  1788  0710  00F1               	movwf	?___awdiv+1
  1789  0711  0877               	movf	___awdiv@quotient,w
  1790  0712  00F0               	movwf	?___awdiv
  1791  0713                     l414:
  1792  0713  0008               	return
  1793  0714                     __end_of___awdiv:
  1794                           
  1795                           	psect	text6
  1796  0488                     __ptext6:	
  1797 ;; *************** function _Lcd_Write_String *****************
  1798 ;; Defined at:
  1799 ;;		line 77 in file "LCD.c"
  1800 ;; Parameters:    Size  Location     Type
  1801 ;;  a               1    wreg     PTR unsigned char 
  1802 ;;		 -> STR_5(4), STR_4(4), STR_2(5), STR_1(17), 
  1803 ;; Auto vars:     Size  Location     Type
  1804 ;;  a               1    7[COMMON] PTR unsigned char 
  1805 ;;		 -> STR_5(4), STR_4(4), STR_2(5), STR_1(17), 
  1806 ;;  i               2    5[COMMON] int 
  1807 ;; Return value:  Size  Location     Type
  1808 ;;                  1    wreg      void 
  1809 ;; Registers used:
  1810 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1811 ;; Tracked objects:
  1812 ;;		On entry : 0/0
  1813 ;;		On exit  : 0/0
  1814 ;;		Unchanged: 0/0
  1815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1816 ;;      Params:         0       0       0       0       0
  1817 ;;      Locals:         3       0       0       0       0
  1818 ;;      Temps:          0       0       0       0       0
  1819 ;;      Totals:         3       0       0       0       0
  1820 ;;Total ram usage:        3 bytes
  1821 ;; Hardware stack levels used: 1
  1822 ;; Hardware stack levels required when called: 2
  1823 ;; This function calls:
  1824 ;;		_Lcd_Write_Char
  1825 ;; This function is called by:
  1826 ;;		_main
  1827 ;; This function uses a non-reentrant model
  1828 ;;
  1829                           
  1830                           
  1831                           ;psect for function _Lcd_Write_String
  1832  0488                     _Lcd_Write_String:
  1833                           
  1834                           ;incstack = 0
  1835                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1836                           ;Lcd_Write_String@a stored from wreg
  1837  0488  00F7               	movwf	Lcd_Write_String@a
  1838  0489                     l1249:
  1839                           
  1840                           ;LCD.c: 78:     int i;;LCD.c: 79:     for (i = 0; a[i] != '\0'; i++)
  1841  0489  01F5               	clrf	Lcd_Write_String@i
  1842  048A  01F6               	clrf	Lcd_Write_String@i+1
  1843  048B  2C9F               	goto	l1255
  1844  048C                     l1251:
  1845                           
  1846                           ;LCD.c: 80:         Lcd_Write_Char(a[i]);
  1847  048C  0875               	movf	Lcd_Write_String@i,w
  1848  048D  0777               	addwf	Lcd_Write_String@a,w
  1849  048E  0084               	movwf	4
  1850  048F  120A  118A  2003  120A  118A  	fcall	stringdir
  1851  0494  120A  118A  246A  120A  118A  	fcall	_Lcd_Write_Char
  1852  0499                     l1253:
  1853  0499  3001               	movlw	1
  1854  049A  07F5               	addwf	Lcd_Write_String@i,f
  1855  049B  1803               	skipnc
  1856  049C  0AF6               	incf	Lcd_Write_String@i+1,f
  1857  049D  3000               	movlw	0
  1858  049E  07F6               	addwf	Lcd_Write_String@i+1,f
  1859  049F                     l1255:
  1860  049F  0875               	movf	Lcd_Write_String@i,w
  1861  04A0  0777               	addwf	Lcd_Write_String@a,w
  1862  04A1  0084               	movwf	4
  1863  04A2  120A  118A  2003  120A  118A  	fcall	stringdir
  1864  04A7  3A00               	xorlw	0
  1865  04A8  1D03               	skipz
  1866  04A9  2CAB               	goto	u501
  1867  04AA  2CAC               	goto	u500
  1868  04AB                     u501:
  1869  04AB  2C8C               	goto	l1251
  1870  04AC                     u500:
  1871  04AC                     l169:
  1872  04AC  0008               	return
  1873  04AD                     __end_of_Lcd_Write_String:
  1874                           
  1875                           	psect	text7
  1876  046A                     __ptext7:	
  1877 ;; *************** function _Lcd_Write_Char *****************
  1878 ;; Defined at:
  1879 ;;		line 65 in file "LCD.c"
  1880 ;; Parameters:    Size  Location     Type
  1881 ;;  a               1    wreg     unsigned char 
  1882 ;; Auto vars:     Size  Location     Type
  1883 ;;  a               1    2[COMMON] unsigned char 
  1884 ;;  y               1    4[COMMON] unsigned char 
  1885 ;;  temp            1    3[COMMON] unsigned char 
  1886 ;; Return value:  Size  Location     Type
  1887 ;;                  1    wreg      void 
  1888 ;; Registers used:
  1889 ;;		wreg, status,2, status,0, pclath, cstack
  1890 ;; Tracked objects:
  1891 ;;		On entry : 0/0
  1892 ;;		On exit  : 0/0
  1893 ;;		Unchanged: 0/0
  1894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1895 ;;      Params:         0       0       0       0       0
  1896 ;;      Locals:         3       0       0       0       0
  1897 ;;      Temps:          1       0       0       0       0
  1898 ;;      Totals:         4       0       0       0       0
  1899 ;;Total ram usage:        4 bytes
  1900 ;; Hardware stack levels used: 1
  1901 ;; Hardware stack levels required when called: 1
  1902 ;; This function calls:
  1903 ;;		_Lcd_Port
  1904 ;; This function is called by:
  1905 ;;		_main
  1906 ;;		_Lcd_Write_String
  1907 ;; This function uses a non-reentrant model
  1908 ;;
  1909                           
  1910                           
  1911                           ;psect for function _Lcd_Write_Char
  1912  046A                     _Lcd_Write_Char:
  1913                           
  1914                           ;incstack = 0
  1915                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1916                           ;Lcd_Write_Char@a stored from wreg
  1917  046A  00F2               	movwf	Lcd_Write_Char@a
  1918  046B                     l1125:
  1919                           
  1920                           ;LCD.c: 66:     char temp, y;;LCD.c: 67:     temp = a;
  1921  046B  0872               	movf	Lcd_Write_Char@a,w
  1922  046C  00F1               	movwf	??_Lcd_Write_Char
  1923  046D  0871               	movf	??_Lcd_Write_Char,w
  1924  046E  00F3               	movwf	Lcd_Write_Char@temp
  1925                           
  1926                           ;LCD.c: 68:     y = temp;
  1927  046F  0873               	movf	Lcd_Write_Char@temp,w
  1928  0470  00F1               	movwf	??_Lcd_Write_Char
  1929  0471  0871               	movf	??_Lcd_Write_Char,w
  1930  0472  00F4               	movwf	Lcd_Write_Char@y
  1931  0473                     l1127:
  1932                           
  1933                           ;LCD.c: 69:     RE0 = 1;
  1934  0473  1283               	bcf	3,5	;RP0=0, select bank0
  1935  0474  1303               	bcf	3,6	;RP1=0, select bank0
  1936  0475  1409               	bsf	9,0	;volatile
  1937  0476                     l1129:
  1938                           
  1939                           ;LCD.c: 70:     Lcd_Port(y);
  1940  0476  0874               	movf	Lcd_Write_Char@y,w
  1941  0477  120A  118A  2414  120A  118A  	fcall	_Lcd_Port
  1942  047C                     l1131:
  1943                           
  1944                           ;LCD.c: 71:     RE1 = 1;
  1945  047C  1283               	bcf	3,5	;RP0=0, select bank0
  1946  047D  1303               	bcf	3,6	;RP1=0, select bank0
  1947  047E  1489               	bsf	9,1	;volatile
  1948  047F                     l1133:
  1949                           
  1950                           ;LCD.c: 72:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  1951  047F  301A               	movlw	26
  1952  0480  00F1               	movwf	??_Lcd_Write_Char
  1953  0481                     u747:
  1954  0481  0BF1               	decfsz	??_Lcd_Write_Char,f
  1955  0482  2C81               	goto	u747
  1956  0483  0000               	nop
  1957  0484                     l1135:
  1958                           
  1959                           ;LCD.c: 73:     RE1 = 0;
  1960  0484  1283               	bcf	3,5	;RP0=0, select bank0
  1961  0485  1303               	bcf	3,6	;RP1=0, select bank0
  1962  0486  1089               	bcf	9,1	;volatile
  1963  0487                     l163:
  1964  0487  0008               	return
  1965  0488                     __end_of_Lcd_Write_Char:
  1966                           
  1967                           	psect	text8
  1968  059A                     __ptext8:	
  1969 ;; *************** function _Lcd_Set_Cursor *****************
  1970 ;; Defined at:
  1971 ;;		line 30 in file "LCD.c"
  1972 ;; Parameters:    Size  Location     Type
  1973 ;;  a               1    wreg     unsigned char 
  1974 ;;  b               1    4[COMMON] unsigned char 
  1975 ;; Auto vars:     Size  Location     Type
  1976 ;;  a               1    7[COMMON] unsigned char 
  1977 ;;  temp            1   10[COMMON] unsigned char 
  1978 ;;  y               1    9[COMMON] unsigned char 
  1979 ;;  z               1    8[COMMON] unsigned char 
  1980 ;; Return value:  Size  Location     Type
  1981 ;;                  1    wreg      void 
  1982 ;; Registers used:
  1983 ;;		wreg, status,2, status,0, pclath, cstack
  1984 ;; Tracked objects:
  1985 ;;		On entry : 0/0
  1986 ;;		On exit  : 0/0
  1987 ;;		Unchanged: 0/0
  1988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1989 ;;      Params:         1       0       0       0       0
  1990 ;;      Locals:         4       0       0       0       0
  1991 ;;      Temps:          2       0       0       0       0
  1992 ;;      Totals:         7       0       0       0       0
  1993 ;;Total ram usage:        7 bytes
  1994 ;; Hardware stack levels used: 1
  1995 ;; Hardware stack levels required when called: 2
  1996 ;; This function calls:
  1997 ;;		_Lcd_Cmd
  1998 ;; This function is called by:
  1999 ;;		_main
  2000 ;; This function uses a non-reentrant model
  2001 ;;
  2002                           
  2003                           
  2004                           ;psect for function _Lcd_Set_Cursor
  2005  059A                     _Lcd_Set_Cursor:
  2006                           
  2007                           ;incstack = 0
  2008                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2009                           ;Lcd_Set_Cursor@a stored from wreg
  2010  059A  00F7               	movwf	Lcd_Set_Cursor@a
  2011  059B                     l1229:
  2012                           
  2013                           ;LCD.c: 31:     char temp, z, y;;LCD.c: 32:     if (a == 1) {
  2014  059B  0377               	decf	Lcd_Set_Cursor@a,w
  2015  059C  1D03               	btfss	3,2
  2016  059D  2D9F               	goto	u461
  2017  059E  2DA0               	goto	u460
  2018  059F                     u461:
  2019  059F  2DC3               	goto	l1239
  2020  05A0                     u460:
  2021  05A0                     l1231:
  2022                           
  2023                           ;LCD.c: 33:         temp = 0x80 + b - 1;
  2024  05A0  0874               	movf	Lcd_Set_Cursor@b,w
  2025  05A1  3E7F               	addlw	127
  2026  05A2  00F5               	movwf	??_Lcd_Set_Cursor
  2027  05A3  0875               	movf	??_Lcd_Set_Cursor,w
  2028  05A4  00FA               	movwf	Lcd_Set_Cursor@temp
  2029                           
  2030                           ;LCD.c: 34:         z = temp >> 4;
  2031  05A5  087A               	movf	Lcd_Set_Cursor@temp,w
  2032  05A6  00F5               	movwf	??_Lcd_Set_Cursor
  2033  05A7  3004               	movlw	4
  2034  05A8                     u475:
  2035  05A8  1003               	clrc
  2036  05A9  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2037  05AA  3EFF               	addlw	-1
  2038  05AB  1D03               	skipz
  2039  05AC  2DA8               	goto	u475
  2040  05AD  0875               	movf	??_Lcd_Set_Cursor,w
  2041  05AE  00F6               	movwf	??_Lcd_Set_Cursor+1
  2042  05AF  0876               	movf	??_Lcd_Set_Cursor+1,w
  2043  05B0  00F8               	movwf	Lcd_Set_Cursor@z
  2044  05B1                     l1233:
  2045                           
  2046                           ;LCD.c: 35:         y = temp & 0x0F;
  2047  05B1  087A               	movf	Lcd_Set_Cursor@temp,w
  2048  05B2  390F               	andlw	15
  2049  05B3  00F5               	movwf	??_Lcd_Set_Cursor
  2050  05B4  0875               	movf	??_Lcd_Set_Cursor,w
  2051  05B5  00F9               	movwf	Lcd_Set_Cursor@y
  2052  05B6                     l1235:
  2053                           
  2054                           ;LCD.c: 36:         Lcd_Cmd(z);
  2055  05B6  0878               	movf	Lcd_Set_Cursor@z,w
  2056  05B7  120A  118A  2450  120A  118A  	fcall	_Lcd_Cmd
  2057  05BC                     l1237:
  2058                           
  2059                           ;LCD.c: 37:         Lcd_Cmd(y);
  2060  05BC  0879               	movf	Lcd_Set_Cursor@y,w
  2061  05BD  120A  118A  2450  120A  118A  	fcall	_Lcd_Cmd
  2062                           
  2063                           ;LCD.c: 38:     } else if (a == 2) {
  2064  05C2  2DEB               	goto	l157
  2065  05C3                     l1239:
  2066  05C3  3002               	movlw	2
  2067  05C4  0677               	xorwf	Lcd_Set_Cursor@a,w
  2068  05C5  1D03               	btfss	3,2
  2069  05C6  2DC8               	goto	u481
  2070  05C7  2DC9               	goto	u480
  2071  05C8                     u481:
  2072  05C8  2DEB               	goto	l157
  2073  05C9                     u480:
  2074  05C9                     l1241:
  2075                           
  2076                           ;LCD.c: 39:         temp = 0xC0 + b - 1;
  2077  05C9  0874               	movf	Lcd_Set_Cursor@b,w
  2078  05CA  3EBF               	addlw	191
  2079  05CB  00F5               	movwf	??_Lcd_Set_Cursor
  2080  05CC  0875               	movf	??_Lcd_Set_Cursor,w
  2081  05CD  00FA               	movwf	Lcd_Set_Cursor@temp
  2082                           
  2083                           ;LCD.c: 40:         z = temp >> 4;
  2084  05CE  087A               	movf	Lcd_Set_Cursor@temp,w
  2085  05CF  00F5               	movwf	??_Lcd_Set_Cursor
  2086  05D0  3004               	movlw	4
  2087  05D1                     u495:
  2088  05D1  1003               	clrc
  2089  05D2  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2090  05D3  3EFF               	addlw	-1
  2091  05D4  1D03               	skipz
  2092  05D5  2DD1               	goto	u495
  2093  05D6  0875               	movf	??_Lcd_Set_Cursor,w
  2094  05D7  00F6               	movwf	??_Lcd_Set_Cursor+1
  2095  05D8  0876               	movf	??_Lcd_Set_Cursor+1,w
  2096  05D9  00F8               	movwf	Lcd_Set_Cursor@z
  2097  05DA                     l1243:
  2098                           
  2099                           ;LCD.c: 41:         y = temp & 0xF0;
  2100  05DA  087A               	movf	Lcd_Set_Cursor@temp,w
  2101  05DB  39F0               	andlw	240
  2102  05DC  00F5               	movwf	??_Lcd_Set_Cursor
  2103  05DD  0875               	movf	??_Lcd_Set_Cursor,w
  2104  05DE  00F9               	movwf	Lcd_Set_Cursor@y
  2105  05DF                     l1245:
  2106                           
  2107                           ;LCD.c: 42:         Lcd_Cmd(z);
  2108  05DF  0878               	movf	Lcd_Set_Cursor@z,w
  2109  05E0  120A  118A  2450  120A  118A  	fcall	_Lcd_Cmd
  2110  05E5                     l1247:
  2111                           
  2112                           ;LCD.c: 43:         Lcd_Cmd(y);
  2113  05E5  0879               	movf	Lcd_Set_Cursor@y,w
  2114  05E6  120A  118A  2450  120A  118A  	fcall	_Lcd_Cmd
  2115  05EB                     l157:
  2116  05EB  0008               	return
  2117  05EC                     __end_of_Lcd_Set_Cursor:
  2118                           
  2119                           	psect	text9
  2120  0553                     __ptext9:	
  2121 ;; *************** function _Lcd_Init *****************
  2122 ;; Defined at:
  2123 ;;		line 47 in file "LCD.c"
  2124 ;; Parameters:    Size  Location     Type
  2125 ;;		None
  2126 ;; Auto vars:     Size  Location     Type
  2127 ;;		None
  2128 ;; Return value:  Size  Location     Type
  2129 ;;                  1    wreg      void 
  2130 ;; Registers used:
  2131 ;;		wreg, status,2, status,0, pclath, cstack
  2132 ;; Tracked objects:
  2133 ;;		On entry : 0/0
  2134 ;;		On exit  : 0/0
  2135 ;;		Unchanged: 0/0
  2136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2137 ;;      Params:         0       0       0       0       0
  2138 ;;      Locals:         0       0       0       0       0
  2139 ;;      Temps:          2       0       0       0       0
  2140 ;;      Totals:         2       0       0       0       0
  2141 ;;Total ram usage:        2 bytes
  2142 ;; Hardware stack levels used: 1
  2143 ;; Hardware stack levels required when called: 2
  2144 ;; This function calls:
  2145 ;;		_Lcd_Cmd
  2146 ;;		_Lcd_Port
  2147 ;; This function is called by:
  2148 ;;		_main
  2149 ;; This function uses a non-reentrant model
  2150 ;;
  2151                           
  2152                           
  2153                           ;psect for function _Lcd_Init
  2154  0553                     _Lcd_Init:
  2155  0553                     l1217:	
  2156                           ;incstack = 0
  2157                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2158                           
  2159                           
  2160                           ;LCD.c: 48:     Lcd_Port(0x00);
  2161  0553  3000               	movlw	0
  2162  0554  120A  118A  2414  120A  118A  	fcall	_Lcd_Port
  2163  0559                     l1219:
  2164                           
  2165                           ;LCD.c: 49:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2166  0559  3034               	movlw	52
  2167  055A  00F5               	movwf	??_Lcd_Init+1
  2168  055B  30F1               	movlw	241
  2169  055C  00F4               	movwf	??_Lcd_Init
  2170  055D                     u757:
  2171  055D  0BF4               	decfsz	??_Lcd_Init,f
  2172  055E  2D5D               	goto	u757
  2173  055F  0BF5               	decfsz	??_Lcd_Init+1,f
  2174  0560  2D5D               	goto	u757
  2175  0561  2D62               	nop2
  2176  0562                     l1221:
  2177                           
  2178                           ;LCD.c: 50:     Lcd_Cmd(0x30);
  2179  0562  3030               	movlw	48
  2180  0563  120A  118A  2450  120A  118A  	fcall	_Lcd_Cmd
  2181                           
  2182                           ;LCD.c: 51:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2183  0568  300D               	movlw	13
  2184  0569  00F5               	movwf	??_Lcd_Init+1
  2185  056A  30FB               	movlw	251
  2186  056B  00F4               	movwf	??_Lcd_Init
  2187  056C                     u767:
  2188  056C  0BF4               	decfsz	??_Lcd_Init,f
  2189  056D  2D6C               	goto	u767
  2190  056E  0BF5               	decfsz	??_Lcd_Init+1,f
  2191  056F  2D6C               	goto	u767
  2192  0570  2D71               	nop2
  2193  0571                     l1223:
  2194                           
  2195                           ;LCD.c: 52:     Lcd_Cmd(0x30);
  2196  0571  3030               	movlw	48
  2197  0572  120A  118A  2450  120A  118A  	fcall	_Lcd_Cmd
  2198  0577                     l1225:
  2199                           
  2200                           ;LCD.c: 53:     _delay((unsigned long)((200)*(8000000/4000000.0)));
  2201  0577  3085               	movlw	133
  2202  0578  00F4               	movwf	??_Lcd_Init
  2203  0579                     u777:
  2204  0579  0BF4               	decfsz	??_Lcd_Init,f
  2205  057A  2D79               	goto	u777
  2206                           
  2207                           ;LCD.c: 54:     Lcd_Cmd(0x30);
  2208  057B  3030               	movlw	48
  2209  057C  120A  118A  2450  120A  118A  	fcall	_Lcd_Cmd
  2210                           
  2211                           ;LCD.c: 56:     Lcd_Cmd(0x3C);
  2212  0581  303C               	movlw	60
  2213  0582  120A  118A  2450  120A  118A  	fcall	_Lcd_Cmd
  2214                           
  2215                           ;LCD.c: 58:     Lcd_Cmd(0x08);
  2216  0587  3008               	movlw	8
  2217  0588  120A  118A  2450  120A  118A  	fcall	_Lcd_Cmd
  2218                           
  2219                           ;LCD.c: 60:     Lcd_Cmd(0x01);
  2220  058D  3001               	movlw	1
  2221  058E  120A  118A  2450  120A  118A  	fcall	_Lcd_Cmd
  2222                           
  2223                           ;LCD.c: 62:     Lcd_Cmd(0x06);
  2224  0593  3006               	movlw	6
  2225  0594  120A  118A  2450  120A  118A  	fcall	_Lcd_Cmd
  2226  0599                     l160:
  2227  0599  0008               	return
  2228  059A                     __end_of_Lcd_Init:
  2229                           
  2230                           	psect	text10
  2231  0443                     __ptext10:	
  2232 ;; *************** function _Lcd_Clear *****************
  2233 ;; Defined at:
  2234 ;;		line 25 in file "LCD.c"
  2235 ;; Parameters:    Size  Location     Type
  2236 ;;		None
  2237 ;; Auto vars:     Size  Location     Type
  2238 ;;		None
  2239 ;; Return value:  Size  Location     Type
  2240 ;;                  1    wreg      void 
  2241 ;; Registers used:
  2242 ;;		wreg, status,2, status,0, pclath, cstack
  2243 ;; Tracked objects:
  2244 ;;		On entry : 0/0
  2245 ;;		On exit  : 0/0
  2246 ;;		Unchanged: 0/0
  2247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2248 ;;      Params:         0       0       0       0       0
  2249 ;;      Locals:         0       0       0       0       0
  2250 ;;      Temps:          0       0       0       0       0
  2251 ;;      Totals:         0       0       0       0       0
  2252 ;;Total ram usage:        0 bytes
  2253 ;; Hardware stack levels used: 1
  2254 ;; Hardware stack levels required when called: 2
  2255 ;; This function calls:
  2256 ;;		_Lcd_Cmd
  2257 ;; This function is called by:
  2258 ;;		_main
  2259 ;; This function uses a non-reentrant model
  2260 ;;
  2261                           
  2262                           
  2263                           ;psect for function _Lcd_Clear
  2264  0443                     _Lcd_Clear:
  2265  0443                     l1227:	
  2266                           ;incstack = 0
  2267                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2268                           
  2269                           
  2270                           ;LCD.c: 26:     Lcd_Cmd(0);
  2271  0443  3000               	movlw	0
  2272  0444  120A  118A  2450  120A  118A  	fcall	_Lcd_Cmd
  2273                           
  2274                           ;LCD.c: 27:     Lcd_Cmd(1);
  2275  0449  3001               	movlw	1
  2276  044A  120A  118A  2450  120A  118A  	fcall	_Lcd_Cmd
  2277  044F                     l151:
  2278  044F  0008               	return
  2279  0450                     __end_of_Lcd_Clear:
  2280                           
  2281                           	psect	text11
  2282  0450                     __ptext11:	
  2283 ;; *************** function _Lcd_Cmd *****************
  2284 ;; Defined at:
  2285 ;;		line 17 in file "LCD.c"
  2286 ;; Parameters:    Size  Location     Type
  2287 ;;  a               1    wreg     unsigned char 
  2288 ;; Auto vars:     Size  Location     Type
  2289 ;;  a               1    3[COMMON] unsigned char 
  2290 ;; Return value:  Size  Location     Type
  2291 ;;                  1    wreg      void 
  2292 ;; Registers used:
  2293 ;;		wreg, status,2, status,0, pclath, cstack
  2294 ;; Tracked objects:
  2295 ;;		On entry : 0/0
  2296 ;;		On exit  : 0/0
  2297 ;;		Unchanged: 0/0
  2298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2299 ;;      Params:         0       0       0       0       0
  2300 ;;      Locals:         1       0       0       0       0
  2301 ;;      Temps:          2       0       0       0       0
  2302 ;;      Totals:         3       0       0       0       0
  2303 ;;Total ram usage:        3 bytes
  2304 ;; Hardware stack levels used: 1
  2305 ;; Hardware stack levels required when called: 1
  2306 ;; This function calls:
  2307 ;;		_Lcd_Port
  2308 ;; This function is called by:
  2309 ;;		_Lcd_Clear
  2310 ;;		_Lcd_Set_Cursor
  2311 ;;		_Lcd_Init
  2312 ;;		_Lcd_Shift_Right
  2313 ;;		_Lcd_Shift_Left
  2314 ;; This function uses a non-reentrant model
  2315 ;;
  2316                           
  2317                           
  2318                           ;psect for function _Lcd_Cmd
  2319  0450                     _Lcd_Cmd:
  2320                           
  2321                           ;incstack = 0
  2322                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2323                           ;Lcd_Cmd@a stored from wreg
  2324  0450  00F3               	movwf	Lcd_Cmd@a
  2325  0451                     l1153:
  2326                           
  2327                           ;LCD.c: 18:     RE0 = 0;
  2328  0451  1283               	bcf	3,5	;RP0=0, select bank0
  2329  0452  1303               	bcf	3,6	;RP1=0, select bank0
  2330  0453  1009               	bcf	9,0	;volatile
  2331  0454                     l1155:
  2332                           
  2333                           ;LCD.c: 19:     Lcd_Port(a);
  2334  0454  0873               	movf	Lcd_Cmd@a,w
  2335  0455  120A  118A  2414  120A  118A  	fcall	_Lcd_Port
  2336  045A                     l1157:
  2337                           
  2338                           ;LCD.c: 20:     RE1 = 1;
  2339  045A  1283               	bcf	3,5	;RP0=0, select bank0
  2340  045B  1303               	bcf	3,6	;RP1=0, select bank0
  2341  045C  1489               	bsf	9,1	;volatile
  2342  045D                     l1159:
  2343                           
  2344                           ;LCD.c: 21:     _delay((unsigned long)((4)*(8000000/4000.0)));
  2345  045D  300B               	movlw	11
  2346  045E  00F2               	movwf	??_Lcd_Cmd+1
  2347  045F  3062               	movlw	98
  2348  0460  00F1               	movwf	??_Lcd_Cmd
  2349  0461                     u787:
  2350  0461  0BF1               	decfsz	??_Lcd_Cmd,f
  2351  0462  2C61               	goto	u787
  2352  0463  0BF2               	decfsz	??_Lcd_Cmd+1,f
  2353  0464  2C61               	goto	u787
  2354  0465  0000               	nop
  2355  0466                     l1161:
  2356                           
  2357                           ;LCD.c: 22:     RE1 = 0;
  2358  0466  1283               	bcf	3,5	;RP0=0, select bank0
  2359  0467  1303               	bcf	3,6	;RP1=0, select bank0
  2360  0468  1089               	bcf	9,1	;volatile
  2361  0469                     l148:
  2362  0469  0008               	return
  2363  046A                     __end_of_Lcd_Cmd:
  2364                           
  2365                           	psect	text12
  2366  0414                     __ptext12:	
  2367 ;; *************** function _Lcd_Port *****************
  2368 ;; Defined at:
  2369 ;;		line 12 in file "LCD.c"
  2370 ;; Parameters:    Size  Location     Type
  2371 ;;  a               1    wreg     unsigned char 
  2372 ;; Auto vars:     Size  Location     Type
  2373 ;;  a               1    0[COMMON] unsigned char 
  2374 ;; Return value:  Size  Location     Type
  2375 ;;                  1    wreg      void 
  2376 ;; Registers used:
  2377 ;;		wreg
  2378 ;; Tracked objects:
  2379 ;;		On entry : 0/0
  2380 ;;		On exit  : 0/0
  2381 ;;		Unchanged: 0/0
  2382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2383 ;;      Params:         0       0       0       0       0
  2384 ;;      Locals:         1       0       0       0       0
  2385 ;;      Temps:          0       0       0       0       0
  2386 ;;      Totals:         1       0       0       0       0
  2387 ;;Total ram usage:        1 bytes
  2388 ;; Hardware stack levels used: 1
  2389 ;; This function calls:
  2390 ;;		Nothing
  2391 ;; This function is called by:
  2392 ;;		_Lcd_Cmd
  2393 ;;		_Lcd_Init
  2394 ;;		_Lcd_Write_Char
  2395 ;; This function uses a non-reentrant model
  2396 ;;
  2397                           
  2398                           
  2399                           ;psect for function _Lcd_Port
  2400  0414                     _Lcd_Port:
  2401                           
  2402                           ;incstack = 0
  2403                           ; Regs used in _Lcd_Port: [wreg]
  2404                           ;Lcd_Port@a stored from wreg
  2405  0414  00F0               	movwf	Lcd_Port@a
  2406  0415                     l1099:
  2407                           
  2408                           ;LCD.c: 13:     PORTD = a;
  2409  0415  0870               	movf	Lcd_Port@a,w
  2410  0416  1283               	bcf	3,5	;RP0=0, select bank0
  2411  0417  1303               	bcf	3,6	;RP1=0, select bank0
  2412  0418  0088               	movwf	8	;volatile
  2413  0419                     l145:
  2414  0419  0008               	return
  2415  041A                     __end_of_Lcd_Port:
  2416                           
  2417                           	psect	text13
  2418  042C                     __ptext13:	
  2419 ;; *************** function _I2C_Master_Write *****************
  2420 ;; Defined at:
  2421 ;;		line 65 in file "I2C.c"
  2422 ;; Parameters:    Size  Location     Type
  2423 ;;  d               2    0[COMMON] unsigned int 
  2424 ;; Auto vars:     Size  Location     Type
  2425 ;;		None
  2426 ;; Return value:  Size  Location     Type
  2427 ;;                  1    wreg      void 
  2428 ;; Registers used:
  2429 ;;		wreg, status,2, status,0, pclath, cstack
  2430 ;; Tracked objects:
  2431 ;;		On entry : 0/0
  2432 ;;		On exit  : 0/0
  2433 ;;		Unchanged: 0/0
  2434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2435 ;;      Params:         2       0       0       0       0
  2436 ;;      Locals:         0       0       0       0       0
  2437 ;;      Temps:          0       0       0       0       0
  2438 ;;      Totals:         2       0       0       0       0
  2439 ;;Total ram usage:        2 bytes
  2440 ;; Hardware stack levels used: 1
  2441 ;; Hardware stack levels required when called: 1
  2442 ;; This function calls:
  2443 ;;		_I2C_Master_Wait
  2444 ;; This function is called by:
  2445 ;;		_main
  2446 ;; This function uses a non-reentrant model
  2447 ;;
  2448                           
  2449                           
  2450                           ;psect for function _I2C_Master_Write
  2451  042C                     _I2C_Master_Write:
  2452  042C                     l1261:	
  2453                           ;incstack = 0
  2454                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2455                           
  2456                           
  2457                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  2458  042C  120A  118A  2436  120A  118A  	fcall	_I2C_Master_Wait
  2459  0431                     l1263:
  2460                           
  2461                           ;I2C.c: 68:     SSPBUF = d;
  2462  0431  0870               	movf	I2C_Master_Write@d,w
  2463  0432  1283               	bcf	3,5	;RP0=0, select bank0
  2464  0433  1303               	bcf	3,6	;RP1=0, select bank0
  2465  0434  0093               	movwf	19	;volatile
  2466  0435                     l126:
  2467  0435  0008               	return
  2468  0436                     __end_of_I2C_Master_Write:
  2469                           
  2470                           	psect	text14
  2471  0423                     __ptext14:	
  2472 ;; *************** function _I2C_Master_Stop *****************
  2473 ;; Defined at:
  2474 ;;		line 55 in file "I2C.c"
  2475 ;; Parameters:    Size  Location     Type
  2476 ;;		None
  2477 ;; Auto vars:     Size  Location     Type
  2478 ;;		None
  2479 ;; Return value:  Size  Location     Type
  2480 ;;                  1    wreg      void 
  2481 ;; Registers used:
  2482 ;;		wreg, status,2, status,0, pclath, cstack
  2483 ;; Tracked objects:
  2484 ;;		On entry : 0/0
  2485 ;;		On exit  : 0/0
  2486 ;;		Unchanged: 0/0
  2487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2488 ;;      Params:         0       0       0       0       0
  2489 ;;      Locals:         0       0       0       0       0
  2490 ;;      Temps:          0       0       0       0       0
  2491 ;;      Totals:         0       0       0       0       0
  2492 ;;Total ram usage:        0 bytes
  2493 ;; Hardware stack levels used: 1
  2494 ;; Hardware stack levels required when called: 1
  2495 ;; This function calls:
  2496 ;;		_I2C_Master_Wait
  2497 ;; This function is called by:
  2498 ;;		_main
  2499 ;; This function uses a non-reentrant model
  2500 ;;
  2501                           
  2502                           
  2503                           ;psect for function _I2C_Master_Stop
  2504  0423                     _I2C_Master_Stop:
  2505  0423                     l1281:	
  2506                           ;incstack = 0
  2507                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2508                           
  2509                           
  2510                           ;I2C.c: 57:     I2C_Master_Wait();
  2511  0423  120A  118A  2436  120A  118A  	fcall	_I2C_Master_Wait
  2512  0428                     l1283:
  2513                           
  2514                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  2515  0428  1683               	bsf	3,5	;RP0=1, select bank1
  2516  0429  1303               	bcf	3,6	;RP1=0, select bank1
  2517  042A  1511               	bsf	17,2	;volatile
  2518  042B                     l123:
  2519  042B  0008               	return
  2520  042C                     __end_of_I2C_Master_Stop:
  2521                           
  2522                           	psect	text15
  2523  041A                     __ptext15:	
  2524 ;; *************** function _I2C_Master_Start *****************
  2525 ;; Defined at:
  2526 ;;		line 39 in file "I2C.c"
  2527 ;; Parameters:    Size  Location     Type
  2528 ;;		None
  2529 ;; Auto vars:     Size  Location     Type
  2530 ;;		None
  2531 ;; Return value:  Size  Location     Type
  2532 ;;                  1    wreg      void 
  2533 ;; Registers used:
  2534 ;;		wreg, status,2, status,0, pclath, cstack
  2535 ;; Tracked objects:
  2536 ;;		On entry : 0/0
  2537 ;;		On exit  : 0/0
  2538 ;;		Unchanged: 0/0
  2539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2540 ;;      Params:         0       0       0       0       0
  2541 ;;      Locals:         0       0       0       0       0
  2542 ;;      Temps:          0       0       0       0       0
  2543 ;;      Totals:         0       0       0       0       0
  2544 ;;Total ram usage:        0 bytes
  2545 ;; Hardware stack levels used: 1
  2546 ;; Hardware stack levels required when called: 1
  2547 ;; This function calls:
  2548 ;;		_I2C_Master_Wait
  2549 ;; This function is called by:
  2550 ;;		_main
  2551 ;; This function uses a non-reentrant model
  2552 ;;
  2553                           
  2554                           
  2555                           ;psect for function _I2C_Master_Start
  2556  041A                     _I2C_Master_Start:
  2557  041A                     l1257:	
  2558                           ;incstack = 0
  2559                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2560                           
  2561                           
  2562                           ;I2C.c: 41:     I2C_Master_Wait();
  2563  041A  120A  118A  2436  120A  118A  	fcall	_I2C_Master_Wait
  2564  041F                     l1259:
  2565                           
  2566                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  2567  041F  1683               	bsf	3,5	;RP0=1, select bank1
  2568  0420  1303               	bcf	3,6	;RP1=0, select bank1
  2569  0421  1411               	bsf	17,0	;volatile
  2570  0422                     l117:
  2571  0422  0008               	return
  2572  0423                     __end_of_I2C_Master_Start:
  2573                           
  2574                           	psect	text16
  2575  04AD                     __ptext16:	
  2576 ;; *************** function _I2C_Master_Read *****************
  2577 ;; Defined at:
  2578 ;;		line 74 in file "I2C.c"
  2579 ;; Parameters:    Size  Location     Type
  2580 ;;  a               2    0[COMMON] unsigned short 
  2581 ;; Auto vars:     Size  Location     Type
  2582 ;;  temp            2    4[COMMON] unsigned short 
  2583 ;; Return value:  Size  Location     Type
  2584 ;;                  2    0[COMMON] unsigned short 
  2585 ;; Registers used:
  2586 ;;		wreg, status,2, status,0, pclath, cstack
  2587 ;; Tracked objects:
  2588 ;;		On entry : 0/0
  2589 ;;		On exit  : 0/0
  2590 ;;		Unchanged: 0/0
  2591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2592 ;;      Params:         2       0       0       0       0
  2593 ;;      Locals:         2       0       0       0       0
  2594 ;;      Temps:          2       0       0       0       0
  2595 ;;      Totals:         6       0       0       0       0
  2596 ;;Total ram usage:        6 bytes
  2597 ;; Hardware stack levels used: 1
  2598 ;; Hardware stack levels required when called: 1
  2599 ;; This function calls:
  2600 ;;		_I2C_Master_Wait
  2601 ;; This function is called by:
  2602 ;;		_main
  2603 ;; This function uses a non-reentrant model
  2604 ;;
  2605                           
  2606                           
  2607                           ;psect for function _I2C_Master_Read
  2608  04AD                     _I2C_Master_Read:
  2609  04AD                     l1265:	
  2610                           ;incstack = 0
  2611                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  2612                           
  2613                           
  2614                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  2615  04AD  120A  118A  2436  120A  118A  	fcall	_I2C_Master_Wait
  2616  04B2                     l1267:
  2617                           
  2618                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  2619  04B2  1683               	bsf	3,5	;RP0=1, select bank1
  2620  04B3  1303               	bcf	3,6	;RP1=0, select bank1
  2621  04B4  1591               	bsf	17,3	;volatile
  2622                           
  2623                           ;I2C.c: 79:     I2C_Master_Wait();
  2624  04B5  120A  118A  2436  120A  118A  	fcall	_I2C_Master_Wait
  2625  04BA                     l1269:
  2626                           
  2627                           ;I2C.c: 80:     temp = SSPBUF;
  2628  04BA  1283               	bcf	3,5	;RP0=0, select bank0
  2629  04BB  1303               	bcf	3,6	;RP1=0, select bank0
  2630  04BC  0813               	movf	19,w	;volatile
  2631  04BD  00F2               	movwf	??_I2C_Master_Read
  2632  04BE  01F3               	clrf	??_I2C_Master_Read+1
  2633  04BF  0872               	movf	??_I2C_Master_Read,w
  2634  04C0  00F4               	movwf	I2C_Master_Read@temp
  2635  04C1  0873               	movf	??_I2C_Master_Read+1,w
  2636  04C2  00F5               	movwf	I2C_Master_Read@temp+1
  2637  04C3                     l1271:
  2638                           
  2639                           ;I2C.c: 81:     I2C_Master_Wait();
  2640  04C3  120A  118A  2436  120A  118A  	fcall	_I2C_Master_Wait
  2641  04C8                     l1273:
  2642                           
  2643                           ;I2C.c: 82:     if(a == 1){
  2644  04C8  0370               	decf	I2C_Master_Read@a,w
  2645  04C9  0471               	iorwf	I2C_Master_Read@a+1,w
  2646  04CA  1D03               	btfss	3,2
  2647  04CB  2CCD               	goto	u511
  2648  04CC  2CCE               	goto	u510
  2649  04CD                     u511:
  2650  04CD  2CD2               	goto	l129
  2651  04CE                     u510:
  2652  04CE                     l1275:
  2653                           
  2654                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  2655  04CE  1683               	bsf	3,5	;RP0=1, select bank1
  2656  04CF  1303               	bcf	3,6	;RP1=0, select bank1
  2657  04D0  1291               	bcf	17,5	;volatile
  2658                           
  2659                           ;I2C.c: 84:     }else{
  2660  04D1  2CD5               	goto	l130
  2661  04D2                     l129:
  2662                           
  2663                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  2664  04D2  1683               	bsf	3,5	;RP0=1, select bank1
  2665  04D3  1303               	bcf	3,6	;RP1=0, select bank1
  2666  04D4  1691               	bsf	17,5	;volatile
  2667  04D5                     l130:	
  2668                           ;I2C.c: 86:     }
  2669                           
  2670                           
  2671                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  2672  04D5  1611               	bsf	17,4	;volatile
  2673  04D6                     l1277:
  2674                           
  2675                           ;I2C.c: 88:     return temp;
  2676  04D6  0875               	movf	I2C_Master_Read@temp+1,w
  2677  04D7  00F1               	movwf	?_I2C_Master_Read+1
  2678  04D8  0874               	movf	I2C_Master_Read@temp,w
  2679  04D9  00F0               	movwf	?_I2C_Master_Read
  2680  04DA                     l131:
  2681  04DA  0008               	return
  2682  04DB                     __end_of_I2C_Master_Read:
  2683                           
  2684                           	psect	text17
  2685  0436                     __ptext17:	
  2686 ;; *************** function _I2C_Master_Wait *****************
  2687 ;; Defined at:
  2688 ;;		line 32 in file "I2C.c"
  2689 ;; Parameters:    Size  Location     Type
  2690 ;;		None
  2691 ;; Auto vars:     Size  Location     Type
  2692 ;;		None
  2693 ;; Return value:  Size  Location     Type
  2694 ;;                  1    wreg      void 
  2695 ;; Registers used:
  2696 ;;		wreg, status,2
  2697 ;; Tracked objects:
  2698 ;;		On entry : 0/0
  2699 ;;		On exit  : 0/0
  2700 ;;		Unchanged: 0/0
  2701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2702 ;;      Params:         0       0       0       0       0
  2703 ;;      Locals:         0       0       0       0       0
  2704 ;;      Temps:          0       0       0       0       0
  2705 ;;      Totals:         0       0       0       0       0
  2706 ;;Total ram usage:        0 bytes
  2707 ;; Hardware stack levels used: 1
  2708 ;; This function calls:
  2709 ;;		Nothing
  2710 ;; This function is called by:
  2711 ;;		_I2C_Master_Start
  2712 ;;		_I2C_Master_Stop
  2713 ;;		_I2C_Master_Write
  2714 ;;		_I2C_Master_Read
  2715 ;;		_I2C_Master_RepeatedStart
  2716 ;; This function uses a non-reentrant model
  2717 ;;
  2718                           
  2719                           
  2720                           ;psect for function _I2C_Master_Wait
  2721  0436                     _I2C_Master_Wait:
  2722  0436                     l1149:	
  2723                           ;incstack = 0
  2724                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  2725                           
  2726  0436                     l111:	
  2727                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  2728                           
  2729  0436  1683               	bsf	3,5	;RP0=1, select bank1
  2730  0437  1303               	bcf	3,6	;RP1=0, select bank1
  2731  0438  1914               	btfsc	20,2	;volatile
  2732  0439  2C3B               	goto	u441
  2733  043A  2C3C               	goto	u440
  2734  043B                     u441:
  2735  043B  2C36               	goto	l111
  2736  043C                     u440:
  2737  043C                     l1151:
  2738  043C  0811               	movf	17,w	;volatile
  2739  043D  391F               	andlw	31
  2740  043E  1D03               	btfss	3,2
  2741  043F  2C41               	goto	u451
  2742  0440  2C42               	goto	u450
  2743  0441                     u451:
  2744  0441  2C36               	goto	l111
  2745  0442                     u450:
  2746  0442                     l114:
  2747  0442  0008               	return
  2748  0443                     __end_of_I2C_Master_Wait:
  2749  007E                     btemp	set	126	;btemp
  2750  007E                     wtemp0	set	126
  2751                           
  2752                           	psect	config
  2753                           
  2754                           ;Config register CONFIG1 @ 0x2007
  2755                           ;	Oscillator Selection bits
  2756                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2757                           ;	Watchdog Timer Enable bit
  2758                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2759                           ;	Power-up Timer Enable bit
  2760                           ;	PWRTE = OFF, PWRT disabled
  2761                           ;	RE3/MCLR pin function select bit
  2762                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2763                           ;	Code Protection bit
  2764                           ;	CP = OFF, Program memory code protection is disabled
  2765                           ;	Data Code Protection bit
  2766                           ;	CPD = OFF, Data memory code protection is disabled
  2767                           ;	Brown Out Reset Selection bits
  2768                           ;	BOREN = OFF, BOR disabled
  2769                           ;	Internal External Switchover bit
  2770                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2771                           ;	Fail-Safe Clock Monitor Enabled bit
  2772                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2773                           ;	Low Voltage Programming Enable bit
  2774                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2775                           ;	In-Circuit Debugger Mode bit
  2776                           ;	DEBUG = 0x1, unprogrammed default
  2777  2007                     	org	8199
  2778  2007  20D4               	dw	8404
  2779                           
  2780                           ;Config register CONFIG2 @ 0x2008
  2781                           ;	Brown-out Reset Selection bit
  2782                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2783                           ;	Flash Program Memory Self Write Enable bits
  2784                           ;	WRT = OFF, Write protection off
  2785  2008                     	org	8200
  2786  2008  3FFF               	dw	16383

Data Sizes:
    Strings     32
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     12      18
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_5(CODE[4]), STR_4(CODE[4]), STR_2(CODE[5]), STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->___awmod
    _I2C_Master_Init->___lldiv
    ___awmod->___awdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->_initSETUP
    _initSETUP->_I2C_Master_Init

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    3069
                                              9 BANK0      3     3      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                            ___awdiv
                            ___awmod
                          _initSETUP
 ---------------------------------------------------------------------------------
 (1) _initSETUP                                            1     1      0     412
                                              8 BANK0      1     1      0
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     872
                                              9 COMMON     5     1      4
                                              0 BANK0      2     2      0
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     588
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     312
                                              5 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0      90
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     466
                                              4 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      66
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      44
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      44
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2      98
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     121
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
   ___awdiv
   ___awmod
     ___awdiv (ARG)
   _initSETUP
     _I2C_Master_Init
       ___lldiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      20       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      C      12       5       22.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      20      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Sep 07 09:36:58 2021

                        pc 0002                         l79 0552                         _RH 002C  
             ___awdiv@sign 0076                         fsr 0004                        l111 0436  
                      l114 0442                        l130 04D5                        l131 04DA  
                      l123 042B                        l108 0512                        l117 0422  
                      l126 0435                        l151 044F                        l160 0599  
                      l129 04D2                        l145 0419                        l163 0487  
                      l148 0469                        l157 05EB                        l414 0713  
                      l169 04AC                        l427 0646                        l297 06AC  
                      _GIE 005F                        _RE0 0048                        _RE1 0049  
                      u400 0686                        u401 0685                        u500 04AC  
                      u420 06A4                        u501 04AB                        u421 06A3  
                      u405 0682                        u510 04CE                        u430 04F2  
                      u511 04CD                        u415 0696                        u440 043C  
                      u600 0705                        u520 06B2                        u360 0657  
                      u441 043B                        u601 0704                        u521 06B1  
                      u361 0656                        u450 0442                        u610 070A  
                      u530 06BD                        u451 0441                        u611 0709  
                      u531 06BC                        u435 04ED                        u460 05A0  
                      u540 06CE                        u700 063D                        u620 05F3  
                      u380 066B                        u461 059F                        u541 06CD  
                      u701 063C                        u621 05F2                        u381 066A  
                      u630 05FE                        u631 05FD                        u375 065C  
                      u480 05C9                        u560 06E0                        u640 0609  
                      u481 05C8                        u561 06DF                        u641 0608  
                      u475 05A8                        u555 06D2                        u395 066D  
                      u580 06F1                        u660 061B                        u581 06F0  
                      u661 061A                        u717 075A                        u670 0625  
                      u495 05D1                        u575 06E1                        u671 0624  
                      u655 060D                        u727 07EA                        u585 06ED  
                      u737 053D                        u690 0638                        u747 0481  
                      u595 06F9                        u691 0637                        u675 0621  
                      u757 055D                        u685 062C                        u767 056C  
                      u777 0579                        u787 0461                        fsr0 0004  
             ___awmod@sign 0021                       l1101 0647                       l1111 0674  
                     l1103 0657                       l1113 0686                       l1105 065A  
                     l1121 06A4                       l1201 0536                       l1131 047C  
                     l1115 0694                       l1107 0667                       l1211 0544  
                     l1203 0538                       l1221 0562                       l1133 047F  
                     l1125 046B                       l1301 06C8                       l1117 0695  
                     l1109 066B                       l1141 04E2                       l1213 0545  
                     l1205 0539                       l1151 043C                       l1223 0571  
                     l1231 05A0                       l1135 0484                       l1127 0473  
                     l1311 06E0                       l1303 06CE                       l1119 069E  
                     l1143 050F                       l1207 0540                       l1161 0466  
                     l1153 0451                       l1225 0577                       l1217 0553  
                     l1241 05C9                       l1233 05B1                       l1129 0476  
                     l1313 06F1                       l1305 06D1                       l1321 0705  
                     l1145 0510                       l1137 04DB                       l1209 0543  
                     l1401 07D0                       l1155 0454                       l1227 0443  
                     l1219 0559                       l1243 05DA                       l1235 05B6  
                     l1251 048C                       l1323 070A                       l1315 06F7  
                     l1307 06D8                       l1331 05EF                       l1147 0511  
                     l1139 04DF                       l1171 051A                       l1163 0513  
                     l1403 07D6                       l1149 0436                       l1261 042C  
                     l1157 045A                       l1245 05DF                       l1237 05BC  
                     l1229 059B                       l1253 0499                       l1325 070F  
                     l1317 06F8                       l1309 06DC                       l1341 0603  
                     l1333 05F3                       l1181 0521                       l1173 051B  
                     l1165 0517                       l1405 07DC                       l1271 04C3  
                     l1263 0431                       l1159 045D                       l1247 05E5  
                     l1239 05C3                       l1255 049F                       l1319 06FF  
                     l1351 061B                       l1343 0609                       l1335 05F8  
                     l1191 052C                       l1183 0522                       l1175 051E  
                     l1167 0518                       l1407 07E2                       l1273 04C8  
                     l1265 04AD                       l1257 041A                       l1281 0423  
                     l1249 0489                       l1361 063D                       l1353 0625  
                     l1345 060C                       l1337 05FA                       l1329 05EC  
                     l1193 052D                       l1185 0527                       l1177 051F  
                     l1169 0519                       l1275 04CE                       l1267 04B2  
                     l1259 041F                       l1283 0428                       l1099 0415  
                     l1291 06B7                       l1363 0642                       l1355 062B  
                     l1347 0613                       l1339 05FE                       l1195 052E  
                     l1187 052A                       l1179 0520                       l1371 0731  
                     l1277 04D6                       l1269 04BA                       l1293 06B9  
                     l1285 06AD                       l1357 0632                       l1349 0617  
                     l1197 052F                       l1189 052B                       l1381 0761  
                     l1373 0736                       l1295 06BD                       l1287 06AE  
                     l1359 0638                       l1199 0530                       l1391 07AE  
                     l1383 0769                       l1375 073F                       l1367 0714  
                     l1297 06C2                       l1289 06B2                       l1393 07B4  
                     l1385 076F                       l1377 074D                       l1369 072B  
                     l1299 06C6                       l1395 07BA                       l1387 0773  
                     l1379 0752                       l1397 07C0                       l1389 0797  
                     l1399 07C8                       STR_1 0009                       STR_2 001A  
                     STR_3 0027                       STR_4 001F                       STR_5 0023  
                     _PEIE 005E                       _dec0 0030                       _dec1 002E  
        ?_Lcd_Write_String 0070                       _main 0714                       btemp 007E  
                     start 0000         ??_Lcd_Write_String 0075            __end_of_Lcd_Cmd 046A  
         ?_I2C_Master_Init 0020           ?_I2C_Master_Read 0070           ?_I2C_Master_Wait 0070  
         ?_I2C_Master_Stop 0070                      ?_main 0070            __end_of___awdiv 0714  
          __end_of___awmod 0647                      _ANSEL 0188            __end_of___lldiv 06AD  
          ___awdiv@divisor 0070            ___awdiv@counter 0075                      _PORTA 0005  
                    _PORTB 0006                      _PORTC 0007                      _PORTD 0008  
                    _PORTE 0009    __size_of_Lcd_Set_Cursor 0052                      _TRISA 0085  
                    _TRISB 0086                      _TRISC 0087                      _TRISD 0088  
                    _SSPIE 0463                      _TRISE 0089                      _SSPIF 0063  
                    _unit0 0031                      _unit1 002F                      pclath 000A  
                    status 0003                      wtemp0 007E           __end_of_Lcd_Init 059A  
         __end_of_Lcd_Port 041A            __initialization 07F4               __end_of_main 07F4  
                   ??_main 0029         __size_of_Lcd_Clear 000D          ?_I2C_Master_Start 0070  
        ?_I2C_Master_Write 0070         ??_I2C_Master_Start 0070         ??_I2C_Master_Write 0072  
         ___awdiv@dividend 0072                     _ANSELH 0189                  ??_Lcd_Cmd 0071  
  __size_of_Lcd_Write_Char 001E                     _SSPADD 0093                     _TRISC3 043B  
                   _TRISC4 043C                     _SSPCON 0014                     _SSPBUF 0013  
                ??___awdiv 0074                  ??___awmod 007D                  ??___lldiv 0078  
         ___awdiv@quotient 0077            ___awmod@divisor 0079            ___awmod@counter 0020  
          Lcd_Set_Cursor@a 0077            Lcd_Set_Cursor@b 0074            Lcd_Set_Cursor@y 0079  
          Lcd_Set_Cursor@z 0078    __end_of__initialization 07FC          __end_of_Lcd_Clear 0450  
           __pcstackCOMMON 0070             _Lcd_Set_Cursor 059A                  ?_Lcd_Init 0070  
                ?_Lcd_Port 0070                 __pbssBANK0 002C         __size_of_initSETUP 0040  
               __pmaintext 0714  __size_of_Lcd_Write_String 0025     __end_of_Lcd_Set_Cursor 05EC  
               ??_Lcd_Init 0074                 ??_Lcd_Port 0070                    _SSPCON2 0091  
                  _SSPSTAT 0094                 __stringtab 0003             _Lcd_Write_Char 046A  
                  _Lcd_Cmd 0450                    ___awdiv 06AD                    ___awmod 05EC  
                  ___lldiv 0647          __end_of_initSETUP 0553            ?_Lcd_Set_Cursor 0074  
                  __ptext1 0513                    __ptext2 04DB                    __ptext3 0647  
                  __ptext4 05EC                    __ptext5 06AD                    __ptext6 0488  
                  __ptext7 046A                    __ptext8 059A                    __ptext9 0553  
         ___awmod@dividend 007B   __size_of_I2C_Master_Init 0038   __size_of_I2C_Master_Read 002E  
 __size_of_I2C_Master_Wait 000D   __size_of_I2C_Master_Stop 0009     __end_of_Lcd_Write_Char 0488  
     end_of_initialization 07FC  __size_of_I2C_Master_Start 0009  __size_of_I2C_Master_Write 000A  
          ___lldiv@divisor 0070            ___lldiv@counter 007D           I2C_Master_Init@c 0020  
         I2C_Master_Read@a 0070                  Lcd_Port@a 0070                  _TRISCbits 0087  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0077          Lcd_Write_String@i 0075  
                _Lcd_Clear 0443           _Lcd_Write_String 0488        start_initialization 07F4  
        __size_of_Lcd_Init 0047          __size_of_Lcd_Port 0006          ??_I2C_Master_Init 0024  
        ??_I2C_Master_Read 0072          ??_I2C_Master_Wait 0070          ??_I2C_Master_Stop 0070  
               ?_Lcd_Clear 0070            Lcd_Write_Char@a 0072            Lcd_Write_Char@y 0074  
                ___latbits 0002              __pcstackBANK0 0020                   ?_Lcd_Cmd 0070  
         _I2C_Master_Start 041A           _I2C_Master_Write 042C           ??_Lcd_Set_Cursor 0075  
                 ?___awdiv 0070                   ?___awmod 0079                   ?___lldiv 0070  
                __pstrings 0003                  _initSETUP 0513                   Lcd_Cmd@a 0073  
              ??_Lcd_Clear 0074                 _ADCON0bits 001F                __stringbase 0008  
               _ADCON1bits 009F           ??_Lcd_Write_Char 0071                 ?_initSETUP 0070  
                 _Lcd_Init 0553                   _Lcd_Port 0414        I2C_Master_Read@temp 0074  
 __end_of_Lcd_Write_String 04AD           __size_of_Lcd_Cmd 001A                   _Humidity 002D  
         __size_of___awdiv 0067           __size_of___awmod 005B           __size_of___lldiv 0066  
       __end_of__stringtab 0009            _I2C_Master_Init 04DB            _I2C_Master_Read 04AD  
          _I2C_Master_Wait 0436            _I2C_Master_Stop 0423                   __ptext10 0443  
                 __ptext11 0450                   __ptext12 0414                   __ptext13 042C  
                 __ptext14 0423                   __ptext15 041A                   __ptext16 04AD  
                 __ptext17 0436              __size_of_main 00E0   __end_of_I2C_Master_Start 0423  
 __end_of_I2C_Master_Write 0436                 _INTCONbits 000B                ??_initSETUP 0028  
       Lcd_Write_Char@temp 0073           ___lldiv@dividend 0074                  stringcode 0003  
               _OSCCONbits 008F    __end_of_I2C_Master_Init 0513    __end_of_I2C_Master_Read 04DB  
  __end_of_I2C_Master_Wait 0443    __end_of_I2C_Master_Stop 042C         Lcd_Set_Cursor@temp 007A  
         ___lldiv@quotient 0079          I2C_Master_Write@d 0070                   stringdir 0003  
                 stringtab 0003                _SSPCON2bits 0091  
