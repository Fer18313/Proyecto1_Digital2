

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Sep 08 14:53:39 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	text17,local,class=CODE,merge=1,delta=2
    28                           	psect	text18,local,class=CODE,merge=1,delta=2
    29                           	psect	text19,local,class=CODE,merge=1,delta=2
    30                           	psect	text20,local,class=CODE,merge=1,delta=2
    31                           	psect	text21,local,class=CODE,merge=1,delta=2
    32                           	psect	intentry,global,class=CODE,delta=2
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    34                           	dabs	1,0x7E,2
    35  0000                     
    36                           ; Version 2.20
    37                           ; Generated 12/02/2020 GMT
    38                           ; 
    39                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC16F887 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     	;# 
    71  0001                     	;# 
    72  0002                     	;# 
    73  0003                     	;# 
    74  0004                     	;# 
    75  0005                     	;# 
    76  0006                     	;# 
    77  0007                     	;# 
    78  0008                     	;# 
    79  0009                     	;# 
    80  000A                     	;# 
    81  000B                     	;# 
    82  000C                     	;# 
    83  000D                     	;# 
    84  000E                     	;# 
    85  000E                     	;# 
    86  000F                     	;# 
    87  0010                     	;# 
    88  0011                     	;# 
    89  0012                     	;# 
    90  0013                     	;# 
    91  0014                     	;# 
    92  0015                     	;# 
    93  0015                     	;# 
    94  0016                     	;# 
    95  0017                     	;# 
    96  0018                     	;# 
    97  0019                     	;# 
    98  001A                     	;# 
    99  001B                     	;# 
   100  001B                     	;# 
   101  001C                     	;# 
   102  001D                     	;# 
   103  001E                     	;# 
   104  001F                     	;# 
   105  0081                     	;# 
   106  0085                     	;# 
   107  0086                     	;# 
   108  0087                     	;# 
   109  0088                     	;# 
   110  0089                     	;# 
   111  008C                     	;# 
   112  008D                     	;# 
   113  008E                     	;# 
   114  008F                     	;# 
   115  0090                     	;# 
   116  0091                     	;# 
   117  0092                     	;# 
   118  0093                     	;# 
   119  0093                     	;# 
   120  0093                     	;# 
   121  0094                     	;# 
   122  0095                     	;# 
   123  0096                     	;# 
   124  0097                     	;# 
   125  0098                     	;# 
   126  0099                     	;# 
   127  009A                     	;# 
   128  009B                     	;# 
   129  009C                     	;# 
   130  009D                     	;# 
   131  009E                     	;# 
   132  009F                     	;# 
   133  0105                     	;# 
   134  0107                     	;# 
   135  0108                     	;# 
   136  0109                     	;# 
   137  010C                     	;# 
   138  010C                     	;# 
   139  010D                     	;# 
   140  010E                     	;# 
   141  010F                     	;# 
   142  0185                     	;# 
   143  0187                     	;# 
   144  0188                     	;# 
   145  0189                     	;# 
   146  018C                     	;# 
   147  018D                     	;# 
   148  0000                     	;# 
   149  0001                     	;# 
   150  0002                     	;# 
   151  0003                     	;# 
   152  0004                     	;# 
   153  0005                     	;# 
   154  0006                     	;# 
   155  0007                     	;# 
   156  0008                     	;# 
   157  0009                     	;# 
   158  000A                     	;# 
   159  000B                     	;# 
   160  000C                     	;# 
   161  000D                     	;# 
   162  000E                     	;# 
   163  000E                     	;# 
   164  000F                     	;# 
   165  0010                     	;# 
   166  0011                     	;# 
   167  0012                     	;# 
   168  0013                     	;# 
   169  0014                     	;# 
   170  0015                     	;# 
   171  0015                     	;# 
   172  0016                     	;# 
   173  0017                     	;# 
   174  0018                     	;# 
   175  0019                     	;# 
   176  001A                     	;# 
   177  001B                     	;# 
   178  001B                     	;# 
   179  001C                     	;# 
   180  001D                     	;# 
   181  001E                     	;# 
   182  001F                     	;# 
   183  0081                     	;# 
   184  0085                     	;# 
   185  0086                     	;# 
   186  0087                     	;# 
   187  0088                     	;# 
   188  0089                     	;# 
   189  008C                     	;# 
   190  008D                     	;# 
   191  008E                     	;# 
   192  008F                     	;# 
   193  0090                     	;# 
   194  0091                     	;# 
   195  0092                     	;# 
   196  0093                     	;# 
   197  0093                     	;# 
   198  0093                     	;# 
   199  0094                     	;# 
   200  0095                     	;# 
   201  0096                     	;# 
   202  0097                     	;# 
   203  0098                     	;# 
   204  0099                     	;# 
   205  009A                     	;# 
   206  009B                     	;# 
   207  009C                     	;# 
   208  009D                     	;# 
   209  009E                     	;# 
   210  009F                     	;# 
   211  0105                     	;# 
   212  0107                     	;# 
   213  0108                     	;# 
   214  0109                     	;# 
   215  010C                     	;# 
   216  010C                     	;# 
   217  010D                     	;# 
   218  010E                     	;# 
   219  010F                     	;# 
   220  0185                     	;# 
   221  0187                     	;# 
   222  0188                     	;# 
   223  0189                     	;# 
   224  018C                     	;# 
   225  018D                     	;# 
   226  0000                     	;# 
   227  0001                     	;# 
   228  0002                     	;# 
   229  0003                     	;# 
   230  0004                     	;# 
   231  0005                     	;# 
   232  0006                     	;# 
   233  0007                     	;# 
   234  0008                     	;# 
   235  0009                     	;# 
   236  000A                     	;# 
   237  000B                     	;# 
   238  000C                     	;# 
   239  000D                     	;# 
   240  000E                     	;# 
   241  000E                     	;# 
   242  000F                     	;# 
   243  0010                     	;# 
   244  0011                     	;# 
   245  0012                     	;# 
   246  0013                     	;# 
   247  0014                     	;# 
   248  0015                     	;# 
   249  0015                     	;# 
   250  0016                     	;# 
   251  0017                     	;# 
   252  0018                     	;# 
   253  0019                     	;# 
   254  001A                     	;# 
   255  001B                     	;# 
   256  001B                     	;# 
   257  001C                     	;# 
   258  001D                     	;# 
   259  001E                     	;# 
   260  001F                     	;# 
   261  0081                     	;# 
   262  0085                     	;# 
   263  0086                     	;# 
   264  0087                     	;# 
   265  0088                     	;# 
   266  0089                     	;# 
   267  008C                     	;# 
   268  008D                     	;# 
   269  008E                     	;# 
   270  008F                     	;# 
   271  0090                     	;# 
   272  0091                     	;# 
   273  0092                     	;# 
   274  0093                     	;# 
   275  0093                     	;# 
   276  0093                     	;# 
   277  0094                     	;# 
   278  0095                     	;# 
   279  0096                     	;# 
   280  0097                     	;# 
   281  0098                     	;# 
   282  0099                     	;# 
   283  009A                     	;# 
   284  009B                     	;# 
   285  009C                     	;# 
   286  009D                     	;# 
   287  009E                     	;# 
   288  009F                     	;# 
   289  0105                     	;# 
   290  0107                     	;# 
   291  0108                     	;# 
   292  0109                     	;# 
   293  010C                     	;# 
   294  010C                     	;# 
   295  010D                     	;# 
   296  010E                     	;# 
   297  010F                     	;# 
   298  0185                     	;# 
   299  0187                     	;# 
   300  0188                     	;# 
   301  0189                     	;# 
   302  018C                     	;# 
   303  018D                     	;# 
   304  0000                     	;# 
   305  0001                     	;# 
   306  0002                     	;# 
   307  0003                     	;# 
   308  0004                     	;# 
   309  0005                     	;# 
   310  0006                     	;# 
   311  0007                     	;# 
   312  0008                     	;# 
   313  0009                     	;# 
   314  000A                     	;# 
   315  000B                     	;# 
   316  000C                     	;# 
   317  000D                     	;# 
   318  000E                     	;# 
   319  000E                     	;# 
   320  000F                     	;# 
   321  0010                     	;# 
   322  0011                     	;# 
   323  0012                     	;# 
   324  0013                     	;# 
   325  0014                     	;# 
   326  0015                     	;# 
   327  0015                     	;# 
   328  0016                     	;# 
   329  0017                     	;# 
   330  0018                     	;# 
   331  0019                     	;# 
   332  001A                     	;# 
   333  001B                     	;# 
   334  001B                     	;# 
   335  001C                     	;# 
   336  001D                     	;# 
   337  001E                     	;# 
   338  001F                     	;# 
   339  0081                     	;# 
   340  0085                     	;# 
   341  0086                     	;# 
   342  0087                     	;# 
   343  0088                     	;# 
   344  0089                     	;# 
   345  008C                     	;# 
   346  008D                     	;# 
   347  008E                     	;# 
   348  008F                     	;# 
   349  0090                     	;# 
   350  0091                     	;# 
   351  0092                     	;# 
   352  0093                     	;# 
   353  0093                     	;# 
   354  0093                     	;# 
   355  0094                     	;# 
   356  0095                     	;# 
   357  0096                     	;# 
   358  0097                     	;# 
   359  0098                     	;# 
   360  0099                     	;# 
   361  009A                     	;# 
   362  009B                     	;# 
   363  009C                     	;# 
   364  009D                     	;# 
   365  009E                     	;# 
   366  009F                     	;# 
   367  0105                     	;# 
   368  0107                     	;# 
   369  0108                     	;# 
   370  0109                     	;# 
   371  010C                     	;# 
   372  010C                     	;# 
   373  010D                     	;# 
   374  010E                     	;# 
   375  010F                     	;# 
   376  0185                     	;# 
   377  0187                     	;# 
   378  0188                     	;# 
   379  0189                     	;# 
   380  018C                     	;# 
   381  018D                     	;# 
   382  0000                     	;# 
   383  0001                     	;# 
   384  0002                     	;# 
   385  0003                     	;# 
   386  0004                     	;# 
   387  0005                     	;# 
   388  0006                     	;# 
   389  0007                     	;# 
   390  0008                     	;# 
   391  0009                     	;# 
   392  000A                     	;# 
   393  000B                     	;# 
   394  000C                     	;# 
   395  000D                     	;# 
   396  000E                     	;# 
   397  000E                     	;# 
   398  000F                     	;# 
   399  0010                     	;# 
   400  0011                     	;# 
   401  0012                     	;# 
   402  0013                     	;# 
   403  0014                     	;# 
   404  0015                     	;# 
   405  0015                     	;# 
   406  0016                     	;# 
   407  0017                     	;# 
   408  0018                     	;# 
   409  0019                     	;# 
   410  001A                     	;# 
   411  001B                     	;# 
   412  001B                     	;# 
   413  001C                     	;# 
   414  001D                     	;# 
   415  001E                     	;# 
   416  001F                     	;# 
   417  0081                     	;# 
   418  0085                     	;# 
   419  0086                     	;# 
   420  0087                     	;# 
   421  0088                     	;# 
   422  0089                     	;# 
   423  008C                     	;# 
   424  008D                     	;# 
   425  008E                     	;# 
   426  008F                     	;# 
   427  0090                     	;# 
   428  0091                     	;# 
   429  0092                     	;# 
   430  0093                     	;# 
   431  0093                     	;# 
   432  0093                     	;# 
   433  0094                     	;# 
   434  0095                     	;# 
   435  0096                     	;# 
   436  0097                     	;# 
   437  0098                     	;# 
   438  0099                     	;# 
   439  009A                     	;# 
   440  009B                     	;# 
   441  009C                     	;# 
   442  009D                     	;# 
   443  009E                     	;# 
   444  009F                     	;# 
   445  0105                     	;# 
   446  0107                     	;# 
   447  0108                     	;# 
   448  0109                     	;# 
   449  010C                     	;# 
   450  010C                     	;# 
   451  010D                     	;# 
   452  010E                     	;# 
   453  010F                     	;# 
   454  0185                     	;# 
   455  0187                     	;# 
   456  0188                     	;# 
   457  0189                     	;# 
   458  018C                     	;# 
   459  018D                     	;# 
   460  0013                     _SSPBUF	set	19
   461  0014                     _SSPCON	set	20
   462  000B                     _INTCONbits	set	11
   463  0018                     _RCSTAbits	set	24
   464  0008                     _PORTD	set	8
   465  0007                     _PORTC	set	7
   466  0006                     _PORTB	set	6
   467  0005                     _PORTA	set	5
   468  0009                     _PORTE	set	9
   469  0019                     _TXREG	set	25
   470  001A                     _RCREG	set	26
   471  000C                     _PIR1bits	set	12
   472  0005                     _PORTAbits	set	5
   473  0049                     _RE1	set	73
   474  0048                     _RE0	set	72
   475  0063                     _SSPIF	set	99
   476  005E                     _PEIE	set	94
   477  005F                     _GIE	set	95
   478  0064                     _TXIF	set	100
   479  0091                     _SSPCON2bits	set	145
   480  0087                     _TRISCbits	set	135
   481  0094                     _SSPSTAT	set	148
   482  0093                     _SSPADD	set	147
   483  0091                     _SSPCON2	set	145
   484  009A                     _SPBRGH	set	154
   485  0099                     _SPBRG	set	153
   486  0098                     _TXSTAbits	set	152
   487  008F                     _OSCCONbits	set	143
   488  0089                     _TRISE	set	137
   489  0088                     _TRISD	set	136
   490  0087                     _TRISC	set	135
   491  0086                     _TRISB	set	134
   492  0085                     _TRISA	set	133
   493  0463                     _SSPIE	set	1123
   494  043C                     _TRISC4	set	1084
   495  043B                     _TRISC3	set	1083
   496  0187                     _BAUDCTLbits	set	391
   497  0189                     _ANSELH	set	393
   498  0188                     _ANSEL	set	392
   499                           
   500                           	psect	strings
   501  0615                     __pstrings:
   502  0615                     stringtab:
   503  0615                     __stringtab:
   504  0615                     stringcode:	
   505                           ;	String table - string pointers are 1 byte each
   506                           
   507  0615                     stringdir:
   508  0615  3006               	movlw	high stringdir
   509  0616  008A               	movwf	10
   510  0617  0804               	movf	4,w
   511  0618  0A84               	incf	4,f
   512  0619  0782               	addwf	2,f
   513  061A                     __stringbase:
   514  061A  3400               	retlw	0
   515  061B                     __end_of__stringtab:
   516  061B                     STR_1:
   517  061B  3420               	retlw	32	;' '
   518  061C  3452               	retlw	82	;'R'
   519  061D  3448               	retlw	72	;'H'
   520  061E  343A               	retlw	58	;':'
   521  061F  3420               	retlw	32	;' '
   522  0620  3420               	retlw	32	;' '
   523  0621  3420               	retlw	32	;' '
   524  0622  3454               	retlw	84	;'T'
   525  0623  343A               	retlw	58	;':'
   526  0624  3420               	retlw	32	;' '
   527  0625  3420               	retlw	32	;' '
   528  0626  3420               	retlw	32	;' '
   529  0627  344C               	retlw	76	;'L'
   530  0628  3425               	retlw	37	;'%'
   531  0629  343A               	retlw	58	;':'
   532  062A  3400               	retlw	0
   533  062B                     STR_5:
   534  062B  3444               	retlw	68	;'D'
   535  062C  3449               	retlw	73	;'I'
   536  062D  3453               	retlw	83	;'S'
   537  062E  3450               	retlw	80	;'P'
   538  062F  3445               	retlw	69	;'E'
   539  0630  344E               	retlw	78	;'N'
   540  0631  3453               	retlw	83	;'S'
   541  0632  3441               	retlw	65	;'A'
   542  0633  344E               	retlw	78	;'N'
   543  0634  3444               	retlw	68	;'D'
   544  0635  344F               	retlw	79	;'O'
   545  0636  3400               	retlw	0
   546  0637                     STR_6:
   547  0637  3420               	retlw	32	;' '
   548  0638  3443               	retlw	67	;'C'
   549  0639  344F               	retlw	79	;'O'
   550  063A  344D               	retlw	77	;'M'
   551  063B  3449               	retlw	73	;'I'
   552  063C  3444               	retlw	68	;'D'
   553  063D  3441               	retlw	65	;'A'
   554  063E  342E               	retlw	46	;'.'
   555  063F  342E               	retlw	46	;'.'
   556  0640  342E               	retlw	46	;'.'
   557  0641  3400               	retlw	0
   558  0642                     STR_2:
   559  0642  3425               	retlw	37	;'%'
   560  0643  3420               	retlw	32	;' '
   561  0644  3420               	retlw	32	;' '
   562  0645  3420               	retlw	32	;' '
   563  0646  3400               	retlw	0
   564  0647                     STR_3:
   565  0647  3443               	retlw	67	;'C'
   566  0648  3420               	retlw	32	;' '
   567  0649  3420               	retlw	32	;' '
   568  064A  3400               	retlw	0
   569  064B                     STR_4:
   570  064B  3425               	retlw	37	;'%'
   571  064C  3400               	retlw	0
   572  0637                     
   573                           	psect	cinit
   574  0011                     start_initialization:	
   575                           ; #config settings
   576                           
   577  0011                     __initialization:
   578                           
   579                           ; Clear objects allocated to COMMON
   580  0011  01F6               	clrf	__pbssCOMMON& (0+127)
   581  0012  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   582  0013  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   583                           
   584                           ; Clear objects allocated to BANK0
   585  0014  1283               	bcf	3,5	;RP0=0, select bank0
   586  0015  1303               	bcf	3,6	;RP1=0, select bank0
   587  0016  01B8               	clrf	__pbssBANK0& (0+127)
   588  0017  01B9               	clrf	(__pbssBANK0+1)& (0+127)
   589  0018  01BA               	clrf	(__pbssBANK0+2)& (0+127)
   590  0019  01BB               	clrf	(__pbssBANK0+3)& (0+127)
   591  001A  01BC               	clrf	(__pbssBANK0+4)& (0+127)
   592  001B  01BD               	clrf	(__pbssBANK0+5)& (0+127)
   593  001C  01BE               	clrf	(__pbssBANK0+6)& (0+127)
   594  001D  01BF               	clrf	(__pbssBANK0+7)& (0+127)
   595  001E  01C0               	clrf	(__pbssBANK0+8)& (0+127)
   596  001F  01C1               	clrf	(__pbssBANK0+9)& (0+127)
   597  0020  01C2               	clrf	(__pbssBANK0+10)& (0+127)
   598  0021  01C3               	clrf	(__pbssBANK0+11)& (0+127)
   599  0022  01C4               	clrf	(__pbssBANK0+12)& (0+127)
   600  0023  01C5               	clrf	(__pbssBANK0+13)& (0+127)
   601  0024                     end_of_initialization:	
   602                           ;End of C runtime variable initialization code
   603                           
   604  0024                     __end_of__initialization:
   605  0024  0183               	clrf	3
   606  0025  120A  118A  2828   	ljmp	_main	;jump to C main() function
   607                           
   608                           	psect	bssCOMMON
   609  0076                     __pbssCOMMON:
   610  0076                     _tempRX:
   611  0076                     	ds	1
   612  0077                     _counter:
   613  0077                     	ds	1
   614  0078                     _F1:
   615  0078                     	ds	1
   616                           
   617                           	psect	bssBANK0
   618  0038                     __pbssBANK0:
   619  0038                     _LDR:
   620  0038                     	ds	2
   621  003A                     _cont1:
   622  003A                     	ds	1
   623  003B                     _cont:
   624  003B                     	ds	1
   625  003C                     _test:
   626  003C                     	ds	1
   627  003D                     _RH:
   628  003D                     	ds	1
   629  003E                     _Humidity:
   630  003E                     	ds	1
   631  003F                     _dec1_12:
   632  003F                     	ds	1
   633  0040                     _dec0_12:
   634  0040                     	ds	1
   635  0041                     _unit0_0:
   636  0041                     	ds	1
   637  0042                     _dec1:
   638  0042                     	ds	1
   639  0043                     _unit1:
   640  0043                     	ds	1
   641  0044                     _dec0:
   642  0044                     	ds	1
   643  0045                     _unit0:
   644  0045                     	ds	1
   645                           
   646                           	psect	cstackCOMMON
   647  0070                     __pcstackCOMMON:
   648  0070                     ?_initSETUP:
   649  0070                     ?_Lcd_Init:	
   650                           ; 1 bytes @ 0x0
   651                           
   652  0070                     ?_Lcd_Clear:	
   653                           ; 1 bytes @ 0x0
   654                           
   655  0070                     ?_Lcd_Write_String:	
   656                           ; 1 bytes @ 0x0
   657                           
   658  0070                     ?_I2C_Master_Start:	
   659                           ; 1 bytes @ 0x0
   660                           
   661  0070                     ?_I2C_Master_Stop:	
   662                           ; 1 bytes @ 0x0
   663                           
   664  0070                     ?_Lcd_Write_Char:	
   665                           ; 1 bytes @ 0x0
   666                           
   667  0070                     ?_main:	
   668                           ; 1 bytes @ 0x0
   669                           
   670  0070                     ?_isr:	
   671                           ; 1 bytes @ 0x0
   672                           
   673  0070                     ??_isr:	
   674                           ; 1 bytes @ 0x0
   675                           
   676  0070                     ?_I2C_Master_Wait:	
   677                           ; 1 bytes @ 0x0
   678                           
   679  0070                     ?_Lcd_Port:	
   680                           ; 1 bytes @ 0x0
   681                           
   682  0070                     ?_Lcd_Cmd:	
   683                           ; 1 bytes @ 0x0
   684                           
   685                           
   686                           ; 1 bytes @ 0x0
   687  0070                     	ds	5
   688  0075                     ??_I2C_Master_Start:
   689  0075                     ??_I2C_Master_Write:	
   690                           ; 1 bytes @ 0x5
   691                           
   692  0075                     ??_I2C_Master_Stop:	
   693                           ; 1 bytes @ 0x5
   694                           
   695  0075                     ??_I2C_Master_Wait:	
   696                           ; 1 bytes @ 0x5
   697                           
   698  0075                     ??_Lcd_Port:	
   699                           ; 1 bytes @ 0x5
   700                           
   701  0075                     ??___wmul:	
   702                           ; 1 bytes @ 0x5
   703                           
   704  0075                     ??___lldiv:	
   705                           ; 1 bytes @ 0x5
   706                           
   707  0075                     ??___awdiv:	
   708                           ; 1 bytes @ 0x5
   709                           
   710  0075                     ??___lwdiv:	
   711                           ; 1 bytes @ 0x5
   712                           
   713  0075                     Lcd_Port@a:	
   714                           ; 1 bytes @ 0x5
   715                           
   716                           
   717                           ; 1 bytes @ 0x5
   718  0075                     	ds	1
   719  0076                     ??_initSETUP:
   720  0076                     ??_Lcd_Clear:	
   721                           ; 1 bytes @ 0x6
   722                           
   723  0076                     ??_Lcd_Write_String:	
   724                           ; 1 bytes @ 0x6
   725                           
   726                           
   727                           	psect	cstackBANK0
   728  0020                     __pcstackBANK0:	
   729                           ; 1 bytes @ 0x6
   730                           
   731  0020                     ?_I2C_Master_Write:
   732  0020                     ??_Lcd_Write_Char:	
   733                           ; 1 bytes @ 0x0
   734                           
   735  0020                     ??_Lcd_Cmd:	
   736                           ; 1 bytes @ 0x0
   737                           
   738  0020                     ?_I2C_Master_Read:	
   739                           ; 1 bytes @ 0x0
   740                           
   741  0020                     ?___wmul:	
   742                           ; 2 bytes @ 0x0
   743                           
   744  0020                     ?___awdiv:	
   745                           ; 2 bytes @ 0x0
   746                           
   747  0020                     ?___lwdiv:	
   748                           ; 2 bytes @ 0x0
   749                           
   750  0020                     ?___lldiv:	
   751                           ; 2 bytes @ 0x0
   752                           
   753  0020                     I2C_Master_Write@d:	
   754                           ; 4 bytes @ 0x0
   755                           
   756  0020                     I2C_Master_Read@a:	
   757                           ; 2 bytes @ 0x0
   758                           
   759  0020                     ___wmul@multiplier:	
   760                           ; 2 bytes @ 0x0
   761                           
   762  0020                     ___awdiv@divisor:	
   763                           ; 2 bytes @ 0x0
   764                           
   765  0020                     ___lwdiv@divisor:	
   766                           ; 2 bytes @ 0x0
   767                           
   768  0020                     ___lldiv@divisor:	
   769                           ; 2 bytes @ 0x0
   770                           
   771                           
   772                           ; 4 bytes @ 0x0
   773  0020                     	ds	1
   774  0021                     Lcd_Write_Char@a:
   775                           
   776                           ; 1 bytes @ 0x1
   777  0021                     	ds	1
   778  0022                     ??_I2C_Master_Read:
   779  0022                     Lcd_Cmd@a:	
   780                           ; 1 bytes @ 0x2
   781                           
   782  0022                     Lcd_Write_Char@temp:	
   783                           ; 1 bytes @ 0x2
   784                           
   785  0022                     ___wmul@multiplicand:	
   786                           ; 1 bytes @ 0x2
   787                           
   788  0022                     ___awdiv@dividend:	
   789                           ; 2 bytes @ 0x2
   790                           
   791  0022                     ___lwdiv@dividend:	
   792                           ; 2 bytes @ 0x2
   793                           
   794                           
   795                           ; 2 bytes @ 0x2
   796  0022                     	ds	1
   797  0023                     ??_Lcd_Init:
   798  0023                     ?_Lcd_Set_Cursor:	
   799                           ; 1 bytes @ 0x3
   800                           
   801  0023                     Lcd_Set_Cursor@b:	
   802                           ; 1 bytes @ 0x3
   803                           
   804  0023                     Lcd_Write_Char@y:	
   805                           ; 1 bytes @ 0x3
   806                           
   807                           
   808                           ; 1 bytes @ 0x3
   809  0023                     	ds	1
   810  0024                     ??_Lcd_Set_Cursor:
   811  0024                     ___awdiv@counter:	
   812                           ; 1 bytes @ 0x4
   813                           
   814  0024                     ___lwdiv@counter:	
   815                           ; 1 bytes @ 0x4
   816                           
   817  0024                     I2C_Master_Read@temp:	
   818                           ; 1 bytes @ 0x4
   819                           
   820  0024                     Lcd_Write_String@i:	
   821                           ; 2 bytes @ 0x4
   822                           
   823  0024                     ___wmul@product:	
   824                           ; 2 bytes @ 0x4
   825                           
   826  0024                     ___lldiv@dividend:	
   827                           ; 2 bytes @ 0x4
   828                           
   829                           
   830                           ; 4 bytes @ 0x4
   831  0024                     	ds	1
   832  0025                     ___awdiv@sign:
   833  0025                     ___lwdiv@quotient:	
   834                           ; 1 bytes @ 0x5
   835                           
   836                           
   837                           ; 2 bytes @ 0x5
   838  0025                     	ds	1
   839  0026                     Lcd_Set_Cursor@a:
   840  0026                     Lcd_Write_String@a:	
   841                           ; 1 bytes @ 0x6
   842                           
   843  0026                     ___awdiv@quotient:	
   844                           ; 1 bytes @ 0x6
   845                           
   846                           
   847                           ; 2 bytes @ 0x6
   848  0026                     	ds	1
   849  0027                     ?_str_2_dc:
   850  0027                     Lcd_Set_Cursor@z:	
   851                           ; 1 bytes @ 0x7
   852                           
   853  0027                     str_2_dc@var:	
   854                           ; 1 bytes @ 0x7
   855                           
   856                           
   857                           ; 2 bytes @ 0x7
   858  0027                     	ds	1
   859  0028                     ?___awmod:
   860  0028                     Lcd_Set_Cursor@y:	
   861                           ; 2 bytes @ 0x8
   862                           
   863  0028                     ___awmod@divisor:	
   864                           ; 1 bytes @ 0x8
   865                           
   866  0028                     ___lldiv@quotient:	
   867                           ; 2 bytes @ 0x8
   868                           
   869                           
   870                           ; 4 bytes @ 0x8
   871  0028                     	ds	1
   872  0029                     ??_str_2_dc:
   873  0029                     Lcd_Set_Cursor@temp:	
   874                           ; 1 bytes @ 0x9
   875                           
   876                           
   877                           ; 1 bytes @ 0x9
   878  0029                     	ds	1
   879  002A                     ___awmod@dividend:
   880                           
   881                           ; 2 bytes @ 0xA
   882  002A                     	ds	1
   883  002B                     str_2_dc@vcv:
   884                           
   885                           ; 2 bytes @ 0xB
   886  002B                     	ds	1
   887  002C                     ??___awmod:
   888  002C                     ___lldiv@counter:	
   889                           ; 1 bytes @ 0xC
   890                           
   891                           
   892                           ; 1 bytes @ 0xC
   893  002C                     	ds	1
   894  002D                     ?_I2C_Master_Init:
   895  002D                     ___awmod@counter:	
   896                           ; 1 bytes @ 0xD
   897                           
   898  002D                     I2C_Master_Init@c:	
   899                           ; 1 bytes @ 0xD
   900                           
   901                           
   902                           ; 4 bytes @ 0xD
   903  002D                     	ds	1
   904  002E                     ___awmod@sign:
   905                           
   906                           ; 1 bytes @ 0xE
   907  002E                     	ds	3
   908  0031                     ??_I2C_Master_Init:
   909                           
   910                           ; 1 bytes @ 0x11
   911  0031                     	ds	4
   912  0035                     ??_main:
   913                           
   914                           ; 1 bytes @ 0x15
   915  0035                     	ds	3
   916                           
   917                           	psect	maintext
   918  0028                     __pmaintext:	
   919 ;;
   920 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   921 ;;
   922 ;; *************** function _main *****************
   923 ;; Defined at:
   924 ;;		line 49 in file "master.c"
   925 ;; Parameters:    Size  Location     Type
   926 ;;		None
   927 ;; Auto vars:     Size  Location     Type
   928 ;;		None
   929 ;; Return value:  Size  Location     Type
   930 ;;                  1    wreg      void 
   931 ;; Registers used:
   932 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   933 ;; Tracked objects:
   934 ;;		On entry : B00/0
   935 ;;		On exit  : 0/0
   936 ;;		Unchanged: 0/0
   937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   938 ;;      Params:         0       0       0       0       0
   939 ;;      Locals:         0       0       0       0       0
   940 ;;      Temps:          0       3       0       0       0
   941 ;;      Totals:         0       3       0       0       0
   942 ;;Total ram usage:        3 bytes
   943 ;; Hardware stack levels required when called: 4
   944 ;; This function calls:
   945 ;;		_I2C_Master_Read
   946 ;;		_I2C_Master_Start
   947 ;;		_I2C_Master_Stop
   948 ;;		_I2C_Master_Write
   949 ;;		_Lcd_Clear
   950 ;;		_Lcd_Init
   951 ;;		_Lcd_Set_Cursor
   952 ;;		_Lcd_Write_Char
   953 ;;		_Lcd_Write_String
   954 ;;		___awdiv
   955 ;;		___awmod
   956 ;;		_initSETUP
   957 ;;		_str_2_dc
   958 ;; This function is called by:
   959 ;;		Startup code after reset
   960 ;; This function uses a non-reentrant model
   961 ;;
   962                           
   963                           
   964                           ;psect for function _main
   965  0028                     _main:
   966  0028                     l2166:	
   967                           ;incstack = 0
   968                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   969                           
   970                           
   971                           ;master.c: 50:     initSETUP();
   972  0028  120A  118A  259E  120A  118A  	fcall	_initSETUP
   973                           
   974                           ;master.c: 51:     Lcd_Init();
   975  002D  120A  118A  250C  120A  118A  	fcall	_Lcd_Init
   976                           
   977                           ;master.c: 52:     Lcd_Clear();
   978  0032  120A  118A  2743  120A  118A  	fcall	_Lcd_Clear
   979                           
   980                           ;master.c: 53:     Lcd_Set_Cursor(1,1);
   981  0037  1283               	bcf	3,5	;RP0=0, select bank0
   982  0038  1303               	bcf	3,6	;RP1=0, select bank0
   983  0039  01A3               	clrf	Lcd_Set_Cursor@b
   984  003A  0AA3               	incf	Lcd_Set_Cursor@b,f
   985  003B  3001               	movlw	1
   986  003C  120A  118A  24B4  120A  118A  	fcall	_Lcd_Set_Cursor
   987  0041                     l2168:
   988                           
   989                           ;master.c: 54:     Lcd_Write_String(" RH:   T:   L%:");
   990  0041  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   991  0042  120A  118A  26B7  120A  118A  	fcall	_Lcd_Write_String
   992  0047                     l2170:
   993                           
   994                           ;master.c: 56:         I2C_Master_Start();
   995  0047  120A  118A  2770  120A  118A  	fcall	_I2C_Master_Start
   996  004C                     l2172:
   997                           
   998                           ;master.c: 57:         I2C_Master_Write(0x81);
   999  004C  3081               	movlw	129
  1000  004D  1283               	bcf	3,5	;RP0=0, select bank0
  1001  004E  1303               	bcf	3,6	;RP1=0, select bank0
  1002  004F  00A0               	movwf	I2C_Master_Write@d
  1003  0050  3000               	movlw	0
  1004  0051  00A1               	movwf	I2C_Master_Write@d+1
  1005  0052  120A  118A  275D  120A  118A  	fcall	_I2C_Master_Write
  1006  0057                     l2174:
  1007                           
  1008                           ;master.c: 58:         if (test==0){
  1009  0057  1283               	bcf	3,5	;RP0=0, select bank0
  1010  0058  1303               	bcf	3,6	;RP1=0, select bank0
  1011  0059  083C               	movf	_test,w
  1012  005A  1D03               	btfss	3,2
  1013  005B  285D               	goto	u1491
  1014  005C  285E               	goto	u1490
  1015  005D                     u1491:
  1016  005D  286F               	goto	l2180
  1017  005E                     u1490:
  1018  005E                     l2176:
  1019                           
  1020                           ;master.c: 59:                 RH=I2C_Master_Read(0);
  1021  005E  3000               	movlw	0
  1022  005F  00A0               	movwf	I2C_Master_Read@a
  1023  0060  00A1               	movwf	I2C_Master_Read@a+1
  1024  0061  120A  118A  2685  120A  118A  	fcall	_I2C_Master_Read
  1025  0066  1283               	bcf	3,5	;RP0=0, select bank0
  1026  0067  1303               	bcf	3,6	;RP1=0, select bank0
  1027  0068  0820               	movf	?_I2C_Master_Read,w
  1028  0069  00B5               	movwf	??_main
  1029  006A  0835               	movf	??_main,w
  1030  006B  00BD               	movwf	_RH
  1031  006C                     l2178:
  1032                           
  1033                           ;master.c: 60:                 test = 1;
  1034  006C  01BC               	clrf	_test
  1035  006D  0ABC               	incf	_test,f
  1036                           
  1037                           ;master.c: 61:             }
  1038  006E  2883               	goto	l2186
  1039  006F                     l2180:
  1040  006F  033C               	decf	_test,w
  1041  0070  1D03               	btfss	3,2
  1042  0071  2873               	goto	u1501
  1043  0072  2874               	goto	u1500
  1044  0073                     u1501:
  1045  0073  2883               	goto	l2186
  1046  0074                     u1500:
  1047  0074                     l2182:
  1048                           
  1049                           ;master.c: 63:                 Humidity=I2C_Master_Read(0);
  1050  0074  3000               	movlw	0
  1051  0075  00A0               	movwf	I2C_Master_Read@a
  1052  0076  00A1               	movwf	I2C_Master_Read@a+1
  1053  0077  120A  118A  2685  120A  118A  	fcall	_I2C_Master_Read
  1054  007C  1283               	bcf	3,5	;RP0=0, select bank0
  1055  007D  1303               	bcf	3,6	;RP1=0, select bank0
  1056  007E  0820               	movf	?_I2C_Master_Read,w
  1057  007F  00B5               	movwf	??_main
  1058  0080  0835               	movf	??_main,w
  1059  0081  00BE               	movwf	_Humidity
  1060  0082                     l2184:
  1061                           
  1062                           ;master.c: 64:                 test = 0;
  1063  0082  01BC               	clrf	_test
  1064  0083                     l2186:
  1065                           
  1066                           ;master.c: 66:         I2C_Master_Stop();
  1067  0083  120A  118A  2767  120A  118A  	fcall	_I2C_Master_Stop
  1068  0088                     l2188:
  1069                           
  1070                           ;master.c: 67:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1071  0088  3003               	movlw	3
  1072  0089  1283               	bcf	3,5	;RP0=0, select bank0
  1073  008A  1303               	bcf	3,6	;RP1=0, select bank0
  1074  008B  00B7               	movwf	??_main+2
  1075  008C  3008               	movlw	8
  1076  008D  00B6               	movwf	??_main+1
  1077  008E  3076               	movlw	118
  1078  008F  00B5               	movwf	??_main
  1079  0090                     u1607:
  1080  0090  0BB5               	decfsz	??_main,f
  1081  0091  2890               	goto	u1607
  1082  0092  0BB6               	decfsz	??_main+1,f
  1083  0093  2890               	goto	u1607
  1084  0094  0BB7               	decfsz	??_main+2,f
  1085  0095  2890               	goto	u1607
  1086  0096  0000               	nop
  1087  0097                     l2190:
  1088                           
  1089                           ;master.c: 68:         I2C_Master_Start();
  1090  0097  120A  118A  2770  120A  118A  	fcall	_I2C_Master_Start
  1091  009C                     l2192:
  1092                           
  1093                           ;master.c: 69:         I2C_Master_Write(0x61);
  1094  009C  3061               	movlw	97
  1095  009D  1283               	bcf	3,5	;RP0=0, select bank0
  1096  009E  1303               	bcf	3,6	;RP1=0, select bank0
  1097  009F  00A0               	movwf	I2C_Master_Write@d
  1098  00A0  3000               	movlw	0
  1099  00A1  00A1               	movwf	I2C_Master_Write@d+1
  1100  00A2  120A  118A  275D  120A  118A  	fcall	_I2C_Master_Write
  1101  00A7                     l2194:
  1102                           
  1103                           ;master.c: 70:         LDR = I2C_Master_Read(0);
  1104  00A7  3000               	movlw	0
  1105  00A8  1283               	bcf	3,5	;RP0=0, select bank0
  1106  00A9  1303               	bcf	3,6	;RP1=0, select bank0
  1107  00AA  00A0               	movwf	I2C_Master_Read@a
  1108  00AB  00A1               	movwf	I2C_Master_Read@a+1
  1109  00AC  120A  118A  2685  120A  118A  	fcall	_I2C_Master_Read
  1110  00B1  1283               	bcf	3,5	;RP0=0, select bank0
  1111  00B2  1303               	bcf	3,6	;RP1=0, select bank0
  1112  00B3  0821               	movf	?_I2C_Master_Read+1,w
  1113  00B4  00B9               	movwf	_LDR+1
  1114  00B5  0820               	movf	?_I2C_Master_Read,w
  1115  00B6  00B8               	movwf	_LDR
  1116  00B7                     l2196:
  1117                           
  1118                           ;master.c: 71:         I2C_Master_Stop();
  1119  00B7  120A  118A  2767  120A  118A  	fcall	_I2C_Master_Stop
  1120  00BC                     l2198:
  1121                           
  1122                           ;master.c: 72:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1123  00BC  3003               	movlw	3
  1124  00BD  1283               	bcf	3,5	;RP0=0, select bank0
  1125  00BE  1303               	bcf	3,6	;RP1=0, select bank0
  1126  00BF  00B7               	movwf	??_main+2
  1127  00C0  3008               	movlw	8
  1128  00C1  00B6               	movwf	??_main+1
  1129  00C2  3076               	movlw	118
  1130  00C3  00B5               	movwf	??_main
  1131  00C4                     u1617:
  1132  00C4  0BB5               	decfsz	??_main,f
  1133  00C5  28C4               	goto	u1617
  1134  00C6  0BB6               	decfsz	??_main+1,f
  1135  00C7  28C4               	goto	u1617
  1136  00C8  0BB7               	decfsz	??_main+2,f
  1137  00C9  28C4               	goto	u1617
  1138  00CA  0000               	nop
  1139  00CB                     l2200:
  1140                           
  1141                           ;master.c: 73:         Lcd_Set_Cursor(2,1);
  1142  00CB  1283               	bcf	3,5	;RP0=0, select bank0
  1143  00CC  1303               	bcf	3,6	;RP1=0, select bank0
  1144  00CD  01A3               	clrf	Lcd_Set_Cursor@b
  1145  00CE  0AA3               	incf	Lcd_Set_Cursor@b,f
  1146  00CF  3002               	movlw	2
  1147  00D0  120A  118A  24B4  120A  118A  	fcall	_Lcd_Set_Cursor
  1148  00D5                     l2202:
  1149                           
  1150                           ;master.c: 75:         unit0 = 48 + ((Humidity/10) %10);
  1151  00D5  300A               	movlw	10
  1152  00D6  1283               	bcf	3,5	;RP0=0, select bank0
  1153  00D7  1303               	bcf	3,6	;RP1=0, select bank0
  1154  00D8  00A8               	movwf	___awmod@divisor
  1155  00D9  3000               	movlw	0
  1156  00DA  00A9               	movwf	___awmod@divisor+1
  1157  00DB  300A               	movlw	10
  1158  00DC  00A0               	movwf	___awdiv@divisor
  1159  00DD  3000               	movlw	0
  1160  00DE  00A1               	movwf	___awdiv@divisor+1
  1161  00DF  083E               	movf	_Humidity,w
  1162  00E0  00B5               	movwf	??_main
  1163  00E1  01B6               	clrf	??_main+1
  1164  00E2  0835               	movf	??_main,w
  1165  00E3  00A2               	movwf	___awdiv@dividend
  1166  00E4  0836               	movf	??_main+1,w
  1167  00E5  00A3               	movwf	___awdiv@dividend+1
  1168  00E6  120A  118A  2388  120A  118A  	fcall	___awdiv
  1169  00EB  1283               	bcf	3,5	;RP0=0, select bank0
  1170  00EC  1303               	bcf	3,6	;RP1=0, select bank0
  1171  00ED  0821               	movf	?___awdiv+1,w
  1172  00EE  00AB               	movwf	___awmod@dividend+1
  1173  00EF  0820               	movf	?___awdiv,w
  1174  00F0  00AA               	movwf	___awmod@dividend
  1175  00F1  120A  118A  2459  120A  118A  	fcall	___awmod
  1176  00F6  1283               	bcf	3,5	;RP0=0, select bank0
  1177  00F7  1303               	bcf	3,6	;RP1=0, select bank0
  1178  00F8  0828               	movf	?___awmod,w
  1179  00F9  3E30               	addlw	48
  1180  00FA  00B7               	movwf	??_main+2
  1181  00FB  0837               	movf	??_main+2,w
  1182  00FC  00C5               	movwf	_unit0
  1183  00FD                     l2204:
  1184                           
  1185                           ;master.c: 76:         dec0 = 48 + (Humidity %10);
  1186  00FD  300A               	movlw	10
  1187  00FE  00A8               	movwf	___awmod@divisor
  1188  00FF  3000               	movlw	0
  1189  0100  00A9               	movwf	___awmod@divisor+1
  1190  0101  083E               	movf	_Humidity,w
  1191  0102  00B5               	movwf	??_main
  1192  0103  01B6               	clrf	??_main+1
  1193  0104  0835               	movf	??_main,w
  1194  0105  00AA               	movwf	___awmod@dividend
  1195  0106  0836               	movf	??_main+1,w
  1196  0107  00AB               	movwf	___awmod@dividend+1
  1197  0108  120A  118A  2459  120A  118A  	fcall	___awmod
  1198  010D  1283               	bcf	3,5	;RP0=0, select bank0
  1199  010E  1303               	bcf	3,6	;RP1=0, select bank0
  1200  010F  0828               	movf	?___awmod,w
  1201  0110  3E30               	addlw	48
  1202  0111  00B7               	movwf	??_main+2
  1203  0112  0837               	movf	??_main+2,w
  1204  0113  00C4               	movwf	_dec0
  1205  0114                     l2206:
  1206                           
  1207                           ;master.c: 77:         unit1 =48 + ((RH / 10) % 10);
  1208  0114  300A               	movlw	10
  1209  0115  00A8               	movwf	___awmod@divisor
  1210  0116  3000               	movlw	0
  1211  0117  00A9               	movwf	___awmod@divisor+1
  1212  0118  300A               	movlw	10
  1213  0119  00A0               	movwf	___awdiv@divisor
  1214  011A  3000               	movlw	0
  1215  011B  00A1               	movwf	___awdiv@divisor+1
  1216  011C  083D               	movf	_RH,w
  1217  011D  00B5               	movwf	??_main
  1218  011E  01B6               	clrf	??_main+1
  1219  011F  0835               	movf	??_main,w
  1220  0120  00A2               	movwf	___awdiv@dividend
  1221  0121  0836               	movf	??_main+1,w
  1222  0122  00A3               	movwf	___awdiv@dividend+1
  1223  0123  120A  118A  2388  120A  118A  	fcall	___awdiv
  1224  0128  1283               	bcf	3,5	;RP0=0, select bank0
  1225  0129  1303               	bcf	3,6	;RP1=0, select bank0
  1226  012A  0821               	movf	?___awdiv+1,w
  1227  012B  00AB               	movwf	___awmod@dividend+1
  1228  012C  0820               	movf	?___awdiv,w
  1229  012D  00AA               	movwf	___awmod@dividend
  1230  012E  120A  118A  2459  120A  118A  	fcall	___awmod
  1231  0133  1283               	bcf	3,5	;RP0=0, select bank0
  1232  0134  1303               	bcf	3,6	;RP1=0, select bank0
  1233  0135  0828               	movf	?___awmod,w
  1234  0136  3E30               	addlw	48
  1235  0137  00B7               	movwf	??_main+2
  1236  0138  0837               	movf	??_main+2,w
  1237  0139  00C3               	movwf	_unit1
  1238  013A                     l2208:
  1239                           
  1240                           ;master.c: 78:         dec1 = 48 + (RH % 10);
  1241  013A  300A               	movlw	10
  1242  013B  00A8               	movwf	___awmod@divisor
  1243  013C  3000               	movlw	0
  1244  013D  00A9               	movwf	___awmod@divisor+1
  1245  013E  083D               	movf	_RH,w
  1246  013F  00B5               	movwf	??_main
  1247  0140  01B6               	clrf	??_main+1
  1248  0141  0835               	movf	??_main,w
  1249  0142  00AA               	movwf	___awmod@dividend
  1250  0143  0836               	movf	??_main+1,w
  1251  0144  00AB               	movwf	___awmod@dividend+1
  1252  0145  120A  118A  2459  120A  118A  	fcall	___awmod
  1253  014A  1283               	bcf	3,5	;RP0=0, select bank0
  1254  014B  1303               	bcf	3,6	;RP1=0, select bank0
  1255  014C  0828               	movf	?___awmod,w
  1256  014D  3E30               	addlw	48
  1257  014E  00B7               	movwf	??_main+2
  1258  014F  0837               	movf	??_main+2,w
  1259  0150  00C2               	movwf	_dec1
  1260  0151                     l2210:
  1261                           
  1262                           ;master.c: 81:         Lcd_Write_Char(unit0);
  1263  0151  0845               	movf	_unit0,w
  1264  0152  120A  118A  2707  120A  118A  	fcall	_Lcd_Write_Char
  1265  0157                     l2212:
  1266                           
  1267                           ;master.c: 82:         Lcd_Write_Char(dec0);
  1268  0157  1283               	bcf	3,5	;RP0=0, select bank0
  1269  0158  1303               	bcf	3,6	;RP1=0, select bank0
  1270  0159  0844               	movf	_dec0,w
  1271  015A  120A  118A  2707  120A  118A  	fcall	_Lcd_Write_Char
  1272  015F                     l2214:
  1273                           
  1274                           ;master.c: 83:         Lcd_Write_String("%   ");
  1275  015F  3028               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1276  0160  120A  118A  26B7  120A  118A  	fcall	_Lcd_Write_String
  1277  0165                     l2216:
  1278                           
  1279                           ;master.c: 84:         Lcd_Write_Char(unit1);
  1280  0165  1283               	bcf	3,5	;RP0=0, select bank0
  1281  0166  1303               	bcf	3,6	;RP1=0, select bank0
  1282  0167  0843               	movf	_unit1,w
  1283  0168  120A  118A  2707  120A  118A  	fcall	_Lcd_Write_Char
  1284  016D                     l2218:
  1285                           
  1286                           ;master.c: 85:         Lcd_Write_Char(dec1);
  1287  016D  1283               	bcf	3,5	;RP0=0, select bank0
  1288  016E  1303               	bcf	3,6	;RP1=0, select bank0
  1289  016F  0842               	movf	_dec1,w
  1290  0170  120A  118A  2707  120A  118A  	fcall	_Lcd_Write_Char
  1291  0175                     l2220:
  1292                           
  1293                           ;master.c: 86:         Lcd_Write_Char(223);
  1294  0175  30DF               	movlw	223
  1295  0176  120A  118A  2707  120A  118A  	fcall	_Lcd_Write_Char
  1296  017B                     l2222:
  1297                           
  1298                           ;master.c: 87:         Lcd_Write_String("C  ");
  1299  017B  302D               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1300  017C  120A  118A  26B7  120A  118A  	fcall	_Lcd_Write_String
  1301  0181                     l2224:
  1302                           
  1303                           ;master.c: 89:         str_2_dc(LDR);
  1304  0181  1283               	bcf	3,5	;RP0=0, select bank0
  1305  0182  1303               	bcf	3,6	;RP1=0, select bank0
  1306  0183  0839               	movf	_LDR+1,w
  1307  0184  00A8               	movwf	str_2_dc@var+1
  1308  0185  0838               	movf	_LDR,w
  1309  0186  00A7               	movwf	str_2_dc@var
  1310  0187  120A  118A  2314  120A  118A  	fcall	_str_2_dc
  1311  018C                     l2226:
  1312                           
  1313                           ;master.c: 90:         Lcd_Write_Char(unit0_0);
  1314  018C  1283               	bcf	3,5	;RP0=0, select bank0
  1315  018D  1303               	bcf	3,6	;RP1=0, select bank0
  1316  018E  0841               	movf	_unit0_0,w
  1317  018F  120A  118A  2707  120A  118A  	fcall	_Lcd_Write_Char
  1318  0194                     l2228:
  1319                           
  1320                           ;master.c: 91:         Lcd_Write_Char(dec0_12);
  1321  0194  1283               	bcf	3,5	;RP0=0, select bank0
  1322  0195  1303               	bcf	3,6	;RP1=0, select bank0
  1323  0196  0840               	movf	_dec0_12,w
  1324  0197  120A  118A  2707  120A  118A  	fcall	_Lcd_Write_Char
  1325  019C                     l2230:
  1326                           
  1327                           ;master.c: 92:         Lcd_Write_Char(dec1_12);
  1328  019C  1283               	bcf	3,5	;RP0=0, select bank0
  1329  019D  1303               	bcf	3,6	;RP1=0, select bank0
  1330  019E  083F               	movf	_dec1_12,w
  1331  019F  120A  118A  2707  120A  118A  	fcall	_Lcd_Write_Char
  1332  01A4                     l2232:
  1333                           
  1334                           ;master.c: 93:         Lcd_Write_String("%");
  1335  01A4  3031               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1336  01A5  120A  118A  26B7  120A  118A  	fcall	_Lcd_Write_String
  1337  01AA                     l2234:
  1338                           
  1339                           ;master.c: 97:         if(RH>34 && cont ==1){
  1340  01AA  3023               	movlw	35
  1341  01AB  1283               	bcf	3,5	;RP0=0, select bank0
  1342  01AC  1303               	bcf	3,6	;RP1=0, select bank0
  1343  01AD  023D               	subwf	_RH,w
  1344  01AE  1C03               	skipc
  1345  01AF  29B1               	goto	u1511
  1346  01B0  29B2               	goto	u1510
  1347  01B1                     u1511:
  1348  01B1  29CC               	goto	l2246
  1349  01B2                     u1510:
  1350  01B2                     l2236:
  1351  01B2  033B               	decf	_cont,w
  1352  01B3  1D03               	btfss	3,2
  1353  01B4  29B6               	goto	u1521
  1354  01B5  29B7               	goto	u1520
  1355  01B6                     u1521:
  1356  01B6  29CC               	goto	l2246
  1357  01B7                     u1520:
  1358  01B7                     l2238:
  1359                           
  1360                           ;master.c: 99:             PORTAbits.RA3 = 1;
  1361  01B7  1585               	bsf	5,3	;volatile
  1362  01B8                     l2240:
  1363                           
  1364                           ;master.c: 100:             _delay((unsigned long)((3000)*(8000000/4000.0)));
  1365  01B8  301F               	movlw	31
  1366  01B9  1283               	bcf	3,5	;RP0=0, select bank0
  1367  01BA  1303               	bcf	3,6	;RP1=0, select bank0
  1368  01BB  00B7               	movwf	??_main+2
  1369  01BC  3071               	movlw	113
  1370  01BD  00B6               	movwf	??_main+1
  1371  01BE  301D               	movlw	29
  1372  01BF  00B5               	movwf	??_main
  1373  01C0                     u1627:
  1374  01C0  0BB5               	decfsz	??_main,f
  1375  01C1  29C0               	goto	u1627
  1376  01C2  0BB6               	decfsz	??_main+1,f
  1377  01C3  29C0               	goto	u1627
  1378  01C4  0BB7               	decfsz	??_main+2,f
  1379  01C5  29C0               	goto	u1627
  1380  01C6  29C7               	nop2
  1381  01C7                     l2242:
  1382                           
  1383                           ;master.c: 101:             PORTAbits.RA3 = 0;
  1384  01C7  1283               	bcf	3,5	;RP0=0, select bank0
  1385  01C8  1303               	bcf	3,6	;RP1=0, select bank0
  1386  01C9  1185               	bcf	5,3	;volatile
  1387  01CA                     l2244:
  1388                           
  1389                           ;master.c: 102:             cont =0;
  1390  01CA  01BB               	clrf	_cont
  1391                           
  1392                           ;master.c: 103:         }
  1393  01CB  2847               	goto	l2170
  1394  01CC                     l2246:
  1395  01CC  3023               	movlw	35
  1396  01CD  023D               	subwf	_RH,w
  1397  01CE  1803               	skipnc
  1398  01CF  29D1               	goto	u1531
  1399  01D0  29D2               	goto	u1530
  1400  01D1                     u1531:
  1401  01D1  29DB               	goto	l2252
  1402  01D2                     u1530:
  1403  01D2                     l2248:
  1404  01D2  083B               	movf	_cont,w
  1405  01D3  1D03               	btfss	3,2
  1406  01D4  29D6               	goto	u1541
  1407  01D5  29D7               	goto	u1540
  1408  01D6                     u1541:
  1409  01D6  29DB               	goto	l2252
  1410  01D7                     u1540:
  1411  01D7                     l2250:
  1412                           
  1413                           ;master.c: 105:             PORTAbits.RA3 = 0;
  1414  01D7  1185               	bcf	5,3	;volatile
  1415                           
  1416                           ;master.c: 106:             cont = 1;
  1417  01D8  01BB               	clrf	_cont
  1418  01D9  0ABB               	incf	_cont,f
  1419                           
  1420                           ;master.c: 108:         }
  1421  01DA  2847               	goto	l2170
  1422  01DB                     l2252:
  1423  01DB  083A               	movf	_cont1,w
  1424  01DC  1D03               	btfss	3,2
  1425  01DD  29DF               	goto	u1551
  1426  01DE  29E0               	goto	u1550
  1427  01DF                     u1551:
  1428  01DF  2A02               	goto	l2262
  1429  01E0                     u1550:
  1430  01E0                     l2254:
  1431                           
  1432                           ;master.c: 111:             PORTAbits.RA0 = 1;
  1433  01E0  1405               	bsf	5,0	;volatile
  1434  01E1                     l2256:
  1435                           
  1436                           ;master.c: 112:             _delay((unsigned long)((2000)*(8000000/4000000.0)));
  1437  01E1  3006               	movlw	6
  1438  01E2  1283               	bcf	3,5	;RP0=0, select bank0
  1439  01E3  1303               	bcf	3,6	;RP1=0, select bank0
  1440  01E4  00B6               	movwf	??_main+1
  1441  01E5  302F               	movlw	47
  1442  01E6  00B5               	movwf	??_main
  1443  01E7                     u1637:
  1444  01E7  0BB5               	decfsz	??_main,f
  1445  01E8  29E7               	goto	u1637
  1446  01E9  0BB6               	decfsz	??_main+1,f
  1447  01EA  29E7               	goto	u1637
  1448  01EB  29EC               	nop2
  1449  01EC                     l2258:
  1450                           
  1451                           ;master.c: 113:             PORTAbits.RA0 = 0;
  1452  01EC  1283               	bcf	3,5	;RP0=0, select bank0
  1453  01ED  1303               	bcf	3,6	;RP1=0, select bank0
  1454  01EE  1005               	bcf	5,0	;volatile
  1455                           
  1456                           ;master.c: 114:             _delay((unsigned long)((1000)*(8000000/4000.0)));
  1457  01EF  300B               	movlw	11
  1458  01F0  1283               	bcf	3,5	;RP0=0, select bank0
  1459  01F1  1303               	bcf	3,6	;RP1=0, select bank0
  1460  01F2  00B7               	movwf	??_main+2
  1461  01F3  3026               	movlw	38
  1462  01F4  00B6               	movwf	??_main+1
  1463  01F5  305D               	movlw	93
  1464  01F6  00B5               	movwf	??_main
  1465  01F7                     u1647:
  1466  01F7  0BB5               	decfsz	??_main,f
  1467  01F8  29F7               	goto	u1647
  1468  01F9  0BB6               	decfsz	??_main+1,f
  1469  01FA  29F7               	goto	u1647
  1470  01FB  0BB7               	decfsz	??_main+2,f
  1471  01FC  29F7               	goto	u1647
  1472  01FD                     l2260:
  1473                           
  1474                           ;master.c: 115:             cont1 = 1;
  1475  01FD  1283               	bcf	3,5	;RP0=0, select bank0
  1476  01FE  1303               	bcf	3,6	;RP1=0, select bank0
  1477  01FF  01BA               	clrf	_cont1
  1478  0200  0ABA               	incf	_cont1,f
  1479                           
  1480                           ;master.c: 117:         }
  1481  0201  2847               	goto	l2170
  1482  0202                     l2262:
  1483  0202  0839               	movf	_LDR+1,w
  1484  0203  3A80               	xorlw	128
  1485  0204  00FF               	movwf	btemp+1
  1486  0205  3080               	movlw	128
  1487  0206  027F               	subwf	btemp+1,w
  1488  0207  1D03               	skipz
  1489  0208  2A0B               	goto	u1565
  1490  0209  3015               	movlw	21
  1491  020A  0238               	subwf	_LDR,w
  1492  020B                     u1565:
  1493  020B  1803               	skipnc
  1494  020C  2A0E               	goto	u1561
  1495  020D  2A0F               	goto	u1560
  1496  020E                     u1561:
  1497  020E  2A8A               	goto	l2296
  1498  020F                     u1560:
  1499  020F                     l2264:
  1500  020F  1283               	bcf	3,5	;RP0=0, select bank0
  1501  0210  1303               	bcf	3,6	;RP1=0, select bank0
  1502  0211  033A               	decf	_cont1,w
  1503  0212  1D03               	btfss	3,2
  1504  0213  2A15               	goto	u1571
  1505  0214  2A16               	goto	u1570
  1506  0215                     u1571:
  1507  0215  2A8A               	goto	l2296
  1508  0216                     u1570:
  1509  0216                     l2266:
  1510                           
  1511                           ;master.c: 120:             cont1 = 0;
  1512  0216  01BA               	clrf	_cont1
  1513  0217                     l2268:
  1514                           
  1515                           ;master.c: 121:             PORTAbits.RA0 = 1;
  1516  0217  1405               	bsf	5,0	;volatile
  1517  0218                     l2270:
  1518                           
  1519                           ;master.c: 122:             _delay((unsigned long)((1000)*(8000000/4000000.0)));
  1520  0218  3003               	movlw	3
  1521  0219  1283               	bcf	3,5	;RP0=0, select bank0
  1522  021A  1303               	bcf	3,6	;RP1=0, select bank0
  1523  021B  00B6               	movwf	??_main+1
  1524  021C  3097               	movlw	151
  1525  021D  00B5               	movwf	??_main
  1526  021E                     u1657:
  1527  021E  0BB5               	decfsz	??_main,f
  1528  021F  2A1E               	goto	u1657
  1529  0220  0BB6               	decfsz	??_main+1,f
  1530  0221  2A1E               	goto	u1657
  1531  0222                     l2272:
  1532                           
  1533                           ;master.c: 123:             PORTAbits.RA0 = 0;
  1534  0222  1283               	bcf	3,5	;RP0=0, select bank0
  1535  0223  1303               	bcf	3,6	;RP1=0, select bank0
  1536  0224  1005               	bcf	5,0	;volatile
  1537  0225                     l2274:
  1538                           
  1539                           ;master.c: 124:             _delay((unsigned long)((1000)*(8000000/4000.0)));
  1540  0225  300B               	movlw	11
  1541  0226  1283               	bcf	3,5	;RP0=0, select bank0
  1542  0227  1303               	bcf	3,6	;RP1=0, select bank0
  1543  0228  00B7               	movwf	??_main+2
  1544  0229  3026               	movlw	38
  1545  022A  00B6               	movwf	??_main+1
  1546  022B  305D               	movlw	93
  1547  022C  00B5               	movwf	??_main
  1548  022D                     u1667:
  1549  022D  0BB5               	decfsz	??_main,f
  1550  022E  2A2D               	goto	u1667
  1551  022F  0BB6               	decfsz	??_main+1,f
  1552  0230  2A2D               	goto	u1667
  1553  0231  0BB7               	decfsz	??_main+2,f
  1554  0232  2A2D               	goto	u1667
  1555  0233                     l2276:
  1556                           
  1557                           ;master.c: 125:             Lcd_Clear();
  1558  0233  120A  118A  2743  120A  118A  	fcall	_Lcd_Clear
  1559  0238                     l2278:
  1560                           
  1561                           ;master.c: 126:             Lcd_Set_Cursor(1,1);
  1562  0238  1283               	bcf	3,5	;RP0=0, select bank0
  1563  0239  1303               	bcf	3,6	;RP1=0, select bank0
  1564  023A  01A3               	clrf	Lcd_Set_Cursor@b
  1565  023B  0AA3               	incf	Lcd_Set_Cursor@b,f
  1566  023C  3001               	movlw	1
  1567  023D  120A  118A  24B4  120A  118A  	fcall	_Lcd_Set_Cursor
  1568  0242                     l2280:
  1569                           
  1570                           ;master.c: 127:             Lcd_Write_String("DISPENSANDO");
  1571  0242  3011               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1572  0243  120A  118A  26B7  120A  118A  	fcall	_Lcd_Write_String
  1573  0248                     l2282:
  1574                           
  1575                           ;master.c: 128:             Lcd_Set_Cursor(2,1);
  1576  0248  1283               	bcf	3,5	;RP0=0, select bank0
  1577  0249  1303               	bcf	3,6	;RP1=0, select bank0
  1578  024A  01A3               	clrf	Lcd_Set_Cursor@b
  1579  024B  0AA3               	incf	Lcd_Set_Cursor@b,f
  1580  024C  3002               	movlw	2
  1581  024D  120A  118A  24B4  120A  118A  	fcall	_Lcd_Set_Cursor
  1582  0252                     l2284:
  1583                           
  1584                           ;master.c: 129:             Lcd_Write_String(" COMIDA...");
  1585  0252  301D               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1586  0253  120A  118A  26B7  120A  118A  	fcall	_Lcd_Write_String
  1587  0258                     l2286:
  1588                           
  1589                           ;master.c: 130:             _delay((unsigned long)((5000)*(8000000/4000.0)));
  1590  0258  3033               	movlw	51
  1591  0259  1283               	bcf	3,5	;RP0=0, select bank0
  1592  025A  1303               	bcf	3,6	;RP1=0, select bank0
  1593  025B  00B7               	movwf	??_main+2
  1594  025C  30BB               	movlw	187
  1595  025D  00B6               	movwf	??_main+1
  1596  025E  30DF               	movlw	223
  1597  025F  00B5               	movwf	??_main
  1598  0260                     u1677:
  1599  0260  0BB5               	decfsz	??_main,f
  1600  0261  2A60               	goto	u1677
  1601  0262  0BB6               	decfsz	??_main+1,f
  1602  0263  2A60               	goto	u1677
  1603  0264  0BB7               	decfsz	??_main+2,f
  1604  0265  2A60               	goto	u1677
  1605  0266                     l2288:
  1606                           
  1607                           ;master.c: 131:             Lcd_Clear();
  1608  0266  120A  118A  2743  120A  118A  	fcall	_Lcd_Clear
  1609  026B                     l2290:
  1610                           
  1611                           ;master.c: 132:             Lcd_Set_Cursor(1,1);
  1612  026B  1283               	bcf	3,5	;RP0=0, select bank0
  1613  026C  1303               	bcf	3,6	;RP1=0, select bank0
  1614  026D  01A3               	clrf	Lcd_Set_Cursor@b
  1615  026E  0AA3               	incf	Lcd_Set_Cursor@b,f
  1616  026F  3001               	movlw	1
  1617  0270  120A  118A  24B4  120A  118A  	fcall	_Lcd_Set_Cursor
  1618  0275                     l2292:
  1619                           
  1620                           ;master.c: 133:             Lcd_Write_String(" RH:   T:   L%:");
  1621  0275  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1622  0276  120A  118A  26B7  120A  118A  	fcall	_Lcd_Write_String
  1623  027B                     l2294:
  1624                           
  1625                           ;master.c: 134:             _delay((unsigned long)((500)*(8000000/4000.0)));
  1626  027B  3006               	movlw	6
  1627  027C  1283               	bcf	3,5	;RP0=0, select bank0
  1628  027D  1303               	bcf	3,6	;RP1=0, select bank0
  1629  027E  00B7               	movwf	??_main+2
  1630  027F  3013               	movlw	19
  1631  0280  00B6               	movwf	??_main+1
  1632  0281  30AD               	movlw	173
  1633  0282  00B5               	movwf	??_main
  1634  0283                     u1687:
  1635  0283  0BB5               	decfsz	??_main,f
  1636  0284  2A83               	goto	u1687
  1637  0285  0BB6               	decfsz	??_main+1,f
  1638  0286  2A83               	goto	u1687
  1639  0287  0BB7               	decfsz	??_main+2,f
  1640  0288  2A83               	goto	u1687
  1641                           
  1642                           ;master.c: 136:         }
  1643  0289  2847               	goto	l2170
  1644  028A                     l2296:
  1645  028A  1283               	bcf	3,5	;RP0=0, select bank0
  1646  028B  1303               	bcf	3,6	;RP1=0, select bank0
  1647  028C  0839               	movf	_LDR+1,w
  1648  028D  3A80               	xorlw	128
  1649  028E  00FF               	movwf	btemp+1
  1650  028F  3080               	movlw	128
  1651  0290  027F               	subwf	btemp+1,w
  1652  0291  1D03               	skipz
  1653  0292  2A95               	goto	u1585
  1654  0293  3051               	movlw	81
  1655  0294  0238               	subwf	_LDR,w
  1656  0295                     u1585:
  1657  0295  1C03               	skipc
  1658  0296  2A98               	goto	u1581
  1659  0297  2A99               	goto	u1580
  1660  0298                     u1581:
  1661  0298  2B10               	goto	l118
  1662  0299                     u1580:
  1663  0299                     l2298:
  1664  0299  1283               	bcf	3,5	;RP0=0, select bank0
  1665  029A  1303               	bcf	3,6	;RP1=0, select bank0
  1666  029B  033A               	decf	_cont1,w
  1667  029C  1D03               	btfss	3,2
  1668  029D  2A9F               	goto	u1591
  1669  029E  2AA0               	goto	u1590
  1670  029F                     u1591:
  1671  029F  2B10               	goto	l118
  1672  02A0                     u1590:
  1673  02A0                     l2300:
  1674                           
  1675                           ;master.c: 139:             cont1 = 0;
  1676  02A0  01BA               	clrf	_cont1
  1677  02A1                     l2302:
  1678                           
  1679                           ;master.c: 140:             PORTAbits.RA0 = 1;
  1680  02A1  1405               	bsf	5,0	;volatile
  1681  02A2                     l2304:
  1682                           
  1683                           ;master.c: 141:             _delay((unsigned long)((1000)*(8000000/4000000.0)));
  1684  02A2  3003               	movlw	3
  1685  02A3  1283               	bcf	3,5	;RP0=0, select bank0
  1686  02A4  1303               	bcf	3,6	;RP1=0, select bank0
  1687  02A5  00B6               	movwf	??_main+1
  1688  02A6  3097               	movlw	151
  1689  02A7  00B5               	movwf	??_main
  1690  02A8                     u1697:
  1691  02A8  0BB5               	decfsz	??_main,f
  1692  02A9  2AA8               	goto	u1697
  1693  02AA  0BB6               	decfsz	??_main+1,f
  1694  02AB  2AA8               	goto	u1697
  1695  02AC                     l2306:
  1696                           
  1697                           ;master.c: 142:             PORTAbits.RA0 = 0;
  1698  02AC  1283               	bcf	3,5	;RP0=0, select bank0
  1699  02AD  1303               	bcf	3,6	;RP1=0, select bank0
  1700  02AE  1005               	bcf	5,0	;volatile
  1701  02AF                     l2308:
  1702                           
  1703                           ;master.c: 143:             _delay((unsigned long)((20)*(8000000/4000.0)));
  1704  02AF  3034               	movlw	52
  1705  02B0  1283               	bcf	3,5	;RP0=0, select bank0
  1706  02B1  1303               	bcf	3,6	;RP1=0, select bank0
  1707  02B2  00B6               	movwf	??_main+1
  1708  02B3  30F1               	movlw	241
  1709  02B4  00B5               	movwf	??_main
  1710  02B5                     u1707:
  1711  02B5  0BB5               	decfsz	??_main,f
  1712  02B6  2AB5               	goto	u1707
  1713  02B7  0BB6               	decfsz	??_main+1,f
  1714  02B8  2AB5               	goto	u1707
  1715  02B9                     l2310:
  1716                           
  1717                           ;master.c: 144:             _delay((unsigned long)((1000)*(8000000/4000.0)));
  1718  02B9  300B               	movlw	11
  1719  02BA  1283               	bcf	3,5	;RP0=0, select bank0
  1720  02BB  1303               	bcf	3,6	;RP1=0, select bank0
  1721  02BC  00B7               	movwf	??_main+2
  1722  02BD  3026               	movlw	38
  1723  02BE  00B6               	movwf	??_main+1
  1724  02BF  305D               	movlw	93
  1725  02C0  00B5               	movwf	??_main
  1726  02C1                     u1717:
  1727  02C1  0BB5               	decfsz	??_main,f
  1728  02C2  2AC1               	goto	u1717
  1729  02C3  0BB6               	decfsz	??_main+1,f
  1730  02C4  2AC1               	goto	u1717
  1731  02C5  0BB7               	decfsz	??_main+2,f
  1732  02C6  2AC1               	goto	u1717
  1733  02C7                     l2312:
  1734                           
  1735                           ;master.c: 146:             Lcd_Clear();
  1736  02C7  120A  118A  2743  120A  118A  	fcall	_Lcd_Clear
  1737  02CC                     l2314:
  1738                           
  1739                           ;master.c: 147:             Lcd_Set_Cursor(1,1);
  1740  02CC  1283               	bcf	3,5	;RP0=0, select bank0
  1741  02CD  1303               	bcf	3,6	;RP1=0, select bank0
  1742  02CE  01A3               	clrf	Lcd_Set_Cursor@b
  1743  02CF  0AA3               	incf	Lcd_Set_Cursor@b,f
  1744  02D0  3001               	movlw	1
  1745  02D1  120A  118A  24B4  120A  118A  	fcall	_Lcd_Set_Cursor
  1746  02D6                     l2316:
  1747                           
  1748                           ;master.c: 148:             Lcd_Write_String("DISPENSANDO");
  1749  02D6  3011               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1750  02D7  120A  118A  26B7  120A  118A  	fcall	_Lcd_Write_String
  1751  02DC                     l2318:
  1752                           
  1753                           ;master.c: 149:             Lcd_Set_Cursor(2,1);
  1754  02DC  1283               	bcf	3,5	;RP0=0, select bank0
  1755  02DD  1303               	bcf	3,6	;RP1=0, select bank0
  1756  02DE  01A3               	clrf	Lcd_Set_Cursor@b
  1757  02DF  0AA3               	incf	Lcd_Set_Cursor@b,f
  1758  02E0  3002               	movlw	2
  1759  02E1  120A  118A  24B4  120A  118A  	fcall	_Lcd_Set_Cursor
  1760  02E6                     l2320:
  1761                           
  1762                           ;master.c: 150:             Lcd_Write_String(" COMIDA...");
  1763  02E6  301D               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1764  02E7  120A  118A  26B7  120A  118A  	fcall	_Lcd_Write_String
  1765  02EC                     l2322:
  1766                           
  1767                           ;master.c: 151:             _delay((unsigned long)((5000)*(8000000/4000.0)));
  1768  02EC  3033               	movlw	51
  1769  02ED  1283               	bcf	3,5	;RP0=0, select bank0
  1770  02EE  1303               	bcf	3,6	;RP1=0, select bank0
  1771  02EF  00B7               	movwf	??_main+2
  1772  02F0  30BB               	movlw	187
  1773  02F1  00B6               	movwf	??_main+1
  1774  02F2  30DF               	movlw	223
  1775  02F3  00B5               	movwf	??_main
  1776  02F4                     u1727:
  1777  02F4  0BB5               	decfsz	??_main,f
  1778  02F5  2AF4               	goto	u1727
  1779  02F6  0BB6               	decfsz	??_main+1,f
  1780  02F7  2AF4               	goto	u1727
  1781  02F8  0BB7               	decfsz	??_main+2,f
  1782  02F9  2AF4               	goto	u1727
  1783  02FA                     l2324:
  1784                           
  1785                           ;master.c: 154:             Lcd_Clear();
  1786  02FA  120A  118A  2743  120A  118A  	fcall	_Lcd_Clear
  1787  02FF                     l2326:
  1788                           
  1789                           ;master.c: 155:             Lcd_Set_Cursor(1,1);
  1790  02FF  1283               	bcf	3,5	;RP0=0, select bank0
  1791  0300  1303               	bcf	3,6	;RP1=0, select bank0
  1792  0301  01A3               	clrf	Lcd_Set_Cursor@b
  1793  0302  0AA3               	incf	Lcd_Set_Cursor@b,f
  1794  0303  3001               	movlw	1
  1795  0304  120A  118A  24B4  120A  118A  	fcall	_Lcd_Set_Cursor
  1796  0309                     l2328:
  1797                           
  1798                           ;master.c: 156:             Lcd_Write_String(" RH:   T:   L%:");
  1799  0309  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1800  030A  120A  118A  26B7  120A  118A  	fcall	_Lcd_Write_String
  1801  030F  2A7B               	goto	l2294
  1802  0310                     l118:
  1803  0310  2847               	goto	l2170
  1804  0311  120A  118A  280E   	ljmp	start
  1805  0314                     __end_of_main:
  1806                           
  1807                           	psect	text1
  1808  0314                     __ptext1:	
  1809 ;; *************** function _str_2_dc *****************
  1810 ;; Defined at:
  1811 ;;		line 187 in file "master.c"
  1812 ;; Parameters:    Size  Location     Type
  1813 ;;  var             2    7[BANK0 ] unsigned int 
  1814 ;; Auto vars:     Size  Location     Type
  1815 ;;  vcv             2   11[BANK0 ] unsigned int 
  1816 ;; Return value:  Size  Location     Type
  1817 ;;                  1    wreg      void 
  1818 ;; Registers used:
  1819 ;;		wreg, status,2, status,0, pclath, cstack
  1820 ;; Tracked objects:
  1821 ;;		On entry : 0/0
  1822 ;;		On exit  : 0/0
  1823 ;;		Unchanged: 0/0
  1824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1825 ;;      Params:         0       2       0       0       0
  1826 ;;      Locals:         0       2       0       0       0
  1827 ;;      Temps:          0       2       0       0       0
  1828 ;;      Totals:         0       6       0       0       0
  1829 ;;Total ram usage:        6 bytes
  1830 ;; Hardware stack levels used: 1
  1831 ;; Hardware stack levels required when called: 2
  1832 ;; This function calls:
  1833 ;;		___lwdiv
  1834 ;;		___wmul
  1835 ;; This function is called by:
  1836 ;;		_main
  1837 ;; This function uses a non-reentrant model
  1838 ;;
  1839                           
  1840                           
  1841                           ;psect for function _str_2_dc
  1842  0314                     _str_2_dc:
  1843  0314                     l2106:	
  1844                           ;incstack = 0
  1845                           ; Regs used in _str_2_dc: [wreg+status,2+status,0+pclath+cstack]
  1846                           
  1847                           
  1848                           ;master.c: 188:     uint16_t vcv;;master.c: 189:     vcv = var;
  1849  0314  1283               	bcf	3,5	;RP0=0, select bank0
  1850  0315  1303               	bcf	3,6	;RP1=0, select bank0
  1851  0316  0828               	movf	str_2_dc@var+1,w
  1852  0317  00AC               	movwf	str_2_dc@vcv+1
  1853  0318  0827               	movf	str_2_dc@var,w
  1854  0319  00AB               	movwf	str_2_dc@vcv
  1855  031A                     l2108:
  1856                           
  1857                           ;master.c: 190:     unit0_0 = (vcv/100) ;
  1858  031A  3064               	movlw	100
  1859  031B  00A0               	movwf	___lwdiv@divisor
  1860  031C  3000               	movlw	0
  1861  031D  00A1               	movwf	___lwdiv@divisor+1
  1862  031E  082C               	movf	str_2_dc@vcv+1,w
  1863  031F  00A3               	movwf	___lwdiv@dividend+1
  1864  0320  082B               	movf	str_2_dc@vcv,w
  1865  0321  00A2               	movwf	___lwdiv@dividend
  1866  0322  120A  118A  2558  120A  118A  	fcall	___lwdiv
  1867  0327  1283               	bcf	3,5	;RP0=0, select bank0
  1868  0328  1303               	bcf	3,6	;RP1=0, select bank0
  1869  0329  0820               	movf	?___lwdiv,w
  1870  032A  00A9               	movwf	??_str_2_dc
  1871  032B  0829               	movf	??_str_2_dc,w
  1872  032C  00C1               	movwf	_unit0_0
  1873  032D                     l2110:
  1874                           
  1875                           ;master.c: 191:     vcv = (vcv - (unit0_0*100));
  1876  032D  0841               	movf	_unit0_0,w
  1877  032E  00A9               	movwf	??_str_2_dc
  1878  032F  01AA               	clrf	??_str_2_dc+1
  1879  0330  0829               	movf	??_str_2_dc,w
  1880  0331  00A0               	movwf	___wmul@multiplier
  1881  0332  082A               	movf	??_str_2_dc+1,w
  1882  0333  00A1               	movwf	___wmul@multiplier+1
  1883  0334  309C               	movlw	156
  1884  0335  00A2               	movwf	___wmul@multiplicand
  1885  0336  30FF               	movlw	255
  1886  0337  00A3               	movwf	___wmul@multiplicand+1
  1887  0338  120A  118A  26E0  120A  118A  	fcall	___wmul
  1888  033D  1283               	bcf	3,5	;RP0=0, select bank0
  1889  033E  1303               	bcf	3,6	;RP1=0, select bank0
  1890  033F  082B               	movf	str_2_dc@vcv,w
  1891  0340  0720               	addwf	?___wmul,w
  1892  0341  00AB               	movwf	str_2_dc@vcv
  1893  0342  082C               	movf	str_2_dc@vcv+1,w
  1894  0343  1803               	skipnc
  1895  0344  0A2C               	incf	str_2_dc@vcv+1,w
  1896  0345  0721               	addwf	?___wmul+1,w
  1897  0346  00AC               	movwf	str_2_dc@vcv+1
  1898  0347                     l2112:
  1899                           
  1900                           ;master.c: 192:     dec0_12 = (vcv/10);
  1901  0347  300A               	movlw	10
  1902  0348  00A0               	movwf	___lwdiv@divisor
  1903  0349  3000               	movlw	0
  1904  034A  00A1               	movwf	___lwdiv@divisor+1
  1905  034B  082C               	movf	str_2_dc@vcv+1,w
  1906  034C  00A3               	movwf	___lwdiv@dividend+1
  1907  034D  082B               	movf	str_2_dc@vcv,w
  1908  034E  00A2               	movwf	___lwdiv@dividend
  1909  034F  120A  118A  2558  120A  118A  	fcall	___lwdiv
  1910  0354  1283               	bcf	3,5	;RP0=0, select bank0
  1911  0355  1303               	bcf	3,6	;RP1=0, select bank0
  1912  0356  0820               	movf	?___lwdiv,w
  1913  0357  00A9               	movwf	??_str_2_dc
  1914  0358  0829               	movf	??_str_2_dc,w
  1915  0359  00C0               	movwf	_dec0_12
  1916  035A                     l2114:
  1917                           
  1918                           ;master.c: 193:     vcv = (vcv - (dec0_12*10));
  1919  035A  0840               	movf	_dec0_12,w
  1920  035B  00A9               	movwf	??_str_2_dc
  1921  035C  01AA               	clrf	??_str_2_dc+1
  1922  035D  0829               	movf	??_str_2_dc,w
  1923  035E  00A0               	movwf	___wmul@multiplier
  1924  035F  082A               	movf	??_str_2_dc+1,w
  1925  0360  00A1               	movwf	___wmul@multiplier+1
  1926  0361  30F6               	movlw	246
  1927  0362  00A2               	movwf	___wmul@multiplicand
  1928  0363  30FF               	movlw	255
  1929  0364  00A3               	movwf	___wmul@multiplicand+1
  1930  0365  120A  118A  26E0  120A  118A  	fcall	___wmul
  1931  036A  1283               	bcf	3,5	;RP0=0, select bank0
  1932  036B  1303               	bcf	3,6	;RP1=0, select bank0
  1933  036C  082B               	movf	str_2_dc@vcv,w
  1934  036D  0720               	addwf	?___wmul,w
  1935  036E  00AB               	movwf	str_2_dc@vcv
  1936  036F  082C               	movf	str_2_dc@vcv+1,w
  1937  0370  1803               	skipnc
  1938  0371  0A2C               	incf	str_2_dc@vcv+1,w
  1939  0372  0721               	addwf	?___wmul+1,w
  1940  0373  00AC               	movwf	str_2_dc@vcv+1
  1941                           
  1942                           ;master.c: 194:     dec1_12 = (vcv);
  1943  0374  082B               	movf	str_2_dc@vcv,w
  1944  0375  00A9               	movwf	??_str_2_dc
  1945  0376  0829               	movf	??_str_2_dc,w
  1946  0377  00BF               	movwf	_dec1_12
  1947  0378                     l2116:
  1948                           
  1949                           ;master.c: 195:     unit0_0 = unit0_0 + 48;
  1950  0378  0841               	movf	_unit0_0,w
  1951  0379  3E30               	addlw	48
  1952  037A  00A9               	movwf	??_str_2_dc
  1953  037B  0829               	movf	??_str_2_dc,w
  1954  037C  00C1               	movwf	_unit0_0
  1955  037D                     l2118:
  1956                           
  1957                           ;master.c: 196:     dec0_12 = dec0_12 + 48;
  1958  037D  0840               	movf	_dec0_12,w
  1959  037E  3E30               	addlw	48
  1960  037F  00A9               	movwf	??_str_2_dc
  1961  0380  0829               	movf	??_str_2_dc,w
  1962  0381  00C0               	movwf	_dec0_12
  1963  0382                     l2120:
  1964                           
  1965                           ;master.c: 197:     dec1_12 = dec1_12 + 48;
  1966  0382  083F               	movf	_dec1_12,w
  1967  0383  3E30               	addlw	48
  1968  0384  00A9               	movwf	??_str_2_dc
  1969  0385  0829               	movf	??_str_2_dc,w
  1970  0386  00BF               	movwf	_dec1_12
  1971  0387                     l141:
  1972  0387  0008               	return
  1973  0388                     __end_of_str_2_dc:
  1974                           
  1975                           	psect	text2
  1976  06E0                     __ptext2:	
  1977 ;; *************** function ___wmul *****************
  1978 ;; Defined at:
  1979 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  1980 ;; Parameters:    Size  Location     Type
  1981 ;;  multiplier      2    0[BANK0 ] unsigned int 
  1982 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  1983 ;; Auto vars:     Size  Location     Type
  1984 ;;  product         2    4[BANK0 ] unsigned int 
  1985 ;; Return value:  Size  Location     Type
  1986 ;;                  2    0[BANK0 ] unsigned int 
  1987 ;; Registers used:
  1988 ;;		wreg, status,2, status,0
  1989 ;; Tracked objects:
  1990 ;;		On entry : 0/0
  1991 ;;		On exit  : 0/0
  1992 ;;		Unchanged: 0/0
  1993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1994 ;;      Params:         0       4       0       0       0
  1995 ;;      Locals:         0       2       0       0       0
  1996 ;;      Temps:          0       0       0       0       0
  1997 ;;      Totals:         0       6       0       0       0
  1998 ;;Total ram usage:        6 bytes
  1999 ;; Hardware stack levels used: 1
  2000 ;; Hardware stack levels required when called: 1
  2001 ;; This function calls:
  2002 ;;		Nothing
  2003 ;; This function is called by:
  2004 ;;		_str_2_dc
  2005 ;; This function uses a non-reentrant model
  2006 ;;
  2007                           
  2008                           
  2009                           ;psect for function ___wmul
  2010  06E0                     ___wmul:
  2011  06E0                     l2006:	
  2012                           ;incstack = 0
  2013                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2014                           
  2015  06E0  1283               	bcf	3,5	;RP0=0, select bank0
  2016  06E1  1303               	bcf	3,6	;RP1=0, select bank0
  2017  06E2  01A4               	clrf	___wmul@product
  2018  06E3  01A5               	clrf	___wmul@product+1
  2019  06E4                     l2008:
  2020  06E4  1C20               	btfss	___wmul@multiplier,0
  2021  06E5  2EE7               	goto	u1221
  2022  06E6  2EE8               	goto	u1220
  2023  06E7                     u1221:
  2024  06E7  2EEE               	goto	l352
  2025  06E8                     u1220:
  2026  06E8                     l2010:
  2027  06E8  0822               	movf	___wmul@multiplicand,w
  2028  06E9  07A4               	addwf	___wmul@product,f
  2029  06EA  1803               	skipnc
  2030  06EB  0AA5               	incf	___wmul@product+1,f
  2031  06EC  0823               	movf	___wmul@multiplicand+1,w
  2032  06ED  07A5               	addwf	___wmul@product+1,f
  2033  06EE                     l352:
  2034  06EE  3001               	movlw	1
  2035  06EF                     u1235:
  2036  06EF  1003               	clrc
  2037  06F0  0DA2               	rlf	___wmul@multiplicand,f
  2038  06F1  0DA3               	rlf	___wmul@multiplicand+1,f
  2039  06F2  3EFF               	addlw	-1
  2040  06F3  1D03               	skipz
  2041  06F4  2EEF               	goto	u1235
  2042  06F5                     l2012:
  2043  06F5  3001               	movlw	1
  2044  06F6                     u1245:
  2045  06F6  1003               	clrc
  2046  06F7  0CA1               	rrf	___wmul@multiplier+1,f
  2047  06F8  0CA0               	rrf	___wmul@multiplier,f
  2048  06F9  3EFF               	addlw	-1
  2049  06FA  1D03               	skipz
  2050  06FB  2EF6               	goto	u1245
  2051  06FC                     l2014:
  2052  06FC  0820               	movf	___wmul@multiplier,w
  2053  06FD  0421               	iorwf	___wmul@multiplier+1,w
  2054  06FE  1D03               	btfss	3,2
  2055  06FF  2F01               	goto	u1251
  2056  0700  2F02               	goto	u1250
  2057  0701                     u1251:
  2058  0701  2EE4               	goto	l2008
  2059  0702                     u1250:
  2060  0702                     l2016:
  2061  0702  0825               	movf	___wmul@product+1,w
  2062  0703  00A1               	movwf	?___wmul+1
  2063  0704  0824               	movf	___wmul@product,w
  2064  0705  00A0               	movwf	?___wmul
  2065  0706                     l354:
  2066  0706  0008               	return
  2067  0707                     __end_of___wmul:
  2068                           
  2069                           	psect	text3
  2070  0558                     __ptext3:	
  2071 ;; *************** function ___lwdiv *****************
  2072 ;; Defined at:
  2073 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  2074 ;; Parameters:    Size  Location     Type
  2075 ;;  divisor         2    0[BANK0 ] unsigned int 
  2076 ;;  dividend        2    2[BANK0 ] unsigned int 
  2077 ;; Auto vars:     Size  Location     Type
  2078 ;;  quotient        2    5[BANK0 ] unsigned int 
  2079 ;;  counter         1    4[BANK0 ] unsigned char 
  2080 ;; Return value:  Size  Location     Type
  2081 ;;                  2    0[BANK0 ] unsigned int 
  2082 ;; Registers used:
  2083 ;;		wreg, status,2, status,0
  2084 ;; Tracked objects:
  2085 ;;		On entry : 0/0
  2086 ;;		On exit  : 0/0
  2087 ;;		Unchanged: 0/0
  2088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2089 ;;      Params:         0       4       0       0       0
  2090 ;;      Locals:         0       3       0       0       0
  2091 ;;      Temps:          1       0       0       0       0
  2092 ;;      Totals:         1       7       0       0       0
  2093 ;;Total ram usage:        8 bytes
  2094 ;; Hardware stack levels used: 1
  2095 ;; Hardware stack levels required when called: 1
  2096 ;; This function calls:
  2097 ;;		Nothing
  2098 ;; This function is called by:
  2099 ;;		_str_2_dc
  2100 ;; This function uses a non-reentrant model
  2101 ;;
  2102                           
  2103                           
  2104                           ;psect for function ___lwdiv
  2105  0558                     ___lwdiv:
  2106  0558                     l2020:	
  2107                           ;incstack = 0
  2108                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2109                           
  2110  0558  1283               	bcf	3,5	;RP0=0, select bank0
  2111  0559  1303               	bcf	3,6	;RP1=0, select bank0
  2112  055A  01A5               	clrf	___lwdiv@quotient
  2113  055B  01A6               	clrf	___lwdiv@quotient+1
  2114  055C                     l2022:
  2115  055C  0820               	movf	___lwdiv@divisor,w
  2116  055D  0421               	iorwf	___lwdiv@divisor+1,w
  2117  055E  1903               	btfsc	3,2
  2118  055F  2D61               	goto	u1261
  2119  0560  2D62               	goto	u1260
  2120  0561                     u1261:
  2121  0561  2D99               	goto	l2042
  2122  0562                     u1260:
  2123  0562                     l2024:
  2124  0562  01A4               	clrf	___lwdiv@counter
  2125  0563  0AA4               	incf	___lwdiv@counter,f
  2126  0564  2D70               	goto	l2030
  2127  0565                     l2026:
  2128  0565  3001               	movlw	1
  2129  0566                     u1275:
  2130  0566  1003               	clrc
  2131  0567  0DA0               	rlf	___lwdiv@divisor,f
  2132  0568  0DA1               	rlf	___lwdiv@divisor+1,f
  2133  0569  3EFF               	addlw	-1
  2134  056A  1D03               	skipz
  2135  056B  2D66               	goto	u1275
  2136  056C                     l2028:
  2137  056C  3001               	movlw	1
  2138  056D  00F5               	movwf	??___lwdiv
  2139  056E  0875               	movf	??___lwdiv,w
  2140  056F  07A4               	addwf	___lwdiv@counter,f
  2141  0570                     l2030:
  2142  0570  1FA1               	btfss	___lwdiv@divisor+1,7
  2143  0571  2D73               	goto	u1281
  2144  0572  2D74               	goto	u1280
  2145  0573                     u1281:
  2146  0573  2D65               	goto	l2026
  2147  0574                     u1280:
  2148  0574                     l2032:
  2149  0574  3001               	movlw	1
  2150  0575                     u1295:
  2151  0575  1003               	clrc
  2152  0576  0DA5               	rlf	___lwdiv@quotient,f
  2153  0577  0DA6               	rlf	___lwdiv@quotient+1,f
  2154  0578  3EFF               	addlw	-1
  2155  0579  1D03               	skipz
  2156  057A  2D75               	goto	u1295
  2157  057B  0821               	movf	___lwdiv@divisor+1,w
  2158  057C  0223               	subwf	___lwdiv@dividend+1,w
  2159  057D  1D03               	skipz
  2160  057E  2D81               	goto	u1305
  2161  057F  0820               	movf	___lwdiv@divisor,w
  2162  0580  0222               	subwf	___lwdiv@dividend,w
  2163  0581                     u1305:
  2164  0581  1C03               	skipc
  2165  0582  2D84               	goto	u1301
  2166  0583  2D85               	goto	u1300
  2167  0584                     u1301:
  2168  0584  2D8C               	goto	l2038
  2169  0585                     u1300:
  2170  0585                     l2034:
  2171  0585  0820               	movf	___lwdiv@divisor,w
  2172  0586  02A2               	subwf	___lwdiv@dividend,f
  2173  0587  0821               	movf	___lwdiv@divisor+1,w
  2174  0588  1C03               	skipc
  2175  0589  03A3               	decf	___lwdiv@dividend+1,f
  2176  058A  02A3               	subwf	___lwdiv@dividend+1,f
  2177  058B                     l2036:
  2178  058B  1425               	bsf	___lwdiv@quotient,0
  2179  058C                     l2038:
  2180  058C  3001               	movlw	1
  2181  058D                     u1315:
  2182  058D  1003               	clrc
  2183  058E  0CA1               	rrf	___lwdiv@divisor+1,f
  2184  058F  0CA0               	rrf	___lwdiv@divisor,f
  2185  0590  3EFF               	addlw	-1
  2186  0591  1D03               	skipz
  2187  0592  2D8D               	goto	u1315
  2188  0593                     l2040:
  2189  0593  3001               	movlw	1
  2190  0594  02A4               	subwf	___lwdiv@counter,f
  2191  0595  1D03               	btfss	3,2
  2192  0596  2D98               	goto	u1321
  2193  0597  2D99               	goto	u1320
  2194  0598                     u1321:
  2195  0598  2D74               	goto	l2032
  2196  0599                     u1320:
  2197  0599                     l2042:
  2198  0599  0826               	movf	___lwdiv@quotient+1,w
  2199  059A  00A1               	movwf	?___lwdiv+1
  2200  059B  0825               	movf	___lwdiv@quotient,w
  2201  059C  00A0               	movwf	?___lwdiv
  2202  059D                     l624:
  2203  059D  0008               	return
  2204  059E                     __end_of___lwdiv:
  2205                           
  2206                           	psect	text4
  2207  059E                     __ptext4:	
  2208 ;; *************** function _initSETUP *****************
  2209 ;; Defined at:
  2210 ;;		line 204 in file "master.c"
  2211 ;; Parameters:    Size  Location     Type
  2212 ;;		None
  2213 ;; Auto vars:     Size  Location     Type
  2214 ;;		None
  2215 ;; Return value:  Size  Location     Type
  2216 ;;                  1    wreg      void 
  2217 ;; Registers used:
  2218 ;;		wreg, status,2, status,0, pclath, cstack
  2219 ;; Tracked objects:
  2220 ;;		On entry : 0/0
  2221 ;;		On exit  : 0/0
  2222 ;;		Unchanged: 0/0
  2223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2224 ;;      Params:         0       0       0       0       0
  2225 ;;      Locals:         0       0       0       0       0
  2226 ;;      Temps:          0       0       0       0       0
  2227 ;;      Totals:         0       0       0       0       0
  2228 ;;Total ram usage:        0 bytes
  2229 ;; Hardware stack levels used: 1
  2230 ;; Hardware stack levels required when called: 3
  2231 ;; This function calls:
  2232 ;;		_I2C_Master_Init
  2233 ;; This function is called by:
  2234 ;;		_main
  2235 ;; This function uses a non-reentrant model
  2236 ;;
  2237                           
  2238                           
  2239                           ;psect for function _initSETUP
  2240  059E                     _initSETUP:
  2241  059E                     l1542:	
  2242                           ;incstack = 0
  2243                           ; Regs used in _initSETUP: [wreg+status,2+status,0+pclath+cstack]
  2244                           
  2245                           
  2246                           ;master.c: 205:     TRISA = 0;
  2247  059E  1683               	bsf	3,5	;RP0=1, select bank1
  2248  059F  1303               	bcf	3,6	;RP1=0, select bank1
  2249  05A0  0185               	clrf	5	;volatile
  2250                           
  2251                           ;master.c: 206:     TRISB = 0;
  2252  05A1  0186               	clrf	6	;volatile
  2253  05A2                     l1544:
  2254                           
  2255                           ;master.c: 207:     TRISC = 0b11000000;
  2256  05A2  30C0               	movlw	192
  2257  05A3  0087               	movwf	7	;volatile
  2258  05A4                     l1546:
  2259                           
  2260                           ;master.c: 208:     TRISD = 0;
  2261  05A4  0188               	clrf	8	;volatile
  2262  05A5                     l1548:
  2263                           
  2264                           ;master.c: 209:     TRISE = 0;
  2265  05A5  0189               	clrf	9	;volatile
  2266  05A6                     l1550:
  2267                           
  2268                           ;master.c: 210:     PORTE = 0;
  2269  05A6  1283               	bcf	3,5	;RP0=0, select bank0
  2270  05A7  1303               	bcf	3,6	;RP1=0, select bank0
  2271  05A8  0189               	clrf	9	;volatile
  2272  05A9                     l1552:
  2273                           
  2274                           ;master.c: 211:     PORTA = 0;
  2275  05A9  0185               	clrf	5	;volatile
  2276  05AA                     l1554:
  2277                           
  2278                           ;master.c: 212:     PORTB = 0;
  2279  05AA  0186               	clrf	6	;volatile
  2280  05AB                     l1556:
  2281                           
  2282                           ;master.c: 213:     PORTC = 0;
  2283  05AB  0187               	clrf	7	;volatile
  2284  05AC                     l1558:
  2285                           
  2286                           ;master.c: 214:     PORTD = 0;
  2287  05AC  0188               	clrf	8	;volatile
  2288  05AD                     l1560:
  2289                           
  2290                           ;master.c: 215:     ANSEL = 0;
  2291  05AD  1683               	bsf	3,5	;RP0=1, select bank3
  2292  05AE  1703               	bsf	3,6	;RP1=1, select bank3
  2293  05AF  0188               	clrf	8	;volatile
  2294  05B0                     l1562:
  2295                           
  2296                           ;master.c: 216:     ANSELH = 0;
  2297  05B0  0189               	clrf	9	;volatile
  2298  05B1                     l1564:
  2299                           
  2300                           ;master.c: 217:     OSCCONbits.IRCF2 = 1;
  2301  05B1  1683               	bsf	3,5	;RP0=1, select bank1
  2302  05B2  1303               	bcf	3,6	;RP1=0, select bank1
  2303  05B3  170F               	bsf	15,6	;volatile
  2304  05B4                     l1566:
  2305                           
  2306                           ;master.c: 218:     OSCCONbits.IRCF1 = 1;
  2307  05B4  168F               	bsf	15,5	;volatile
  2308  05B5                     l1568:
  2309                           
  2310                           ;master.c: 219:     OSCCONbits.IRCF0 = 1;
  2311  05B5  160F               	bsf	15,4	;volatile
  2312  05B6                     l1570:
  2313                           
  2314                           ;master.c: 220:     OSCCONbits.SCS = 1;
  2315  05B6  140F               	bsf	15,0	;volatile
  2316  05B7                     l1572:
  2317                           
  2318                           ;master.c: 221:     TXSTAbits.SYNC = 0;
  2319  05B7  1218               	bcf	24,4	;volatile
  2320  05B8                     l1574:
  2321                           
  2322                           ;master.c: 222:     TXSTAbits.BRGH = 1;
  2323  05B8  1518               	bsf	24,2	;volatile
  2324  05B9                     l1576:
  2325                           
  2326                           ;master.c: 223:     BAUDCTLbits.BRG16 = 1;
  2327  05B9  1683               	bsf	3,5	;RP0=1, select bank3
  2328  05BA  1703               	bsf	3,6	;RP1=1, select bank3
  2329  05BB  1587               	bsf	7,3	;volatile
  2330                           
  2331                           ;master.c: 224:     SPBRG = 207;
  2332  05BC  30CF               	movlw	207
  2333  05BD  1683               	bsf	3,5	;RP0=1, select bank1
  2334  05BE  1303               	bcf	3,6	;RP1=0, select bank1
  2335  05BF  0099               	movwf	25	;volatile
  2336  05C0                     l1578:
  2337                           
  2338                           ;master.c: 225:     SPBRGH = 0;
  2339  05C0  019A               	clrf	26	;volatile
  2340  05C1                     l1580:
  2341                           
  2342                           ;master.c: 226:     RCSTAbits.SPEN = 1;
  2343  05C1  1283               	bcf	3,5	;RP0=0, select bank0
  2344  05C2  1303               	bcf	3,6	;RP1=0, select bank0
  2345  05C3  1798               	bsf	24,7	;volatile
  2346  05C4                     l1582:
  2347                           
  2348                           ;master.c: 227:     RCSTAbits.RX9 = 0;
  2349  05C4  1318               	bcf	24,6	;volatile
  2350  05C5                     l1584:
  2351                           
  2352                           ;master.c: 228:     RCSTAbits.CREN = 1;
  2353  05C5  1618               	bsf	24,4	;volatile
  2354  05C6                     l1586:
  2355                           
  2356                           ;master.c: 229:     TXSTAbits.TXEN = 1;
  2357  05C6  1683               	bsf	3,5	;RP0=1, select bank1
  2358  05C7  1303               	bcf	3,6	;RP1=0, select bank1
  2359  05C8  1698               	bsf	24,5	;volatile
  2360  05C9                     l1588:
  2361                           
  2362                           ;master.c: 231:     INTCONbits.GIE = 1;
  2363  05C9  178B               	bsf	11,7	;volatile
  2364  05CA                     l1590:
  2365                           
  2366                           ;master.c: 232:     INTCONbits.PEIE =1;
  2367  05CA  170B               	bsf	11,6	;volatile
  2368  05CB                     l1592:
  2369                           
  2370                           ;master.c: 233:     I2C_Master_Init(100000);
  2371  05CB  3000               	movlw	0
  2372  05CC  1283               	bcf	3,5	;RP0=0, select bank0
  2373  05CD  1303               	bcf	3,6	;RP1=0, select bank0
  2374  05CE  00B0               	movwf	I2C_Master_Init@c+3
  2375  05CF  3001               	movlw	1
  2376  05D0  00AF               	movwf	I2C_Master_Init@c+2
  2377  05D1  3086               	movlw	134
  2378  05D2  00AE               	movwf	I2C_Master_Init@c+1
  2379  05D3  30A0               	movlw	160
  2380  05D4  00AD               	movwf	I2C_Master_Init@c
  2381  05D5  120A  118A  25DB  120A  118A  	fcall	_I2C_Master_Init
  2382  05DA                     l144:
  2383  05DA  0008               	return
  2384  05DB                     __end_of_initSETUP:
  2385                           
  2386                           	psect	text5
  2387  05DB                     __ptext5:	
  2388 ;; *************** function _I2C_Master_Init *****************
  2389 ;; Defined at:
  2390 ;;		line 16 in file "I2C.c"
  2391 ;; Parameters:    Size  Location     Type
  2392 ;;  c               4   13[BANK0 ] const unsigned long 
  2393 ;; Auto vars:     Size  Location     Type
  2394 ;;		None
  2395 ;; Return value:  Size  Location     Type
  2396 ;;                  1    wreg      void 
  2397 ;; Registers used:
  2398 ;;		wreg, status,2, status,0, pclath, cstack
  2399 ;; Tracked objects:
  2400 ;;		On entry : 0/0
  2401 ;;		On exit  : 0/0
  2402 ;;		Unchanged: 0/0
  2403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2404 ;;      Params:         0       4       0       0       0
  2405 ;;      Locals:         0       0       0       0       0
  2406 ;;      Temps:          0       4       0       0       0
  2407 ;;      Totals:         0       8       0       0       0
  2408 ;;Total ram usage:        8 bytes
  2409 ;; Hardware stack levels used: 1
  2410 ;; Hardware stack levels required when called: 2
  2411 ;; This function calls:
  2412 ;;		___lldiv
  2413 ;; This function is called by:
  2414 ;;		_initSETUP
  2415 ;; This function uses a non-reentrant model
  2416 ;;
  2417                           
  2418                           
  2419                           ;psect for function _I2C_Master_Init
  2420  05DB                     _I2C_Master_Init:
  2421  05DB                     l1476:	
  2422                           ;incstack = 0
  2423                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  2424                           
  2425                           
  2426                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  2427  05DB  3028               	movlw	40
  2428  05DC  1283               	bcf	3,5	;RP0=0, select bank0
  2429  05DD  1303               	bcf	3,6	;RP1=0, select bank0
  2430  05DE  0094               	movwf	20	;volatile
  2431  05DF                     l1478:
  2432                           
  2433                           ;I2C.c: 19:     SSPCON2 = 0;
  2434  05DF  1683               	bsf	3,5	;RP0=1, select bank1
  2435  05E0  1303               	bcf	3,6	;RP1=0, select bank1
  2436  05E1  0191               	clrf	17	;volatile
  2437  05E2                     l1480:
  2438                           
  2439                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  2440  05E2  1283               	bcf	3,5	;RP0=0, select bank0
  2441  05E3  1303               	bcf	3,6	;RP1=0, select bank0
  2442  05E4  082D               	movf	I2C_Master_Init@c,w
  2443  05E5  00B1               	movwf	??_I2C_Master_Init
  2444  05E6  082E               	movf	I2C_Master_Init@c+1,w
  2445  05E7  00B2               	movwf	??_I2C_Master_Init+1
  2446  05E8  082F               	movf	I2C_Master_Init@c+2,w
  2447  05E9  00B3               	movwf	??_I2C_Master_Init+2
  2448  05EA  0830               	movf	I2C_Master_Init@c+3,w
  2449  05EB  00B4               	movwf	??_I2C_Master_Init+3
  2450  05EC  3002               	movlw	2
  2451  05ED                     u695:
  2452  05ED  1003               	clrc
  2453  05EE  0DB1               	rlf	??_I2C_Master_Init,f
  2454  05EF  0DB2               	rlf	??_I2C_Master_Init+1,f
  2455  05F0  0DB3               	rlf	??_I2C_Master_Init+2,f
  2456  05F1  0DB4               	rlf	??_I2C_Master_Init+3,f
  2457  05F2                     u690:
  2458  05F2  3EFF               	addlw	-1
  2459  05F3  1D03               	skipz
  2460  05F4  2DED               	goto	u695
  2461  05F5  0834               	movf	??_I2C_Master_Init+3,w
  2462  05F6  00A3               	movwf	___lldiv@divisor+3
  2463  05F7  0833               	movf	??_I2C_Master_Init+2,w
  2464  05F8  00A2               	movwf	___lldiv@divisor+2
  2465  05F9  0832               	movf	??_I2C_Master_Init+1,w
  2466  05FA  00A1               	movwf	___lldiv@divisor+1
  2467  05FB  0831               	movf	??_I2C_Master_Init,w
  2468  05FC  00A0               	movwf	___lldiv@divisor
  2469  05FD  3000               	movlw	0
  2470  05FE  00A7               	movwf	___lldiv@dividend+3
  2471  05FF  307A               	movlw	122
  2472  0600  00A6               	movwf	___lldiv@dividend+2
  2473  0601  3012               	movlw	18
  2474  0602  00A5               	movwf	___lldiv@dividend+1
  2475  0603  3000               	movlw	0
  2476  0604  00A4               	movwf	___lldiv@dividend
  2477  0605  120A  118A  23F1  120A  118A  	fcall	___lldiv
  2478  060A  1283               	bcf	3,5	;RP0=0, select bank0
  2479  060B  1303               	bcf	3,6	;RP1=0, select bank0
  2480  060C  0820               	movf	?___lldiv,w
  2481  060D  3EFF               	addlw	255
  2482  060E  1683               	bsf	3,5	;RP0=1, select bank1
  2483  060F  1303               	bcf	3,6	;RP1=0, select bank1
  2484  0610  0093               	movwf	19	;volatile
  2485  0611                     l1482:
  2486                           
  2487                           ;I2C.c: 21:     SSPSTAT = 0;
  2488  0611  0194               	clrf	20	;volatile
  2489  0612                     l1484:
  2490                           
  2491                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  2492  0612  1587               	bsf	7,3	;volatile
  2493  0613                     l1486:
  2494                           
  2495                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  2496  0613  1607               	bsf	7,4	;volatile
  2497  0614                     l173:
  2498  0614  0008               	return
  2499  0615                     __end_of_I2C_Master_Init:
  2500                           
  2501                           	psect	text6
  2502  03F1                     __ptext6:	
  2503 ;; *************** function ___lldiv *****************
  2504 ;; Defined at:
  2505 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
  2506 ;; Parameters:    Size  Location     Type
  2507 ;;  divisor         4    0[BANK0 ] unsigned long 
  2508 ;;  dividend        4    4[BANK0 ] unsigned long 
  2509 ;; Auto vars:     Size  Location     Type
  2510 ;;  quotient        4    8[BANK0 ] unsigned long 
  2511 ;;  counter         1   12[BANK0 ] unsigned char 
  2512 ;; Return value:  Size  Location     Type
  2513 ;;                  4    0[BANK0 ] unsigned long 
  2514 ;; Registers used:
  2515 ;;		wreg, status,2, status,0
  2516 ;; Tracked objects:
  2517 ;;		On entry : 0/0
  2518 ;;		On exit  : 0/0
  2519 ;;		Unchanged: 0/0
  2520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2521 ;;      Params:         0       8       0       0       0
  2522 ;;      Locals:         0       5       0       0       0
  2523 ;;      Temps:          1       0       0       0       0
  2524 ;;      Totals:         1      13       0       0       0
  2525 ;;Total ram usage:       14 bytes
  2526 ;; Hardware stack levels used: 1
  2527 ;; Hardware stack levels required when called: 1
  2528 ;; This function calls:
  2529 ;;		Nothing
  2530 ;; This function is called by:
  2531 ;;		_I2C_Master_Init
  2532 ;; This function uses a non-reentrant model
  2533 ;;
  2534                           
  2535                           
  2536                           ;psect for function ___lldiv
  2537  03F1                     ___lldiv:
  2538  03F1                     l1440:	
  2539                           ;incstack = 0
  2540                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2541                           
  2542  03F1  3000               	movlw	0
  2543  03F2  1283               	bcf	3,5	;RP0=0, select bank0
  2544  03F3  1303               	bcf	3,6	;RP1=0, select bank0
  2545  03F4  00AB               	movwf	___lldiv@quotient+3
  2546  03F5  3000               	movlw	0
  2547  03F6  00AA               	movwf	___lldiv@quotient+2
  2548  03F7  3000               	movlw	0
  2549  03F8  00A9               	movwf	___lldiv@quotient+1
  2550  03F9  3000               	movlw	0
  2551  03FA  00A8               	movwf	___lldiv@quotient
  2552  03FB  0823               	movf	___lldiv@divisor+3,w
  2553  03FC  0422               	iorwf	___lldiv@divisor+2,w
  2554  03FD  0421               	iorwf	___lldiv@divisor+1,w
  2555  03FE  0420               	iorwf	___lldiv@divisor,w
  2556  03FF  1903               	skipnz
  2557  0400  2C02               	goto	u621
  2558  0401  2C03               	goto	u620
  2559  0402                     u621:
  2560  0402  2C50               	goto	l1460
  2561  0403                     u620:
  2562  0403                     l1442:
  2563  0403  01AC               	clrf	___lldiv@counter
  2564  0404  0AAC               	incf	___lldiv@counter,f
  2565  0405  2C13               	goto	l1446
  2566  0406                     l1444:
  2567  0406  3001               	movlw	1
  2568  0407  00F5               	movwf	??___lldiv
  2569  0408                     u635:
  2570  0408  1003               	clrc
  2571  0409  0DA0               	rlf	___lldiv@divisor,f
  2572  040A  0DA1               	rlf	___lldiv@divisor+1,f
  2573  040B  0DA2               	rlf	___lldiv@divisor+2,f
  2574  040C  0DA3               	rlf	___lldiv@divisor+3,f
  2575  040D  0BF5               	decfsz	??___lldiv,f
  2576  040E  2C08               	goto	u635
  2577  040F  3001               	movlw	1
  2578  0410  00F5               	movwf	??___lldiv
  2579  0411  0875               	movf	??___lldiv,w
  2580  0412  07AC               	addwf	___lldiv@counter,f
  2581  0413                     l1446:
  2582  0413  1FA3               	btfss	___lldiv@divisor+3,7
  2583  0414  2C16               	goto	u641
  2584  0415  2C17               	goto	u640
  2585  0416                     u641:
  2586  0416  2C06               	goto	l1444
  2587  0417                     u640:
  2588  0417                     l1448:
  2589  0417  3001               	movlw	1
  2590  0418  00F5               	movwf	??___lldiv
  2591  0419                     u655:
  2592  0419  1003               	clrc
  2593  041A  0DA8               	rlf	___lldiv@quotient,f
  2594  041B  0DA9               	rlf	___lldiv@quotient+1,f
  2595  041C  0DAA               	rlf	___lldiv@quotient+2,f
  2596  041D  0DAB               	rlf	___lldiv@quotient+3,f
  2597  041E  0BF5               	decfsz	??___lldiv,f
  2598  041F  2C19               	goto	u655
  2599  0420                     l1450:
  2600  0420  0823               	movf	___lldiv@divisor+3,w
  2601  0421  0227               	subwf	___lldiv@dividend+3,w
  2602  0422  1D03               	skipz
  2603  0423  2C2E               	goto	u665
  2604  0424  0822               	movf	___lldiv@divisor+2,w
  2605  0425  0226               	subwf	___lldiv@dividend+2,w
  2606  0426  1D03               	skipz
  2607  0427  2C2E               	goto	u665
  2608  0428  0821               	movf	___lldiv@divisor+1,w
  2609  0429  0225               	subwf	___lldiv@dividend+1,w
  2610  042A  1D03               	skipz
  2611  042B  2C2E               	goto	u665
  2612  042C  0820               	movf	___lldiv@divisor,w
  2613  042D  0224               	subwf	___lldiv@dividend,w
  2614  042E                     u665:
  2615  042E  1C03               	skipc
  2616  042F  2C31               	goto	u661
  2617  0430  2C32               	goto	u660
  2618  0431                     u661:
  2619  0431  2C41               	goto	l1456
  2620  0432                     u660:
  2621  0432                     l1452:
  2622  0432  0820               	movf	___lldiv@divisor,w
  2623  0433  02A4               	subwf	___lldiv@dividend,f
  2624  0434  0821               	movf	___lldiv@divisor+1,w
  2625  0435  1C03               	skipc
  2626  0436  0F21               	incfsz	___lldiv@divisor+1,w
  2627  0437  02A5               	subwf	___lldiv@dividend+1,f
  2628  0438  0822               	movf	___lldiv@divisor+2,w
  2629  0439  1C03               	skipc
  2630  043A  0F22               	incfsz	___lldiv@divisor+2,w
  2631  043B  02A6               	subwf	___lldiv@dividend+2,f
  2632  043C  0823               	movf	___lldiv@divisor+3,w
  2633  043D  1C03               	skipc
  2634  043E  0F23               	incfsz	___lldiv@divisor+3,w
  2635  043F  02A7               	subwf	___lldiv@dividend+3,f
  2636  0440                     l1454:
  2637  0440  1428               	bsf	___lldiv@quotient,0
  2638  0441                     l1456:
  2639  0441  3001               	movlw	1
  2640  0442                     u675:
  2641  0442  1003               	clrc
  2642  0443  0CA3               	rrf	___lldiv@divisor+3,f
  2643  0444  0CA2               	rrf	___lldiv@divisor+2,f
  2644  0445  0CA1               	rrf	___lldiv@divisor+1,f
  2645  0446  0CA0               	rrf	___lldiv@divisor,f
  2646  0447  3EFF               	addlw	-1
  2647  0448  1D03               	skipz
  2648  0449  2C42               	goto	u675
  2649  044A                     l1458:
  2650  044A  3001               	movlw	1
  2651  044B  02AC               	subwf	___lldiv@counter,f
  2652  044C  1D03               	btfss	3,2
  2653  044D  2C4F               	goto	u681
  2654  044E  2C50               	goto	u680
  2655  044F                     u681:
  2656  044F  2C17               	goto	l1448
  2657  0450                     u680:
  2658  0450                     l1460:
  2659  0450  082B               	movf	___lldiv@quotient+3,w
  2660  0451  00A3               	movwf	?___lldiv+3
  2661  0452  082A               	movf	___lldiv@quotient+2,w
  2662  0453  00A2               	movwf	?___lldiv+2
  2663  0454  0829               	movf	___lldiv@quotient+1,w
  2664  0455  00A1               	movwf	?___lldiv+1
  2665  0456  0828               	movf	___lldiv@quotient,w
  2666  0457  00A0               	movwf	?___lldiv
  2667  0458                     l388:
  2668  0458  0008               	return
  2669  0459                     __end_of___lldiv:
  2670                           
  2671                           	psect	text7
  2672  0459                     __ptext7:	
  2673 ;; *************** function ___awmod *****************
  2674 ;; Defined at:
  2675 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  2676 ;; Parameters:    Size  Location     Type
  2677 ;;  divisor         2    8[BANK0 ] int 
  2678 ;;  dividend        2   10[BANK0 ] int 
  2679 ;; Auto vars:     Size  Location     Type
  2680 ;;  sign            1   14[BANK0 ] unsigned char 
  2681 ;;  counter         1   13[BANK0 ] unsigned char 
  2682 ;; Return value:  Size  Location     Type
  2683 ;;                  2    8[BANK0 ] int 
  2684 ;; Registers used:
  2685 ;;		wreg, status,2, status,0
  2686 ;; Tracked objects:
  2687 ;;		On entry : 0/0
  2688 ;;		On exit  : 0/0
  2689 ;;		Unchanged: 0/0
  2690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2691 ;;      Params:         0       4       0       0       0
  2692 ;;      Locals:         0       2       0       0       0
  2693 ;;      Temps:          0       1       0       0       0
  2694 ;;      Totals:         0       7       0       0       0
  2695 ;;Total ram usage:        7 bytes
  2696 ;; Hardware stack levels used: 1
  2697 ;; Hardware stack levels required when called: 1
  2698 ;; This function calls:
  2699 ;;		Nothing
  2700 ;; This function is called by:
  2701 ;;		_main
  2702 ;; This function uses a non-reentrant model
  2703 ;;
  2704                           
  2705                           
  2706                           ;psect for function ___awmod
  2707  0459                     ___awmod:
  2708  0459                     l1724:	
  2709                           ;incstack = 0
  2710                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2711                           
  2712  0459  1283               	bcf	3,5	;RP0=0, select bank0
  2713  045A  1303               	bcf	3,6	;RP1=0, select bank0
  2714  045B  01AE               	clrf	___awmod@sign
  2715  045C                     l1726:
  2716  045C  1FAB               	btfss	___awmod@dividend+1,7
  2717  045D  2C5F               	goto	u991
  2718  045E  2C60               	goto	u990
  2719  045F                     u991:
  2720  045F  2C67               	goto	l1732
  2721  0460                     u990:
  2722  0460                     l1728:
  2723  0460  09AA               	comf	___awmod@dividend,f
  2724  0461  09AB               	comf	___awmod@dividend+1,f
  2725  0462  0AAA               	incf	___awmod@dividend,f
  2726  0463  1903               	skipnz
  2727  0464  0AAB               	incf	___awmod@dividend+1,f
  2728  0465                     l1730:
  2729  0465  01AE               	clrf	___awmod@sign
  2730  0466  0AAE               	incf	___awmod@sign,f
  2731  0467                     l1732:
  2732  0467  1FA9               	btfss	___awmod@divisor+1,7
  2733  0468  2C6A               	goto	u1001
  2734  0469  2C6B               	goto	u1000
  2735  046A                     u1001:
  2736  046A  2C70               	goto	l1736
  2737  046B                     u1000:
  2738  046B                     l1734:
  2739  046B  09A8               	comf	___awmod@divisor,f
  2740  046C  09A9               	comf	___awmod@divisor+1,f
  2741  046D  0AA8               	incf	___awmod@divisor,f
  2742  046E  1903               	skipnz
  2743  046F  0AA9               	incf	___awmod@divisor+1,f
  2744  0470                     l1736:
  2745  0470  0828               	movf	___awmod@divisor,w
  2746  0471  0429               	iorwf	___awmod@divisor+1,w
  2747  0472  1903               	btfsc	3,2
  2748  0473  2C75               	goto	u1011
  2749  0474  2C76               	goto	u1010
  2750  0475                     u1011:
  2751  0475  2CA5               	goto	l1754
  2752  0476                     u1010:
  2753  0476                     l1738:
  2754  0476  01AD               	clrf	___awmod@counter
  2755  0477  0AAD               	incf	___awmod@counter,f
  2756  0478  2C84               	goto	l1744
  2757  0479                     l1740:
  2758  0479  3001               	movlw	1
  2759  047A                     u1025:
  2760  047A  1003               	clrc
  2761  047B  0DA8               	rlf	___awmod@divisor,f
  2762  047C  0DA9               	rlf	___awmod@divisor+1,f
  2763  047D  3EFF               	addlw	-1
  2764  047E  1D03               	skipz
  2765  047F  2C7A               	goto	u1025
  2766  0480                     l1742:
  2767  0480  3001               	movlw	1
  2768  0481  00AC               	movwf	??___awmod
  2769  0482  082C               	movf	??___awmod,w
  2770  0483  07AD               	addwf	___awmod@counter,f
  2771  0484                     l1744:
  2772  0484  1FA9               	btfss	___awmod@divisor+1,7
  2773  0485  2C87               	goto	u1031
  2774  0486  2C88               	goto	u1030
  2775  0487                     u1031:
  2776  0487  2C79               	goto	l1740
  2777  0488                     u1030:
  2778  0488                     l1746:
  2779  0488  0829               	movf	___awmod@divisor+1,w
  2780  0489  022B               	subwf	___awmod@dividend+1,w
  2781  048A  1D03               	skipz
  2782  048B  2C8E               	goto	u1045
  2783  048C  0828               	movf	___awmod@divisor,w
  2784  048D  022A               	subwf	___awmod@dividend,w
  2785  048E                     u1045:
  2786  048E  1C03               	skipc
  2787  048F  2C91               	goto	u1041
  2788  0490  2C92               	goto	u1040
  2789  0491                     u1041:
  2790  0491  2C98               	goto	l1750
  2791  0492                     u1040:
  2792  0492                     l1748:
  2793  0492  0828               	movf	___awmod@divisor,w
  2794  0493  02AA               	subwf	___awmod@dividend,f
  2795  0494  0829               	movf	___awmod@divisor+1,w
  2796  0495  1C03               	skipc
  2797  0496  03AB               	decf	___awmod@dividend+1,f
  2798  0497  02AB               	subwf	___awmod@dividend+1,f
  2799  0498                     l1750:
  2800  0498  3001               	movlw	1
  2801  0499                     u1055:
  2802  0499  1003               	clrc
  2803  049A  0CA9               	rrf	___awmod@divisor+1,f
  2804  049B  0CA8               	rrf	___awmod@divisor,f
  2805  049C  3EFF               	addlw	-1
  2806  049D  1D03               	skipz
  2807  049E  2C99               	goto	u1055
  2808  049F                     l1752:
  2809  049F  3001               	movlw	1
  2810  04A0  02AD               	subwf	___awmod@counter,f
  2811  04A1  1D03               	btfss	3,2
  2812  04A2  2CA4               	goto	u1061
  2813  04A3  2CA5               	goto	u1060
  2814  04A4                     u1061:
  2815  04A4  2C88               	goto	l1746
  2816  04A5                     u1060:
  2817  04A5                     l1754:
  2818  04A5  082E               	movf	___awmod@sign,w
  2819  04A6  1903               	btfsc	3,2
  2820  04A7  2CA9               	goto	u1071
  2821  04A8  2CAA               	goto	u1070
  2822  04A9                     u1071:
  2823  04A9  2CAF               	goto	l1758
  2824  04AA                     u1070:
  2825  04AA                     l1756:
  2826  04AA  09AA               	comf	___awmod@dividend,f
  2827  04AB  09AB               	comf	___awmod@dividend+1,f
  2828  04AC  0AAA               	incf	___awmod@dividend,f
  2829  04AD  1903               	skipnz
  2830  04AE  0AAB               	incf	___awmod@dividend+1,f
  2831  04AF                     l1758:
  2832  04AF  082B               	movf	___awmod@dividend+1,w
  2833  04B0  00A9               	movwf	?___awmod+1
  2834  04B1  082A               	movf	___awmod@dividend,w
  2835  04B2  00A8               	movwf	?___awmod
  2836  04B3                     l518:
  2837  04B3  0008               	return
  2838  04B4                     __end_of___awmod:
  2839                           
  2840                           	psect	text8
  2841  0388                     __ptext8:	
  2842 ;; *************** function ___awdiv *****************
  2843 ;; Defined at:
  2844 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  2845 ;; Parameters:    Size  Location     Type
  2846 ;;  divisor         2    0[BANK0 ] int 
  2847 ;;  dividend        2    2[BANK0 ] int 
  2848 ;; Auto vars:     Size  Location     Type
  2849 ;;  quotient        2    6[BANK0 ] int 
  2850 ;;  sign            1    5[BANK0 ] unsigned char 
  2851 ;;  counter         1    4[BANK0 ] unsigned char 
  2852 ;; Return value:  Size  Location     Type
  2853 ;;                  2    0[BANK0 ] int 
  2854 ;; Registers used:
  2855 ;;		wreg, status,2, status,0
  2856 ;; Tracked objects:
  2857 ;;		On entry : 0/0
  2858 ;;		On exit  : 0/0
  2859 ;;		Unchanged: 0/0
  2860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2861 ;;      Params:         0       4       0       0       0
  2862 ;;      Locals:         0       4       0       0       0
  2863 ;;      Temps:          1       0       0       0       0
  2864 ;;      Totals:         1       8       0       0       0
  2865 ;;Total ram usage:        9 bytes
  2866 ;; Hardware stack levels used: 1
  2867 ;; Hardware stack levels required when called: 1
  2868 ;; This function calls:
  2869 ;;		Nothing
  2870 ;; This function is called by:
  2871 ;;		_main
  2872 ;; This function uses a non-reentrant model
  2873 ;;
  2874                           
  2875                           
  2876                           ;psect for function ___awdiv
  2877  0388                     ___awdiv:
  2878  0388                     l2122:	
  2879                           ;incstack = 0
  2880                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2881                           
  2882  0388  1283               	bcf	3,5	;RP0=0, select bank0
  2883  0389  1303               	bcf	3,6	;RP1=0, select bank0
  2884  038A  01A5               	clrf	___awdiv@sign
  2885  038B                     l2124:
  2886  038B  1FA1               	btfss	___awdiv@divisor+1,7
  2887  038C  2B8E               	goto	u1391
  2888  038D  2B8F               	goto	u1390
  2889  038E                     u1391:
  2890  038E  2B96               	goto	l2130
  2891  038F                     u1390:
  2892  038F                     l2126:
  2893  038F  09A0               	comf	___awdiv@divisor,f
  2894  0390  09A1               	comf	___awdiv@divisor+1,f
  2895  0391  0AA0               	incf	___awdiv@divisor,f
  2896  0392  1903               	skipnz
  2897  0393  0AA1               	incf	___awdiv@divisor+1,f
  2898  0394                     l2128:
  2899  0394  01A5               	clrf	___awdiv@sign
  2900  0395  0AA5               	incf	___awdiv@sign,f
  2901  0396                     l2130:
  2902  0396  1FA3               	btfss	___awdiv@dividend+1,7
  2903  0397  2B99               	goto	u1401
  2904  0398  2B9A               	goto	u1400
  2905  0399                     u1401:
  2906  0399  2BA3               	goto	l2136
  2907  039A                     u1400:
  2908  039A                     l2132:
  2909  039A  09A2               	comf	___awdiv@dividend,f
  2910  039B  09A3               	comf	___awdiv@dividend+1,f
  2911  039C  0AA2               	incf	___awdiv@dividend,f
  2912  039D  1903               	skipnz
  2913  039E  0AA3               	incf	___awdiv@dividend+1,f
  2914  039F                     l2134:
  2915  039F  3001               	movlw	1
  2916  03A0  00F5               	movwf	??___awdiv
  2917  03A1  0875               	movf	??___awdiv,w
  2918  03A2  06A5               	xorwf	___awdiv@sign,f
  2919  03A3                     l2136:
  2920  03A3  01A6               	clrf	___awdiv@quotient
  2921  03A4  01A7               	clrf	___awdiv@quotient+1
  2922  03A5                     l2138:
  2923  03A5  0820               	movf	___awdiv@divisor,w
  2924  03A6  0421               	iorwf	___awdiv@divisor+1,w
  2925  03A7  1903               	btfsc	3,2
  2926  03A8  2BAA               	goto	u1411
  2927  03A9  2BAB               	goto	u1410
  2928  03AA                     u1411:
  2929  03AA  2BE2               	goto	l2158
  2930  03AB                     u1410:
  2931  03AB                     l2140:
  2932  03AB  01A4               	clrf	___awdiv@counter
  2933  03AC  0AA4               	incf	___awdiv@counter,f
  2934  03AD  2BB9               	goto	l2146
  2935  03AE                     l2142:
  2936  03AE  3001               	movlw	1
  2937  03AF                     u1425:
  2938  03AF  1003               	clrc
  2939  03B0  0DA0               	rlf	___awdiv@divisor,f
  2940  03B1  0DA1               	rlf	___awdiv@divisor+1,f
  2941  03B2  3EFF               	addlw	-1
  2942  03B3  1D03               	skipz
  2943  03B4  2BAF               	goto	u1425
  2944  03B5                     l2144:
  2945  03B5  3001               	movlw	1
  2946  03B6  00F5               	movwf	??___awdiv
  2947  03B7  0875               	movf	??___awdiv,w
  2948  03B8  07A4               	addwf	___awdiv@counter,f
  2949  03B9                     l2146:
  2950  03B9  1FA1               	btfss	___awdiv@divisor+1,7
  2951  03BA  2BBC               	goto	u1431
  2952  03BB  2BBD               	goto	u1430
  2953  03BC                     u1431:
  2954  03BC  2BAE               	goto	l2142
  2955  03BD                     u1430:
  2956  03BD                     l2148:
  2957  03BD  3001               	movlw	1
  2958  03BE                     u1445:
  2959  03BE  1003               	clrc
  2960  03BF  0DA6               	rlf	___awdiv@quotient,f
  2961  03C0  0DA7               	rlf	___awdiv@quotient+1,f
  2962  03C1  3EFF               	addlw	-1
  2963  03C2  1D03               	skipz
  2964  03C3  2BBE               	goto	u1445
  2965  03C4  0821               	movf	___awdiv@divisor+1,w
  2966  03C5  0223               	subwf	___awdiv@dividend+1,w
  2967  03C6  1D03               	skipz
  2968  03C7  2BCA               	goto	u1455
  2969  03C8  0820               	movf	___awdiv@divisor,w
  2970  03C9  0222               	subwf	___awdiv@dividend,w
  2971  03CA                     u1455:
  2972  03CA  1C03               	skipc
  2973  03CB  2BCD               	goto	u1451
  2974  03CC  2BCE               	goto	u1450
  2975  03CD                     u1451:
  2976  03CD  2BD5               	goto	l2154
  2977  03CE                     u1450:
  2978  03CE                     l2150:
  2979  03CE  0820               	movf	___awdiv@divisor,w
  2980  03CF  02A2               	subwf	___awdiv@dividend,f
  2981  03D0  0821               	movf	___awdiv@divisor+1,w
  2982  03D1  1C03               	skipc
  2983  03D2  03A3               	decf	___awdiv@dividend+1,f
  2984  03D3  02A3               	subwf	___awdiv@dividend+1,f
  2985  03D4                     l2152:
  2986  03D4  1426               	bsf	___awdiv@quotient,0
  2987  03D5                     l2154:
  2988  03D5  3001               	movlw	1
  2989  03D6                     u1465:
  2990  03D6  1003               	clrc
  2991  03D7  0CA1               	rrf	___awdiv@divisor+1,f
  2992  03D8  0CA0               	rrf	___awdiv@divisor,f
  2993  03D9  3EFF               	addlw	-1
  2994  03DA  1D03               	skipz
  2995  03DB  2BD6               	goto	u1465
  2996  03DC                     l2156:
  2997  03DC  3001               	movlw	1
  2998  03DD  02A4               	subwf	___awdiv@counter,f
  2999  03DE  1D03               	btfss	3,2
  3000  03DF  2BE1               	goto	u1471
  3001  03E0  2BE2               	goto	u1470
  3002  03E1                     u1471:
  3003  03E1  2BBD               	goto	l2148
  3004  03E2                     u1470:
  3005  03E2                     l2158:
  3006  03E2  0825               	movf	___awdiv@sign,w
  3007  03E3  1903               	btfsc	3,2
  3008  03E4  2BE6               	goto	u1481
  3009  03E5  2BE7               	goto	u1480
  3010  03E6                     u1481:
  3011  03E6  2BEC               	goto	l2162
  3012  03E7                     u1480:
  3013  03E7                     l2160:
  3014  03E7  09A6               	comf	___awdiv@quotient,f
  3015  03E8  09A7               	comf	___awdiv@quotient+1,f
  3016  03E9  0AA6               	incf	___awdiv@quotient,f
  3017  03EA  1903               	skipnz
  3018  03EB  0AA7               	incf	___awdiv@quotient+1,f
  3019  03EC                     l2162:
  3020  03EC  0827               	movf	___awdiv@quotient+1,w
  3021  03ED  00A1               	movwf	?___awdiv+1
  3022  03EE  0826               	movf	___awdiv@quotient,w
  3023  03EF  00A0               	movwf	?___awdiv
  3024  03F0                     l505:
  3025  03F0  0008               	return
  3026  03F1                     __end_of___awdiv:
  3027                           
  3028                           	psect	text9
  3029  06B7                     __ptext9:	
  3030 ;; *************** function _Lcd_Write_String *****************
  3031 ;; Defined at:
  3032 ;;		line 77 in file "LCD.c"
  3033 ;; Parameters:    Size  Location     Type
  3034 ;;  a               1    wreg     PTR unsigned char 
  3035 ;;		 -> STR_10(16), STR_9(11), STR_8(12), STR_7(16), 
  3036 ;;		 -> STR_6(11), STR_5(12), STR_4(2), STR_3(4), 
  3037 ;;		 -> STR_2(5), STR_1(16), 
  3038 ;; Auto vars:     Size  Location     Type
  3039 ;;  a               1    6[BANK0 ] PTR unsigned char 
  3040 ;;		 -> STR_10(16), STR_9(11), STR_8(12), STR_7(16), 
  3041 ;;		 -> STR_6(11), STR_5(12), STR_4(2), STR_3(4), 
  3042 ;;		 -> STR_2(5), STR_1(16), 
  3043 ;;  i               2    4[BANK0 ] int 
  3044 ;; Return value:  Size  Location     Type
  3045 ;;                  1    wreg      void 
  3046 ;; Registers used:
  3047 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3048 ;; Tracked objects:
  3049 ;;		On entry : 0/0
  3050 ;;		On exit  : 0/0
  3051 ;;		Unchanged: 0/0
  3052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3053 ;;      Params:         0       0       0       0       0
  3054 ;;      Locals:         0       3       0       0       0
  3055 ;;      Temps:          0       0       0       0       0
  3056 ;;      Totals:         0       3       0       0       0
  3057 ;;Total ram usage:        3 bytes
  3058 ;; Hardware stack levels used: 1
  3059 ;; Hardware stack levels required when called: 3
  3060 ;; This function calls:
  3061 ;;		_Lcd_Write_Char
  3062 ;; This function is called by:
  3063 ;;		_main
  3064 ;; This function uses a non-reentrant model
  3065 ;;
  3066                           
  3067                           
  3068                           ;psect for function _Lcd_Write_String
  3069  06B7                     _Lcd_Write_String:
  3070                           
  3071                           ;incstack = 0
  3072                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3073                           ;Lcd_Write_String@a stored from wreg
  3074  06B7  1283               	bcf	3,5	;RP0=0, select bank0
  3075  06B8  1303               	bcf	3,6	;RP1=0, select bank0
  3076  06B9  00A6               	movwf	Lcd_Write_String@a
  3077  06BA                     l2078:
  3078                           
  3079                           ;LCD.c: 78:     int i;;LCD.c: 79:     for (i = 0; a[i] != '\0'; i++)
  3080  06BA  01A4               	clrf	Lcd_Write_String@i
  3081  06BB  01A5               	clrf	Lcd_Write_String@i+1
  3082  06BC  2ED2               	goto	l2084
  3083  06BD                     l2080:
  3084                           
  3085                           ;LCD.c: 80:         Lcd_Write_Char(a[i]);
  3086  06BD  0824               	movf	Lcd_Write_String@i,w
  3087  06BE  0726               	addwf	Lcd_Write_String@a,w
  3088  06BF  0084               	movwf	4
  3089  06C0  120A  118A  2615  120A  118A  	fcall	stringdir
  3090  06C5  120A  118A  2707  120A  118A  	fcall	_Lcd_Write_Char
  3091  06CA                     l2082:
  3092  06CA  3001               	movlw	1
  3093  06CB  1283               	bcf	3,5	;RP0=0, select bank0
  3094  06CC  1303               	bcf	3,6	;RP1=0, select bank0
  3095  06CD  07A4               	addwf	Lcd_Write_String@i,f
  3096  06CE  1803               	skipnc
  3097  06CF  0AA5               	incf	Lcd_Write_String@i+1,f
  3098  06D0  3000               	movlw	0
  3099  06D1  07A5               	addwf	Lcd_Write_String@i+1,f
  3100  06D2                     l2084:
  3101  06D2  0824               	movf	Lcd_Write_String@i,w
  3102  06D3  0726               	addwf	Lcd_Write_String@a,w
  3103  06D4  0084               	movwf	4
  3104  06D5  120A  118A  2615  120A  118A  	fcall	stringdir
  3105  06DA  3A00               	xorlw	0
  3106  06DB  1D03               	skipz
  3107  06DC  2EDE               	goto	u1371
  3108  06DD  2EDF               	goto	u1370
  3109  06DE                     u1371:
  3110  06DE  2EBD               	goto	l2080
  3111  06DF                     u1370:
  3112  06DF                     l234:
  3113  06DF  0008               	return
  3114  06E0                     __end_of_Lcd_Write_String:
  3115                           
  3116                           	psect	text10
  3117  0707                     __ptext10:	
  3118 ;; *************** function _Lcd_Write_Char *****************
  3119 ;; Defined at:
  3120 ;;		line 65 in file "LCD.c"
  3121 ;; Parameters:    Size  Location     Type
  3122 ;;  a               1    wreg     unsigned char 
  3123 ;; Auto vars:     Size  Location     Type
  3124 ;;  a               1    1[BANK0 ] unsigned char 
  3125 ;;  y               1    3[BANK0 ] unsigned char 
  3126 ;;  temp            1    2[BANK0 ] unsigned char 
  3127 ;; Return value:  Size  Location     Type
  3128 ;;                  1    wreg      void 
  3129 ;; Registers used:
  3130 ;;		wreg, status,2, status,0, pclath, cstack
  3131 ;; Tracked objects:
  3132 ;;		On entry : 0/0
  3133 ;;		On exit  : 0/0
  3134 ;;		Unchanged: 0/0
  3135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3136 ;;      Params:         0       0       0       0       0
  3137 ;;      Locals:         0       3       0       0       0
  3138 ;;      Temps:          0       1       0       0       0
  3139 ;;      Totals:         0       4       0       0       0
  3140 ;;Total ram usage:        4 bytes
  3141 ;; Hardware stack levels used: 1
  3142 ;; Hardware stack levels required when called: 2
  3143 ;; This function calls:
  3144 ;;		_Lcd_Port
  3145 ;; This function is called by:
  3146 ;;		_main
  3147 ;;		_Lcd_Write_String
  3148 ;; This function uses a non-reentrant model
  3149 ;;
  3150                           
  3151                           
  3152                           ;psect for function _Lcd_Write_Char
  3153  0707                     _Lcd_Write_Char:
  3154                           
  3155                           ;incstack = 0
  3156                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3157                           ;Lcd_Write_Char@a stored from wreg
  3158  0707  1283               	bcf	3,5	;RP0=0, select bank0
  3159  0708  1303               	bcf	3,6	;RP1=0, select bank0
  3160  0709  00A1               	movwf	Lcd_Write_Char@a
  3161  070A                     l1984:
  3162                           
  3163                           ;LCD.c: 66:     char temp, y;;LCD.c: 67:     temp = a;
  3164  070A  0821               	movf	Lcd_Write_Char@a,w
  3165  070B  00A0               	movwf	??_Lcd_Write_Char
  3166  070C  0820               	movf	??_Lcd_Write_Char,w
  3167  070D  00A2               	movwf	Lcd_Write_Char@temp
  3168                           
  3169                           ;LCD.c: 68:     y = temp;
  3170  070E  0822               	movf	Lcd_Write_Char@temp,w
  3171  070F  00A0               	movwf	??_Lcd_Write_Char
  3172  0710  0820               	movf	??_Lcd_Write_Char,w
  3173  0711  00A3               	movwf	Lcd_Write_Char@y
  3174  0712                     l1986:
  3175                           
  3176                           ;LCD.c: 69:     RE0 = 1;
  3177  0712  1409               	bsf	9,0	;volatile
  3178  0713                     l1988:
  3179                           
  3180                           ;LCD.c: 70:     Lcd_Port(y);
  3181  0713  0823               	movf	Lcd_Write_Char@y,w
  3182  0714  120A  118A  2779  120A  118A  	fcall	_Lcd_Port
  3183  0719                     l1990:
  3184                           
  3185                           ;LCD.c: 71:     RE1 = 1;
  3186  0719  1283               	bcf	3,5	;RP0=0, select bank0
  3187  071A  1303               	bcf	3,6	;RP1=0, select bank0
  3188  071B  1489               	bsf	9,1	;volatile
  3189  071C                     l1992:
  3190                           
  3191                           ;LCD.c: 72:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  3192  071C  3019               	movlw	25
  3193  071D  1283               	bcf	3,5	;RP0=0, select bank0
  3194  071E  1303               	bcf	3,6	;RP1=0, select bank0
  3195  071F  00A0               	movwf	??_Lcd_Write_Char
  3196  0720                     u1737:
  3197  0720  0BA0               	decfsz	??_Lcd_Write_Char,f
  3198  0721  2F20               	goto	u1737
  3199  0722  2F23               	nop2
  3200  0723                     l1994:
  3201                           
  3202                           ;LCD.c: 73:     RE1 = 0;
  3203  0723  1283               	bcf	3,5	;RP0=0, select bank0
  3204  0724  1303               	bcf	3,6	;RP1=0, select bank0
  3205  0725  1089               	bcf	9,1	;volatile
  3206  0726                     l228:
  3207  0726  0008               	return
  3208  0727                     __end_of_Lcd_Write_Char:
  3209                           
  3210                           	psect	text11
  3211  04B4                     __ptext11:	
  3212 ;; *************** function _Lcd_Set_Cursor *****************
  3213 ;; Defined at:
  3214 ;;		line 30 in file "LCD.c"
  3215 ;; Parameters:    Size  Location     Type
  3216 ;;  a               1    wreg     unsigned char 
  3217 ;;  b               1    3[BANK0 ] unsigned char 
  3218 ;; Auto vars:     Size  Location     Type
  3219 ;;  a               1    6[BANK0 ] unsigned char 
  3220 ;;  temp            1    9[BANK0 ] unsigned char 
  3221 ;;  y               1    8[BANK0 ] unsigned char 
  3222 ;;  z               1    7[BANK0 ] unsigned char 
  3223 ;; Return value:  Size  Location     Type
  3224 ;;                  1    wreg      void 
  3225 ;; Registers used:
  3226 ;;		wreg, status,2, status,0, pclath, cstack
  3227 ;; Tracked objects:
  3228 ;;		On entry : 0/0
  3229 ;;		On exit  : 0/0
  3230 ;;		Unchanged: 0/0
  3231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3232 ;;      Params:         0       1       0       0       0
  3233 ;;      Locals:         0       4       0       0       0
  3234 ;;      Temps:          0       2       0       0       0
  3235 ;;      Totals:         0       7       0       0       0
  3236 ;;Total ram usage:        7 bytes
  3237 ;; Hardware stack levels used: 1
  3238 ;; Hardware stack levels required when called: 3
  3239 ;; This function calls:
  3240 ;;		_Lcd_Cmd
  3241 ;; This function is called by:
  3242 ;;		_main
  3243 ;; This function uses a non-reentrant model
  3244 ;;
  3245                           
  3246                           
  3247                           ;psect for function _Lcd_Set_Cursor
  3248  04B4                     _Lcd_Set_Cursor:
  3249                           
  3250                           ;incstack = 0
  3251                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3252                           ;Lcd_Set_Cursor@a stored from wreg
  3253  04B4  1283               	bcf	3,5	;RP0=0, select bank0
  3254  04B5  1303               	bcf	3,6	;RP1=0, select bank0
  3255  04B6  00A6               	movwf	Lcd_Set_Cursor@a
  3256  04B7                     l2058:
  3257                           
  3258                           ;LCD.c: 31:     char temp, z, y;;LCD.c: 32:     if (a == 1) {
  3259  04B7  0326               	decf	Lcd_Set_Cursor@a,w
  3260  04B8  1D03               	btfss	3,2
  3261  04B9  2CBB               	goto	u1331
  3262  04BA  2CBC               	goto	u1330
  3263  04BB                     u1331:
  3264  04BB  2CE1               	goto	l2068
  3265  04BC                     u1330:
  3266  04BC                     l2060:
  3267                           
  3268                           ;LCD.c: 33:         temp = 0x80 + b - 1;
  3269  04BC  0823               	movf	Lcd_Set_Cursor@b,w
  3270  04BD  3E7F               	addlw	127
  3271  04BE  00A4               	movwf	??_Lcd_Set_Cursor
  3272  04BF  0824               	movf	??_Lcd_Set_Cursor,w
  3273  04C0  00A9               	movwf	Lcd_Set_Cursor@temp
  3274                           
  3275                           ;LCD.c: 34:         z = temp >> 4;
  3276  04C1  0829               	movf	Lcd_Set_Cursor@temp,w
  3277  04C2  00A4               	movwf	??_Lcd_Set_Cursor
  3278  04C3  3004               	movlw	4
  3279  04C4                     u1345:
  3280  04C4  1003               	clrc
  3281  04C5  0CA4               	rrf	??_Lcd_Set_Cursor,f
  3282  04C6  3EFF               	addlw	-1
  3283  04C7  1D03               	skipz
  3284  04C8  2CC4               	goto	u1345
  3285  04C9  0824               	movf	??_Lcd_Set_Cursor,w
  3286  04CA  00A5               	movwf	??_Lcd_Set_Cursor+1
  3287  04CB  0825               	movf	??_Lcd_Set_Cursor+1,w
  3288  04CC  00A7               	movwf	Lcd_Set_Cursor@z
  3289  04CD                     l2062:
  3290                           
  3291                           ;LCD.c: 35:         y = temp & 0x0F;
  3292  04CD  0829               	movf	Lcd_Set_Cursor@temp,w
  3293  04CE  390F               	andlw	15
  3294  04CF  00A4               	movwf	??_Lcd_Set_Cursor
  3295  04D0  0824               	movf	??_Lcd_Set_Cursor,w
  3296  04D1  00A8               	movwf	Lcd_Set_Cursor@y
  3297  04D2                     l2064:
  3298                           
  3299                           ;LCD.c: 36:         Lcd_Cmd(z);
  3300  04D2  0827               	movf	Lcd_Set_Cursor@z,w
  3301  04D3  120A  118A  2727  120A  118A  	fcall	_Lcd_Cmd
  3302  04D8                     l2066:
  3303                           
  3304                           ;LCD.c: 37:         Lcd_Cmd(y);
  3305  04D8  1283               	bcf	3,5	;RP0=0, select bank0
  3306  04D9  1303               	bcf	3,6	;RP1=0, select bank0
  3307  04DA  0828               	movf	Lcd_Set_Cursor@y,w
  3308  04DB  120A  118A  2727  120A  118A  	fcall	_Lcd_Cmd
  3309                           
  3310                           ;LCD.c: 38:     } else if (a == 2) {
  3311  04E0  2D0B               	goto	l222
  3312  04E1                     l2068:
  3313  04E1  3002               	movlw	2
  3314  04E2  0626               	xorwf	Lcd_Set_Cursor@a,w
  3315  04E3  1D03               	btfss	3,2
  3316  04E4  2CE6               	goto	u1351
  3317  04E5  2CE7               	goto	u1350
  3318  04E6                     u1351:
  3319  04E6  2D0B               	goto	l222
  3320  04E7                     u1350:
  3321  04E7                     l2070:
  3322                           
  3323                           ;LCD.c: 39:         temp = 0xC0 + b - 1;
  3324  04E7  0823               	movf	Lcd_Set_Cursor@b,w
  3325  04E8  3EBF               	addlw	191
  3326  04E9  00A4               	movwf	??_Lcd_Set_Cursor
  3327  04EA  0824               	movf	??_Lcd_Set_Cursor,w
  3328  04EB  00A9               	movwf	Lcd_Set_Cursor@temp
  3329                           
  3330                           ;LCD.c: 40:         z = temp >> 4;
  3331  04EC  0829               	movf	Lcd_Set_Cursor@temp,w
  3332  04ED  00A4               	movwf	??_Lcd_Set_Cursor
  3333  04EE  3004               	movlw	4
  3334  04EF                     u1365:
  3335  04EF  1003               	clrc
  3336  04F0  0CA4               	rrf	??_Lcd_Set_Cursor,f
  3337  04F1  3EFF               	addlw	-1
  3338  04F2  1D03               	skipz
  3339  04F3  2CEF               	goto	u1365
  3340  04F4  0824               	movf	??_Lcd_Set_Cursor,w
  3341  04F5  00A5               	movwf	??_Lcd_Set_Cursor+1
  3342  04F6  0825               	movf	??_Lcd_Set_Cursor+1,w
  3343  04F7  00A7               	movwf	Lcd_Set_Cursor@z
  3344  04F8                     l2072:
  3345                           
  3346                           ;LCD.c: 41:         y = temp & 0xF0;
  3347  04F8  0829               	movf	Lcd_Set_Cursor@temp,w
  3348  04F9  39F0               	andlw	240
  3349  04FA  00A4               	movwf	??_Lcd_Set_Cursor
  3350  04FB  0824               	movf	??_Lcd_Set_Cursor,w
  3351  04FC  00A8               	movwf	Lcd_Set_Cursor@y
  3352  04FD                     l2074:
  3353                           
  3354                           ;LCD.c: 42:         Lcd_Cmd(z);
  3355  04FD  0827               	movf	Lcd_Set_Cursor@z,w
  3356  04FE  120A  118A  2727  120A  118A  	fcall	_Lcd_Cmd
  3357  0503                     l2076:
  3358                           
  3359                           ;LCD.c: 43:         Lcd_Cmd(y);
  3360  0503  1283               	bcf	3,5	;RP0=0, select bank0
  3361  0504  1303               	bcf	3,6	;RP1=0, select bank0
  3362  0505  0828               	movf	Lcd_Set_Cursor@y,w
  3363  0506  120A  118A  2727  120A  118A  	fcall	_Lcd_Cmd
  3364  050B                     l222:
  3365  050B  0008               	return
  3366  050C                     __end_of_Lcd_Set_Cursor:
  3367                           
  3368                           	psect	text12
  3369  050C                     __ptext12:	
  3370 ;; *************** function _Lcd_Init *****************
  3371 ;; Defined at:
  3372 ;;		line 47 in file "LCD.c"
  3373 ;; Parameters:    Size  Location     Type
  3374 ;;		None
  3375 ;; Auto vars:     Size  Location     Type
  3376 ;;		None
  3377 ;; Return value:  Size  Location     Type
  3378 ;;                  1    wreg      void 
  3379 ;; Registers used:
  3380 ;;		wreg, status,2, status,0, pclath, cstack
  3381 ;; Tracked objects:
  3382 ;;		On entry : 0/0
  3383 ;;		On exit  : 0/0
  3384 ;;		Unchanged: 0/0
  3385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3386 ;;      Params:         0       0       0       0       0
  3387 ;;      Locals:         0       0       0       0       0
  3388 ;;      Temps:          0       2       0       0       0
  3389 ;;      Totals:         0       2       0       0       0
  3390 ;;Total ram usage:        2 bytes
  3391 ;; Hardware stack levels used: 1
  3392 ;; Hardware stack levels required when called: 3
  3393 ;; This function calls:
  3394 ;;		_Lcd_Cmd
  3395 ;;		_Lcd_Port
  3396 ;; This function is called by:
  3397 ;;		_main
  3398 ;; This function uses a non-reentrant model
  3399 ;;
  3400                           
  3401                           
  3402                           ;psect for function _Lcd_Init
  3403  050C                     _Lcd_Init:
  3404  050C                     l2046:	
  3405                           ;incstack = 0
  3406                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3407                           
  3408                           
  3409                           ;LCD.c: 48:     Lcd_Port(0x00);
  3410  050C  3000               	movlw	0
  3411  050D  120A  118A  2779  120A  118A  	fcall	_Lcd_Port
  3412  0512                     l2048:
  3413                           
  3414                           ;LCD.c: 49:     _delay((unsigned long)((20)*(8000000/4000.0)));
  3415  0512  3034               	movlw	52
  3416  0513  1283               	bcf	3,5	;RP0=0, select bank0
  3417  0514  1303               	bcf	3,6	;RP1=0, select bank0
  3418  0515  00A4               	movwf	??_Lcd_Init+1
  3419  0516  30F1               	movlw	241
  3420  0517  00A3               	movwf	??_Lcd_Init
  3421  0518                     u1747:
  3422  0518  0BA3               	decfsz	??_Lcd_Init,f
  3423  0519  2D18               	goto	u1747
  3424  051A  0BA4               	decfsz	??_Lcd_Init+1,f
  3425  051B  2D18               	goto	u1747
  3426  051C                     l2050:
  3427                           
  3428                           ;LCD.c: 50:     Lcd_Cmd(0x30);
  3429  051C  3030               	movlw	48
  3430  051D  120A  118A  2727  120A  118A  	fcall	_Lcd_Cmd
  3431                           
  3432                           ;LCD.c: 51:     _delay((unsigned long)((5)*(8000000/4000.0)));
  3433  0522  300D               	movlw	13
  3434  0523  1283               	bcf	3,5	;RP0=0, select bank0
  3435  0524  1303               	bcf	3,6	;RP1=0, select bank0
  3436  0525  00A4               	movwf	??_Lcd_Init+1
  3437  0526  30FB               	movlw	251
  3438  0527  00A3               	movwf	??_Lcd_Init
  3439  0528                     u1757:
  3440  0528  0BA3               	decfsz	??_Lcd_Init,f
  3441  0529  2D28               	goto	u1757
  3442  052A  0BA4               	decfsz	??_Lcd_Init+1,f
  3443  052B  2D28               	goto	u1757
  3444  052C                     l2052:
  3445                           
  3446                           ;LCD.c: 52:     Lcd_Cmd(0x30);
  3447  052C  3030               	movlw	48
  3448  052D  120A  118A  2727  120A  118A  	fcall	_Lcd_Cmd
  3449  0532                     l2054:
  3450                           
  3451                           ;LCD.c: 53:     _delay((unsigned long)((200)*(8000000/4000000.0)));
  3452  0532  3084               	movlw	132
  3453  0533  1283               	bcf	3,5	;RP0=0, select bank0
  3454  0534  1303               	bcf	3,6	;RP1=0, select bank0
  3455  0535  00A3               	movwf	??_Lcd_Init
  3456  0536                     u1767:
  3457  0536  0BA3               	decfsz	??_Lcd_Init,f
  3458  0537  2D36               	goto	u1767
  3459  0538  0000               	nop
  3460                           
  3461                           ;LCD.c: 54:     Lcd_Cmd(0x30);
  3462  0539  3030               	movlw	48
  3463  053A  120A  118A  2727  120A  118A  	fcall	_Lcd_Cmd
  3464                           
  3465                           ;LCD.c: 56:     Lcd_Cmd(0x3C);
  3466  053F  303C               	movlw	60
  3467  0540  120A  118A  2727  120A  118A  	fcall	_Lcd_Cmd
  3468                           
  3469                           ;LCD.c: 58:     Lcd_Cmd(0x08);
  3470  0545  3008               	movlw	8
  3471  0546  120A  118A  2727  120A  118A  	fcall	_Lcd_Cmd
  3472                           
  3473                           ;LCD.c: 60:     Lcd_Cmd(0x01);
  3474  054B  3001               	movlw	1
  3475  054C  120A  118A  2727  120A  118A  	fcall	_Lcd_Cmd
  3476                           
  3477                           ;LCD.c: 62:     Lcd_Cmd(0x06);
  3478  0551  3006               	movlw	6
  3479  0552  120A  118A  2727  120A  118A  	fcall	_Lcd_Cmd
  3480  0557                     l225:
  3481  0557  0008               	return
  3482  0558                     __end_of_Lcd_Init:
  3483                           
  3484                           	psect	text13
  3485  0743                     __ptext13:	
  3486 ;; *************** function _Lcd_Clear *****************
  3487 ;; Defined at:
  3488 ;;		line 25 in file "LCD.c"
  3489 ;; Parameters:    Size  Location     Type
  3490 ;;		None
  3491 ;; Auto vars:     Size  Location     Type
  3492 ;;		None
  3493 ;; Return value:  Size  Location     Type
  3494 ;;                  1    wreg      void 
  3495 ;; Registers used:
  3496 ;;		wreg, status,2, status,0, pclath, cstack
  3497 ;; Tracked objects:
  3498 ;;		On entry : 0/0
  3499 ;;		On exit  : 0/0
  3500 ;;		Unchanged: 0/0
  3501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3502 ;;      Params:         0       0       0       0       0
  3503 ;;      Locals:         0       0       0       0       0
  3504 ;;      Temps:          0       0       0       0       0
  3505 ;;      Totals:         0       0       0       0       0
  3506 ;;Total ram usage:        0 bytes
  3507 ;; Hardware stack levels used: 1
  3508 ;; Hardware stack levels required when called: 3
  3509 ;; This function calls:
  3510 ;;		_Lcd_Cmd
  3511 ;; This function is called by:
  3512 ;;		_main
  3513 ;; This function uses a non-reentrant model
  3514 ;;
  3515                           
  3516                           
  3517                           ;psect for function _Lcd_Clear
  3518  0743                     _Lcd_Clear:
  3519  0743                     l2056:	
  3520                           ;incstack = 0
  3521                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3522                           
  3523                           
  3524                           ;LCD.c: 26:     Lcd_Cmd(0);
  3525  0743  3000               	movlw	0
  3526  0744  120A  118A  2727  120A  118A  	fcall	_Lcd_Cmd
  3527                           
  3528                           ;LCD.c: 27:     Lcd_Cmd(1);
  3529  0749  3001               	movlw	1
  3530  074A  120A  118A  2727  120A  118A  	fcall	_Lcd_Cmd
  3531  074F                     l216:
  3532  074F  0008               	return
  3533  0750                     __end_of_Lcd_Clear:
  3534                           
  3535                           	psect	text14
  3536  0727                     __ptext14:	
  3537 ;; *************** function _Lcd_Cmd *****************
  3538 ;; Defined at:
  3539 ;;		line 17 in file "LCD.c"
  3540 ;; Parameters:    Size  Location     Type
  3541 ;;  a               1    wreg     unsigned char 
  3542 ;; Auto vars:     Size  Location     Type
  3543 ;;  a               1    2[BANK0 ] unsigned char 
  3544 ;; Return value:  Size  Location     Type
  3545 ;;                  1    wreg      void 
  3546 ;; Registers used:
  3547 ;;		wreg, status,2, status,0, pclath, cstack
  3548 ;; Tracked objects:
  3549 ;;		On entry : 0/0
  3550 ;;		On exit  : 0/0
  3551 ;;		Unchanged: 0/0
  3552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3553 ;;      Params:         0       0       0       0       0
  3554 ;;      Locals:         0       1       0       0       0
  3555 ;;      Temps:          0       2       0       0       0
  3556 ;;      Totals:         0       3       0       0       0
  3557 ;;Total ram usage:        3 bytes
  3558 ;; Hardware stack levels used: 1
  3559 ;; Hardware stack levels required when called: 2
  3560 ;; This function calls:
  3561 ;;		_Lcd_Port
  3562 ;; This function is called by:
  3563 ;;		_Lcd_Clear
  3564 ;;		_Lcd_Set_Cursor
  3565 ;;		_Lcd_Init
  3566 ;;		_Lcd_Shift_Right
  3567 ;;		_Lcd_Shift_Left
  3568 ;; This function uses a non-reentrant model
  3569 ;;
  3570                           
  3571                           
  3572                           ;psect for function _Lcd_Cmd
  3573  0727                     _Lcd_Cmd:
  3574                           
  3575                           ;incstack = 0
  3576                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3577                           ;Lcd_Cmd@a stored from wreg
  3578  0727  1283               	bcf	3,5	;RP0=0, select bank0
  3579  0728  1303               	bcf	3,6	;RP1=0, select bank0
  3580  0729  00A2               	movwf	Lcd_Cmd@a
  3581  072A                     l1996:
  3582                           
  3583                           ;LCD.c: 18:     RE0 = 0;
  3584  072A  1009               	bcf	9,0	;volatile
  3585  072B                     l1998:
  3586                           
  3587                           ;LCD.c: 19:     Lcd_Port(a);
  3588  072B  0822               	movf	Lcd_Cmd@a,w
  3589  072C  120A  118A  2779  120A  118A  	fcall	_Lcd_Port
  3590  0731                     l2000:
  3591                           
  3592                           ;LCD.c: 20:     RE1 = 1;
  3593  0731  1283               	bcf	3,5	;RP0=0, select bank0
  3594  0732  1303               	bcf	3,6	;RP1=0, select bank0
  3595  0733  1489               	bsf	9,1	;volatile
  3596  0734                     l2002:
  3597                           
  3598                           ;LCD.c: 21:     _delay((unsigned long)((4)*(8000000/4000.0)));
  3599  0734  300B               	movlw	11
  3600  0735  1283               	bcf	3,5	;RP0=0, select bank0
  3601  0736  1303               	bcf	3,6	;RP1=0, select bank0
  3602  0737  00A1               	movwf	??_Lcd_Cmd+1
  3603  0738  3061               	movlw	97
  3604  0739  00A0               	movwf	??_Lcd_Cmd
  3605  073A                     u1777:
  3606  073A  0BA0               	decfsz	??_Lcd_Cmd,f
  3607  073B  2F3A               	goto	u1777
  3608  073C  0BA1               	decfsz	??_Lcd_Cmd+1,f
  3609  073D  2F3A               	goto	u1777
  3610  073E  2F3F               	nop2
  3611  073F                     l2004:
  3612                           
  3613                           ;LCD.c: 22:     RE1 = 0;
  3614  073F  1283               	bcf	3,5	;RP0=0, select bank0
  3615  0740  1303               	bcf	3,6	;RP1=0, select bank0
  3616  0741  1089               	bcf	9,1	;volatile
  3617  0742                     l213:
  3618  0742  0008               	return
  3619  0743                     __end_of_Lcd_Cmd:
  3620                           
  3621                           	psect	text15
  3622  0779                     __ptext15:	
  3623 ;; *************** function _Lcd_Port *****************
  3624 ;; Defined at:
  3625 ;;		line 12 in file "LCD.c"
  3626 ;; Parameters:    Size  Location     Type
  3627 ;;  a               1    wreg     unsigned char 
  3628 ;; Auto vars:     Size  Location     Type
  3629 ;;  a               1    5[COMMON] unsigned char 
  3630 ;; Return value:  Size  Location     Type
  3631 ;;                  1    wreg      void 
  3632 ;; Registers used:
  3633 ;;		wreg
  3634 ;; Tracked objects:
  3635 ;;		On entry : 0/0
  3636 ;;		On exit  : 0/0
  3637 ;;		Unchanged: 0/0
  3638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3639 ;;      Params:         0       0       0       0       0
  3640 ;;      Locals:         1       0       0       0       0
  3641 ;;      Temps:          0       0       0       0       0
  3642 ;;      Totals:         1       0       0       0       0
  3643 ;;Total ram usage:        1 bytes
  3644 ;; Hardware stack levels used: 1
  3645 ;; Hardware stack levels required when called: 1
  3646 ;; This function calls:
  3647 ;;		Nothing
  3648 ;; This function is called by:
  3649 ;;		_Lcd_Cmd
  3650 ;;		_Lcd_Init
  3651 ;;		_Lcd_Write_Char
  3652 ;; This function uses a non-reentrant model
  3653 ;;
  3654                           
  3655                           
  3656                           ;psect for function _Lcd_Port
  3657  0779                     _Lcd_Port:
  3658                           
  3659                           ;incstack = 0
  3660                           ; Regs used in _Lcd_Port: [wreg]
  3661                           ;Lcd_Port@a stored from wreg
  3662  0779  00F5               	movwf	Lcd_Port@a
  3663  077A                     l1982:
  3664                           
  3665                           ;LCD.c: 13:     PORTD = a;
  3666  077A  0875               	movf	Lcd_Port@a,w
  3667  077B  1283               	bcf	3,5	;RP0=0, select bank0
  3668  077C  1303               	bcf	3,6	;RP1=0, select bank0
  3669  077D  0088               	movwf	8	;volatile
  3670  077E                     l210:
  3671  077E  0008               	return
  3672  077F                     __end_of_Lcd_Port:
  3673                           
  3674                           	psect	text16
  3675  075D                     __ptext16:	
  3676 ;; *************** function _I2C_Master_Write *****************
  3677 ;; Defined at:
  3678 ;;		line 65 in file "I2C.c"
  3679 ;; Parameters:    Size  Location     Type
  3680 ;;  d               2    0[BANK0 ] unsigned int 
  3681 ;; Auto vars:     Size  Location     Type
  3682 ;;		None
  3683 ;; Return value:  Size  Location     Type
  3684 ;;                  1    wreg      void 
  3685 ;; Registers used:
  3686 ;;		wreg, status,2, status,0, pclath, cstack
  3687 ;; Tracked objects:
  3688 ;;		On entry : 0/0
  3689 ;;		On exit  : 0/0
  3690 ;;		Unchanged: 0/0
  3691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3692 ;;      Params:         0       2       0       0       0
  3693 ;;      Locals:         0       0       0       0       0
  3694 ;;      Temps:          0       0       0       0       0
  3695 ;;      Totals:         0       2       0       0       0
  3696 ;;Total ram usage:        2 bytes
  3697 ;; Hardware stack levels used: 1
  3698 ;; Hardware stack levels required when called: 2
  3699 ;; This function calls:
  3700 ;;		_I2C_Master_Wait
  3701 ;; This function is called by:
  3702 ;;		_main
  3703 ;; This function uses a non-reentrant model
  3704 ;;
  3705                           
  3706                           
  3707                           ;psect for function _I2C_Master_Write
  3708  075D                     _I2C_Master_Write:
  3709  075D                     l2086:	
  3710                           ;incstack = 0
  3711                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3712                           
  3713                           
  3714                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  3715  075D  120A  118A  2750  120A  118A  	fcall	_I2C_Master_Wait
  3716  0762                     l2088:
  3717                           
  3718                           ;I2C.c: 68:     SSPBUF = d;
  3719  0762  1283               	bcf	3,5	;RP0=0, select bank0
  3720  0763  1303               	bcf	3,6	;RP1=0, select bank0
  3721  0764  0820               	movf	I2C_Master_Write@d,w
  3722  0765  0093               	movwf	19	;volatile
  3723  0766                     l191:
  3724  0766  0008               	return
  3725  0767                     __end_of_I2C_Master_Write:
  3726                           
  3727                           	psect	text17
  3728  0767                     __ptext17:	
  3729 ;; *************** function _I2C_Master_Stop *****************
  3730 ;; Defined at:
  3731 ;;		line 55 in file "I2C.c"
  3732 ;; Parameters:    Size  Location     Type
  3733 ;;		None
  3734 ;; Auto vars:     Size  Location     Type
  3735 ;;		None
  3736 ;; Return value:  Size  Location     Type
  3737 ;;                  1    wreg      void 
  3738 ;; Registers used:
  3739 ;;		wreg, status,2, status,0, pclath, cstack
  3740 ;; Tracked objects:
  3741 ;;		On entry : 0/0
  3742 ;;		On exit  : 0/0
  3743 ;;		Unchanged: 0/0
  3744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3745 ;;      Params:         0       0       0       0       0
  3746 ;;      Locals:         0       0       0       0       0
  3747 ;;      Temps:          0       0       0       0       0
  3748 ;;      Totals:         0       0       0       0       0
  3749 ;;Total ram usage:        0 bytes
  3750 ;; Hardware stack levels used: 1
  3751 ;; Hardware stack levels required when called: 2
  3752 ;; This function calls:
  3753 ;;		_I2C_Master_Wait
  3754 ;; This function is called by:
  3755 ;;		_main
  3756 ;; This function uses a non-reentrant model
  3757 ;;
  3758                           
  3759                           
  3760                           ;psect for function _I2C_Master_Stop
  3761  0767                     _I2C_Master_Stop:
  3762  0767                     l1660:	
  3763                           ;incstack = 0
  3764                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3765                           
  3766                           
  3767                           ;I2C.c: 57:     I2C_Master_Wait();
  3768  0767  120A  118A  2750  120A  118A  	fcall	_I2C_Master_Wait
  3769  076C                     l1662:
  3770                           
  3771                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  3772  076C  1683               	bsf	3,5	;RP0=1, select bank1
  3773  076D  1303               	bcf	3,6	;RP1=0, select bank1
  3774  076E  1511               	bsf	17,2	;volatile
  3775  076F                     l188:
  3776  076F  0008               	return
  3777  0770                     __end_of_I2C_Master_Stop:
  3778                           
  3779                           	psect	text18
  3780  0770                     __ptext18:	
  3781 ;; *************** function _I2C_Master_Start *****************
  3782 ;; Defined at:
  3783 ;;		line 39 in file "I2C.c"
  3784 ;; Parameters:    Size  Location     Type
  3785 ;;		None
  3786 ;; Auto vars:     Size  Location     Type
  3787 ;;		None
  3788 ;; Return value:  Size  Location     Type
  3789 ;;                  1    wreg      void 
  3790 ;; Registers used:
  3791 ;;		wreg, status,2, status,0, pclath, cstack
  3792 ;; Tracked objects:
  3793 ;;		On entry : 0/0
  3794 ;;		On exit  : 0/0
  3795 ;;		Unchanged: 0/0
  3796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3797 ;;      Params:         0       0       0       0       0
  3798 ;;      Locals:         0       0       0       0       0
  3799 ;;      Temps:          0       0       0       0       0
  3800 ;;      Totals:         0       0       0       0       0
  3801 ;;Total ram usage:        0 bytes
  3802 ;; Hardware stack levels used: 1
  3803 ;; Hardware stack levels required when called: 2
  3804 ;; This function calls:
  3805 ;;		_I2C_Master_Wait
  3806 ;; This function is called by:
  3807 ;;		_main
  3808 ;; This function uses a non-reentrant model
  3809 ;;
  3810                           
  3811                           
  3812                           ;psect for function _I2C_Master_Start
  3813  0770                     _I2C_Master_Start:
  3814  0770                     l1636:	
  3815                           ;incstack = 0
  3816                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3817                           
  3818                           
  3819                           ;I2C.c: 41:     I2C_Master_Wait();
  3820  0770  120A  118A  2750  120A  118A  	fcall	_I2C_Master_Wait
  3821  0775                     l1638:
  3822                           
  3823                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  3824  0775  1683               	bsf	3,5	;RP0=1, select bank1
  3825  0776  1303               	bcf	3,6	;RP1=0, select bank1
  3826  0777  1411               	bsf	17,0	;volatile
  3827  0778                     l182:
  3828  0778  0008               	return
  3829  0779                     __end_of_I2C_Master_Start:
  3830                           
  3831                           	psect	text19
  3832  0685                     __ptext19:	
  3833 ;; *************** function _I2C_Master_Read *****************
  3834 ;; Defined at:
  3835 ;;		line 74 in file "I2C.c"
  3836 ;; Parameters:    Size  Location     Type
  3837 ;;  a               2    0[BANK0 ] unsigned short 
  3838 ;; Auto vars:     Size  Location     Type
  3839 ;;  temp            2    4[BANK0 ] unsigned short 
  3840 ;; Return value:  Size  Location     Type
  3841 ;;                  2    0[BANK0 ] unsigned short 
  3842 ;; Registers used:
  3843 ;;		wreg, status,2, status,0, pclath, cstack
  3844 ;; Tracked objects:
  3845 ;;		On entry : 0/0
  3846 ;;		On exit  : 0/0
  3847 ;;		Unchanged: 0/0
  3848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3849 ;;      Params:         0       2       0       0       0
  3850 ;;      Locals:         0       2       0       0       0
  3851 ;;      Temps:          0       2       0       0       0
  3852 ;;      Totals:         0       6       0       0       0
  3853 ;;Total ram usage:        6 bytes
  3854 ;; Hardware stack levels used: 1
  3855 ;; Hardware stack levels required when called: 2
  3856 ;; This function calls:
  3857 ;;		_I2C_Master_Wait
  3858 ;; This function is called by:
  3859 ;;		_main
  3860 ;; This function uses a non-reentrant model
  3861 ;;
  3862                           
  3863                           
  3864                           ;psect for function _I2C_Master_Read
  3865  0685                     _I2C_Master_Read:
  3866  0685                     l2090:	
  3867                           ;incstack = 0
  3868                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3869                           
  3870                           
  3871                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  3872  0685  120A  118A  2750  120A  118A  	fcall	_I2C_Master_Wait
  3873  068A                     l2092:
  3874                           
  3875                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  3876  068A  1683               	bsf	3,5	;RP0=1, select bank1
  3877  068B  1303               	bcf	3,6	;RP1=0, select bank1
  3878  068C  1591               	bsf	17,3	;volatile
  3879                           
  3880                           ;I2C.c: 79:     I2C_Master_Wait();
  3881  068D  120A  118A  2750  120A  118A  	fcall	_I2C_Master_Wait
  3882  0692                     l2094:
  3883                           
  3884                           ;I2C.c: 80:     temp = SSPBUF;
  3885  0692  1283               	bcf	3,5	;RP0=0, select bank0
  3886  0693  1303               	bcf	3,6	;RP1=0, select bank0
  3887  0694  0813               	movf	19,w	;volatile
  3888  0695  00A2               	movwf	??_I2C_Master_Read
  3889  0696  01A3               	clrf	??_I2C_Master_Read+1
  3890  0697  0822               	movf	??_I2C_Master_Read,w
  3891  0698  00A4               	movwf	I2C_Master_Read@temp
  3892  0699  0823               	movf	??_I2C_Master_Read+1,w
  3893  069A  00A5               	movwf	I2C_Master_Read@temp+1
  3894  069B                     l2096:
  3895                           
  3896                           ;I2C.c: 81:     I2C_Master_Wait();
  3897  069B  120A  118A  2750  120A  118A  	fcall	_I2C_Master_Wait
  3898  06A0                     l2098:
  3899                           
  3900                           ;I2C.c: 82:     if(a == 1){
  3901  06A0  1283               	bcf	3,5	;RP0=0, select bank0
  3902  06A1  1303               	bcf	3,6	;RP1=0, select bank0
  3903  06A2  0320               	decf	I2C_Master_Read@a,w
  3904  06A3  0421               	iorwf	I2C_Master_Read@a+1,w
  3905  06A4  1D03               	btfss	3,2
  3906  06A5  2EA7               	goto	u1381
  3907  06A6  2EA8               	goto	u1380
  3908  06A7                     u1381:
  3909  06A7  2EAC               	goto	l194
  3910  06A8                     u1380:
  3911  06A8                     l2100:
  3912                           
  3913                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  3914  06A8  1683               	bsf	3,5	;RP0=1, select bank1
  3915  06A9  1303               	bcf	3,6	;RP1=0, select bank1
  3916  06AA  1291               	bcf	17,5	;volatile
  3917                           
  3918                           ;I2C.c: 84:     }else{
  3919  06AB  2EAF               	goto	l195
  3920  06AC                     l194:
  3921                           
  3922                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  3923  06AC  1683               	bsf	3,5	;RP0=1, select bank1
  3924  06AD  1303               	bcf	3,6	;RP1=0, select bank1
  3925  06AE  1691               	bsf	17,5	;volatile
  3926  06AF                     l195:	
  3927                           ;I2C.c: 86:     }
  3928                           
  3929                           
  3930                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  3931  06AF  1611               	bsf	17,4	;volatile
  3932  06B0                     l2102:
  3933                           
  3934                           ;I2C.c: 88:     return temp;
  3935  06B0  1283               	bcf	3,5	;RP0=0, select bank0
  3936  06B1  1303               	bcf	3,6	;RP1=0, select bank0
  3937  06B2  0825               	movf	I2C_Master_Read@temp+1,w
  3938  06B3  00A1               	movwf	?_I2C_Master_Read+1
  3939  06B4  0824               	movf	I2C_Master_Read@temp,w
  3940  06B5  00A0               	movwf	?_I2C_Master_Read
  3941  06B6                     l196:
  3942  06B6  0008               	return
  3943  06B7                     __end_of_I2C_Master_Read:
  3944                           
  3945                           	psect	text20
  3946  0750                     __ptext20:	
  3947 ;; *************** function _I2C_Master_Wait *****************
  3948 ;; Defined at:
  3949 ;;		line 32 in file "I2C.c"
  3950 ;; Parameters:    Size  Location     Type
  3951 ;;		None
  3952 ;; Auto vars:     Size  Location     Type
  3953 ;;		None
  3954 ;; Return value:  Size  Location     Type
  3955 ;;                  1    wreg      void 
  3956 ;; Registers used:
  3957 ;;		wreg, status,2
  3958 ;; Tracked objects:
  3959 ;;		On entry : 0/0
  3960 ;;		On exit  : 0/0
  3961 ;;		Unchanged: 0/0
  3962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3963 ;;      Params:         0       0       0       0       0
  3964 ;;      Locals:         0       0       0       0       0
  3965 ;;      Temps:          0       0       0       0       0
  3966 ;;      Totals:         0       0       0       0       0
  3967 ;;Total ram usage:        0 bytes
  3968 ;; Hardware stack levels used: 1
  3969 ;; Hardware stack levels required when called: 1
  3970 ;; This function calls:
  3971 ;;		Nothing
  3972 ;; This function is called by:
  3973 ;;		_I2C_Master_Start
  3974 ;;		_I2C_Master_Stop
  3975 ;;		_I2C_Master_Write
  3976 ;;		_I2C_Master_Read
  3977 ;;		_I2C_Master_RepeatedStart
  3978 ;; This function uses a non-reentrant model
  3979 ;;
  3980                           
  3981                           
  3982                           ;psect for function _I2C_Master_Wait
  3983  0750                     _I2C_Master_Wait:
  3984  0750                     l1488:	
  3985                           ;incstack = 0
  3986                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3987                           
  3988  0750                     l176:	
  3989                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3990                           
  3991  0750  1683               	bsf	3,5	;RP0=1, select bank1
  3992  0751  1303               	bcf	3,6	;RP1=0, select bank1
  3993  0752  1914               	btfsc	20,2	;volatile
  3994  0753  2F55               	goto	u701
  3995  0754  2F56               	goto	u700
  3996  0755                     u701:
  3997  0755  2F50               	goto	l176
  3998  0756                     u700:
  3999  0756                     l1490:
  4000  0756  0811               	movf	17,w	;volatile
  4001  0757  391F               	andlw	31
  4002  0758  1D03               	btfss	3,2
  4003  0759  2F5B               	goto	u711
  4004  075A  2F5C               	goto	u710
  4005  075B                     u711:
  4006  075B  2F50               	goto	l176
  4007  075C                     u710:
  4008  075C                     l179:
  4009  075C  0008               	return
  4010  075D                     __end_of_I2C_Master_Wait:
  4011                           
  4012                           	psect	text21
  4013  064D                     __ptext21:	
  4014 ;; *************** function _isr *****************
  4015 ;; Defined at:
  4016 ;;		line 165 in file "master.c"
  4017 ;; Parameters:    Size  Location     Type
  4018 ;;		None
  4019 ;; Auto vars:     Size  Location     Type
  4020 ;;		None
  4021 ;; Return value:  Size  Location     Type
  4022 ;;                  1    wreg      void 
  4023 ;; Registers used:
  4024 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4025 ;; Tracked objects:
  4026 ;;		On entry : 0/0
  4027 ;;		On exit  : 0/0
  4028 ;;		Unchanged: 0/0
  4029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4030 ;;      Params:         0       0       0       0       0
  4031 ;;      Locals:         0       0       0       0       0
  4032 ;;      Temps:          5       0       0       0       0
  4033 ;;      Totals:         5       0       0       0       0
  4034 ;;Total ram usage:        5 bytes
  4035 ;; Hardware stack levels used: 1
  4036 ;; This function calls:
  4037 ;;		Nothing
  4038 ;; This function is called by:
  4039 ;;		Interrupt level 1
  4040 ;; This function uses a non-reentrant model
  4041 ;;
  4042                           
  4043                           
  4044                           ;psect for function _isr
  4045  064D                     _isr:
  4046  064D                     i1l1928:
  4047                           
  4048                           ;master.c: 166:     if(PIR1bits.RCIF == 1){
  4049  064D  1283               	bcf	3,5	;RP0=0, select bank0
  4050  064E  1303               	bcf	3,6	;RP1=0, select bank0
  4051  064F  1E8C               	btfss	12,5	;volatile
  4052  0650  2E52               	goto	u119_21
  4053  0651  2E53               	goto	u119_20
  4054  0652                     u119_21:
  4055  0652  2E7C               	goto	i1l138
  4056  0653                     u119_20:
  4057  0653                     i1l1930:
  4058                           
  4059                           ;master.c: 167:         tempRX = RCREG;
  4060  0653  081A               	movf	26,w	;volatile
  4061  0654  00F0               	movwf	??_isr
  4062  0655  0870               	movf	??_isr,w
  4063  0656  00F6               	movwf	_tempRX
  4064  0657                     i1l1932:
  4065                           
  4066                           ;master.c: 168:         if(tempRX ==0x00){
  4067  0657  0876               	movf	_tempRX,w
  4068  0658  1D03               	btfss	3,2
  4069  0659  2E5B               	goto	u120_21
  4070  065A  2E5C               	goto	u120_20
  4071  065B                     u120_21:
  4072  065B  2E7C               	goto	i1l138
  4073  065C                     u120_20:
  4074  065C                     i1l1934:
  4075                           
  4076                           ;master.c: 169:            if (PIR1bits.TXIF == 1){
  4077  065C  1E0C               	btfss	12,4	;volatile
  4078  065D  2E5F               	goto	u121_21
  4079  065E  2E60               	goto	u121_20
  4080  065F                     u121_21:
  4081  065F  2E7C               	goto	i1l138
  4082  0660                     u121_20:
  4083  0660  2E6A               	goto	i1l1948
  4084  0661                     i1l1938:
  4085                           
  4086                           ;master.c: 172:                 TXREG = unit0;
  4087  0661  0845               	movf	_unit0,w
  4088  0662  0099               	movwf	25	;volatile
  4089  0663                     i1l1940:
  4090                           
  4091                           ;master.c: 173:                 F1 = 1;
  4092  0663  01F8               	clrf	_F1
  4093  0664  0AF8               	incf	_F1,f
  4094                           
  4095                           ;master.c: 174:                 break;
  4096  0665  2E7A               	goto	i1l136
  4097  0666                     i1l1942:
  4098                           
  4099                           ;master.c: 176:                 TXREG = dec0;
  4100  0666  0844               	movf	_dec0,w
  4101  0667  0099               	movwf	25	;volatile
  4102  0668                     i1l1944:
  4103                           
  4104                           ;master.c: 177:                 F1 = 0;
  4105  0668  01F8               	clrf	_F1
  4106                           
  4107                           ;master.c: 178:                 break;
  4108  0669  2E7A               	goto	i1l136
  4109  066A                     i1l1948:
  4110  066A  0878               	movf	_F1,w
  4111  066B  00F0               	movwf	??_isr
  4112  066C  01F1               	clrf	??_isr+1
  4113                           
  4114                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4115                           ; Switch size 1, requested type "simple"
  4116                           ; Number of cases is 1, Range of values is 0 to 0
  4117                           ; switch strategies available:
  4118                           ; Name         Instructions Cycles
  4119                           ; simple_byte            4     3 (average)
  4120                           ; direct_byte           11     8 (fixed)
  4121                           ; jumptable            260     6 (fixed)
  4122                           ;	Chosen strategy is simple_byte
  4123  066D  0871               	movf	??_isr+1,w
  4124  066E  3A00               	xorlw	0	; case 0
  4125  066F  1903               	skipnz
  4126  0670  2E72               	goto	i1l2356
  4127  0671  2E7A               	goto	i1l136
  4128  0672                     i1l2356:
  4129                           
  4130                           ; Switch size 1, requested type "simple"
  4131                           ; Number of cases is 2, Range of values is 0 to 1
  4132                           ; switch strategies available:
  4133                           ; Name         Instructions Cycles
  4134                           ; simple_byte            7     4 (average)
  4135                           ; direct_byte           14     8 (fixed)
  4136                           ; jumptable            260     6 (fixed)
  4137                           ;	Chosen strategy is simple_byte
  4138  0672  0870               	movf	??_isr,w
  4139  0673  3A00               	xorlw	0	; case 0
  4140  0674  1903               	skipnz
  4141  0675  2E61               	goto	i1l1938
  4142  0676  3A01               	xorlw	1	; case 1
  4143  0677  1903               	skipnz
  4144  0678  2E66               	goto	i1l1942
  4145  0679  2E7A               	goto	i1l136
  4146  067A                     i1l136:
  4147                           
  4148                           ;master.c: 180:         PIR1bits.RCIF = 0;
  4149  067A  128C               	bcf	12,5	;volatile
  4150                           
  4151                           ;master.c: 181:         TXIF=0;
  4152  067B  120C               	bcf	12,4	;volatile
  4153  067C                     i1l138:
  4154  067C  0874               	movf	??_isr+4,w
  4155  067D  008A               	movwf	10
  4156  067E  0873               	movf	??_isr+3,w
  4157  067F  0084               	movwf	4
  4158  0680  0E72               	swapf	??_isr+2,w
  4159  0681  0083               	movwf	3
  4160  0682  0EFE               	swapf	btemp,f
  4161  0683  0E7E               	swapf	btemp,w
  4162  0684  0009               	retfie
  4163  0685                     __end_of_isr:
  4164  007E                     btemp	set	126	;btemp
  4165  007E                     wtemp0	set	126
  4166                           
  4167                           	psect	intentry
  4168  0004                     __pintentry:	
  4169                           ;incstack = 0
  4170                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0]
  4171                           
  4172  0004                     interrupt_function:
  4173  007E                     saved_w	set	btemp
  4174  0004  00FE               	movwf	btemp
  4175  0005  0E03               	swapf	3,w
  4176  0006  00F2               	movwf	??_isr+2
  4177  0007  0804               	movf	4,w
  4178  0008  00F3               	movwf	??_isr+3
  4179  0009  080A               	movf	10,w
  4180  000A  00F4               	movwf	??_isr+4
  4181  000B  120A  118A  2E4D   	ljmp	_isr
  4182                           
  4183                           	psect	config
  4184                           
  4185                           ;Config register CONFIG1 @ 0x2007
  4186                           ;	Oscillator Selection bits
  4187                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4188                           ;	Watchdog Timer Enable bit
  4189                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4190                           ;	Power-up Timer Enable bit
  4191                           ;	PWRTE = OFF, PWRT disabled
  4192                           ;	RE3/MCLR pin function select bit
  4193                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4194                           ;	Code Protection bit
  4195                           ;	CP = OFF, Program memory code protection is disabled
  4196                           ;	Data Code Protection bit
  4197                           ;	CPD = OFF, Data memory code protection is disabled
  4198                           ;	Brown Out Reset Selection bits
  4199                           ;	BOREN = OFF, BOR disabled
  4200                           ;	Internal External Switchover bit
  4201                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4202                           ;	Fail-Safe Clock Monitor Enabled bit
  4203                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4204                           ;	Low Voltage Programming Enable bit
  4205                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4206                           ;	In-Circuit Debugger Mode bit
  4207                           ;	DEBUG = 0x1, unprogrammed default
  4208  2007                     	org	8199
  4209  2007  20D4               	dw	8404
  4210                           
  4211                           ;Config register CONFIG2 @ 0x2008
  4212                           ;	Brown-out Reset Selection bit
  4213                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4214                           ;	Flash Program Memory Self Write Enable bits
  4215                           ;	WRT = OFF, Write protection off
  4216  2008                     	org	8200
  4217  2008  3FFF               	dw	16383

Data Sizes:
    Strings     50
    Constant    0
    Data        0
    BSS         17
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       9
    BANK0            80     24      38
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 16
		 -> STR_10(CODE[16]), STR_9(CODE[11]), STR_8(CODE[12]), STR_7(CODE[16]), 
		 -> STR_6(CODE[11]), STR_5(CODE[12]), STR_4(CODE[2]), STR_3(CODE[4]), 
		 -> STR_2(CODE[5]), STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    _main->___awdiv
    _str_2_dc->___lwdiv
    _I2C_Master_Init->___lldiv
    ___awmod->___awdiv
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Init->_Lcd_Port
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _str_2_dc->___lwdiv
    _initSETUP->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    ___awmod->___awdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    6126
                                             21 BANK0      3     3      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                            ___awdiv
                            ___awmod
                          _initSETUP
                           _str_2_dc
 ---------------------------------------------------------------------------------
 (1) _str_2_dc                                             6     4      2    1382
                                              7 BANK0      6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     496
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     601
                                              5 COMMON     1     1      0
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _initSETUP                                            0     0      0     412
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                             13 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              5 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     904
                                              8 BANK0      7     3      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     805
                                              5 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     620
                                              4 BANK0      3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     130
                                              0 BANK0      4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1    1172
                                              3 BANK0      7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      93
                                              3 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      62
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      62
                                              0 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      31
                                              5 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     211
                                              0 BANK0      2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     335
                                              0 BANK0      6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  5     5      0       0
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
   ___awdiv
   ___awmod
     ___awdiv (ARG)
   _initSETUP
     _I2C_Master_Init
       ___lldiv
   _str_2_dc
     ___lwdiv
     ___wmul

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     18      26       5       47.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2F      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Sep 08 14:53:39 2021

                        pc 0002                         _F1 0078                         _RH 003D  
             ___awdiv@sign 0025                         fsr 0004        ___wmul@multiplicand 0022  
                      l210 077E                        l213 0742                        l141 0387  
                      l222 050B                        l118 0310                        l216 074F  
                      l144 05DA                        l225 0557                        l234 06DF  
                      l228 0726                        l173 0614                        l182 0778  
                      l191 0766                        l176 0750                        l352 06EE  
                      l505 03F0                        l194 06AC                        l354 0706  
                      l179 075C                        l195 06AF                        l196 06B6  
                      l188 076F                        l518 04B3                        l624 059D  
                      l388 0458                        _GIE 005F                        _RE0 0048  
                      _RE1 0049                        _LDR 0038                        u700 0756  
                      u620 0403                        u701 0755                        u621 0402  
                      u710 075C                        u711 075B                        u640 0417  
                      u641 0416                        u635 0408                        u660 0432  
                      u661 0431                        u655 0419                        u680 0450  
                      u681 044F                        u665 042E                        u690 05F2  
                      u675 0442                        u695 05ED                        u990 0460  
                      u991 045F                        _isr 064D                        fsr0 0004  
             ___awmod@sign 002E                       l2000 0731                       l2002 0734  
                     l2010 06E8                       l2100 06A8                       l2004 073F  
                     l2020 0558                       l2012 06F5                       l2102 06B0  
                     l2030 0570                       l2022 055C                       l2014 06FC  
                     l2006 06E0                       l2110 032D                       l2040 0593  
                     l2032 0574                       l2024 0562                       l2016 0702  
                     l2008 06E4                       l2120 0382                       l2112 0347  
                     l2200 00CB                       l2050 051C                       l2130 0396  
                     l2122 0388                       l2034 0585                       l2026 0565  
                     l2042 0599                       l2114 035A                       l2106 0314  
                     l2210 0151                       l2202 00D5                       l2052 052C  
                     l2060 04BC                       l2140 03AB                       l2132 039A  
                     l2124 038B                       l2036 058B                       l2028 056C  
                     l2116 0378                       l2108 031A                       l2300 02A0  
                     l2220 0175                       l2212 0157                       l2204 00FD  
                     l2054 0532                       l2046 050C                       l2070 04E7  
                     l2062 04CD                       l2150 03CE                       l2142 03AE  
                     l2134 039F                       l2126 038F                       l2038 058C  
                     l2118 037D                       l2310 02B9                       l2302 02A1  
                     l2230 019C                       l2222 017B                       l2214 015F  
                     l2206 0114                       l2056 0743                       l2048 0512  
                     l2072 04F8                       l2064 04D2                       l2080 06BD  
                     l2160 03E7                       l2152 03D4                       l2144 03B5  
                     l2136 03A3                       l2128 0394                       l1440 03F1  
                     l2320 02E6                       l2312 02C7                       l2304 02A2  
                     l2240 01B8                       l2232 01A4                       l2224 0181  
                     l2216 0165                       l2208 013A                       l2090 0685  
                     l2074 04FD                       l2066 04D8                       l2058 04B7  
                     l2082 06CA                       l2162 03EC                       l2154 03D5  
                     l2146 03B9                       l2138 03A5                       l1450 0420  
                     l1442 0403                       l2322 02EC                       l2314 02CC  
                     l2306 02AC                       l2250 01D7                       l2242 01C7  
                     l2234 01AA                       l2226 018C                       l2218 016D  
                     l2170 0047                       l2092 068A                       l2076 0503  
                     l2068 04E1                       l2084 06D2                       l2156 03DC  
                     l2148 03BD                       l1452 0432                       l1444 0406  
                     l1460 0450                       l2324 02FA                       l2316 02D6  
                     l2308 02AF                       l2260 01FD                       l2252 01DB  
                     l2244 01CA                       l2236 01B2                       l2228 0194  
                     l2180 006F                       l2172 004C                       l2094 0692  
                     l2086 075D                       l2078 06BA                       l2158 03E2  
                     l1454 0440                       l1446 0413                       l1550 05A6  
                     l1542 059E                       l2326 02FF                       l2318 02DC  
                     l2270 0218                       l2254 01E0                       l2262 0202  
                     l2238 01B7                       l2246 01CC                       l2190 0097  
                     l2182 0074                       l2174 0057                       l2166 0028  
                     l2096 069B                       l2088 0762                       l1456 0441  
                     l1448 0417                       l1480 05E2                       l1560 05AD  
                     l1552 05A9                       l1544 05A2                       l2328 0309  
                     l2280 0242                       l2272 0222                       l2264 020F  
                     l2256 01E1                       l2248 01D2                       l2192 009C  
                     l2184 0082                       l2176 005E                       l2168 0041  
                     l1490 0756                       l2098 06A0                       l1730 0465  
                     l1458 044A                       l1482 0611                       l1570 05B6  
                     l1562 05B0                       l1554 05AA                       l1546 05A4  
                     l2290 026B                       l2282 0248                       l2274 0225  
                     l2266 0216                       l2258 01EC                       l2194 00A7  
                     l2186 0083                       l2178 006C                       l1636 0770  
                     l1660 0767                       l1740 0479                       l1732 0467  
                     l1724 0459                       l1484 0612                       l1476 05DB  
                     l1580 05C1                       l1572 05B7                       l1564 05B1  
                     l1556 05AB                       l1548 05A5                       l2292 0275  
                     l2284 0252                       l2276 0233                       l2268 0217  
                     l2196 00B7                       l2188 0088                       l1638 0775  
                     l1662 076C                       l1750 0498                       l1742 0480  
                     l1734 046B                       l1726 045C                       l1486 0613  
                     l1478 05DF                       l1590 05CA                       l1582 05C4  
                     l1574 05B8                       l1566 05B4                       l1558 05AC  
                     l2294 027B                       l2286 0258                       l2278 0238  
                     l2198 00BC                       l1488 0750                       l1752 049F  
                     l1744 0484                       l1736 0470                       l1728 0460  
                     l1592 05CB                       l1584 05C5                       l1576 05B9  
                     l1568 05B5                       l2288 0266                       l2296 028A  
                     l1746 0488                       l1738 0476                       l1754 04A5  
                     l1586 05C6                       l1578 05C0                       l2298 0299  
                     l1756 04AA                       l1748 0492                       l1588 05C9  
                     l1758 04AF                       l1982 077A                       l1990 0719  
                     l1992 071C                       l1984 070A                       l1994 0723  
                     l1986 0712                       l1996 072A                       l1988 0713  
                     l1998 072B                       ?_isr 0070                       STR_1 061B  
                     STR_2 0642                       STR_3 0647                       STR_4 064B  
                     STR_5 062B                       STR_6 0637                       STR_7 061B  
                     STR_8 062B                       STR_9 0637                       u1000 046B  
                     u1001 046A                       u1010 0476                       u1011 0475  
                     u1030 0488                       u1031 0487                       u1040 0492  
                     u1041 0491                       u1025 047A                       u1060 04A5  
                     u1300 0585                       u1220 06E8                       u1061 04A4  
                     u1045 048E                       u1301 0584                       u1221 06E7  
                     u1070 04AA                       u1071 04A9                       u1055 0499  
                     u1400 039A                       u1320 0599                       u1401 0399  
                     u1321 0598                       u1305 0581                       u1330 04BC  
                     u1410 03AB                       u1250 0702                       u1331 04BB  
                     u1411 03AA                       u1315 058D                       u1251 0701  
                     u1235 06EF                       u1260 0562                       u1500 0074  
                     u1261 0561                       u1245 06F6                       u1501 0073  
                     u1350 04E7                       u1430 03BD                       u1510 01B2  
                     u1351 04E6                       u1431 03BC                       u1511 01B1  
                     u1280 0574                       u1520 01B7                       u1345 04C4  
                     u1425 03AF                       u1281 0573                       u1521 01B6  
                     u1370 06DF                       u1450 03CE                       u1530 01D2  
                     u1371 06DE                       u1451 03CD                       u1275 0566  
                     u1531 01D1                       u1380 06A8                       u1540 01D7  
                     u1381 06A7                       u1365 04EF                       u1445 03BE  
                     u1541 01D6                       u1470 03E2                       u1390 038F  
                     u1550 01E0                       u1471 03E1                       u1455 03CA  
                     u1391 038E                       u1295 0575                       u1551 01DF  
                     u1607 0090                       u1480 03E7                       u1560 020F  
                     u1481 03E6                       u1465 03D6                       u1561 020E  
                     u1617 00C4                       u1570 0216                       u1490 005E  
                     u1707 02B5                       u1571 0215                       u1627 01C0  
                     u1491 005D                       u1580 0299                       u1717 02C1  
                     u1581 0298                       u1565 020B                       u1637 01E7  
                     u1590 02A0                       u1727 02F4                       u1591 029F  
                     u1647 01F7                       u1737 0720                       u1585 0295  
                     u1657 021E                       u1747 0518                       u1667 022D  
                     u1757 0528                       u1677 0260                       u1767 0536  
                     u1687 0283                       u1777 073A                       u1697 02A8  
                     _PEIE 005E                       _TXIF 0064                       _dec0 0044  
                     _dec1 0042          ?_Lcd_Write_String 0070                       _cont 003B  
                     _main 0028                       _test 003C                       btemp 007E  
                     start 000E         ??_Lcd_Write_String 0076            __end_of_Lcd_Cmd 0743  
                    ??_isr 0070           ?_I2C_Master_Init 002D           ?_I2C_Master_Read 0020  
         ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070                      ?_main 0070  
          __end_of___awdiv 03F1                      STR_10 061B            __end_of___awmod 04B4  
                    _ANSEL 0188            __end_of___lldiv 0459            ___awdiv@divisor 0020  
          __end_of___lwdiv 059E                      i1l136 067A                      i1l138 067C  
          ___awdiv@counter 0024                      _RCREG 001A                      _SPBRG 0099  
                    _PORTA 0005                      _PORTB 0006                      _PORTC 0007  
                    _PORTD 0008                      _PORTE 0009    __size_of_Lcd_Set_Cursor 0058  
                    _TRISA 0085                      _TRISB 0086                      _TRISC 0087  
                    _TRISD 0088                      _SSPIE 0463                      _TRISE 0089  
                    _SSPIF 0063                      _TXREG 0019                      _cont1 003A  
                    _unit0 0045                      _unit1 0043                      pclath 000A  
                    status 0003                      wtemp0 007E           __end_of_Lcd_Init 0558  
         __end_of_Lcd_Port 077F            __initialization 0011               __end_of_main 0314  
                   ??_main 0035         __size_of_Lcd_Clear 000D          ?_I2C_Master_Start 0070  
        ?_I2C_Master_Write 0020         ??_I2C_Master_Start 0075         ??_I2C_Master_Write 0075  
         ___awdiv@dividend 0022                     _ANSELH 0189                     u120_20 065C  
                   u120_21 065B                     u121_20 0660                     u121_21 065F  
                   i1l2356 0672                     i1l1930 0653                     i1l1940 0663  
                   i1l1932 0657                     i1l1942 0666                     i1l1934 065C  
                   i1l1944 0668                     i1l1928 064D                     i1l1938 0661  
                   i1l1948 066A                     u119_20 0653                     u119_21 0652  
                ??_Lcd_Cmd 0020                     _SPBRGH 009A    __size_of_Lcd_Write_Char 0020  
                   _SSPADD 0093                     _TRISC3 043B                     _TRISC4 043C  
                   _SSPCON 0014                     _SSPBUF 0013                     ___wmul 06E0  
                ??___awdiv 0075                  ??___awmod 002C                  ??___lldiv 0075  
                ??___lwdiv 0075           ___awdiv@quotient 0026            ___awmod@divisor 0028  
                   _tempRX 0076            ___awmod@counter 002D                     saved_w 007E  
         __end_of_str_2_dc 0388            Lcd_Set_Cursor@a 0026            Lcd_Set_Cursor@b 0023  
          Lcd_Set_Cursor@y 0028            Lcd_Set_Cursor@z 0027    __end_of__initialization 0024  
        __end_of_Lcd_Clear 0750             __pcstackCOMMON 0070             _Lcd_Set_Cursor 04B4  
                ?_Lcd_Init 0070                  ?_Lcd_Port 0070                 __pbssBANK0 0038  
       __size_of_initSETUP 003D                 __pmaintext 0028                    ?___wmul 0020  
               __pintentry 0004  __size_of_Lcd_Write_String 0029     __end_of_Lcd_Set_Cursor 050C  
               ??_Lcd_Init 0023                 ??_Lcd_Port 0075                    _SSPCON2 0091  
                  _SSPSTAT 0094                 __stringtab 0615             _Lcd_Write_Char 0707  
                  _Lcd_Cmd 0727                    _dec0_12 0040                    _dec1_12 003F  
                ?_str_2_dc 0027                    ___awdiv 0388                    ___awmod 0459  
                  ___lldiv 03F1            __size_of___wmul 0027                    ___lwdiv 0558  
        __end_of_initSETUP 05DB            ?_Lcd_Set_Cursor 0023                    __ptext1 0314  
                  __ptext2 06E0                    __ptext3 0558                    __ptext4 059E  
                  __ptext5 05DB                    __ptext6 03F1                    __ptext7 0459  
                  __ptext8 0388                    __ptext9 06B7                    _counter 0077  
             __size_of_isr 0038           ___awmod@dividend 002A   __size_of_I2C_Master_Init 003A  
 __size_of_I2C_Master_Read 0032   __size_of_I2C_Master_Wait 000D                    _unit0_0 0041  
 __size_of_I2C_Master_Stop 0009     __end_of_Lcd_Write_Char 0727       end_of_initialization 0024  
__size_of_I2C_Master_Start 0009  __size_of_I2C_Master_Write 000A            ___lldiv@divisor 0020  
          ___lldiv@counter 002C                  _RCSTAbits 0018           I2C_Master_Init@c 002D  
         I2C_Master_Read@a 0020                 ??_str_2_dc 0029                  Lcd_Port@a 0075  
                _PORTAbits 0005                  _TRISCbits 0087            ?_Lcd_Write_Char 0070  
        Lcd_Write_String@a 0026          Lcd_Write_String@i 0024                  _TXSTAbits 0098  
              str_2_dc@var 0027                str_2_dc@vcv 002B                  _Lcd_Clear 0743  
           __end_of___wmul 0707           _Lcd_Write_String 06B7                _BAUDCTLbits 0187  
      start_initialization 0011                __end_of_isr 0685          __size_of_Lcd_Init 004C  
        __size_of_Lcd_Port 0006          ??_I2C_Master_Init 0031          ??_I2C_Master_Read 0022  
        ??_I2C_Master_Wait 0075          ??_I2C_Master_Stop 0075                 ?_Lcd_Clear 0070  
                 ??___wmul 0075            Lcd_Write_Char@a 0021            Lcd_Write_Char@y 0023  
              __pbssCOMMON 0076                  ___latbits 0002              __pcstackBANK0 0020  
                 ?_Lcd_Cmd 0070           _I2C_Master_Start 0770           _I2C_Master_Write 075D  
         ___lwdiv@dividend 0022           ??_Lcd_Set_Cursor 0024                   ?___awdiv 0020  
                 ?___awmod 0028                   ?___lldiv 0020                   ?___lwdiv 0020  
        __size_of_str_2_dc 0074                  __pstrings 0615                  _initSETUP 059E  
         ___lwdiv@quotient 0025          interrupt_function 0004             ___wmul@product 0024  
                 Lcd_Cmd@a 0022                   _PIR1bits 000C                ??_Lcd_Clear 0076  
              __stringbase 061A          ___wmul@multiplier 0020           ??_Lcd_Write_Char 0020  
               ?_initSETUP 0070                   _Lcd_Init 050C                   _Lcd_Port 0779  
      I2C_Master_Read@temp 0024   __end_of_Lcd_Write_String 06E0           __size_of_Lcd_Cmd 001C  
                 _Humidity 003E           __size_of___awdiv 0069           __size_of___awmod 005B  
         __size_of___lldiv 0068           __size_of___lwdiv 0046         __end_of__stringtab 061B  
          _I2C_Master_Init 05DB            _I2C_Master_Read 0685            _I2C_Master_Wait 0750  
          _I2C_Master_Stop 0767            ___lwdiv@divisor 0020            ___lwdiv@counter 0024  
                 __ptext10 0707                   __ptext11 04B4                   __ptext20 0750  
                 __ptext12 050C                   __ptext21 064D                   __ptext13 0743  
                 __ptext14 0727                   __ptext15 0779                   __ptext16 075D  
                 __ptext17 0767                   __ptext18 0770                   __ptext19 0685  
            __size_of_main 02EC                   _str_2_dc 0314   __end_of_I2C_Master_Start 0779  
 __end_of_I2C_Master_Write 0767                 _INTCONbits 000B                ??_initSETUP 0076  
       Lcd_Write_Char@temp 0022                   intlevel1 0000           ___lldiv@dividend 0024  
                stringcode 0615                 _OSCCONbits 008F    __end_of_I2C_Master_Init 0615  
  __end_of_I2C_Master_Read 06B7    __end_of_I2C_Master_Wait 075D    __end_of_I2C_Master_Stop 0770  
       Lcd_Set_Cursor@temp 0029           ___lldiv@quotient 0028          I2C_Master_Write@d 0020  
                 stringdir 0615                   stringtab 0615                _SSPCON2bits 0091  
