

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Sep 07 23:52:32 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	psect	text19,local,class=CODE,merge=1,delta=2
    29                           	psect	text20,local,class=CODE,merge=1,delta=2
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    31                           	dabs	1,0x7E,2
    32  0000                     
    33                           ; Version 2.20
    34                           ; Generated 12/02/2020 GMT
    35                           ; 
    36                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC16F887 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     	;# 
    68  0001                     	;# 
    69  0002                     	;# 
    70  0003                     	;# 
    71  0004                     	;# 
    72  0005                     	;# 
    73  0006                     	;# 
    74  0007                     	;# 
    75  0008                     	;# 
    76  0009                     	;# 
    77  000A                     	;# 
    78  000B                     	;# 
    79  000C                     	;# 
    80  000D                     	;# 
    81  000E                     	;# 
    82  000E                     	;# 
    83  000F                     	;# 
    84  0010                     	;# 
    85  0011                     	;# 
    86  0012                     	;# 
    87  0013                     	;# 
    88  0014                     	;# 
    89  0015                     	;# 
    90  0015                     	;# 
    91  0016                     	;# 
    92  0017                     	;# 
    93  0018                     	;# 
    94  0019                     	;# 
    95  001A                     	;# 
    96  001B                     	;# 
    97  001B                     	;# 
    98  001C                     	;# 
    99  001D                     	;# 
   100  001E                     	;# 
   101  001F                     	;# 
   102  0081                     	;# 
   103  0085                     	;# 
   104  0086                     	;# 
   105  0087                     	;# 
   106  0088                     	;# 
   107  0089                     	;# 
   108  008C                     	;# 
   109  008D                     	;# 
   110  008E                     	;# 
   111  008F                     	;# 
   112  0090                     	;# 
   113  0091                     	;# 
   114  0092                     	;# 
   115  0093                     	;# 
   116  0093                     	;# 
   117  0093                     	;# 
   118  0094                     	;# 
   119  0095                     	;# 
   120  0096                     	;# 
   121  0097                     	;# 
   122  0098                     	;# 
   123  0099                     	;# 
   124  009A                     	;# 
   125  009B                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009E                     	;# 
   129  009F                     	;# 
   130  0105                     	;# 
   131  0107                     	;# 
   132  0108                     	;# 
   133  0109                     	;# 
   134  010C                     	;# 
   135  010C                     	;# 
   136  010D                     	;# 
   137  010E                     	;# 
   138  010F                     	;# 
   139  0185                     	;# 
   140  0187                     	;# 
   141  0188                     	;# 
   142  0189                     	;# 
   143  018C                     	;# 
   144  018D                     	;# 
   145  0000                     	;# 
   146  0001                     	;# 
   147  0002                     	;# 
   148  0003                     	;# 
   149  0004                     	;# 
   150  0005                     	;# 
   151  0006                     	;# 
   152  0007                     	;# 
   153  0008                     	;# 
   154  0009                     	;# 
   155  000A                     	;# 
   156  000B                     	;# 
   157  000C                     	;# 
   158  000D                     	;# 
   159  000E                     	;# 
   160  000E                     	;# 
   161  000F                     	;# 
   162  0010                     	;# 
   163  0011                     	;# 
   164  0012                     	;# 
   165  0013                     	;# 
   166  0014                     	;# 
   167  0015                     	;# 
   168  0015                     	;# 
   169  0016                     	;# 
   170  0017                     	;# 
   171  0018                     	;# 
   172  0019                     	;# 
   173  001A                     	;# 
   174  001B                     	;# 
   175  001B                     	;# 
   176  001C                     	;# 
   177  001D                     	;# 
   178  001E                     	;# 
   179  001F                     	;# 
   180  0081                     	;# 
   181  0085                     	;# 
   182  0086                     	;# 
   183  0087                     	;# 
   184  0088                     	;# 
   185  0089                     	;# 
   186  008C                     	;# 
   187  008D                     	;# 
   188  008E                     	;# 
   189  008F                     	;# 
   190  0090                     	;# 
   191  0091                     	;# 
   192  0092                     	;# 
   193  0093                     	;# 
   194  0093                     	;# 
   195  0093                     	;# 
   196  0094                     	;# 
   197  0095                     	;# 
   198  0096                     	;# 
   199  0097                     	;# 
   200  0098                     	;# 
   201  0099                     	;# 
   202  009A                     	;# 
   203  009B                     	;# 
   204  009C                     	;# 
   205  009D                     	;# 
   206  009E                     	;# 
   207  009F                     	;# 
   208  0105                     	;# 
   209  0107                     	;# 
   210  0108                     	;# 
   211  0109                     	;# 
   212  010C                     	;# 
   213  010C                     	;# 
   214  010D                     	;# 
   215  010E                     	;# 
   216  010F                     	;# 
   217  0185                     	;# 
   218  0187                     	;# 
   219  0188                     	;# 
   220  0189                     	;# 
   221  018C                     	;# 
   222  018D                     	;# 
   223  0000                     	;# 
   224  0001                     	;# 
   225  0002                     	;# 
   226  0003                     	;# 
   227  0004                     	;# 
   228  0005                     	;# 
   229  0006                     	;# 
   230  0007                     	;# 
   231  0008                     	;# 
   232  0009                     	;# 
   233  000A                     	;# 
   234  000B                     	;# 
   235  000C                     	;# 
   236  000D                     	;# 
   237  000E                     	;# 
   238  000E                     	;# 
   239  000F                     	;# 
   240  0010                     	;# 
   241  0011                     	;# 
   242  0012                     	;# 
   243  0013                     	;# 
   244  0014                     	;# 
   245  0015                     	;# 
   246  0015                     	;# 
   247  0016                     	;# 
   248  0017                     	;# 
   249  0018                     	;# 
   250  0019                     	;# 
   251  001A                     	;# 
   252  001B                     	;# 
   253  001B                     	;# 
   254  001C                     	;# 
   255  001D                     	;# 
   256  001E                     	;# 
   257  001F                     	;# 
   258  0081                     	;# 
   259  0085                     	;# 
   260  0086                     	;# 
   261  0087                     	;# 
   262  0088                     	;# 
   263  0089                     	;# 
   264  008C                     	;# 
   265  008D                     	;# 
   266  008E                     	;# 
   267  008F                     	;# 
   268  0090                     	;# 
   269  0091                     	;# 
   270  0092                     	;# 
   271  0093                     	;# 
   272  0093                     	;# 
   273  0093                     	;# 
   274  0094                     	;# 
   275  0095                     	;# 
   276  0096                     	;# 
   277  0097                     	;# 
   278  0098                     	;# 
   279  0099                     	;# 
   280  009A                     	;# 
   281  009B                     	;# 
   282  009C                     	;# 
   283  009D                     	;# 
   284  009E                     	;# 
   285  009F                     	;# 
   286  0105                     	;# 
   287  0107                     	;# 
   288  0108                     	;# 
   289  0109                     	;# 
   290  010C                     	;# 
   291  010C                     	;# 
   292  010D                     	;# 
   293  010E                     	;# 
   294  010F                     	;# 
   295  0185                     	;# 
   296  0187                     	;# 
   297  0188                     	;# 
   298  0189                     	;# 
   299  018C                     	;# 
   300  018D                     	;# 
   301  0000                     	;# 
   302  0001                     	;# 
   303  0002                     	;# 
   304  0003                     	;# 
   305  0004                     	;# 
   306  0005                     	;# 
   307  0006                     	;# 
   308  0007                     	;# 
   309  0008                     	;# 
   310  0009                     	;# 
   311  000A                     	;# 
   312  000B                     	;# 
   313  000C                     	;# 
   314  000D                     	;# 
   315  000E                     	;# 
   316  000E                     	;# 
   317  000F                     	;# 
   318  0010                     	;# 
   319  0011                     	;# 
   320  0012                     	;# 
   321  0013                     	;# 
   322  0014                     	;# 
   323  0015                     	;# 
   324  0015                     	;# 
   325  0016                     	;# 
   326  0017                     	;# 
   327  0018                     	;# 
   328  0019                     	;# 
   329  001A                     	;# 
   330  001B                     	;# 
   331  001B                     	;# 
   332  001C                     	;# 
   333  001D                     	;# 
   334  001E                     	;# 
   335  001F                     	;# 
   336  0081                     	;# 
   337  0085                     	;# 
   338  0086                     	;# 
   339  0087                     	;# 
   340  0088                     	;# 
   341  0089                     	;# 
   342  008C                     	;# 
   343  008D                     	;# 
   344  008E                     	;# 
   345  008F                     	;# 
   346  0090                     	;# 
   347  0091                     	;# 
   348  0092                     	;# 
   349  0093                     	;# 
   350  0093                     	;# 
   351  0093                     	;# 
   352  0094                     	;# 
   353  0095                     	;# 
   354  0096                     	;# 
   355  0097                     	;# 
   356  0098                     	;# 
   357  0099                     	;# 
   358  009A                     	;# 
   359  009B                     	;# 
   360  009C                     	;# 
   361  009D                     	;# 
   362  009E                     	;# 
   363  009F                     	;# 
   364  0105                     	;# 
   365  0107                     	;# 
   366  0108                     	;# 
   367  0109                     	;# 
   368  010C                     	;# 
   369  010C                     	;# 
   370  010D                     	;# 
   371  010E                     	;# 
   372  010F                     	;# 
   373  0185                     	;# 
   374  0187                     	;# 
   375  0188                     	;# 
   376  0189                     	;# 
   377  018C                     	;# 
   378  018D                     	;# 
   379  0013                     _SSPBUF	set	19
   380  0014                     _SSPCON	set	20
   381  000B                     _INTCONbits	set	11
   382  0008                     _PORTD	set	8
   383  0007                     _PORTC	set	7
   384  0006                     _PORTB	set	6
   385  0005                     _PORTA	set	5
   386  0009                     _PORTE	set	9
   387  0005                     _PORTAbits	set	5
   388  0049                     _RE1	set	73
   389  0048                     _RE0	set	72
   390  0063                     _SSPIF	set	99
   391  005E                     _PEIE	set	94
   392  005F                     _GIE	set	95
   393  0091                     _SSPCON2bits	set	145
   394  0087                     _TRISCbits	set	135
   395  0094                     _SSPSTAT	set	148
   396  0093                     _SSPADD	set	147
   397  0091                     _SSPCON2	set	145
   398  008F                     _OSCCONbits	set	143
   399  0089                     _TRISE	set	137
   400  0088                     _TRISD	set	136
   401  0087                     _TRISC	set	135
   402  0086                     _TRISB	set	134
   403  0085                     _TRISA	set	133
   404  0463                     _SSPIE	set	1123
   405  043C                     _TRISC4	set	1084
   406  043B                     _TRISC3	set	1083
   407  0189                     _ANSELH	set	393
   408  0188                     _ANSEL	set	392
   409                           
   410                           	psect	strings
   411  0003                     __pstrings:
   412  0003                     stringtab:
   413  0003                     __stringtab:
   414  0003                     stringcode:	
   415                           ;	String table - string pointers are 1 byte each
   416                           
   417  0003                     stringdir:
   418  0003  3000               	movlw	high stringdir
   419  0004  008A               	movwf	10
   420  0005  0804               	movf	4,w
   421  0006  0A84               	incf	4,f
   422  0007  0782               	addwf	2,f
   423  0008                     __stringbase:
   424  0008  3400               	retlw	0
   425  0009                     __end_of__stringtab:
   426  0009                     STR_1:
   427  0009  3420               	retlw	32	;' '
   428  000A  3452               	retlw	82	;'R'
   429  000B  3448               	retlw	72	;'H'
   430  000C  343A               	retlw	58	;':'
   431  000D  3420               	retlw	32	;' '
   432  000E  3420               	retlw	32	;' '
   433  000F  3420               	retlw	32	;' '
   434  0010  3454               	retlw	84	;'T'
   435  0011  343A               	retlw	58	;':'
   436  0012  3420               	retlw	32	;' '
   437  0013  3420               	retlw	32	;' '
   438  0014  3420               	retlw	32	;' '
   439  0015  344C               	retlw	76	;'L'
   440  0016  3425               	retlw	37	;'%'
   441  0017  343A               	retlw	58	;':'
   442  0018  3400               	retlw	0
   443  0019                     STR_5:
   444  0019  3444               	retlw	68	;'D'
   445  001A  3449               	retlw	73	;'I'
   446  001B  3453               	retlw	83	;'S'
   447  001C  3450               	retlw	80	;'P'
   448  001D  3445               	retlw	69	;'E'
   449  001E  344E               	retlw	78	;'N'
   450  001F  3453               	retlw	83	;'S'
   451  0020  3441               	retlw	65	;'A'
   452  0021  344E               	retlw	78	;'N'
   453  0022  3444               	retlw	68	;'D'
   454  0023  344F               	retlw	79	;'O'
   455  0024  3400               	retlw	0
   456  0025                     STR_6:
   457  0025  3420               	retlw	32	;' '
   458  0026  3443               	retlw	67	;'C'
   459  0027  344F               	retlw	79	;'O'
   460  0028  344D               	retlw	77	;'M'
   461  0029  3449               	retlw	73	;'I'
   462  002A  3444               	retlw	68	;'D'
   463  002B  3441               	retlw	65	;'A'
   464  002C  342E               	retlw	46	;'.'
   465  002D  342E               	retlw	46	;'.'
   466  002E  342E               	retlw	46	;'.'
   467  002F  3400               	retlw	0
   468  0030                     STR_2:
   469  0030  3425               	retlw	37	;'%'
   470  0031  3420               	retlw	32	;' '
   471  0032  3420               	retlw	32	;' '
   472  0033  3420               	retlw	32	;' '
   473  0034  3400               	retlw	0
   474  0035                     STR_3:
   475  0035  3443               	retlw	67	;'C'
   476  0036  3420               	retlw	32	;' '
   477  0037  3420               	retlw	32	;' '
   478  0038  3400               	retlw	0
   479  0039                     STR_4:
   480  0039  3425               	retlw	37	;'%'
   481  003A  3400               	retlw	0
   482  0009                     
   483                           	psect	cinit
   484  07ED                     start_initialization:	
   485                           ; #config settings
   486                           
   487  07ED                     __initialization:
   488                           
   489                           ; Clear objects allocated to BANK0
   490  07ED  1283               	bcf	3,5	;RP0=0, select bank0
   491  07EE  1303               	bcf	3,6	;RP1=0, select bank0
   492  07EF  01A0               	clrf	__pbssBANK0& (0+127)
   493  07F0  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   494  07F1  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   495  07F2  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   496  07F3  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   497  07F4  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   498  07F5  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   499  07F6  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   500  07F7  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   501  07F8  01A9               	clrf	(__pbssBANK0+9)& (0+127)
   502  07F9  01AA               	clrf	(__pbssBANK0+10)& (0+127)
   503  07FA  01AB               	clrf	(__pbssBANK0+11)& (0+127)
   504  07FB  01AC               	clrf	(__pbssBANK0+12)& (0+127)
   505  07FC                     end_of_initialization:	
   506                           ;End of C runtime variable initialization code
   507                           
   508  07FC                     __end_of__initialization:
   509  07FC  0183               	clrf	3
   510  07FD  120A  118A  2DD6   	ljmp	_main	;jump to C main() function
   511                           
   512                           	psect	bssBANK0
   513  0020                     __pbssBANK0:
   514  0020                     _LDR:
   515  0020                     	ds	2
   516  0022                     _cont:
   517  0022                     	ds	1
   518  0023                     _test:
   519  0023                     	ds	1
   520  0024                     _RH:
   521  0024                     	ds	1
   522  0025                     _Humidity:
   523  0025                     	ds	1
   524  0026                     _dec1_12:
   525  0026                     	ds	1
   526  0027                     _dec0_12:
   527  0027                     	ds	1
   528  0028                     _unit0_0:
   529  0028                     	ds	1
   530  0029                     _dec1:
   531  0029                     	ds	1
   532  002A                     _unit1:
   533  002A                     	ds	1
   534  002B                     _dec0:
   535  002B                     	ds	1
   536  002C                     _unit0:
   537  002C                     	ds	1
   538                           
   539                           	psect	cstackCOMMON
   540  0070                     __pcstackCOMMON:
   541  0070                     ?_initSETUP:
   542  0070                     ?_Lcd_Init:	
   543                           ; 1 bytes @ 0x0
   544                           
   545  0070                     ?_Lcd_Clear:	
   546                           ; 1 bytes @ 0x0
   547                           
   548  0070                     ?_Lcd_Write_String:	
   549                           ; 1 bytes @ 0x0
   550                           
   551  0070                     ?_I2C_Master_Start:	
   552                           ; 1 bytes @ 0x0
   553                           
   554  0070                     ??_I2C_Master_Start:	
   555                           ; 1 bytes @ 0x0
   556                           
   557  0070                     ?_I2C_Master_Write:	
   558                           ; 1 bytes @ 0x0
   559                           
   560  0070                     ?_I2C_Master_Stop:	
   561                           ; 1 bytes @ 0x0
   562                           
   563  0070                     ??_I2C_Master_Stop:	
   564                           ; 1 bytes @ 0x0
   565                           
   566  0070                     ?_Lcd_Write_Char:	
   567                           ; 1 bytes @ 0x0
   568                           
   569  0070                     ?_main:	
   570                           ; 1 bytes @ 0x0
   571                           
   572  0070                     ?_I2C_Master_Wait:	
   573                           ; 1 bytes @ 0x0
   574                           
   575  0070                     ??_I2C_Master_Wait:	
   576                           ; 1 bytes @ 0x0
   577                           
   578  0070                     ?_Lcd_Port:	
   579                           ; 1 bytes @ 0x0
   580                           
   581  0070                     ??_Lcd_Port:	
   582                           ; 1 bytes @ 0x0
   583                           
   584  0070                     ?_Lcd_Cmd:	
   585                           ; 1 bytes @ 0x0
   586                           
   587  0070                     ?_I2C_Master_Read:	
   588                           ; 1 bytes @ 0x0
   589                           
   590  0070                     ?___wmul:	
   591                           ; 2 bytes @ 0x0
   592                           
   593  0070                     ?___awdiv:	
   594                           ; 2 bytes @ 0x0
   595                           
   596  0070                     ?___lwdiv:	
   597                           ; 2 bytes @ 0x0
   598                           
   599  0070                     ?___lldiv:	
   600                           ; 2 bytes @ 0x0
   601                           
   602  0070                     Lcd_Port@a:	
   603                           ; 4 bytes @ 0x0
   604                           
   605  0070                     I2C_Master_Write@d:	
   606                           ; 1 bytes @ 0x0
   607                           
   608  0070                     I2C_Master_Read@a:	
   609                           ; 2 bytes @ 0x0
   610                           
   611  0070                     ___wmul@multiplier:	
   612                           ; 2 bytes @ 0x0
   613                           
   614  0070                     ___awdiv@divisor:	
   615                           ; 2 bytes @ 0x0
   616                           
   617  0070                     ___lwdiv@divisor:	
   618                           ; 2 bytes @ 0x0
   619                           
   620  0070                     ___lldiv@divisor:	
   621                           ; 2 bytes @ 0x0
   622                           
   623                           
   624                           ; 4 bytes @ 0x0
   625  0070                     	ds	1
   626  0071                     ??_Lcd_Write_Char:
   627  0071                     ??_Lcd_Cmd:	
   628                           ; 1 bytes @ 0x1
   629                           
   630                           
   631                           ; 1 bytes @ 0x1
   632  0071                     	ds	1
   633  0072                     ??_I2C_Master_Write:
   634  0072                     ??_I2C_Master_Read:	
   635                           ; 1 bytes @ 0x2
   636                           
   637  0072                     Lcd_Write_Char@a:	
   638                           ; 1 bytes @ 0x2
   639                           
   640  0072                     ___wmul@multiplicand:	
   641                           ; 1 bytes @ 0x2
   642                           
   643  0072                     ___awdiv@dividend:	
   644                           ; 2 bytes @ 0x2
   645                           
   646  0072                     ___lwdiv@dividend:	
   647                           ; 2 bytes @ 0x2
   648                           
   649                           
   650                           ; 2 bytes @ 0x2
   651  0072                     	ds	1
   652  0073                     Lcd_Cmd@a:
   653  0073                     Lcd_Write_Char@temp:	
   654                           ; 1 bytes @ 0x3
   655                           
   656                           
   657                           ; 1 bytes @ 0x3
   658  0073                     	ds	1
   659  0074                     ??_Lcd_Init:
   660  0074                     ??_Lcd_Clear:	
   661                           ; 1 bytes @ 0x4
   662                           
   663  0074                     ?_Lcd_Set_Cursor:	
   664                           ; 1 bytes @ 0x4
   665                           
   666  0074                     ??___wmul:	
   667                           ; 1 bytes @ 0x4
   668                           
   669  0074                     ??___awdiv:	
   670                           ; 1 bytes @ 0x4
   671                           
   672  0074                     ??___lwdiv:	
   673                           ; 1 bytes @ 0x4
   674                           
   675  0074                     Lcd_Set_Cursor@b:	
   676                           ; 1 bytes @ 0x4
   677                           
   678  0074                     Lcd_Write_Char@y:	
   679                           ; 1 bytes @ 0x4
   680                           
   681  0074                     I2C_Master_Read@temp:	
   682                           ; 1 bytes @ 0x4
   683                           
   684  0074                     ___wmul@product:	
   685                           ; 2 bytes @ 0x4
   686                           
   687  0074                     ___lldiv@dividend:	
   688                           ; 2 bytes @ 0x4
   689                           
   690                           
   691                           ; 4 bytes @ 0x4
   692  0074                     	ds	1
   693  0075                     ??_Lcd_Set_Cursor:
   694  0075                     ??_Lcd_Write_String:	
   695                           ; 1 bytes @ 0x5
   696                           
   697  0075                     ___awdiv@counter:	
   698                           ; 1 bytes @ 0x5
   699                           
   700  0075                     Lcd_Write_String@i:	
   701                           ; 1 bytes @ 0x5
   702                           
   703  0075                     ___lwdiv@quotient:	
   704                           ; 2 bytes @ 0x5
   705                           
   706                           
   707                           ; 2 bytes @ 0x5
   708  0075                     	ds	1
   709  0076                     ___awdiv@sign:
   710                           
   711                           ; 1 bytes @ 0x6
   712  0076                     	ds	1
   713  0077                     Lcd_Set_Cursor@a:
   714  0077                     Lcd_Write_String@a:	
   715                           ; 1 bytes @ 0x7
   716                           
   717  0077                     ___lwdiv@counter:	
   718                           ; 1 bytes @ 0x7
   719                           
   720  0077                     ___awdiv@quotient:	
   721                           ; 1 bytes @ 0x7
   722                           
   723                           
   724                           ; 2 bytes @ 0x7
   725  0077                     	ds	1
   726  0078                     ?_str_2_dc:
   727  0078                     ??___lldiv:	
   728                           ; 1 bytes @ 0x8
   729                           
   730  0078                     Lcd_Set_Cursor@z:	
   731                           ; 1 bytes @ 0x8
   732                           
   733  0078                     str_2_dc@var:	
   734                           ; 1 bytes @ 0x8
   735                           
   736                           
   737                           ; 2 bytes @ 0x8
   738  0078                     	ds	1
   739  0079                     ?___awmod:
   740  0079                     Lcd_Set_Cursor@y:	
   741                           ; 2 bytes @ 0x9
   742                           
   743  0079                     ___awmod@divisor:	
   744                           ; 1 bytes @ 0x9
   745                           
   746  0079                     ___lldiv@quotient:	
   747                           ; 2 bytes @ 0x9
   748                           
   749                           
   750                           ; 4 bytes @ 0x9
   751  0079                     	ds	1
   752  007A                     ??_str_2_dc:
   753  007A                     Lcd_Set_Cursor@temp:	
   754                           ; 1 bytes @ 0xA
   755                           
   756                           
   757                           ; 1 bytes @ 0xA
   758  007A                     	ds	1
   759  007B                     ___awmod@dividend:
   760                           
   761                           ; 2 bytes @ 0xB
   762  007B                     	ds	1
   763  007C                     str_2_dc@vcv:
   764                           
   765                           ; 2 bytes @ 0xC
   766  007C                     	ds	1
   767  007D                     ??___awmod:
   768  007D                     ___lldiv@counter:	
   769                           ; 1 bytes @ 0xD
   770                           
   771                           
   772                           ; 1 bytes @ 0xD
   773  007D                     	ds	1
   774  007E                     ??_initSETUP:
   775                           
   776                           	psect	cstackBANK0
   777  002D                     __pcstackBANK0:	
   778                           ; 1 bytes @ 0xE
   779                           
   780  002D                     ?_I2C_Master_Init:
   781  002D                     ___awmod@counter:	
   782                           ; 1 bytes @ 0x0
   783                           
   784  002D                     I2C_Master_Init@c:	
   785                           ; 1 bytes @ 0x0
   786                           
   787                           
   788                           ; 4 bytes @ 0x0
   789  002D                     	ds	1
   790  002E                     ___awmod@sign:
   791                           
   792                           ; 1 bytes @ 0x1
   793  002E                     	ds	3
   794  0031                     ??_I2C_Master_Init:
   795                           
   796                           ; 1 bytes @ 0x4
   797  0031                     	ds	4
   798  0035                     ??_main:
   799                           
   800                           ; 1 bytes @ 0x8
   801  0035                     	ds	3
   802                           
   803                           	psect	maintext
   804  05D6                     __pmaintext:	
   805 ;;
   806 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   807 ;;
   808 ;; *************** function _main *****************
   809 ;; Defined at:
   810 ;;		line 44 in file "master.c"
   811 ;; Parameters:    Size  Location     Type
   812 ;;		None
   813 ;; Auto vars:     Size  Location     Type
   814 ;;		None
   815 ;; Return value:  Size  Location     Type
   816 ;;                  1    wreg      void 
   817 ;; Registers used:
   818 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   819 ;; Tracked objects:
   820 ;;		On entry : B00/0
   821 ;;		On exit  : 0/0
   822 ;;		Unchanged: 0/0
   823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   824 ;;      Params:         0       0       0       0       0
   825 ;;      Locals:         0       0       0       0       0
   826 ;;      Temps:          0       3       0       0       0
   827 ;;      Totals:         0       3       0       0       0
   828 ;;Total ram usage:        3 bytes
   829 ;; Hardware stack levels required when called: 3
   830 ;; This function calls:
   831 ;;		_I2C_Master_Read
   832 ;;		_I2C_Master_Start
   833 ;;		_I2C_Master_Stop
   834 ;;		_I2C_Master_Write
   835 ;;		_Lcd_Clear
   836 ;;		_Lcd_Init
   837 ;;		_Lcd_Set_Cursor
   838 ;;		_Lcd_Write_Char
   839 ;;		_Lcd_Write_String
   840 ;;		___awdiv
   841 ;;		___awmod
   842 ;;		_initSETUP
   843 ;;		_str_2_dc
   844 ;; This function is called by:
   845 ;;		Startup code after reset
   846 ;; This function uses a non-reentrant model
   847 ;;
   848                           
   849                           
   850                           ;psect for function _main
   851  05D6                     _main:
   852  05D6                     l1494:	
   853                           ;incstack = 0
   854                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   855                           
   856                           
   857                           ;master.c: 45:     initSETUP();
   858  05D6  120A  118A  22D1  120A  118A  	fcall	_initSETUP
   859                           
   860                           ;master.c: 46:     Lcd_Init();
   861  05DB  120A  118A  23A5  120A  118A  	fcall	_Lcd_Init
   862                           
   863                           ;master.c: 47:     Lcd_Clear();
   864  05E0  120A  118A  2242  120A  118A  	fcall	_Lcd_Clear
   865                           
   866                           ;master.c: 48:     Lcd_Set_Cursor(1,1);
   867  05E5  01F4               	clrf	Lcd_Set_Cursor@b
   868  05E6  0AF4               	incf	Lcd_Set_Cursor@b,f
   869  05E7  3001               	movlw	1
   870  05E8  120A  118A  23EC  120A  118A  	fcall	_Lcd_Set_Cursor
   871  05ED                     l1496:
   872                           
   873                           ;master.c: 49:     Lcd_Write_String(" RH:   T:   L%:");
   874  05ED  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   875  05EE  120A  118A  2287  120A  118A  	fcall	_Lcd_Write_String
   876  05F3                     l1498:
   877                           
   878                           ;master.c: 51:         I2C_Master_Start();
   879  05F3  120A  118A  2219  120A  118A  	fcall	_I2C_Master_Start
   880  05F8                     l1500:
   881                           
   882                           ;master.c: 52:         I2C_Master_Write(0x81);
   883  05F8  3081               	movlw	129
   884  05F9  00F0               	movwf	I2C_Master_Write@d
   885  05FA  3000               	movlw	0
   886  05FB  00F1               	movwf	I2C_Master_Write@d+1
   887  05FC  120A  118A  222B  120A  118A  	fcall	_I2C_Master_Write
   888  0601                     l1502:
   889                           
   890                           ;master.c: 53:         if (test==0){
   891  0601  1283               	bcf	3,5	;RP0=0, select bank0
   892  0602  1303               	bcf	3,6	;RP1=0, select bank0
   893  0603  0823               	movf	_test,w
   894  0604  1D03               	btfss	3,2
   895  0605  2E07               	goto	u971
   896  0606  2E08               	goto	u970
   897  0607                     u971:
   898  0607  2E19               	goto	l1508
   899  0608                     u970:
   900  0608                     l1504:
   901                           
   902                           ;master.c: 54:                 RH=I2C_Master_Read(0);
   903  0608  3000               	movlw	0
   904  0609  00F0               	movwf	I2C_Master_Read@a
   905  060A  00F1               	movwf	I2C_Master_Read@a+1
   906  060B  120A  118A  22FB  120A  118A  	fcall	_I2C_Master_Read
   907  0610  0870               	movf	?_I2C_Master_Read,w
   908  0611  1283               	bcf	3,5	;RP0=0, select bank0
   909  0612  1303               	bcf	3,6	;RP1=0, select bank0
   910  0613  00B5               	movwf	??_main
   911  0614  0835               	movf	??_main,w
   912  0615  00A4               	movwf	_RH
   913  0616                     l1506:
   914                           
   915                           ;master.c: 55:                 test = 1;
   916  0616  01A3               	clrf	_test
   917  0617  0AA3               	incf	_test,f
   918                           
   919                           ;master.c: 56:             }
   920  0618  2E2D               	goto	l1514
   921  0619                     l1508:
   922  0619  0323               	decf	_test,w
   923  061A  1D03               	btfss	3,2
   924  061B  2E1D               	goto	u981
   925  061C  2E1E               	goto	u980
   926  061D                     u981:
   927  061D  2E2D               	goto	l1514
   928  061E                     u980:
   929  061E                     l1510:
   930                           
   931                           ;master.c: 58:                 Humidity=I2C_Master_Read(0);
   932  061E  3000               	movlw	0
   933  061F  00F0               	movwf	I2C_Master_Read@a
   934  0620  00F1               	movwf	I2C_Master_Read@a+1
   935  0621  120A  118A  22FB  120A  118A  	fcall	_I2C_Master_Read
   936  0626  0870               	movf	?_I2C_Master_Read,w
   937  0627  1283               	bcf	3,5	;RP0=0, select bank0
   938  0628  1303               	bcf	3,6	;RP1=0, select bank0
   939  0629  00B5               	movwf	??_main
   940  062A  0835               	movf	??_main,w
   941  062B  00A5               	movwf	_Humidity
   942  062C                     l1512:
   943                           
   944                           ;master.c: 59:                 test = 0;
   945  062C  01A3               	clrf	_test
   946  062D                     l1514:
   947                           
   948                           ;master.c: 61:         I2C_Master_Stop();
   949  062D  120A  118A  2222  120A  118A  	fcall	_I2C_Master_Stop
   950  0632                     l1516:
   951                           
   952                           ;master.c: 62:         _delay((unsigned long)((200)*(8000000/4000.0)));
   953  0632  3003               	movlw	3
   954  0633  1283               	bcf	3,5	;RP0=0, select bank0
   955  0634  1303               	bcf	3,6	;RP1=0, select bank0
   956  0635  00B7               	movwf	??_main+2
   957  0636  3008               	movlw	8
   958  0637  00B6               	movwf	??_main+1
   959  0638  3076               	movlw	118
   960  0639  00B5               	movwf	??_main
   961  063A                     u1017:
   962  063A  0BB5               	decfsz	??_main,f
   963  063B  2E3A               	goto	u1017
   964  063C  0BB6               	decfsz	??_main+1,f
   965  063D  2E3A               	goto	u1017
   966  063E  0BB7               	decfsz	??_main+2,f
   967  063F  2E3A               	goto	u1017
   968  0640  0000               	nop
   969  0641                     l1518:
   970                           
   971                           ;master.c: 63:         I2C_Master_Start();
   972  0641  120A  118A  2219  120A  118A  	fcall	_I2C_Master_Start
   973  0646                     l1520:
   974                           
   975                           ;master.c: 64:         I2C_Master_Write(0x61);
   976  0646  3061               	movlw	97
   977  0647  00F0               	movwf	I2C_Master_Write@d
   978  0648  3000               	movlw	0
   979  0649  00F1               	movwf	I2C_Master_Write@d+1
   980  064A  120A  118A  222B  120A  118A  	fcall	_I2C_Master_Write
   981  064F                     l1522:
   982                           
   983                           ;master.c: 65:         LDR = I2C_Master_Read(0);
   984  064F  3000               	movlw	0
   985  0650  00F0               	movwf	I2C_Master_Read@a
   986  0651  00F1               	movwf	I2C_Master_Read@a+1
   987  0652  120A  118A  22FB  120A  118A  	fcall	_I2C_Master_Read
   988  0657  0871               	movf	?_I2C_Master_Read+1,w
   989  0658  1283               	bcf	3,5	;RP0=0, select bank0
   990  0659  1303               	bcf	3,6	;RP1=0, select bank0
   991  065A  00A1               	movwf	_LDR+1
   992  065B  0870               	movf	?_I2C_Master_Read,w
   993  065C  00A0               	movwf	_LDR
   994  065D                     l1524:
   995                           
   996                           ;master.c: 66:         I2C_Master_Stop();
   997  065D  120A  118A  2222  120A  118A  	fcall	_I2C_Master_Stop
   998  0662                     l1526:
   999                           
  1000                           ;master.c: 67:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1001  0662  3003               	movlw	3
  1002  0663  1283               	bcf	3,5	;RP0=0, select bank0
  1003  0664  1303               	bcf	3,6	;RP1=0, select bank0
  1004  0665  00B7               	movwf	??_main+2
  1005  0666  3008               	movlw	8
  1006  0667  00B6               	movwf	??_main+1
  1007  0668  3076               	movlw	118
  1008  0669  00B5               	movwf	??_main
  1009  066A                     u1027:
  1010  066A  0BB5               	decfsz	??_main,f
  1011  066B  2E6A               	goto	u1027
  1012  066C  0BB6               	decfsz	??_main+1,f
  1013  066D  2E6A               	goto	u1027
  1014  066E  0BB7               	decfsz	??_main+2,f
  1015  066F  2E6A               	goto	u1027
  1016  0670  0000               	nop
  1017  0671                     l1528:
  1018                           
  1019                           ;master.c: 68:         Lcd_Set_Cursor(2,1);
  1020  0671  01F4               	clrf	Lcd_Set_Cursor@b
  1021  0672  0AF4               	incf	Lcd_Set_Cursor@b,f
  1022  0673  3002               	movlw	2
  1023  0674  120A  118A  23EC  120A  118A  	fcall	_Lcd_Set_Cursor
  1024  0679                     l1530:
  1025                           
  1026                           ;master.c: 69:         unit0 = 48 + ((Humidity/10) %10);
  1027  0679  300A               	movlw	10
  1028  067A  00F9               	movwf	___awmod@divisor
  1029  067B  3000               	movlw	0
  1030  067C  00FA               	movwf	___awmod@divisor+1
  1031  067D  300A               	movlw	10
  1032  067E  00F0               	movwf	___awdiv@divisor
  1033  067F  3000               	movlw	0
  1034  0680  00F1               	movwf	___awdiv@divisor+1
  1035  0681  1283               	bcf	3,5	;RP0=0, select bank0
  1036  0682  1303               	bcf	3,6	;RP1=0, select bank0
  1037  0683  0825               	movf	_Humidity,w
  1038  0684  00B5               	movwf	??_main
  1039  0685  01B6               	clrf	??_main+1
  1040  0686  0835               	movf	??_main,w
  1041  0687  00F2               	movwf	___awdiv@dividend
  1042  0688  0836               	movf	??_main+1,w
  1043  0689  00F3               	movwf	___awdiv@dividend+1
  1044  068A  120A  118A  24FF  120A  118A  	fcall	___awdiv
  1045  068F  0871               	movf	?___awdiv+1,w
  1046  0690  00FC               	movwf	___awmod@dividend+1
  1047  0691  0870               	movf	?___awdiv,w
  1048  0692  00FB               	movwf	___awmod@dividend
  1049  0693  120A  118A  243E  120A  118A  	fcall	___awmod
  1050  0698  0879               	movf	?___awmod,w
  1051  0699  3E30               	addlw	48
  1052  069A  1283               	bcf	3,5	;RP0=0, select bank0
  1053  069B  1303               	bcf	3,6	;RP1=0, select bank0
  1054  069C  00B7               	movwf	??_main+2
  1055  069D  0837               	movf	??_main+2,w
  1056  069E  00AC               	movwf	_unit0
  1057  069F                     l1532:
  1058                           
  1059                           ;master.c: 70:         dec0 = 48 + (Humidity %10);
  1060  069F  300A               	movlw	10
  1061  06A0  00F9               	movwf	___awmod@divisor
  1062  06A1  3000               	movlw	0
  1063  06A2  00FA               	movwf	___awmod@divisor+1
  1064  06A3  0825               	movf	_Humidity,w
  1065  06A4  00B5               	movwf	??_main
  1066  06A5  01B6               	clrf	??_main+1
  1067  06A6  0835               	movf	??_main,w
  1068  06A7  00FB               	movwf	___awmod@dividend
  1069  06A8  0836               	movf	??_main+1,w
  1070  06A9  00FC               	movwf	___awmod@dividend+1
  1071  06AA  120A  118A  243E  120A  118A  	fcall	___awmod
  1072  06AF  0879               	movf	?___awmod,w
  1073  06B0  3E30               	addlw	48
  1074  06B1  1283               	bcf	3,5	;RP0=0, select bank0
  1075  06B2  1303               	bcf	3,6	;RP1=0, select bank0
  1076  06B3  00B7               	movwf	??_main+2
  1077  06B4  0837               	movf	??_main+2,w
  1078  06B5  00AB               	movwf	_dec0
  1079  06B6                     l1534:
  1080                           
  1081                           ;master.c: 71:         unit1 =48 + ((RH / 10) % 10);
  1082  06B6  300A               	movlw	10
  1083  06B7  00F9               	movwf	___awmod@divisor
  1084  06B8  3000               	movlw	0
  1085  06B9  00FA               	movwf	___awmod@divisor+1
  1086  06BA  300A               	movlw	10
  1087  06BB  00F0               	movwf	___awdiv@divisor
  1088  06BC  3000               	movlw	0
  1089  06BD  00F1               	movwf	___awdiv@divisor+1
  1090  06BE  0824               	movf	_RH,w
  1091  06BF  00B5               	movwf	??_main
  1092  06C0  01B6               	clrf	??_main+1
  1093  06C1  0835               	movf	??_main,w
  1094  06C2  00F2               	movwf	___awdiv@dividend
  1095  06C3  0836               	movf	??_main+1,w
  1096  06C4  00F3               	movwf	___awdiv@dividend+1
  1097  06C5  120A  118A  24FF  120A  118A  	fcall	___awdiv
  1098  06CA  0871               	movf	?___awdiv+1,w
  1099  06CB  00FC               	movwf	___awmod@dividend+1
  1100  06CC  0870               	movf	?___awdiv,w
  1101  06CD  00FB               	movwf	___awmod@dividend
  1102  06CE  120A  118A  243E  120A  118A  	fcall	___awmod
  1103  06D3  0879               	movf	?___awmod,w
  1104  06D4  3E30               	addlw	48
  1105  06D5  1283               	bcf	3,5	;RP0=0, select bank0
  1106  06D6  1303               	bcf	3,6	;RP1=0, select bank0
  1107  06D7  00B7               	movwf	??_main+2
  1108  06D8  0837               	movf	??_main+2,w
  1109  06D9  00AA               	movwf	_unit1
  1110  06DA                     l1536:
  1111                           
  1112                           ;master.c: 72:         dec1 = 48 + (RH % 10);
  1113  06DA  300A               	movlw	10
  1114  06DB  00F9               	movwf	___awmod@divisor
  1115  06DC  3000               	movlw	0
  1116  06DD  00FA               	movwf	___awmod@divisor+1
  1117  06DE  0824               	movf	_RH,w
  1118  06DF  00B5               	movwf	??_main
  1119  06E0  01B6               	clrf	??_main+1
  1120  06E1  0835               	movf	??_main,w
  1121  06E2  00FB               	movwf	___awmod@dividend
  1122  06E3  0836               	movf	??_main+1,w
  1123  06E4  00FC               	movwf	___awmod@dividend+1
  1124  06E5  120A  118A  243E  120A  118A  	fcall	___awmod
  1125  06EA  0879               	movf	?___awmod,w
  1126  06EB  3E30               	addlw	48
  1127  06EC  1283               	bcf	3,5	;RP0=0, select bank0
  1128  06ED  1303               	bcf	3,6	;RP1=0, select bank0
  1129  06EE  00B7               	movwf	??_main+2
  1130  06EF  0837               	movf	??_main+2,w
  1131  06F0  00A9               	movwf	_dec1
  1132  06F1                     l1538:
  1133                           
  1134                           ;master.c: 73:         Lcd_Write_Char(unit0);
  1135  06F1  082C               	movf	_unit0,w
  1136  06F2  120A  118A  2269  120A  118A  	fcall	_Lcd_Write_Char
  1137  06F7                     l1540:
  1138                           
  1139                           ;master.c: 74:         Lcd_Write_Char(dec0);
  1140  06F7  1283               	bcf	3,5	;RP0=0, select bank0
  1141  06F8  1303               	bcf	3,6	;RP1=0, select bank0
  1142  06F9  082B               	movf	_dec0,w
  1143  06FA  120A  118A  2269  120A  118A  	fcall	_Lcd_Write_Char
  1144  06FF                     l1542:
  1145                           
  1146                           ;master.c: 75:         Lcd_Write_String("%   ");
  1147  06FF  3028               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1148  0700  120A  118A  2287  120A  118A  	fcall	_Lcd_Write_String
  1149  0705                     l1544:
  1150                           
  1151                           ;master.c: 76:         Lcd_Write_Char(unit1);
  1152  0705  1283               	bcf	3,5	;RP0=0, select bank0
  1153  0706  1303               	bcf	3,6	;RP1=0, select bank0
  1154  0707  082A               	movf	_unit1,w
  1155  0708  120A  118A  2269  120A  118A  	fcall	_Lcd_Write_Char
  1156  070D                     l1546:
  1157                           
  1158                           ;master.c: 77:         Lcd_Write_Char(dec1);
  1159  070D  1283               	bcf	3,5	;RP0=0, select bank0
  1160  070E  1303               	bcf	3,6	;RP1=0, select bank0
  1161  070F  0829               	movf	_dec1,w
  1162  0710  120A  118A  2269  120A  118A  	fcall	_Lcd_Write_Char
  1163  0715                     l1548:
  1164                           
  1165                           ;master.c: 78:         Lcd_Write_Char(223);
  1166  0715  30DF               	movlw	223
  1167  0716  120A  118A  2269  120A  118A  	fcall	_Lcd_Write_Char
  1168  071B                     l1550:
  1169                           
  1170                           ;master.c: 79:         Lcd_Write_String("C  ");
  1171  071B  302D               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1172  071C  120A  118A  2287  120A  118A  	fcall	_Lcd_Write_String
  1173  0721                     l1552:
  1174                           
  1175                           ;master.c: 80:         str_2_dc(LDR);
  1176  0721  1283               	bcf	3,5	;RP0=0, select bank0
  1177  0722  1303               	bcf	3,6	;RP1=0, select bank0
  1178  0723  0821               	movf	_LDR+1,w
  1179  0724  00F9               	movwf	str_2_dc@var+1
  1180  0725  0820               	movf	_LDR,w
  1181  0726  00F8               	movwf	str_2_dc@var
  1182  0727  120A  118A  2566  120A  118A  	fcall	_str_2_dc
  1183  072C                     l1554:
  1184                           
  1185                           ;master.c: 81:         Lcd_Write_Char(unit0_0);
  1186  072C  1283               	bcf	3,5	;RP0=0, select bank0
  1187  072D  1303               	bcf	3,6	;RP1=0, select bank0
  1188  072E  0828               	movf	_unit0_0,w
  1189  072F  120A  118A  2269  120A  118A  	fcall	_Lcd_Write_Char
  1190  0734                     l1556:
  1191                           
  1192                           ;master.c: 82:         Lcd_Write_Char(dec0_12);
  1193  0734  1283               	bcf	3,5	;RP0=0, select bank0
  1194  0735  1303               	bcf	3,6	;RP1=0, select bank0
  1195  0736  0827               	movf	_dec0_12,w
  1196  0737  120A  118A  2269  120A  118A  	fcall	_Lcd_Write_Char
  1197  073C                     l1558:
  1198                           
  1199                           ;master.c: 83:         Lcd_Write_Char(dec1_12);
  1200  073C  1283               	bcf	3,5	;RP0=0, select bank0
  1201  073D  1303               	bcf	3,6	;RP1=0, select bank0
  1202  073E  0826               	movf	_dec1_12,w
  1203  073F  120A  118A  2269  120A  118A  	fcall	_Lcd_Write_Char
  1204  0744                     l1560:
  1205                           
  1206                           ;master.c: 84:         Lcd_Write_String("%");
  1207  0744  3031               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1208  0745  120A  118A  2287  120A  118A  	fcall	_Lcd_Write_String
  1209  074A                     l1562:
  1210                           
  1211                           ;master.c: 85:         if (LDR<98){
  1212  074A  1283               	bcf	3,5	;RP0=0, select bank0
  1213  074B  1303               	bcf	3,6	;RP1=0, select bank0
  1214  074C  0821               	movf	_LDR+1,w
  1215  074D  3A80               	xorlw	128
  1216  074E  00FF               	movwf	btemp+1
  1217  074F  3080               	movlw	128
  1218  0750  027F               	subwf	btemp+1,w
  1219  0751  1D03               	skipz
  1220  0752  2F55               	goto	u995
  1221  0753  3062               	movlw	98
  1222  0754  0220               	subwf	_LDR,w
  1223  0755                     u995:
  1224  0755  1803               	skipnc
  1225  0756  2F58               	goto	u991
  1226  0757  2F59               	goto	u990
  1227  0758                     u991:
  1228  0758  2F77               	goto	l1570
  1229  0759                     u990:
  1230  0759                     l1564:
  1231                           
  1232                           ;master.c: 86:             cont=1;
  1233  0759  1283               	bcf	3,5	;RP0=0, select bank0
  1234  075A  1303               	bcf	3,6	;RP1=0, select bank0
  1235  075B  01A2               	clrf	_cont
  1236  075C  0AA2               	incf	_cont,f
  1237                           
  1238                           ;master.c: 87:             PORTAbits.RA0 = 1;
  1239  075D  1405               	bsf	5,0	;volatile
  1240  075E                     l1566:
  1241                           
  1242                           ;master.c: 88:             _delay((unsigned long)((2000)*(8000000/4000000.0)));
  1243  075E  3006               	movlw	6
  1244  075F  1283               	bcf	3,5	;RP0=0, select bank0
  1245  0760  1303               	bcf	3,6	;RP1=0, select bank0
  1246  0761  00B6               	movwf	??_main+1
  1247  0762  302F               	movlw	47
  1248  0763  00B5               	movwf	??_main
  1249  0764                     u1037:
  1250  0764  0BB5               	decfsz	??_main,f
  1251  0765  2F64               	goto	u1037
  1252  0766  0BB6               	decfsz	??_main+1,f
  1253  0767  2F64               	goto	u1037
  1254  0768  2F69               	nop2
  1255  0769                     l1568:
  1256                           
  1257                           ;master.c: 89:             PORTAbits.RA0 = 0;
  1258  0769  1283               	bcf	3,5	;RP0=0, select bank0
  1259  076A  1303               	bcf	3,6	;RP1=0, select bank0
  1260  076B  1005               	bcf	5,0	;volatile
  1261                           
  1262                           ;master.c: 90:             _delay((unsigned long)((20)*(8000000/4000.0)));
  1263  076C  3034               	movlw	52
  1264  076D  1283               	bcf	3,5	;RP0=0, select bank0
  1265  076E  1303               	bcf	3,6	;RP1=0, select bank0
  1266  076F  00B6               	movwf	??_main+1
  1267  0770  30F1               	movlw	241
  1268  0771  00B5               	movwf	??_main
  1269  0772                     u1047:
  1270  0772  0BB5               	decfsz	??_main,f
  1271  0773  2F72               	goto	u1047
  1272  0774  0BB6               	decfsz	??_main+1,f
  1273  0775  2F72               	goto	u1047
  1274                           
  1275                           ;master.c: 92:         }
  1276  0776  2DF3               	goto	l1498
  1277  0777                     l1570:
  1278  0777  3064               	movlw	100
  1279  0778  1283               	bcf	3,5	;RP0=0, select bank0
  1280  0779  1303               	bcf	3,6	;RP1=0, select bank0
  1281  077A  0620               	xorwf	_LDR,w
  1282  077B  0421               	iorwf	_LDR+1,w
  1283  077C  1D03               	btfss	3,2
  1284  077D  2F7F               	goto	u1001
  1285  077E  2F80               	goto	u1000
  1286  077F                     u1001:
  1287  077F  2DF3               	goto	l1498
  1288  0780                     u1000:
  1289  0780                     l1572:
  1290                           
  1291                           ;master.c: 94:             cont=0;
  1292  0780  01A2               	clrf	_cont
  1293  0781                     l1574:
  1294                           
  1295                           ;master.c: 95:             PORTAbits.RA0 = 1;
  1296  0781  1405               	bsf	5,0	;volatile
  1297  0782                     l1576:
  1298                           
  1299                           ;master.c: 96:             _delay((unsigned long)((1000)*(8000000/4000000.0)));
  1300  0782  3003               	movlw	3
  1301  0783  1283               	bcf	3,5	;RP0=0, select bank0
  1302  0784  1303               	bcf	3,6	;RP1=0, select bank0
  1303  0785  00B6               	movwf	??_main+1
  1304  0786  3097               	movlw	151
  1305  0787  00B5               	movwf	??_main
  1306  0788                     u1057:
  1307  0788  0BB5               	decfsz	??_main,f
  1308  0789  2F88               	goto	u1057
  1309  078A  0BB6               	decfsz	??_main+1,f
  1310  078B  2F88               	goto	u1057
  1311  078C                     l1578:
  1312                           
  1313                           ;master.c: 97:             PORTAbits.RA0 = 0;
  1314  078C  1283               	bcf	3,5	;RP0=0, select bank0
  1315  078D  1303               	bcf	3,6	;RP1=0, select bank0
  1316  078E  1005               	bcf	5,0	;volatile
  1317  078F                     l1580:
  1318                           
  1319                           ;master.c: 98:             _delay((unsigned long)((20)*(8000000/4000.0)));
  1320  078F  3034               	movlw	52
  1321  0790  1283               	bcf	3,5	;RP0=0, select bank0
  1322  0791  1303               	bcf	3,6	;RP1=0, select bank0
  1323  0792  00B6               	movwf	??_main+1
  1324  0793  30F1               	movlw	241
  1325  0794  00B5               	movwf	??_main
  1326  0795                     u1067:
  1327  0795  0BB5               	decfsz	??_main,f
  1328  0796  2F95               	goto	u1067
  1329  0797  0BB6               	decfsz	??_main+1,f
  1330  0798  2F95               	goto	u1067
  1331  0799                     l1582:
  1332                           
  1333                           ;master.c: 99:             Lcd_Clear();
  1334  0799  120A  118A  2242  120A  118A  	fcall	_Lcd_Clear
  1335  079E                     l1584:
  1336                           
  1337                           ;master.c: 100:             Lcd_Set_Cursor(1,1);
  1338  079E  01F4               	clrf	Lcd_Set_Cursor@b
  1339  079F  0AF4               	incf	Lcd_Set_Cursor@b,f
  1340  07A0  3001               	movlw	1
  1341  07A1  120A  118A  23EC  120A  118A  	fcall	_Lcd_Set_Cursor
  1342  07A6                     l1586:
  1343                           
  1344                           ;master.c: 101:        Lcd_Write_String("DISPENSANDO");
  1345  07A6  3011               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1346  07A7  120A  118A  2287  120A  118A  	fcall	_Lcd_Write_String
  1347  07AC                     l1588:
  1348                           
  1349                           ;master.c: 102:        Lcd_Set_Cursor(2,1);
  1350  07AC  01F4               	clrf	Lcd_Set_Cursor@b
  1351  07AD  0AF4               	incf	Lcd_Set_Cursor@b,f
  1352  07AE  3002               	movlw	2
  1353  07AF  120A  118A  23EC  120A  118A  	fcall	_Lcd_Set_Cursor
  1354  07B4                     l1590:
  1355                           
  1356                           ;master.c: 103:        Lcd_Write_String(" COMIDA...");
  1357  07B4  301D               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1358  07B5  120A  118A  2287  120A  118A  	fcall	_Lcd_Write_String
  1359  07BA                     l1592:
  1360                           
  1361                           ;master.c: 104:        _delay((unsigned long)((5000)*(8000000/4000.0)));
  1362  07BA  3033               	movlw	51
  1363  07BB  1283               	bcf	3,5	;RP0=0, select bank0
  1364  07BC  1303               	bcf	3,6	;RP1=0, select bank0
  1365  07BD  00B7               	movwf	??_main+2
  1366  07BE  30BB               	movlw	187
  1367  07BF  00B6               	movwf	??_main+1
  1368  07C0  30DF               	movlw	223
  1369  07C1  00B5               	movwf	??_main
  1370  07C2                     u1077:
  1371  07C2  0BB5               	decfsz	??_main,f
  1372  07C3  2FC2               	goto	u1077
  1373  07C4  0BB6               	decfsz	??_main+1,f
  1374  07C5  2FC2               	goto	u1077
  1375  07C6  0BB7               	decfsz	??_main+2,f
  1376  07C7  2FC2               	goto	u1077
  1377  07C8                     l1594:
  1378                           
  1379                           ;master.c: 105:        Lcd_Clear();
  1380  07C8  120A  118A  2242  120A  118A  	fcall	_Lcd_Clear
  1381  07CD                     l1596:
  1382                           
  1383                           ;master.c: 106:        Lcd_Set_Cursor(1,1);
  1384  07CD  01F4               	clrf	Lcd_Set_Cursor@b
  1385  07CE  0AF4               	incf	Lcd_Set_Cursor@b,f
  1386  07CF  3001               	movlw	1
  1387  07D0  120A  118A  23EC  120A  118A  	fcall	_Lcd_Set_Cursor
  1388  07D5                     l1598:
  1389                           
  1390                           ;master.c: 107:        Lcd_Write_String(" RH:   T:   L%:");
  1391  07D5  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1392  07D6  120A  118A  2287  120A  118A  	fcall	_Lcd_Write_String
  1393  07DB                     l1600:
  1394                           
  1395                           ;master.c: 108:         _delay((unsigned long)((500)*(8000000/4000.0)));
  1396  07DB  3006               	movlw	6
  1397  07DC  1283               	bcf	3,5	;RP0=0, select bank0
  1398  07DD  1303               	bcf	3,6	;RP1=0, select bank0
  1399  07DE  00B7               	movwf	??_main+2
  1400  07DF  3013               	movlw	19
  1401  07E0  00B6               	movwf	??_main+1
  1402  07E1  30AD               	movlw	173
  1403  07E2  00B5               	movwf	??_main
  1404  07E3                     u1087:
  1405  07E3  0BB5               	decfsz	??_main,f
  1406  07E4  2FE3               	goto	u1087
  1407  07E5  0BB6               	decfsz	??_main+1,f
  1408  07E6  2FE3               	goto	u1087
  1409  07E7  0BB7               	decfsz	??_main+2,f
  1410  07E8  2FE3               	goto	u1087
  1411  07E9  2DF3               	goto	l1498
  1412  07EA  120A  118A  2800   	ljmp	start
  1413  07ED                     __end_of_main:
  1414                           
  1415                           	psect	text1
  1416  0566                     __ptext1:	
  1417 ;; *************** function _str_2_dc *****************
  1418 ;; Defined at:
  1419 ;;		line 113 in file "master.c"
  1420 ;; Parameters:    Size  Location     Type
  1421 ;;  var             2    8[COMMON] unsigned int 
  1422 ;; Auto vars:     Size  Location     Type
  1423 ;;  vcv             2   12[COMMON] unsigned int 
  1424 ;; Return value:  Size  Location     Type
  1425 ;;                  1    wreg      void 
  1426 ;; Registers used:
  1427 ;;		wreg, status,2, status,0, pclath, cstack
  1428 ;; Tracked objects:
  1429 ;;		On entry : 0/0
  1430 ;;		On exit  : 0/0
  1431 ;;		Unchanged: 0/0
  1432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1433 ;;      Params:         2       0       0       0       0
  1434 ;;      Locals:         2       0       0       0       0
  1435 ;;      Temps:          2       0       0       0       0
  1436 ;;      Totals:         6       0       0       0       0
  1437 ;;Total ram usage:        6 bytes
  1438 ;; Hardware stack levels used: 1
  1439 ;; Hardware stack levels required when called: 1
  1440 ;; This function calls:
  1441 ;;		___lwdiv
  1442 ;;		___wmul
  1443 ;; This function is called by:
  1444 ;;		_main
  1445 ;; This function uses a non-reentrant model
  1446 ;;
  1447                           
  1448                           
  1449                           ;psect for function _str_2_dc
  1450  0566                     _str_2_dc:
  1451  0566                     l1396:	
  1452                           ;incstack = 0
  1453                           ; Regs used in _str_2_dc: [wreg+status,2+status,0+pclath+cstack]
  1454                           
  1455                           
  1456                           ;master.c: 114:     uint16_t vcv;;master.c: 115:     vcv = var;
  1457  0566  0879               	movf	str_2_dc@var+1,w
  1458  0567  00FD               	movwf	str_2_dc@vcv+1
  1459  0568  0878               	movf	str_2_dc@var,w
  1460  0569  00FC               	movwf	str_2_dc@vcv
  1461  056A                     l1398:
  1462                           
  1463                           ;master.c: 116:     unit0_0 = (vcv/100) ;
  1464  056A  3064               	movlw	100
  1465  056B  00F0               	movwf	___lwdiv@divisor
  1466  056C  3000               	movlw	0
  1467  056D  00F1               	movwf	___lwdiv@divisor+1
  1468  056E  087D               	movf	str_2_dc@vcv+1,w
  1469  056F  00F3               	movwf	___lwdiv@dividend+1
  1470  0570  087C               	movf	str_2_dc@vcv,w
  1471  0571  00F2               	movwf	___lwdiv@dividend
  1472  0572  120A  118A  2361  120A  118A  	fcall	___lwdiv
  1473  0577  0870               	movf	?___lwdiv,w
  1474  0578  00FA               	movwf	??_str_2_dc
  1475  0579  087A               	movf	??_str_2_dc,w
  1476  057A  1283               	bcf	3,5	;RP0=0, select bank0
  1477  057B  1303               	bcf	3,6	;RP1=0, select bank0
  1478  057C  00A8               	movwf	_unit0_0
  1479  057D                     l1400:
  1480                           
  1481                           ;master.c: 117:     vcv = (vcv - (unit0_0*100));
  1482  057D  0828               	movf	_unit0_0,w
  1483  057E  00FA               	movwf	??_str_2_dc
  1484  057F  01FB               	clrf	??_str_2_dc+1
  1485  0580  087A               	movf	??_str_2_dc,w
  1486  0581  00F0               	movwf	___wmul@multiplier
  1487  0582  087B               	movf	??_str_2_dc+1,w
  1488  0583  00F1               	movwf	___wmul@multiplier+1
  1489  0584  309C               	movlw	156
  1490  0585  00F2               	movwf	___wmul@multiplicand
  1491  0586  30FF               	movlw	255
  1492  0587  00F3               	movwf	___wmul@multiplicand+1
  1493  0588  120A  118A  22AC  120A  118A  	fcall	___wmul
  1494  058D  087C               	movf	str_2_dc@vcv,w
  1495  058E  0770               	addwf	?___wmul,w
  1496  058F  00FC               	movwf	str_2_dc@vcv
  1497  0590  087D               	movf	str_2_dc@vcv+1,w
  1498  0591  1803               	skipnc
  1499  0592  0A7D               	incf	str_2_dc@vcv+1,w
  1500  0593  0771               	addwf	?___wmul+1,w
  1501  0594  00FD               	movwf	str_2_dc@vcv+1
  1502  0595                     l1402:
  1503                           
  1504                           ;master.c: 118:     dec0_12 = (vcv/10);
  1505  0595  300A               	movlw	10
  1506  0596  00F0               	movwf	___lwdiv@divisor
  1507  0597  3000               	movlw	0
  1508  0598  00F1               	movwf	___lwdiv@divisor+1
  1509  0599  087D               	movf	str_2_dc@vcv+1,w
  1510  059A  00F3               	movwf	___lwdiv@dividend+1
  1511  059B  087C               	movf	str_2_dc@vcv,w
  1512  059C  00F2               	movwf	___lwdiv@dividend
  1513  059D  120A  118A  2361  120A  118A  	fcall	___lwdiv
  1514  05A2  0870               	movf	?___lwdiv,w
  1515  05A3  00FA               	movwf	??_str_2_dc
  1516  05A4  087A               	movf	??_str_2_dc,w
  1517  05A5  1283               	bcf	3,5	;RP0=0, select bank0
  1518  05A6  1303               	bcf	3,6	;RP1=0, select bank0
  1519  05A7  00A7               	movwf	_dec0_12
  1520  05A8                     l1404:
  1521                           
  1522                           ;master.c: 119:     vcv = (vcv - (dec0_12*10));
  1523  05A8  0827               	movf	_dec0_12,w
  1524  05A9  00FA               	movwf	??_str_2_dc
  1525  05AA  01FB               	clrf	??_str_2_dc+1
  1526  05AB  087A               	movf	??_str_2_dc,w
  1527  05AC  00F0               	movwf	___wmul@multiplier
  1528  05AD  087B               	movf	??_str_2_dc+1,w
  1529  05AE  00F1               	movwf	___wmul@multiplier+1
  1530  05AF  30F6               	movlw	246
  1531  05B0  00F2               	movwf	___wmul@multiplicand
  1532  05B1  30FF               	movlw	255
  1533  05B2  00F3               	movwf	___wmul@multiplicand+1
  1534  05B3  120A  118A  22AC  120A  118A  	fcall	___wmul
  1535  05B8  087C               	movf	str_2_dc@vcv,w
  1536  05B9  0770               	addwf	?___wmul,w
  1537  05BA  00FC               	movwf	str_2_dc@vcv
  1538  05BB  087D               	movf	str_2_dc@vcv+1,w
  1539  05BC  1803               	skipnc
  1540  05BD  0A7D               	incf	str_2_dc@vcv+1,w
  1541  05BE  0771               	addwf	?___wmul+1,w
  1542  05BF  00FD               	movwf	str_2_dc@vcv+1
  1543                           
  1544                           ;master.c: 120:     dec1_12 = (vcv);
  1545  05C0  087C               	movf	str_2_dc@vcv,w
  1546  05C1  00FA               	movwf	??_str_2_dc
  1547  05C2  087A               	movf	??_str_2_dc,w
  1548  05C3  1283               	bcf	3,5	;RP0=0, select bank0
  1549  05C4  1303               	bcf	3,6	;RP1=0, select bank0
  1550  05C5  00A6               	movwf	_dec1_12
  1551  05C6                     l1406:
  1552                           
  1553                           ;master.c: 121:     unit0_0 = unit0_0 + 48;
  1554  05C6  0828               	movf	_unit0_0,w
  1555  05C7  3E30               	addlw	48
  1556  05C8  00FA               	movwf	??_str_2_dc
  1557  05C9  087A               	movf	??_str_2_dc,w
  1558  05CA  00A8               	movwf	_unit0_0
  1559  05CB                     l1408:
  1560                           
  1561                           ;master.c: 122:     dec0_12 = dec0_12 + 48;
  1562  05CB  0827               	movf	_dec0_12,w
  1563  05CC  3E30               	addlw	48
  1564  05CD  00FA               	movwf	??_str_2_dc
  1565  05CE  087A               	movf	??_str_2_dc,w
  1566  05CF  00A7               	movwf	_dec0_12
  1567  05D0                     l1410:
  1568                           
  1569                           ;master.c: 123:     dec1_12 = dec1_12 + 48;
  1570  05D0  0826               	movf	_dec1_12,w
  1571  05D1  3E30               	addlw	48
  1572  05D2  00FA               	movwf	??_str_2_dc
  1573  05D3  087A               	movf	??_str_2_dc,w
  1574  05D4  00A6               	movwf	_dec1_12
  1575  05D5                     l97:
  1576  05D5  0008               	return
  1577  05D6                     __end_of_str_2_dc:
  1578                           
  1579                           	psect	text2
  1580  02AC                     __ptext2:	
  1581 ;; *************** function ___wmul *****************
  1582 ;; Defined at:
  1583 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  1584 ;; Parameters:    Size  Location     Type
  1585 ;;  multiplier      2    0[COMMON] unsigned int 
  1586 ;;  multiplicand    2    2[COMMON] unsigned int 
  1587 ;; Auto vars:     Size  Location     Type
  1588 ;;  product         2    4[COMMON] unsigned int 
  1589 ;; Return value:  Size  Location     Type
  1590 ;;                  2    0[COMMON] unsigned int 
  1591 ;; Registers used:
  1592 ;;		wreg, status,2, status,0
  1593 ;; Tracked objects:
  1594 ;;		On entry : 0/0
  1595 ;;		On exit  : 0/0
  1596 ;;		Unchanged: 0/0
  1597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1598 ;;      Params:         4       0       0       0       0
  1599 ;;      Locals:         2       0       0       0       0
  1600 ;;      Temps:          0       0       0       0       0
  1601 ;;      Totals:         6       0       0       0       0
  1602 ;;Total ram usage:        6 bytes
  1603 ;; Hardware stack levels used: 1
  1604 ;; This function calls:
  1605 ;;		Nothing
  1606 ;; This function is called by:
  1607 ;;		_str_2_dc
  1608 ;; This function uses a non-reentrant model
  1609 ;;
  1610                           
  1611                           
  1612                           ;psect for function ___wmul
  1613  02AC                     ___wmul:
  1614  02AC                     l1270:	
  1615                           ;incstack = 0
  1616                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1617                           
  1618  02AC  01F4               	clrf	___wmul@product
  1619  02AD  01F5               	clrf	___wmul@product+1
  1620  02AE                     l1272:
  1621  02AE  1C70               	btfss	___wmul@multiplier,0
  1622  02AF  2AB1               	goto	u611
  1623  02B0  2AB2               	goto	u610
  1624  02B1                     u611:
  1625  02B1  2AB8               	goto	l282
  1626  02B2                     u610:
  1627  02B2                     l1274:
  1628  02B2  0872               	movf	___wmul@multiplicand,w
  1629  02B3  07F4               	addwf	___wmul@product,f
  1630  02B4  1803               	skipnc
  1631  02B5  0AF5               	incf	___wmul@product+1,f
  1632  02B6  0873               	movf	___wmul@multiplicand+1,w
  1633  02B7  07F5               	addwf	___wmul@product+1,f
  1634  02B8                     l282:
  1635  02B8  3001               	movlw	1
  1636  02B9                     u625:
  1637  02B9  1003               	clrc
  1638  02BA  0DF2               	rlf	___wmul@multiplicand,f
  1639  02BB  0DF3               	rlf	___wmul@multiplicand+1,f
  1640  02BC  3EFF               	addlw	-1
  1641  02BD  1D03               	skipz
  1642  02BE  2AB9               	goto	u625
  1643  02BF                     l1276:
  1644  02BF  3001               	movlw	1
  1645  02C0                     u635:
  1646  02C0  1003               	clrc
  1647  02C1  0CF1               	rrf	___wmul@multiplier+1,f
  1648  02C2  0CF0               	rrf	___wmul@multiplier,f
  1649  02C3  3EFF               	addlw	-1
  1650  02C4  1D03               	skipz
  1651  02C5  2AC0               	goto	u635
  1652  02C6                     l1278:
  1653  02C6  0870               	movf	___wmul@multiplier,w
  1654  02C7  0471               	iorwf	___wmul@multiplier+1,w
  1655  02C8  1D03               	btfss	3,2
  1656  02C9  2ACB               	goto	u641
  1657  02CA  2ACC               	goto	u640
  1658  02CB                     u641:
  1659  02CB  2AAE               	goto	l1272
  1660  02CC                     u640:
  1661  02CC                     l1280:
  1662  02CC  0875               	movf	___wmul@product+1,w
  1663  02CD  00F1               	movwf	?___wmul+1
  1664  02CE  0874               	movf	___wmul@product,w
  1665  02CF  00F0               	movwf	?___wmul
  1666  02D0                     l284:
  1667  02D0  0008               	return
  1668  02D1                     __end_of___wmul:
  1669                           
  1670                           	psect	text3
  1671  0361                     __ptext3:	
  1672 ;; *************** function ___lwdiv *****************
  1673 ;; Defined at:
  1674 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  1675 ;; Parameters:    Size  Location     Type
  1676 ;;  divisor         2    0[COMMON] unsigned int 
  1677 ;;  dividend        2    2[COMMON] unsigned int 
  1678 ;; Auto vars:     Size  Location     Type
  1679 ;;  quotient        2    5[COMMON] unsigned int 
  1680 ;;  counter         1    7[COMMON] unsigned char 
  1681 ;; Return value:  Size  Location     Type
  1682 ;;                  2    0[COMMON] unsigned int 
  1683 ;; Registers used:
  1684 ;;		wreg, status,2, status,0
  1685 ;; Tracked objects:
  1686 ;;		On entry : 0/0
  1687 ;;		On exit  : 0/0
  1688 ;;		Unchanged: 0/0
  1689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1690 ;;      Params:         4       0       0       0       0
  1691 ;;      Locals:         3       0       0       0       0
  1692 ;;      Temps:          1       0       0       0       0
  1693 ;;      Totals:         8       0       0       0       0
  1694 ;;Total ram usage:        8 bytes
  1695 ;; Hardware stack levels used: 1
  1696 ;; This function calls:
  1697 ;;		Nothing
  1698 ;; This function is called by:
  1699 ;;		_str_2_dc
  1700 ;; This function uses a non-reentrant model
  1701 ;;
  1702                           
  1703                           
  1704                           ;psect for function ___lwdiv
  1705  0361                     ___lwdiv:
  1706  0361                     l1284:	
  1707                           ;incstack = 0
  1708                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1709                           
  1710  0361  01F5               	clrf	___lwdiv@quotient
  1711  0362  01F6               	clrf	___lwdiv@quotient+1
  1712  0363                     l1286:
  1713  0363  0870               	movf	___lwdiv@divisor,w
  1714  0364  0471               	iorwf	___lwdiv@divisor+1,w
  1715  0365  1903               	btfsc	3,2
  1716  0366  2B68               	goto	u651
  1717  0367  2B69               	goto	u650
  1718  0368                     u651:
  1719  0368  2BA0               	goto	l1306
  1720  0369                     u650:
  1721  0369                     l1288:
  1722  0369  01F7               	clrf	___lwdiv@counter
  1723  036A  0AF7               	incf	___lwdiv@counter,f
  1724  036B  2B77               	goto	l1294
  1725  036C                     l1290:
  1726  036C  3001               	movlw	1
  1727  036D                     u665:
  1728  036D  1003               	clrc
  1729  036E  0DF0               	rlf	___lwdiv@divisor,f
  1730  036F  0DF1               	rlf	___lwdiv@divisor+1,f
  1731  0370  3EFF               	addlw	-1
  1732  0371  1D03               	skipz
  1733  0372  2B6D               	goto	u665
  1734  0373                     l1292:
  1735  0373  3001               	movlw	1
  1736  0374  00F4               	movwf	??___lwdiv
  1737  0375  0874               	movf	??___lwdiv,w
  1738  0376  07F7               	addwf	___lwdiv@counter,f
  1739  0377                     l1294:
  1740  0377  1FF1               	btfss	___lwdiv@divisor+1,7
  1741  0378  2B7A               	goto	u671
  1742  0379  2B7B               	goto	u670
  1743  037A                     u671:
  1744  037A  2B6C               	goto	l1290
  1745  037B                     u670:
  1746  037B                     l1296:
  1747  037B  3001               	movlw	1
  1748  037C                     u685:
  1749  037C  1003               	clrc
  1750  037D  0DF5               	rlf	___lwdiv@quotient,f
  1751  037E  0DF6               	rlf	___lwdiv@quotient+1,f
  1752  037F  3EFF               	addlw	-1
  1753  0380  1D03               	skipz
  1754  0381  2B7C               	goto	u685
  1755  0382  0871               	movf	___lwdiv@divisor+1,w
  1756  0383  0273               	subwf	___lwdiv@dividend+1,w
  1757  0384  1D03               	skipz
  1758  0385  2B88               	goto	u695
  1759  0386  0870               	movf	___lwdiv@divisor,w
  1760  0387  0272               	subwf	___lwdiv@dividend,w
  1761  0388                     u695:
  1762  0388  1C03               	skipc
  1763  0389  2B8B               	goto	u691
  1764  038A  2B8C               	goto	u690
  1765  038B                     u691:
  1766  038B  2B93               	goto	l1302
  1767  038C                     u690:
  1768  038C                     l1298:
  1769  038C  0870               	movf	___lwdiv@divisor,w
  1770  038D  02F2               	subwf	___lwdiv@dividend,f
  1771  038E  0871               	movf	___lwdiv@divisor+1,w
  1772  038F  1C03               	skipc
  1773  0390  03F3               	decf	___lwdiv@dividend+1,f
  1774  0391  02F3               	subwf	___lwdiv@dividend+1,f
  1775  0392                     l1300:
  1776  0392  1475               	bsf	___lwdiv@quotient,0
  1777  0393                     l1302:
  1778  0393  3001               	movlw	1
  1779  0394                     u705:
  1780  0394  1003               	clrc
  1781  0395  0CF1               	rrf	___lwdiv@divisor+1,f
  1782  0396  0CF0               	rrf	___lwdiv@divisor,f
  1783  0397  3EFF               	addlw	-1
  1784  0398  1D03               	skipz
  1785  0399  2B94               	goto	u705
  1786  039A                     l1304:
  1787  039A  3001               	movlw	1
  1788  039B  02F7               	subwf	___lwdiv@counter,f
  1789  039C  1D03               	btfss	3,2
  1790  039D  2B9F               	goto	u711
  1791  039E  2BA0               	goto	u710
  1792  039F                     u711:
  1793  039F  2B7B               	goto	l1296
  1794  03A0                     u710:
  1795  03A0                     l1306:
  1796  03A0  0876               	movf	___lwdiv@quotient+1,w
  1797  03A1  00F1               	movwf	?___lwdiv+1
  1798  03A2  0875               	movf	___lwdiv@quotient,w
  1799  03A3  00F0               	movwf	?___lwdiv
  1800  03A4                     l554:
  1801  03A4  0008               	return
  1802  03A5                     __end_of___lwdiv:
  1803                           
  1804                           	psect	text4
  1805  02D1                     __ptext4:	
  1806 ;; *************** function _initSETUP *****************
  1807 ;; Defined at:
  1808 ;;		line 126 in file "master.c"
  1809 ;; Parameters:    Size  Location     Type
  1810 ;;		None
  1811 ;; Auto vars:     Size  Location     Type
  1812 ;;		None
  1813 ;; Return value:  Size  Location     Type
  1814 ;;                  1    wreg      void 
  1815 ;; Registers used:
  1816 ;;		wreg, status,2, status,0, pclath, cstack
  1817 ;; Tracked objects:
  1818 ;;		On entry : 0/0
  1819 ;;		On exit  : 0/0
  1820 ;;		Unchanged: 0/0
  1821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1822 ;;      Params:         0       0       0       0       0
  1823 ;;      Locals:         0       0       0       0       0
  1824 ;;      Temps:          0       0       0       0       0
  1825 ;;      Totals:         0       0       0       0       0
  1826 ;;Total ram usage:        0 bytes
  1827 ;; Hardware stack levels used: 1
  1828 ;; Hardware stack levels required when called: 2
  1829 ;; This function calls:
  1830 ;;		_I2C_Master_Init
  1831 ;; This function is called by:
  1832 ;;		_main
  1833 ;; This function uses a non-reentrant model
  1834 ;;
  1835                           
  1836                           
  1837                           ;psect for function _initSETUP
  1838  02D1                     _initSETUP:
  1839  02D1                     l1310:	
  1840                           ;incstack = 0
  1841                           ; Regs used in _initSETUP: [wreg+status,2+status,0+pclath+cstack]
  1842                           
  1843                           
  1844                           ;master.c: 127:     TRISA = 0b00000000;
  1845  02D1  1683               	bsf	3,5	;RP0=1, select bank1
  1846  02D2  1303               	bcf	3,6	;RP1=0, select bank1
  1847  02D3  0185               	clrf	5	;volatile
  1848                           
  1849                           ;master.c: 128:     TRISB = 0;
  1850  02D4  0186               	clrf	6	;volatile
  1851                           
  1852                           ;master.c: 129:     TRISC = 0;
  1853  02D5  0187               	clrf	7	;volatile
  1854                           
  1855                           ;master.c: 130:     TRISD = 0;
  1856  02D6  0188               	clrf	8	;volatile
  1857                           
  1858                           ;master.c: 131:     TRISE = 0;
  1859  02D7  0189               	clrf	9	;volatile
  1860                           
  1861                           ;master.c: 132:     PORTE = 0;
  1862  02D8  1283               	bcf	3,5	;RP0=0, select bank0
  1863  02D9  1303               	bcf	3,6	;RP1=0, select bank0
  1864  02DA  0189               	clrf	9	;volatile
  1865                           
  1866                           ;master.c: 133:     PORTA = 0;
  1867  02DB  0185               	clrf	5	;volatile
  1868                           
  1869                           ;master.c: 134:     PORTB = 0;
  1870  02DC  0186               	clrf	6	;volatile
  1871                           
  1872                           ;master.c: 135:     PORTC = 0;
  1873  02DD  0187               	clrf	7	;volatile
  1874                           
  1875                           ;master.c: 136:     PORTD = 0;
  1876  02DE  0188               	clrf	8	;volatile
  1877                           
  1878                           ;master.c: 137:     ANSEL = 0;
  1879  02DF  1683               	bsf	3,5	;RP0=1, select bank3
  1880  02E0  1703               	bsf	3,6	;RP1=1, select bank3
  1881  02E1  0188               	clrf	8	;volatile
  1882                           
  1883                           ;master.c: 138:     ANSELH = 0;
  1884  02E2  0189               	clrf	9	;volatile
  1885  02E3                     l1312:
  1886                           
  1887                           ;master.c: 139:     OSCCONbits.IRCF2 = 1;
  1888  02E3  1683               	bsf	3,5	;RP0=1, select bank1
  1889  02E4  1303               	bcf	3,6	;RP1=0, select bank1
  1890  02E5  170F               	bsf	15,6	;volatile
  1891  02E6                     l1314:
  1892                           
  1893                           ;master.c: 140:     OSCCONbits.IRCF1 = 1;
  1894  02E6  168F               	bsf	15,5	;volatile
  1895  02E7                     l1316:
  1896                           
  1897                           ;master.c: 141:     OSCCONbits.IRCF0 = 1;
  1898  02E7  160F               	bsf	15,4	;volatile
  1899  02E8                     l1318:
  1900                           
  1901                           ;master.c: 142:     OSCCONbits.SCS = 1;
  1902  02E8  140F               	bsf	15,0	;volatile
  1903  02E9                     l1320:
  1904                           
  1905                           ;master.c: 144:     INTCONbits.GIE = 1;
  1906  02E9  178B               	bsf	11,7	;volatile
  1907  02EA                     l1322:
  1908                           
  1909                           ;master.c: 145:     INTCONbits.PEIE =1;
  1910  02EA  170B               	bsf	11,6	;volatile
  1911  02EB                     l1324:
  1912                           
  1913                           ;master.c: 146:     I2C_Master_Init(100000);
  1914  02EB  3000               	movlw	0
  1915  02EC  1283               	bcf	3,5	;RP0=0, select bank0
  1916  02ED  1303               	bcf	3,6	;RP1=0, select bank0
  1917  02EE  00B0               	movwf	I2C_Master_Init@c+3
  1918  02EF  3001               	movlw	1
  1919  02F0  00AF               	movwf	I2C_Master_Init@c+2
  1920  02F1  3086               	movlw	134
  1921  02F2  00AE               	movwf	I2C_Master_Init@c+1
  1922  02F3  30A0               	movlw	160
  1923  02F4  00AD               	movwf	I2C_Master_Init@c
  1924  02F5  120A  118A  2329  120A  118A  	fcall	_I2C_Master_Init
  1925  02FA                     l100:
  1926  02FA  0008               	return
  1927  02FB                     __end_of_initSETUP:
  1928                           
  1929                           	psect	text5
  1930  0329                     __ptext5:	
  1931 ;; *************** function _I2C_Master_Init *****************
  1932 ;; Defined at:
  1933 ;;		line 16 in file "I2C.c"
  1934 ;; Parameters:    Size  Location     Type
  1935 ;;  c               4    0[BANK0 ] const unsigned long 
  1936 ;; Auto vars:     Size  Location     Type
  1937 ;;		None
  1938 ;; Return value:  Size  Location     Type
  1939 ;;                  1    wreg      void 
  1940 ;; Registers used:
  1941 ;;		wreg, status,2, status,0, pclath, cstack
  1942 ;; Tracked objects:
  1943 ;;		On entry : 0/0
  1944 ;;		On exit  : 0/0
  1945 ;;		Unchanged: 0/0
  1946 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1947 ;;      Params:         0       4       0       0       0
  1948 ;;      Locals:         0       0       0       0       0
  1949 ;;      Temps:          0       4       0       0       0
  1950 ;;      Totals:         0       8       0       0       0
  1951 ;;Total ram usage:        8 bytes
  1952 ;; Hardware stack levels used: 1
  1953 ;; Hardware stack levels required when called: 1
  1954 ;; This function calls:
  1955 ;;		___lldiv
  1956 ;; This function is called by:
  1957 ;;		_initSETUP
  1958 ;; This function uses a non-reentrant model
  1959 ;;
  1960                           
  1961                           
  1962                           ;psect for function _I2C_Master_Init
  1963  0329                     _I2C_Master_Init:
  1964  0329                     l1244:	
  1965                           ;incstack = 0
  1966                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  1967                           
  1968                           
  1969                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  1970  0329  3028               	movlw	40
  1971  032A  1283               	bcf	3,5	;RP0=0, select bank0
  1972  032B  1303               	bcf	3,6	;RP1=0, select bank0
  1973  032C  0094               	movwf	20	;volatile
  1974  032D                     l1246:
  1975                           
  1976                           ;I2C.c: 19:     SSPCON2 = 0;
  1977  032D  1683               	bsf	3,5	;RP0=1, select bank1
  1978  032E  1303               	bcf	3,6	;RP1=0, select bank1
  1979  032F  0191               	clrf	17	;volatile
  1980  0330                     l1248:
  1981                           
  1982                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  1983  0330  1283               	bcf	3,5	;RP0=0, select bank0
  1984  0331  1303               	bcf	3,6	;RP1=0, select bank0
  1985  0332  082D               	movf	I2C_Master_Init@c,w
  1986  0333  00B1               	movwf	??_I2C_Master_Init
  1987  0334  082E               	movf	I2C_Master_Init@c+1,w
  1988  0335  00B2               	movwf	??_I2C_Master_Init+1
  1989  0336  082F               	movf	I2C_Master_Init@c+2,w
  1990  0337  00B3               	movwf	??_I2C_Master_Init+2
  1991  0338  0830               	movf	I2C_Master_Init@c+3,w
  1992  0339  00B4               	movwf	??_I2C_Master_Init+3
  1993  033A  3002               	movlw	2
  1994  033B                     u585:
  1995  033B  1003               	clrc
  1996  033C  0DB1               	rlf	??_I2C_Master_Init,f
  1997  033D  0DB2               	rlf	??_I2C_Master_Init+1,f
  1998  033E  0DB3               	rlf	??_I2C_Master_Init+2,f
  1999  033F  0DB4               	rlf	??_I2C_Master_Init+3,f
  2000  0340                     u580:
  2001  0340  3EFF               	addlw	-1
  2002  0341  1D03               	skipz
  2003  0342  2B3B               	goto	u585
  2004  0343  0834               	movf	??_I2C_Master_Init+3,w
  2005  0344  00F3               	movwf	___lldiv@divisor+3
  2006  0345  0833               	movf	??_I2C_Master_Init+2,w
  2007  0346  00F2               	movwf	___lldiv@divisor+2
  2008  0347  0832               	movf	??_I2C_Master_Init+1,w
  2009  0348  00F1               	movwf	___lldiv@divisor+1
  2010  0349  0831               	movf	??_I2C_Master_Init,w
  2011  034A  00F0               	movwf	___lldiv@divisor
  2012  034B  3000               	movlw	0
  2013  034C  00F7               	movwf	___lldiv@dividend+3
  2014  034D  307A               	movlw	122
  2015  034E  00F6               	movwf	___lldiv@dividend+2
  2016  034F  3012               	movlw	18
  2017  0350  00F5               	movwf	___lldiv@dividend+1
  2018  0351  3000               	movlw	0
  2019  0352  00F4               	movwf	___lldiv@dividend
  2020  0353  120A  118A  2499  120A  118A  	fcall	___lldiv
  2021  0358  0870               	movf	?___lldiv,w
  2022  0359  3EFF               	addlw	255
  2023  035A  1683               	bsf	3,5	;RP0=1, select bank1
  2024  035B  1303               	bcf	3,6	;RP1=0, select bank1
  2025  035C  0093               	movwf	19	;volatile
  2026  035D                     l1250:
  2027                           
  2028                           ;I2C.c: 21:     SSPSTAT = 0;
  2029  035D  0194               	clrf	20	;volatile
  2030  035E                     l1252:
  2031                           
  2032                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  2033  035E  1587               	bsf	7,3	;volatile
  2034  035F                     l1254:
  2035                           
  2036                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  2037  035F  1607               	bsf	7,4	;volatile
  2038  0360                     l129:
  2039  0360  0008               	return
  2040  0361                     __end_of_I2C_Master_Init:
  2041                           
  2042                           	psect	text6
  2043  0499                     __ptext6:	
  2044 ;; *************** function ___lldiv *****************
  2045 ;; Defined at:
  2046 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
  2047 ;; Parameters:    Size  Location     Type
  2048 ;;  divisor         4    0[COMMON] unsigned long 
  2049 ;;  dividend        4    4[COMMON] unsigned long 
  2050 ;; Auto vars:     Size  Location     Type
  2051 ;;  quotient        4    9[COMMON] unsigned long 
  2052 ;;  counter         1   13[COMMON] unsigned char 
  2053 ;; Return value:  Size  Location     Type
  2054 ;;                  4    0[COMMON] unsigned long 
  2055 ;; Registers used:
  2056 ;;		wreg, status,2, status,0
  2057 ;; Tracked objects:
  2058 ;;		On entry : 0/0
  2059 ;;		On exit  : 0/0
  2060 ;;		Unchanged: 0/0
  2061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2062 ;;      Params:         8       0       0       0       0
  2063 ;;      Locals:         5       0       0       0       0
  2064 ;;      Temps:          1       0       0       0       0
  2065 ;;      Totals:        14       0       0       0       0
  2066 ;;Total ram usage:       14 bytes
  2067 ;; Hardware stack levels used: 1
  2068 ;; This function calls:
  2069 ;;		Nothing
  2070 ;; This function is called by:
  2071 ;;		_I2C_Master_Init
  2072 ;; This function uses a non-reentrant model
  2073 ;;
  2074                           
  2075                           
  2076                           ;psect for function ___lldiv
  2077  0499                     ___lldiv:
  2078  0499                     l1208:	
  2079                           ;incstack = 0
  2080                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2081                           
  2082  0499  3000               	movlw	0
  2083  049A  00FC               	movwf	___lldiv@quotient+3
  2084  049B  3000               	movlw	0
  2085  049C  00FB               	movwf	___lldiv@quotient+2
  2086  049D  3000               	movlw	0
  2087  049E  00FA               	movwf	___lldiv@quotient+1
  2088  049F  3000               	movlw	0
  2089  04A0  00F9               	movwf	___lldiv@quotient
  2090  04A1  0873               	movf	___lldiv@divisor+3,w
  2091  04A2  0472               	iorwf	___lldiv@divisor+2,w
  2092  04A3  0471               	iorwf	___lldiv@divisor+1,w
  2093  04A4  0470               	iorwf	___lldiv@divisor,w
  2094  04A5  1903               	skipnz
  2095  04A6  2CA8               	goto	u511
  2096  04A7  2CA9               	goto	u510
  2097  04A8                     u511:
  2098  04A8  2CF6               	goto	l1228
  2099  04A9                     u510:
  2100  04A9                     l1210:
  2101  04A9  01FD               	clrf	___lldiv@counter
  2102  04AA  0AFD               	incf	___lldiv@counter,f
  2103  04AB  2CB9               	goto	l1214
  2104  04AC                     l1212:
  2105  04AC  3001               	movlw	1
  2106  04AD  00F8               	movwf	??___lldiv
  2107  04AE                     u525:
  2108  04AE  1003               	clrc
  2109  04AF  0DF0               	rlf	___lldiv@divisor,f
  2110  04B0  0DF1               	rlf	___lldiv@divisor+1,f
  2111  04B1  0DF2               	rlf	___lldiv@divisor+2,f
  2112  04B2  0DF3               	rlf	___lldiv@divisor+3,f
  2113  04B3  0BF8               	decfsz	??___lldiv,f
  2114  04B4  2CAE               	goto	u525
  2115  04B5  3001               	movlw	1
  2116  04B6  00F8               	movwf	??___lldiv
  2117  04B7  0878               	movf	??___lldiv,w
  2118  04B8  07FD               	addwf	___lldiv@counter,f
  2119  04B9                     l1214:
  2120  04B9  1FF3               	btfss	___lldiv@divisor+3,7
  2121  04BA  2CBC               	goto	u531
  2122  04BB  2CBD               	goto	u530
  2123  04BC                     u531:
  2124  04BC  2CAC               	goto	l1212
  2125  04BD                     u530:
  2126  04BD                     l1216:
  2127  04BD  3001               	movlw	1
  2128  04BE  00F8               	movwf	??___lldiv
  2129  04BF                     u545:
  2130  04BF  1003               	clrc
  2131  04C0  0DF9               	rlf	___lldiv@quotient,f
  2132  04C1  0DFA               	rlf	___lldiv@quotient+1,f
  2133  04C2  0DFB               	rlf	___lldiv@quotient+2,f
  2134  04C3  0DFC               	rlf	___lldiv@quotient+3,f
  2135  04C4  0BF8               	decfsz	??___lldiv,f
  2136  04C5  2CBF               	goto	u545
  2137  04C6                     l1218:
  2138  04C6  0873               	movf	___lldiv@divisor+3,w
  2139  04C7  0277               	subwf	___lldiv@dividend+3,w
  2140  04C8  1D03               	skipz
  2141  04C9  2CD4               	goto	u555
  2142  04CA  0872               	movf	___lldiv@divisor+2,w
  2143  04CB  0276               	subwf	___lldiv@dividend+2,w
  2144  04CC  1D03               	skipz
  2145  04CD  2CD4               	goto	u555
  2146  04CE  0871               	movf	___lldiv@divisor+1,w
  2147  04CF  0275               	subwf	___lldiv@dividend+1,w
  2148  04D0  1D03               	skipz
  2149  04D1  2CD4               	goto	u555
  2150  04D2  0870               	movf	___lldiv@divisor,w
  2151  04D3  0274               	subwf	___lldiv@dividend,w
  2152  04D4                     u555:
  2153  04D4  1C03               	skipc
  2154  04D5  2CD7               	goto	u551
  2155  04D6  2CD8               	goto	u550
  2156  04D7                     u551:
  2157  04D7  2CE7               	goto	l1224
  2158  04D8                     u550:
  2159  04D8                     l1220:
  2160  04D8  0870               	movf	___lldiv@divisor,w
  2161  04D9  02F4               	subwf	___lldiv@dividend,f
  2162  04DA  0871               	movf	___lldiv@divisor+1,w
  2163  04DB  1C03               	skipc
  2164  04DC  0F71               	incfsz	___lldiv@divisor+1,w
  2165  04DD  02F5               	subwf	___lldiv@dividend+1,f
  2166  04DE  0872               	movf	___lldiv@divisor+2,w
  2167  04DF  1C03               	skipc
  2168  04E0  0F72               	incfsz	___lldiv@divisor+2,w
  2169  04E1  02F6               	subwf	___lldiv@dividend+2,f
  2170  04E2  0873               	movf	___lldiv@divisor+3,w
  2171  04E3  1C03               	skipc
  2172  04E4  0F73               	incfsz	___lldiv@divisor+3,w
  2173  04E5  02F7               	subwf	___lldiv@dividend+3,f
  2174  04E6                     l1222:
  2175  04E6  1479               	bsf	___lldiv@quotient,0
  2176  04E7                     l1224:
  2177  04E7  3001               	movlw	1
  2178  04E8                     u565:
  2179  04E8  1003               	clrc
  2180  04E9  0CF3               	rrf	___lldiv@divisor+3,f
  2181  04EA  0CF2               	rrf	___lldiv@divisor+2,f
  2182  04EB  0CF1               	rrf	___lldiv@divisor+1,f
  2183  04EC  0CF0               	rrf	___lldiv@divisor,f
  2184  04ED  3EFF               	addlw	-1
  2185  04EE  1D03               	skipz
  2186  04EF  2CE8               	goto	u565
  2187  04F0                     l1226:
  2188  04F0  3001               	movlw	1
  2189  04F1  02FD               	subwf	___lldiv@counter,f
  2190  04F2  1D03               	btfss	3,2
  2191  04F3  2CF5               	goto	u571
  2192  04F4  2CF6               	goto	u570
  2193  04F5                     u571:
  2194  04F5  2CBD               	goto	l1216
  2195  04F6                     u570:
  2196  04F6                     l1228:
  2197  04F6  087C               	movf	___lldiv@quotient+3,w
  2198  04F7  00F3               	movwf	?___lldiv+3
  2199  04F8  087B               	movf	___lldiv@quotient+2,w
  2200  04F9  00F2               	movwf	?___lldiv+2
  2201  04FA  087A               	movf	___lldiv@quotient+1,w
  2202  04FB  00F1               	movwf	?___lldiv+1
  2203  04FC  0879               	movf	___lldiv@quotient,w
  2204  04FD  00F0               	movwf	?___lldiv
  2205  04FE                     l318:
  2206  04FE  0008               	return
  2207  04FF                     __end_of___lldiv:
  2208                           
  2209                           	psect	text7
  2210  043E                     __ptext7:	
  2211 ;; *************** function ___awmod *****************
  2212 ;; Defined at:
  2213 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  2214 ;; Parameters:    Size  Location     Type
  2215 ;;  divisor         2    9[COMMON] int 
  2216 ;;  dividend        2   11[COMMON] int 
  2217 ;; Auto vars:     Size  Location     Type
  2218 ;;  sign            1    1[BANK0 ] unsigned char 
  2219 ;;  counter         1    0[BANK0 ] unsigned char 
  2220 ;; Return value:  Size  Location     Type
  2221 ;;                  2    9[COMMON] int 
  2222 ;; Registers used:
  2223 ;;		wreg, status,2, status,0
  2224 ;; Tracked objects:
  2225 ;;		On entry : 0/0
  2226 ;;		On exit  : 0/0
  2227 ;;		Unchanged: 0/0
  2228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2229 ;;      Params:         4       0       0       0       0
  2230 ;;      Locals:         0       2       0       0       0
  2231 ;;      Temps:          1       0       0       0       0
  2232 ;;      Totals:         5       2       0       0       0
  2233 ;;Total ram usage:        7 bytes
  2234 ;; Hardware stack levels used: 1
  2235 ;; This function calls:
  2236 ;;		Nothing
  2237 ;; This function is called by:
  2238 ;;		_main
  2239 ;; This function uses a non-reentrant model
  2240 ;;
  2241                           
  2242                           
  2243                           ;psect for function ___awmod
  2244  043E                     ___awmod:
  2245  043E                     l1456:	
  2246                           ;incstack = 0
  2247                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2248                           
  2249  043E  1283               	bcf	3,5	;RP0=0, select bank0
  2250  043F  1303               	bcf	3,6	;RP1=0, select bank0
  2251  0440  01AE               	clrf	___awmod@sign
  2252  0441                     l1458:
  2253  0441  1FFC               	btfss	___awmod@dividend+1,7
  2254  0442  2C44               	goto	u881
  2255  0443  2C45               	goto	u880
  2256  0444                     u881:
  2257  0444  2C4C               	goto	l1464
  2258  0445                     u880:
  2259  0445                     l1460:
  2260  0445  09FB               	comf	___awmod@dividend,f
  2261  0446  09FC               	comf	___awmod@dividend+1,f
  2262  0447  0AFB               	incf	___awmod@dividend,f
  2263  0448  1903               	skipnz
  2264  0449  0AFC               	incf	___awmod@dividend+1,f
  2265  044A                     l1462:
  2266  044A  01AE               	clrf	___awmod@sign
  2267  044B  0AAE               	incf	___awmod@sign,f
  2268  044C                     l1464:
  2269  044C  1FFA               	btfss	___awmod@divisor+1,7
  2270  044D  2C4F               	goto	u891
  2271  044E  2C50               	goto	u890
  2272  044F                     u891:
  2273  044F  2C55               	goto	l1468
  2274  0450                     u890:
  2275  0450                     l1466:
  2276  0450  09F9               	comf	___awmod@divisor,f
  2277  0451  09FA               	comf	___awmod@divisor+1,f
  2278  0452  0AF9               	incf	___awmod@divisor,f
  2279  0453  1903               	skipnz
  2280  0454  0AFA               	incf	___awmod@divisor+1,f
  2281  0455                     l1468:
  2282  0455  0879               	movf	___awmod@divisor,w
  2283  0456  047A               	iorwf	___awmod@divisor+1,w
  2284  0457  1903               	btfsc	3,2
  2285  0458  2C5A               	goto	u901
  2286  0459  2C5B               	goto	u900
  2287  045A                     u901:
  2288  045A  2C8A               	goto	l1486
  2289  045B                     u900:
  2290  045B                     l1470:
  2291  045B  01AD               	clrf	___awmod@counter
  2292  045C  0AAD               	incf	___awmod@counter,f
  2293  045D  2C69               	goto	l1476
  2294  045E                     l1472:
  2295  045E  3001               	movlw	1
  2296  045F                     u915:
  2297  045F  1003               	clrc
  2298  0460  0DF9               	rlf	___awmod@divisor,f
  2299  0461  0DFA               	rlf	___awmod@divisor+1,f
  2300  0462  3EFF               	addlw	-1
  2301  0463  1D03               	skipz
  2302  0464  2C5F               	goto	u915
  2303  0465                     l1474:
  2304  0465  3001               	movlw	1
  2305  0466  00FD               	movwf	??___awmod
  2306  0467  087D               	movf	??___awmod,w
  2307  0468  07AD               	addwf	___awmod@counter,f
  2308  0469                     l1476:
  2309  0469  1FFA               	btfss	___awmod@divisor+1,7
  2310  046A  2C6C               	goto	u921
  2311  046B  2C6D               	goto	u920
  2312  046C                     u921:
  2313  046C  2C5E               	goto	l1472
  2314  046D                     u920:
  2315  046D                     l1478:
  2316  046D  087A               	movf	___awmod@divisor+1,w
  2317  046E  027C               	subwf	___awmod@dividend+1,w
  2318  046F  1D03               	skipz
  2319  0470  2C73               	goto	u935
  2320  0471  0879               	movf	___awmod@divisor,w
  2321  0472  027B               	subwf	___awmod@dividend,w
  2322  0473                     u935:
  2323  0473  1C03               	skipc
  2324  0474  2C76               	goto	u931
  2325  0475  2C77               	goto	u930
  2326  0476                     u931:
  2327  0476  2C7D               	goto	l1482
  2328  0477                     u930:
  2329  0477                     l1480:
  2330  0477  0879               	movf	___awmod@divisor,w
  2331  0478  02FB               	subwf	___awmod@dividend,f
  2332  0479  087A               	movf	___awmod@divisor+1,w
  2333  047A  1C03               	skipc
  2334  047B  03FC               	decf	___awmod@dividend+1,f
  2335  047C  02FC               	subwf	___awmod@dividend+1,f
  2336  047D                     l1482:
  2337  047D  3001               	movlw	1
  2338  047E                     u945:
  2339  047E  1003               	clrc
  2340  047F  0CFA               	rrf	___awmod@divisor+1,f
  2341  0480  0CF9               	rrf	___awmod@divisor,f
  2342  0481  3EFF               	addlw	-1
  2343  0482  1D03               	skipz
  2344  0483  2C7E               	goto	u945
  2345  0484                     l1484:
  2346  0484  3001               	movlw	1
  2347  0485  02AD               	subwf	___awmod@counter,f
  2348  0486  1D03               	btfss	3,2
  2349  0487  2C89               	goto	u951
  2350  0488  2C8A               	goto	u950
  2351  0489                     u951:
  2352  0489  2C6D               	goto	l1478
  2353  048A                     u950:
  2354  048A                     l1486:
  2355  048A  082E               	movf	___awmod@sign,w
  2356  048B  1903               	btfsc	3,2
  2357  048C  2C8E               	goto	u961
  2358  048D  2C8F               	goto	u960
  2359  048E                     u961:
  2360  048E  2C94               	goto	l1490
  2361  048F                     u960:
  2362  048F                     l1488:
  2363  048F  09FB               	comf	___awmod@dividend,f
  2364  0490  09FC               	comf	___awmod@dividend+1,f
  2365  0491  0AFB               	incf	___awmod@dividend,f
  2366  0492  1903               	skipnz
  2367  0493  0AFC               	incf	___awmod@dividend+1,f
  2368  0494                     l1490:
  2369  0494  087C               	movf	___awmod@dividend+1,w
  2370  0495  00FA               	movwf	?___awmod+1
  2371  0496  087B               	movf	___awmod@dividend,w
  2372  0497  00F9               	movwf	?___awmod
  2373  0498                     l448:
  2374  0498  0008               	return
  2375  0499                     __end_of___awmod:
  2376                           
  2377                           	psect	text8
  2378  04FF                     __ptext8:	
  2379 ;; *************** function ___awdiv *****************
  2380 ;; Defined at:
  2381 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  2382 ;; Parameters:    Size  Location     Type
  2383 ;;  divisor         2    0[COMMON] int 
  2384 ;;  dividend        2    2[COMMON] int 
  2385 ;; Auto vars:     Size  Location     Type
  2386 ;;  quotient        2    7[COMMON] int 
  2387 ;;  sign            1    6[COMMON] unsigned char 
  2388 ;;  counter         1    5[COMMON] unsigned char 
  2389 ;; Return value:  Size  Location     Type
  2390 ;;                  2    0[COMMON] int 
  2391 ;; Registers used:
  2392 ;;		wreg, status,2, status,0
  2393 ;; Tracked objects:
  2394 ;;		On entry : 0/0
  2395 ;;		On exit  : 0/0
  2396 ;;		Unchanged: 0/0
  2397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2398 ;;      Params:         4       0       0       0       0
  2399 ;;      Locals:         4       0       0       0       0
  2400 ;;      Temps:          1       0       0       0       0
  2401 ;;      Totals:         9       0       0       0       0
  2402 ;;Total ram usage:        9 bytes
  2403 ;; Hardware stack levels used: 1
  2404 ;; This function calls:
  2405 ;;		Nothing
  2406 ;; This function is called by:
  2407 ;;		_main
  2408 ;; This function uses a non-reentrant model
  2409 ;;
  2410                           
  2411                           
  2412                           ;psect for function ___awdiv
  2413  04FF                     ___awdiv:
  2414  04FF                     l1412:	
  2415                           ;incstack = 0
  2416                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2417                           
  2418  04FF  01F6               	clrf	___awdiv@sign
  2419  0500                     l1414:
  2420  0500  1FF1               	btfss	___awdiv@divisor+1,7
  2421  0501  2D03               	goto	u781
  2422  0502  2D04               	goto	u780
  2423  0503                     u781:
  2424  0503  2D0B               	goto	l1420
  2425  0504                     u780:
  2426  0504                     l1416:
  2427  0504  09F0               	comf	___awdiv@divisor,f
  2428  0505  09F1               	comf	___awdiv@divisor+1,f
  2429  0506  0AF0               	incf	___awdiv@divisor,f
  2430  0507  1903               	skipnz
  2431  0508  0AF1               	incf	___awdiv@divisor+1,f
  2432  0509                     l1418:
  2433  0509  01F6               	clrf	___awdiv@sign
  2434  050A  0AF6               	incf	___awdiv@sign,f
  2435  050B                     l1420:
  2436  050B  1FF3               	btfss	___awdiv@dividend+1,7
  2437  050C  2D0E               	goto	u791
  2438  050D  2D0F               	goto	u790
  2439  050E                     u791:
  2440  050E  2D18               	goto	l1426
  2441  050F                     u790:
  2442  050F                     l1422:
  2443  050F  09F2               	comf	___awdiv@dividend,f
  2444  0510  09F3               	comf	___awdiv@dividend+1,f
  2445  0511  0AF2               	incf	___awdiv@dividend,f
  2446  0512  1903               	skipnz
  2447  0513  0AF3               	incf	___awdiv@dividend+1,f
  2448  0514                     l1424:
  2449  0514  3001               	movlw	1
  2450  0515  00F4               	movwf	??___awdiv
  2451  0516  0874               	movf	??___awdiv,w
  2452  0517  06F6               	xorwf	___awdiv@sign,f
  2453  0518                     l1426:
  2454  0518  01F7               	clrf	___awdiv@quotient
  2455  0519  01F8               	clrf	___awdiv@quotient+1
  2456  051A                     l1428:
  2457  051A  0870               	movf	___awdiv@divisor,w
  2458  051B  0471               	iorwf	___awdiv@divisor+1,w
  2459  051C  1903               	btfsc	3,2
  2460  051D  2D1F               	goto	u801
  2461  051E  2D20               	goto	u800
  2462  051F                     u801:
  2463  051F  2D57               	goto	l1448
  2464  0520                     u800:
  2465  0520                     l1430:
  2466  0520  01F5               	clrf	___awdiv@counter
  2467  0521  0AF5               	incf	___awdiv@counter,f
  2468  0522  2D2E               	goto	l1436
  2469  0523                     l1432:
  2470  0523  3001               	movlw	1
  2471  0524                     u815:
  2472  0524  1003               	clrc
  2473  0525  0DF0               	rlf	___awdiv@divisor,f
  2474  0526  0DF1               	rlf	___awdiv@divisor+1,f
  2475  0527  3EFF               	addlw	-1
  2476  0528  1D03               	skipz
  2477  0529  2D24               	goto	u815
  2478  052A                     l1434:
  2479  052A  3001               	movlw	1
  2480  052B  00F4               	movwf	??___awdiv
  2481  052C  0874               	movf	??___awdiv,w
  2482  052D  07F5               	addwf	___awdiv@counter,f
  2483  052E                     l1436:
  2484  052E  1FF1               	btfss	___awdiv@divisor+1,7
  2485  052F  2D31               	goto	u821
  2486  0530  2D32               	goto	u820
  2487  0531                     u821:
  2488  0531  2D23               	goto	l1432
  2489  0532                     u820:
  2490  0532                     l1438:
  2491  0532  3001               	movlw	1
  2492  0533                     u835:
  2493  0533  1003               	clrc
  2494  0534  0DF7               	rlf	___awdiv@quotient,f
  2495  0535  0DF8               	rlf	___awdiv@quotient+1,f
  2496  0536  3EFF               	addlw	-1
  2497  0537  1D03               	skipz
  2498  0538  2D33               	goto	u835
  2499  0539  0871               	movf	___awdiv@divisor+1,w
  2500  053A  0273               	subwf	___awdiv@dividend+1,w
  2501  053B  1D03               	skipz
  2502  053C  2D3F               	goto	u845
  2503  053D  0870               	movf	___awdiv@divisor,w
  2504  053E  0272               	subwf	___awdiv@dividend,w
  2505  053F                     u845:
  2506  053F  1C03               	skipc
  2507  0540  2D42               	goto	u841
  2508  0541  2D43               	goto	u840
  2509  0542                     u841:
  2510  0542  2D4A               	goto	l1444
  2511  0543                     u840:
  2512  0543                     l1440:
  2513  0543  0870               	movf	___awdiv@divisor,w
  2514  0544  02F2               	subwf	___awdiv@dividend,f
  2515  0545  0871               	movf	___awdiv@divisor+1,w
  2516  0546  1C03               	skipc
  2517  0547  03F3               	decf	___awdiv@dividend+1,f
  2518  0548  02F3               	subwf	___awdiv@dividend+1,f
  2519  0549                     l1442:
  2520  0549  1477               	bsf	___awdiv@quotient,0
  2521  054A                     l1444:
  2522  054A  3001               	movlw	1
  2523  054B                     u855:
  2524  054B  1003               	clrc
  2525  054C  0CF1               	rrf	___awdiv@divisor+1,f
  2526  054D  0CF0               	rrf	___awdiv@divisor,f
  2527  054E  3EFF               	addlw	-1
  2528  054F  1D03               	skipz
  2529  0550  2D4B               	goto	u855
  2530  0551                     l1446:
  2531  0551  3001               	movlw	1
  2532  0552  02F5               	subwf	___awdiv@counter,f
  2533  0553  1D03               	btfss	3,2
  2534  0554  2D56               	goto	u861
  2535  0555  2D57               	goto	u860
  2536  0556                     u861:
  2537  0556  2D32               	goto	l1438
  2538  0557                     u860:
  2539  0557                     l1448:
  2540  0557  0876               	movf	___awdiv@sign,w
  2541  0558  1903               	btfsc	3,2
  2542  0559  2D5B               	goto	u871
  2543  055A  2D5C               	goto	u870
  2544  055B                     u871:
  2545  055B  2D61               	goto	l1452
  2546  055C                     u870:
  2547  055C                     l1450:
  2548  055C  09F7               	comf	___awdiv@quotient,f
  2549  055D  09F8               	comf	___awdiv@quotient+1,f
  2550  055E  0AF7               	incf	___awdiv@quotient,f
  2551  055F  1903               	skipnz
  2552  0560  0AF8               	incf	___awdiv@quotient+1,f
  2553  0561                     l1452:
  2554  0561  0878               	movf	___awdiv@quotient+1,w
  2555  0562  00F1               	movwf	?___awdiv+1
  2556  0563  0877               	movf	___awdiv@quotient,w
  2557  0564  00F0               	movwf	?___awdiv
  2558  0565                     l435:
  2559  0565  0008               	return
  2560  0566                     __end_of___awdiv:
  2561                           
  2562                           	psect	text9
  2563  0287                     __ptext9:	
  2564 ;; *************** function _Lcd_Write_String *****************
  2565 ;; Defined at:
  2566 ;;		line 77 in file "LCD.c"
  2567 ;; Parameters:    Size  Location     Type
  2568 ;;  a               1    wreg     PTR unsigned char 
  2569 ;;		 -> STR_7(16), STR_6(11), STR_5(12), STR_4(2), 
  2570 ;;		 -> STR_3(4), STR_2(5), STR_1(16), 
  2571 ;; Auto vars:     Size  Location     Type
  2572 ;;  a               1    7[COMMON] PTR unsigned char 
  2573 ;;		 -> STR_7(16), STR_6(11), STR_5(12), STR_4(2), 
  2574 ;;		 -> STR_3(4), STR_2(5), STR_1(16), 
  2575 ;;  i               2    5[COMMON] int 
  2576 ;; Return value:  Size  Location     Type
  2577 ;;                  1    wreg      void 
  2578 ;; Registers used:
  2579 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2580 ;; Tracked objects:
  2581 ;;		On entry : 0/0
  2582 ;;		On exit  : 0/0
  2583 ;;		Unchanged: 0/0
  2584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2585 ;;      Params:         0       0       0       0       0
  2586 ;;      Locals:         3       0       0       0       0
  2587 ;;      Temps:          0       0       0       0       0
  2588 ;;      Totals:         3       0       0       0       0
  2589 ;;Total ram usage:        3 bytes
  2590 ;; Hardware stack levels used: 1
  2591 ;; Hardware stack levels required when called: 2
  2592 ;; This function calls:
  2593 ;;		_Lcd_Write_Char
  2594 ;; This function is called by:
  2595 ;;		_main
  2596 ;; This function uses a non-reentrant model
  2597 ;;
  2598                           
  2599                           
  2600                           ;psect for function _Lcd_Write_String
  2601  0287                     _Lcd_Write_String:
  2602                           
  2603                           ;incstack = 0
  2604                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2605                           ;Lcd_Write_String@a stored from wreg
  2606  0287  00F7               	movwf	Lcd_Write_String@a
  2607  0288                     l1360:
  2608                           
  2609                           ;LCD.c: 78:     int i;;LCD.c: 79:     for (i = 0; a[i] != '\0'; i++)
  2610  0288  01F5               	clrf	Lcd_Write_String@i
  2611  0289  01F6               	clrf	Lcd_Write_String@i+1
  2612  028A  2A9E               	goto	l1366
  2613  028B                     l1362:
  2614                           
  2615                           ;LCD.c: 80:         Lcd_Write_Char(a[i]);
  2616  028B  0875               	movf	Lcd_Write_String@i,w
  2617  028C  0777               	addwf	Lcd_Write_String@a,w
  2618  028D  0084               	movwf	4
  2619  028E  120A  118A  2003  120A  118A  	fcall	stringdir
  2620  0293  120A  118A  2269  120A  118A  	fcall	_Lcd_Write_Char
  2621  0298                     l1364:
  2622  0298  3001               	movlw	1
  2623  0299  07F5               	addwf	Lcd_Write_String@i,f
  2624  029A  1803               	skipnc
  2625  029B  0AF6               	incf	Lcd_Write_String@i+1,f
  2626  029C  3000               	movlw	0
  2627  029D  07F6               	addwf	Lcd_Write_String@i+1,f
  2628  029E                     l1366:
  2629  029E  0875               	movf	Lcd_Write_String@i,w
  2630  029F  0777               	addwf	Lcd_Write_String@a,w
  2631  02A0  0084               	movwf	4
  2632  02A1  120A  118A  2003  120A  118A  	fcall	stringdir
  2633  02A6  3A00               	xorlw	0
  2634  02A7  1D03               	skipz
  2635  02A8  2AAA               	goto	u761
  2636  02A9  2AAB               	goto	u760
  2637  02AA                     u761:
  2638  02AA  2A8B               	goto	l1362
  2639  02AB                     u760:
  2640  02AB                     l190:
  2641  02AB  0008               	return
  2642  02AC                     __end_of_Lcd_Write_String:
  2643                           
  2644                           	psect	text10
  2645  0269                     __ptext10:	
  2646 ;; *************** function _Lcd_Write_Char *****************
  2647 ;; Defined at:
  2648 ;;		line 65 in file "LCD.c"
  2649 ;; Parameters:    Size  Location     Type
  2650 ;;  a               1    wreg     unsigned char 
  2651 ;; Auto vars:     Size  Location     Type
  2652 ;;  a               1    2[COMMON] unsigned char 
  2653 ;;  y               1    4[COMMON] unsigned char 
  2654 ;;  temp            1    3[COMMON] unsigned char 
  2655 ;; Return value:  Size  Location     Type
  2656 ;;                  1    wreg      void 
  2657 ;; Registers used:
  2658 ;;		wreg, status,2, status,0, pclath, cstack
  2659 ;; Tracked objects:
  2660 ;;		On entry : 0/0
  2661 ;;		On exit  : 0/0
  2662 ;;		Unchanged: 0/0
  2663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2664 ;;      Params:         0       0       0       0       0
  2665 ;;      Locals:         3       0       0       0       0
  2666 ;;      Temps:          1       0       0       0       0
  2667 ;;      Totals:         4       0       0       0       0
  2668 ;;Total ram usage:        4 bytes
  2669 ;; Hardware stack levels used: 1
  2670 ;; Hardware stack levels required when called: 1
  2671 ;; This function calls:
  2672 ;;		_Lcd_Port
  2673 ;; This function is called by:
  2674 ;;		_main
  2675 ;;		_Lcd_Write_String
  2676 ;; This function uses a non-reentrant model
  2677 ;;
  2678                           
  2679                           
  2680                           ;psect for function _Lcd_Write_Char
  2681  0269                     _Lcd_Write_Char:
  2682                           
  2683                           ;incstack = 0
  2684                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2685                           ;Lcd_Write_Char@a stored from wreg
  2686  0269  00F2               	movwf	Lcd_Write_Char@a
  2687  026A                     l1232:
  2688                           
  2689                           ;LCD.c: 66:     char temp, y;;LCD.c: 67:     temp = a;
  2690  026A  0872               	movf	Lcd_Write_Char@a,w
  2691  026B  00F1               	movwf	??_Lcd_Write_Char
  2692  026C  0871               	movf	??_Lcd_Write_Char,w
  2693  026D  00F3               	movwf	Lcd_Write_Char@temp
  2694                           
  2695                           ;LCD.c: 68:     y = temp;
  2696  026E  0873               	movf	Lcd_Write_Char@temp,w
  2697  026F  00F1               	movwf	??_Lcd_Write_Char
  2698  0270  0871               	movf	??_Lcd_Write_Char,w
  2699  0271  00F4               	movwf	Lcd_Write_Char@y
  2700  0272                     l1234:
  2701                           
  2702                           ;LCD.c: 69:     RE0 = 1;
  2703  0272  1283               	bcf	3,5	;RP0=0, select bank0
  2704  0273  1303               	bcf	3,6	;RP1=0, select bank0
  2705  0274  1409               	bsf	9,0	;volatile
  2706  0275                     l1236:
  2707                           
  2708                           ;LCD.c: 70:     Lcd_Port(y);
  2709  0275  0874               	movf	Lcd_Write_Char@y,w
  2710  0276  120A  118A  2213  120A  118A  	fcall	_Lcd_Port
  2711  027B                     l1238:
  2712                           
  2713                           ;LCD.c: 71:     RE1 = 1;
  2714  027B  1283               	bcf	3,5	;RP0=0, select bank0
  2715  027C  1303               	bcf	3,6	;RP1=0, select bank0
  2716  027D  1489               	bsf	9,1	;volatile
  2717  027E                     l1240:
  2718                           
  2719                           ;LCD.c: 72:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2720  027E  301A               	movlw	26
  2721  027F  00F1               	movwf	??_Lcd_Write_Char
  2722  0280                     u1097:
  2723  0280  0BF1               	decfsz	??_Lcd_Write_Char,f
  2724  0281  2A80               	goto	u1097
  2725  0282  0000               	nop
  2726  0283                     l1242:
  2727                           
  2728                           ;LCD.c: 73:     RE1 = 0;
  2729  0283  1283               	bcf	3,5	;RP0=0, select bank0
  2730  0284  1303               	bcf	3,6	;RP1=0, select bank0
  2731  0285  1089               	bcf	9,1	;volatile
  2732  0286                     l184:
  2733  0286  0008               	return
  2734  0287                     __end_of_Lcd_Write_Char:
  2735                           
  2736                           	psect	text11
  2737  03EC                     __ptext11:	
  2738 ;; *************** function _Lcd_Set_Cursor *****************
  2739 ;; Defined at:
  2740 ;;		line 30 in file "LCD.c"
  2741 ;; Parameters:    Size  Location     Type
  2742 ;;  a               1    wreg     unsigned char 
  2743 ;;  b               1    4[COMMON] unsigned char 
  2744 ;; Auto vars:     Size  Location     Type
  2745 ;;  a               1    7[COMMON] unsigned char 
  2746 ;;  temp            1   10[COMMON] unsigned char 
  2747 ;;  y               1    9[COMMON] unsigned char 
  2748 ;;  z               1    8[COMMON] unsigned char 
  2749 ;; Return value:  Size  Location     Type
  2750 ;;                  1    wreg      void 
  2751 ;; Registers used:
  2752 ;;		wreg, status,2, status,0, pclath, cstack
  2753 ;; Tracked objects:
  2754 ;;		On entry : 0/0
  2755 ;;		On exit  : 0/0
  2756 ;;		Unchanged: 0/0
  2757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2758 ;;      Params:         1       0       0       0       0
  2759 ;;      Locals:         4       0       0       0       0
  2760 ;;      Temps:          2       0       0       0       0
  2761 ;;      Totals:         7       0       0       0       0
  2762 ;;Total ram usage:        7 bytes
  2763 ;; Hardware stack levels used: 1
  2764 ;; Hardware stack levels required when called: 2
  2765 ;; This function calls:
  2766 ;;		_Lcd_Cmd
  2767 ;; This function is called by:
  2768 ;;		_main
  2769 ;; This function uses a non-reentrant model
  2770 ;;
  2771                           
  2772                           
  2773                           ;psect for function _Lcd_Set_Cursor
  2774  03EC                     _Lcd_Set_Cursor:
  2775                           
  2776                           ;incstack = 0
  2777                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2778                           ;Lcd_Set_Cursor@a stored from wreg
  2779  03EC  00F7               	movwf	Lcd_Set_Cursor@a
  2780  03ED                     l1340:
  2781                           
  2782                           ;LCD.c: 31:     char temp, z, y;;LCD.c: 32:     if (a == 1) {
  2783  03ED  0377               	decf	Lcd_Set_Cursor@a,w
  2784  03EE  1D03               	btfss	3,2
  2785  03EF  2BF1               	goto	u721
  2786  03F0  2BF2               	goto	u720
  2787  03F1                     u721:
  2788  03F1  2C15               	goto	l1350
  2789  03F2                     u720:
  2790  03F2                     l1342:
  2791                           
  2792                           ;LCD.c: 33:         temp = 0x80 + b - 1;
  2793  03F2  0874               	movf	Lcd_Set_Cursor@b,w
  2794  03F3  3E7F               	addlw	127
  2795  03F4  00F5               	movwf	??_Lcd_Set_Cursor
  2796  03F5  0875               	movf	??_Lcd_Set_Cursor,w
  2797  03F6  00FA               	movwf	Lcd_Set_Cursor@temp
  2798                           
  2799                           ;LCD.c: 34:         z = temp >> 4;
  2800  03F7  087A               	movf	Lcd_Set_Cursor@temp,w
  2801  03F8  00F5               	movwf	??_Lcd_Set_Cursor
  2802  03F9  3004               	movlw	4
  2803  03FA                     u735:
  2804  03FA  1003               	clrc
  2805  03FB  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2806  03FC  3EFF               	addlw	-1
  2807  03FD  1D03               	skipz
  2808  03FE  2BFA               	goto	u735
  2809  03FF  0875               	movf	??_Lcd_Set_Cursor,w
  2810  0400  00F6               	movwf	??_Lcd_Set_Cursor+1
  2811  0401  0876               	movf	??_Lcd_Set_Cursor+1,w
  2812  0402  00F8               	movwf	Lcd_Set_Cursor@z
  2813  0403                     l1344:
  2814                           
  2815                           ;LCD.c: 35:         y = temp & 0x0F;
  2816  0403  087A               	movf	Lcd_Set_Cursor@temp,w
  2817  0404  390F               	andlw	15
  2818  0405  00F5               	movwf	??_Lcd_Set_Cursor
  2819  0406  0875               	movf	??_Lcd_Set_Cursor,w
  2820  0407  00F9               	movwf	Lcd_Set_Cursor@y
  2821  0408                     l1346:
  2822                           
  2823                           ;LCD.c: 36:         Lcd_Cmd(z);
  2824  0408  0878               	movf	Lcd_Set_Cursor@z,w
  2825  0409  120A  118A  224F  120A  118A  	fcall	_Lcd_Cmd
  2826  040E                     l1348:
  2827                           
  2828                           ;LCD.c: 37:         Lcd_Cmd(y);
  2829  040E  0879               	movf	Lcd_Set_Cursor@y,w
  2830  040F  120A  118A  224F  120A  118A  	fcall	_Lcd_Cmd
  2831                           
  2832                           ;LCD.c: 38:     } else if (a == 2) {
  2833  0414  2C3D               	goto	l178
  2834  0415                     l1350:
  2835  0415  3002               	movlw	2
  2836  0416  0677               	xorwf	Lcd_Set_Cursor@a,w
  2837  0417  1D03               	btfss	3,2
  2838  0418  2C1A               	goto	u741
  2839  0419  2C1B               	goto	u740
  2840  041A                     u741:
  2841  041A  2C3D               	goto	l178
  2842  041B                     u740:
  2843  041B                     l1352:
  2844                           
  2845                           ;LCD.c: 39:         temp = 0xC0 + b - 1;
  2846  041B  0874               	movf	Lcd_Set_Cursor@b,w
  2847  041C  3EBF               	addlw	191
  2848  041D  00F5               	movwf	??_Lcd_Set_Cursor
  2849  041E  0875               	movf	??_Lcd_Set_Cursor,w
  2850  041F  00FA               	movwf	Lcd_Set_Cursor@temp
  2851                           
  2852                           ;LCD.c: 40:         z = temp >> 4;
  2853  0420  087A               	movf	Lcd_Set_Cursor@temp,w
  2854  0421  00F5               	movwf	??_Lcd_Set_Cursor
  2855  0422  3004               	movlw	4
  2856  0423                     u755:
  2857  0423  1003               	clrc
  2858  0424  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2859  0425  3EFF               	addlw	-1
  2860  0426  1D03               	skipz
  2861  0427  2C23               	goto	u755
  2862  0428  0875               	movf	??_Lcd_Set_Cursor,w
  2863  0429  00F6               	movwf	??_Lcd_Set_Cursor+1
  2864  042A  0876               	movf	??_Lcd_Set_Cursor+1,w
  2865  042B  00F8               	movwf	Lcd_Set_Cursor@z
  2866  042C                     l1354:
  2867                           
  2868                           ;LCD.c: 41:         y = temp & 0xF0;
  2869  042C  087A               	movf	Lcd_Set_Cursor@temp,w
  2870  042D  39F0               	andlw	240
  2871  042E  00F5               	movwf	??_Lcd_Set_Cursor
  2872  042F  0875               	movf	??_Lcd_Set_Cursor,w
  2873  0430  00F9               	movwf	Lcd_Set_Cursor@y
  2874  0431                     l1356:
  2875                           
  2876                           ;LCD.c: 42:         Lcd_Cmd(z);
  2877  0431  0878               	movf	Lcd_Set_Cursor@z,w
  2878  0432  120A  118A  224F  120A  118A  	fcall	_Lcd_Cmd
  2879  0437                     l1358:
  2880                           
  2881                           ;LCD.c: 43:         Lcd_Cmd(y);
  2882  0437  0879               	movf	Lcd_Set_Cursor@y,w
  2883  0438  120A  118A  224F  120A  118A  	fcall	_Lcd_Cmd
  2884  043D                     l178:
  2885  043D  0008               	return
  2886  043E                     __end_of_Lcd_Set_Cursor:
  2887                           
  2888                           	psect	text12
  2889  03A5                     __ptext12:	
  2890 ;; *************** function _Lcd_Init *****************
  2891 ;; Defined at:
  2892 ;;		line 47 in file "LCD.c"
  2893 ;; Parameters:    Size  Location     Type
  2894 ;;		None
  2895 ;; Auto vars:     Size  Location     Type
  2896 ;;		None
  2897 ;; Return value:  Size  Location     Type
  2898 ;;                  1    wreg      void 
  2899 ;; Registers used:
  2900 ;;		wreg, status,2, status,0, pclath, cstack
  2901 ;; Tracked objects:
  2902 ;;		On entry : 0/0
  2903 ;;		On exit  : 0/0
  2904 ;;		Unchanged: 0/0
  2905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2906 ;;      Params:         0       0       0       0       0
  2907 ;;      Locals:         0       0       0       0       0
  2908 ;;      Temps:          2       0       0       0       0
  2909 ;;      Totals:         2       0       0       0       0
  2910 ;;Total ram usage:        2 bytes
  2911 ;; Hardware stack levels used: 1
  2912 ;; Hardware stack levels required when called: 2
  2913 ;; This function calls:
  2914 ;;		_Lcd_Cmd
  2915 ;;		_Lcd_Port
  2916 ;; This function is called by:
  2917 ;;		_main
  2918 ;; This function uses a non-reentrant model
  2919 ;;
  2920                           
  2921                           
  2922                           ;psect for function _Lcd_Init
  2923  03A5                     _Lcd_Init:
  2924  03A5                     l1328:	
  2925                           ;incstack = 0
  2926                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2927                           
  2928                           
  2929                           ;LCD.c: 48:     Lcd_Port(0x00);
  2930  03A5  3000               	movlw	0
  2931  03A6  120A  118A  2213  120A  118A  	fcall	_Lcd_Port
  2932  03AB                     l1330:
  2933                           
  2934                           ;LCD.c: 49:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2935  03AB  3034               	movlw	52
  2936  03AC  00F5               	movwf	??_Lcd_Init+1
  2937  03AD  30F1               	movlw	241
  2938  03AE  00F4               	movwf	??_Lcd_Init
  2939  03AF                     u1107:
  2940  03AF  0BF4               	decfsz	??_Lcd_Init,f
  2941  03B0  2BAF               	goto	u1107
  2942  03B1  0BF5               	decfsz	??_Lcd_Init+1,f
  2943  03B2  2BAF               	goto	u1107
  2944  03B3  2BB4               	nop2
  2945  03B4                     l1332:
  2946                           
  2947                           ;LCD.c: 50:     Lcd_Cmd(0x30);
  2948  03B4  3030               	movlw	48
  2949  03B5  120A  118A  224F  120A  118A  	fcall	_Lcd_Cmd
  2950                           
  2951                           ;LCD.c: 51:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2952  03BA  300D               	movlw	13
  2953  03BB  00F5               	movwf	??_Lcd_Init+1
  2954  03BC  30FB               	movlw	251
  2955  03BD  00F4               	movwf	??_Lcd_Init
  2956  03BE                     u1117:
  2957  03BE  0BF4               	decfsz	??_Lcd_Init,f
  2958  03BF  2BBE               	goto	u1117
  2959  03C0  0BF5               	decfsz	??_Lcd_Init+1,f
  2960  03C1  2BBE               	goto	u1117
  2961  03C2  2BC3               	nop2
  2962  03C3                     l1334:
  2963                           
  2964                           ;LCD.c: 52:     Lcd_Cmd(0x30);
  2965  03C3  3030               	movlw	48
  2966  03C4  120A  118A  224F  120A  118A  	fcall	_Lcd_Cmd
  2967  03C9                     l1336:
  2968                           
  2969                           ;LCD.c: 53:     _delay((unsigned long)((200)*(8000000/4000000.0)));
  2970  03C9  3085               	movlw	133
  2971  03CA  00F4               	movwf	??_Lcd_Init
  2972  03CB                     u1127:
  2973  03CB  0BF4               	decfsz	??_Lcd_Init,f
  2974  03CC  2BCB               	goto	u1127
  2975                           
  2976                           ;LCD.c: 54:     Lcd_Cmd(0x30);
  2977  03CD  3030               	movlw	48
  2978  03CE  120A  118A  224F  120A  118A  	fcall	_Lcd_Cmd
  2979                           
  2980                           ;LCD.c: 56:     Lcd_Cmd(0x3C);
  2981  03D3  303C               	movlw	60
  2982  03D4  120A  118A  224F  120A  118A  	fcall	_Lcd_Cmd
  2983                           
  2984                           ;LCD.c: 58:     Lcd_Cmd(0x08);
  2985  03D9  3008               	movlw	8
  2986  03DA  120A  118A  224F  120A  118A  	fcall	_Lcd_Cmd
  2987                           
  2988                           ;LCD.c: 60:     Lcd_Cmd(0x01);
  2989  03DF  3001               	movlw	1
  2990  03E0  120A  118A  224F  120A  118A  	fcall	_Lcd_Cmd
  2991                           
  2992                           ;LCD.c: 62:     Lcd_Cmd(0x06);
  2993  03E5  3006               	movlw	6
  2994  03E6  120A  118A  224F  120A  118A  	fcall	_Lcd_Cmd
  2995  03EB                     l181:
  2996  03EB  0008               	return
  2997  03EC                     __end_of_Lcd_Init:
  2998                           
  2999                           	psect	text13
  3000  0242                     __ptext13:	
  3001 ;; *************** function _Lcd_Clear *****************
  3002 ;; Defined at:
  3003 ;;		line 25 in file "LCD.c"
  3004 ;; Parameters:    Size  Location     Type
  3005 ;;		None
  3006 ;; Auto vars:     Size  Location     Type
  3007 ;;		None
  3008 ;; Return value:  Size  Location     Type
  3009 ;;                  1    wreg      void 
  3010 ;; Registers used:
  3011 ;;		wreg, status,2, status,0, pclath, cstack
  3012 ;; Tracked objects:
  3013 ;;		On entry : 0/0
  3014 ;;		On exit  : 0/0
  3015 ;;		Unchanged: 0/0
  3016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3017 ;;      Params:         0       0       0       0       0
  3018 ;;      Locals:         0       0       0       0       0
  3019 ;;      Temps:          0       0       0       0       0
  3020 ;;      Totals:         0       0       0       0       0
  3021 ;;Total ram usage:        0 bytes
  3022 ;; Hardware stack levels used: 1
  3023 ;; Hardware stack levels required when called: 2
  3024 ;; This function calls:
  3025 ;;		_Lcd_Cmd
  3026 ;; This function is called by:
  3027 ;;		_main
  3028 ;; This function uses a non-reentrant model
  3029 ;;
  3030                           
  3031                           
  3032                           ;psect for function _Lcd_Clear
  3033  0242                     _Lcd_Clear:
  3034  0242                     l1338:	
  3035                           ;incstack = 0
  3036                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3037                           
  3038                           
  3039                           ;LCD.c: 26:     Lcd_Cmd(0);
  3040  0242  3000               	movlw	0
  3041  0243  120A  118A  224F  120A  118A  	fcall	_Lcd_Cmd
  3042                           
  3043                           ;LCD.c: 27:     Lcd_Cmd(1);
  3044  0248  3001               	movlw	1
  3045  0249  120A  118A  224F  120A  118A  	fcall	_Lcd_Cmd
  3046  024E                     l172:
  3047  024E  0008               	return
  3048  024F                     __end_of_Lcd_Clear:
  3049                           
  3050                           	psect	text14
  3051  024F                     __ptext14:	
  3052 ;; *************** function _Lcd_Cmd *****************
  3053 ;; Defined at:
  3054 ;;		line 17 in file "LCD.c"
  3055 ;; Parameters:    Size  Location     Type
  3056 ;;  a               1    wreg     unsigned char 
  3057 ;; Auto vars:     Size  Location     Type
  3058 ;;  a               1    3[COMMON] unsigned char 
  3059 ;; Return value:  Size  Location     Type
  3060 ;;                  1    wreg      void 
  3061 ;; Registers used:
  3062 ;;		wreg, status,2, status,0, pclath, cstack
  3063 ;; Tracked objects:
  3064 ;;		On entry : 0/0
  3065 ;;		On exit  : 0/0
  3066 ;;		Unchanged: 0/0
  3067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3068 ;;      Params:         0       0       0       0       0
  3069 ;;      Locals:         1       0       0       0       0
  3070 ;;      Temps:          2       0       0       0       0
  3071 ;;      Totals:         3       0       0       0       0
  3072 ;;Total ram usage:        3 bytes
  3073 ;; Hardware stack levels used: 1
  3074 ;; Hardware stack levels required when called: 1
  3075 ;; This function calls:
  3076 ;;		_Lcd_Port
  3077 ;; This function is called by:
  3078 ;;		_Lcd_Clear
  3079 ;;		_Lcd_Set_Cursor
  3080 ;;		_Lcd_Init
  3081 ;;		_Lcd_Shift_Right
  3082 ;;		_Lcd_Shift_Left
  3083 ;; This function uses a non-reentrant model
  3084 ;;
  3085                           
  3086                           
  3087                           ;psect for function _Lcd_Cmd
  3088  024F                     _Lcd_Cmd:
  3089                           
  3090                           ;incstack = 0
  3091                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3092                           ;Lcd_Cmd@a stored from wreg
  3093  024F  00F3               	movwf	Lcd_Cmd@a
  3094  0250                     l1260:
  3095                           
  3096                           ;LCD.c: 18:     RE0 = 0;
  3097  0250  1283               	bcf	3,5	;RP0=0, select bank0
  3098  0251  1303               	bcf	3,6	;RP1=0, select bank0
  3099  0252  1009               	bcf	9,0	;volatile
  3100  0253                     l1262:
  3101                           
  3102                           ;LCD.c: 19:     Lcd_Port(a);
  3103  0253  0873               	movf	Lcd_Cmd@a,w
  3104  0254  120A  118A  2213  120A  118A  	fcall	_Lcd_Port
  3105  0259                     l1264:
  3106                           
  3107                           ;LCD.c: 20:     RE1 = 1;
  3108  0259  1283               	bcf	3,5	;RP0=0, select bank0
  3109  025A  1303               	bcf	3,6	;RP1=0, select bank0
  3110  025B  1489               	bsf	9,1	;volatile
  3111  025C                     l1266:
  3112                           
  3113                           ;LCD.c: 21:     _delay((unsigned long)((4)*(8000000/4000.0)));
  3114  025C  300B               	movlw	11
  3115  025D  00F2               	movwf	??_Lcd_Cmd+1
  3116  025E  3062               	movlw	98
  3117  025F  00F1               	movwf	??_Lcd_Cmd
  3118  0260                     u1137:
  3119  0260  0BF1               	decfsz	??_Lcd_Cmd,f
  3120  0261  2A60               	goto	u1137
  3121  0262  0BF2               	decfsz	??_Lcd_Cmd+1,f
  3122  0263  2A60               	goto	u1137
  3123  0264  0000               	nop
  3124  0265                     l1268:
  3125                           
  3126                           ;LCD.c: 22:     RE1 = 0;
  3127  0265  1283               	bcf	3,5	;RP0=0, select bank0
  3128  0266  1303               	bcf	3,6	;RP1=0, select bank0
  3129  0267  1089               	bcf	9,1	;volatile
  3130  0268                     l169:
  3131  0268  0008               	return
  3132  0269                     __end_of_Lcd_Cmd:
  3133                           
  3134                           	psect	text15
  3135  0213                     __ptext15:	
  3136 ;; *************** function _Lcd_Port *****************
  3137 ;; Defined at:
  3138 ;;		line 12 in file "LCD.c"
  3139 ;; Parameters:    Size  Location     Type
  3140 ;;  a               1    wreg     unsigned char 
  3141 ;; Auto vars:     Size  Location     Type
  3142 ;;  a               1    0[COMMON] unsigned char 
  3143 ;; Return value:  Size  Location     Type
  3144 ;;                  1    wreg      void 
  3145 ;; Registers used:
  3146 ;;		wreg
  3147 ;; Tracked objects:
  3148 ;;		On entry : 0/0
  3149 ;;		On exit  : 0/0
  3150 ;;		Unchanged: 0/0
  3151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3152 ;;      Params:         0       0       0       0       0
  3153 ;;      Locals:         1       0       0       0       0
  3154 ;;      Temps:          0       0       0       0       0
  3155 ;;      Totals:         1       0       0       0       0
  3156 ;;Total ram usage:        1 bytes
  3157 ;; Hardware stack levels used: 1
  3158 ;; This function calls:
  3159 ;;		Nothing
  3160 ;; This function is called by:
  3161 ;;		_Lcd_Cmd
  3162 ;;		_Lcd_Init
  3163 ;;		_Lcd_Write_Char
  3164 ;; This function uses a non-reentrant model
  3165 ;;
  3166                           
  3167                           
  3168                           ;psect for function _Lcd_Port
  3169  0213                     _Lcd_Port:
  3170                           
  3171                           ;incstack = 0
  3172                           ; Regs used in _Lcd_Port: [wreg]
  3173                           ;Lcd_Port@a stored from wreg
  3174  0213  00F0               	movwf	Lcd_Port@a
  3175  0214                     l1206:
  3176                           
  3177                           ;LCD.c: 13:     PORTD = a;
  3178  0214  0870               	movf	Lcd_Port@a,w
  3179  0215  1283               	bcf	3,5	;RP0=0, select bank0
  3180  0216  1303               	bcf	3,6	;RP1=0, select bank0
  3181  0217  0088               	movwf	8	;volatile
  3182  0218                     l166:
  3183  0218  0008               	return
  3184  0219                     __end_of_Lcd_Port:
  3185                           
  3186                           	psect	text16
  3187  022B                     __ptext16:	
  3188 ;; *************** function _I2C_Master_Write *****************
  3189 ;; Defined at:
  3190 ;;		line 65 in file "I2C.c"
  3191 ;; Parameters:    Size  Location     Type
  3192 ;;  d               2    0[COMMON] unsigned int 
  3193 ;; Auto vars:     Size  Location     Type
  3194 ;;		None
  3195 ;; Return value:  Size  Location     Type
  3196 ;;                  1    wreg      void 
  3197 ;; Registers used:
  3198 ;;		wreg, status,2, status,0, pclath, cstack
  3199 ;; Tracked objects:
  3200 ;;		On entry : 0/0
  3201 ;;		On exit  : 0/0
  3202 ;;		Unchanged: 0/0
  3203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3204 ;;      Params:         2       0       0       0       0
  3205 ;;      Locals:         0       0       0       0       0
  3206 ;;      Temps:          0       0       0       0       0
  3207 ;;      Totals:         2       0       0       0       0
  3208 ;;Total ram usage:        2 bytes
  3209 ;; Hardware stack levels used: 1
  3210 ;; Hardware stack levels required when called: 1
  3211 ;; This function calls:
  3212 ;;		_I2C_Master_Wait
  3213 ;; This function is called by:
  3214 ;;		_main
  3215 ;; This function uses a non-reentrant model
  3216 ;;
  3217                           
  3218                           
  3219                           ;psect for function _I2C_Master_Write
  3220  022B                     _I2C_Master_Write:
  3221  022B                     l1372:	
  3222                           ;incstack = 0
  3223                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3224                           
  3225                           
  3226                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  3227  022B  120A  118A  2235  120A  118A  	fcall	_I2C_Master_Wait
  3228  0230                     l1374:
  3229                           
  3230                           ;I2C.c: 68:     SSPBUF = d;
  3231  0230  0870               	movf	I2C_Master_Write@d,w
  3232  0231  1283               	bcf	3,5	;RP0=0, select bank0
  3233  0232  1303               	bcf	3,6	;RP1=0, select bank0
  3234  0233  0093               	movwf	19	;volatile
  3235  0234                     l147:
  3236  0234  0008               	return
  3237  0235                     __end_of_I2C_Master_Write:
  3238                           
  3239                           	psect	text17
  3240  0222                     __ptext17:	
  3241 ;; *************** function _I2C_Master_Stop *****************
  3242 ;; Defined at:
  3243 ;;		line 55 in file "I2C.c"
  3244 ;; Parameters:    Size  Location     Type
  3245 ;;		None
  3246 ;; Auto vars:     Size  Location     Type
  3247 ;;		None
  3248 ;; Return value:  Size  Location     Type
  3249 ;;                  1    wreg      void 
  3250 ;; Registers used:
  3251 ;;		wreg, status,2, status,0, pclath, cstack
  3252 ;; Tracked objects:
  3253 ;;		On entry : 0/0
  3254 ;;		On exit  : 0/0
  3255 ;;		Unchanged: 0/0
  3256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3257 ;;      Params:         0       0       0       0       0
  3258 ;;      Locals:         0       0       0       0       0
  3259 ;;      Temps:          0       0       0       0       0
  3260 ;;      Totals:         0       0       0       0       0
  3261 ;;Total ram usage:        0 bytes
  3262 ;; Hardware stack levels used: 1
  3263 ;; Hardware stack levels required when called: 1
  3264 ;; This function calls:
  3265 ;;		_I2C_Master_Wait
  3266 ;; This function is called by:
  3267 ;;		_main
  3268 ;; This function uses a non-reentrant model
  3269 ;;
  3270                           
  3271                           
  3272                           ;psect for function _I2C_Master_Stop
  3273  0222                     _I2C_Master_Stop:
  3274  0222                     l1392:	
  3275                           ;incstack = 0
  3276                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3277                           
  3278                           
  3279                           ;I2C.c: 57:     I2C_Master_Wait();
  3280  0222  120A  118A  2235  120A  118A  	fcall	_I2C_Master_Wait
  3281  0227                     l1394:
  3282                           
  3283                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  3284  0227  1683               	bsf	3,5	;RP0=1, select bank1
  3285  0228  1303               	bcf	3,6	;RP1=0, select bank1
  3286  0229  1511               	bsf	17,2	;volatile
  3287  022A                     l144:
  3288  022A  0008               	return
  3289  022B                     __end_of_I2C_Master_Stop:
  3290                           
  3291                           	psect	text18
  3292  0219                     __ptext18:	
  3293 ;; *************** function _I2C_Master_Start *****************
  3294 ;; Defined at:
  3295 ;;		line 39 in file "I2C.c"
  3296 ;; Parameters:    Size  Location     Type
  3297 ;;		None
  3298 ;; Auto vars:     Size  Location     Type
  3299 ;;		None
  3300 ;; Return value:  Size  Location     Type
  3301 ;;                  1    wreg      void 
  3302 ;; Registers used:
  3303 ;;		wreg, status,2, status,0, pclath, cstack
  3304 ;; Tracked objects:
  3305 ;;		On entry : 0/0
  3306 ;;		On exit  : 0/0
  3307 ;;		Unchanged: 0/0
  3308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3309 ;;      Params:         0       0       0       0       0
  3310 ;;      Locals:         0       0       0       0       0
  3311 ;;      Temps:          0       0       0       0       0
  3312 ;;      Totals:         0       0       0       0       0
  3313 ;;Total ram usage:        0 bytes
  3314 ;; Hardware stack levels used: 1
  3315 ;; Hardware stack levels required when called: 1
  3316 ;; This function calls:
  3317 ;;		_I2C_Master_Wait
  3318 ;; This function is called by:
  3319 ;;		_main
  3320 ;; This function uses a non-reentrant model
  3321 ;;
  3322                           
  3323                           
  3324                           ;psect for function _I2C_Master_Start
  3325  0219                     _I2C_Master_Start:
  3326  0219                     l1368:	
  3327                           ;incstack = 0
  3328                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3329                           
  3330                           
  3331                           ;I2C.c: 41:     I2C_Master_Wait();
  3332  0219  120A  118A  2235  120A  118A  	fcall	_I2C_Master_Wait
  3333  021E                     l1370:
  3334                           
  3335                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  3336  021E  1683               	bsf	3,5	;RP0=1, select bank1
  3337  021F  1303               	bcf	3,6	;RP1=0, select bank1
  3338  0220  1411               	bsf	17,0	;volatile
  3339  0221                     l138:
  3340  0221  0008               	return
  3341  0222                     __end_of_I2C_Master_Start:
  3342                           
  3343                           	psect	text19
  3344  02FB                     __ptext19:	
  3345 ;; *************** function _I2C_Master_Read *****************
  3346 ;; Defined at:
  3347 ;;		line 74 in file "I2C.c"
  3348 ;; Parameters:    Size  Location     Type
  3349 ;;  a               2    0[COMMON] unsigned short 
  3350 ;; Auto vars:     Size  Location     Type
  3351 ;;  temp            2    4[COMMON] unsigned short 
  3352 ;; Return value:  Size  Location     Type
  3353 ;;                  2    0[COMMON] unsigned short 
  3354 ;; Registers used:
  3355 ;;		wreg, status,2, status,0, pclath, cstack
  3356 ;; Tracked objects:
  3357 ;;		On entry : 0/0
  3358 ;;		On exit  : 0/0
  3359 ;;		Unchanged: 0/0
  3360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3361 ;;      Params:         2       0       0       0       0
  3362 ;;      Locals:         2       0       0       0       0
  3363 ;;      Temps:          2       0       0       0       0
  3364 ;;      Totals:         6       0       0       0       0
  3365 ;;Total ram usage:        6 bytes
  3366 ;; Hardware stack levels used: 1
  3367 ;; Hardware stack levels required when called: 1
  3368 ;; This function calls:
  3369 ;;		_I2C_Master_Wait
  3370 ;; This function is called by:
  3371 ;;		_main
  3372 ;; This function uses a non-reentrant model
  3373 ;;
  3374                           
  3375                           
  3376                           ;psect for function _I2C_Master_Read
  3377  02FB                     _I2C_Master_Read:
  3378  02FB                     l1376:	
  3379                           ;incstack = 0
  3380                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3381                           
  3382                           
  3383                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  3384  02FB  120A  118A  2235  120A  118A  	fcall	_I2C_Master_Wait
  3385  0300                     l1378:
  3386                           
  3387                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  3388  0300  1683               	bsf	3,5	;RP0=1, select bank1
  3389  0301  1303               	bcf	3,6	;RP1=0, select bank1
  3390  0302  1591               	bsf	17,3	;volatile
  3391                           
  3392                           ;I2C.c: 79:     I2C_Master_Wait();
  3393  0303  120A  118A  2235  120A  118A  	fcall	_I2C_Master_Wait
  3394  0308                     l1380:
  3395                           
  3396                           ;I2C.c: 80:     temp = SSPBUF;
  3397  0308  1283               	bcf	3,5	;RP0=0, select bank0
  3398  0309  1303               	bcf	3,6	;RP1=0, select bank0
  3399  030A  0813               	movf	19,w	;volatile
  3400  030B  00F2               	movwf	??_I2C_Master_Read
  3401  030C  01F3               	clrf	??_I2C_Master_Read+1
  3402  030D  0872               	movf	??_I2C_Master_Read,w
  3403  030E  00F4               	movwf	I2C_Master_Read@temp
  3404  030F  0873               	movf	??_I2C_Master_Read+1,w
  3405  0310  00F5               	movwf	I2C_Master_Read@temp+1
  3406  0311                     l1382:
  3407                           
  3408                           ;I2C.c: 81:     I2C_Master_Wait();
  3409  0311  120A  118A  2235  120A  118A  	fcall	_I2C_Master_Wait
  3410  0316                     l1384:
  3411                           
  3412                           ;I2C.c: 82:     if(a == 1){
  3413  0316  0370               	decf	I2C_Master_Read@a,w
  3414  0317  0471               	iorwf	I2C_Master_Read@a+1,w
  3415  0318  1D03               	btfss	3,2
  3416  0319  2B1B               	goto	u771
  3417  031A  2B1C               	goto	u770
  3418  031B                     u771:
  3419  031B  2B20               	goto	l150
  3420  031C                     u770:
  3421  031C                     l1386:
  3422                           
  3423                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  3424  031C  1683               	bsf	3,5	;RP0=1, select bank1
  3425  031D  1303               	bcf	3,6	;RP1=0, select bank1
  3426  031E  1291               	bcf	17,5	;volatile
  3427                           
  3428                           ;I2C.c: 84:     }else{
  3429  031F  2B23               	goto	l151
  3430  0320                     l150:
  3431                           
  3432                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  3433  0320  1683               	bsf	3,5	;RP0=1, select bank1
  3434  0321  1303               	bcf	3,6	;RP1=0, select bank1
  3435  0322  1691               	bsf	17,5	;volatile
  3436  0323                     l151:	
  3437                           ;I2C.c: 86:     }
  3438                           
  3439                           
  3440                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  3441  0323  1611               	bsf	17,4	;volatile
  3442  0324                     l1388:
  3443                           
  3444                           ;I2C.c: 88:     return temp;
  3445  0324  0875               	movf	I2C_Master_Read@temp+1,w
  3446  0325  00F1               	movwf	?_I2C_Master_Read+1
  3447  0326  0874               	movf	I2C_Master_Read@temp,w
  3448  0327  00F0               	movwf	?_I2C_Master_Read
  3449  0328                     l152:
  3450  0328  0008               	return
  3451  0329                     __end_of_I2C_Master_Read:
  3452                           
  3453                           	psect	text20
  3454  0235                     __ptext20:	
  3455 ;; *************** function _I2C_Master_Wait *****************
  3456 ;; Defined at:
  3457 ;;		line 32 in file "I2C.c"
  3458 ;; Parameters:    Size  Location     Type
  3459 ;;		None
  3460 ;; Auto vars:     Size  Location     Type
  3461 ;;		None
  3462 ;; Return value:  Size  Location     Type
  3463 ;;                  1    wreg      void 
  3464 ;; Registers used:
  3465 ;;		wreg, status,2
  3466 ;; Tracked objects:
  3467 ;;		On entry : 0/0
  3468 ;;		On exit  : 0/0
  3469 ;;		Unchanged: 0/0
  3470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3471 ;;      Params:         0       0       0       0       0
  3472 ;;      Locals:         0       0       0       0       0
  3473 ;;      Temps:          0       0       0       0       0
  3474 ;;      Totals:         0       0       0       0       0
  3475 ;;Total ram usage:        0 bytes
  3476 ;; Hardware stack levels used: 1
  3477 ;; This function calls:
  3478 ;;		Nothing
  3479 ;; This function is called by:
  3480 ;;		_I2C_Master_Start
  3481 ;;		_I2C_Master_Stop
  3482 ;;		_I2C_Master_Write
  3483 ;;		_I2C_Master_Read
  3484 ;;		_I2C_Master_RepeatedStart
  3485 ;; This function uses a non-reentrant model
  3486 ;;
  3487                           
  3488                           
  3489                           ;psect for function _I2C_Master_Wait
  3490  0235                     _I2C_Master_Wait:
  3491  0235                     l1256:	
  3492                           ;incstack = 0
  3493                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3494                           
  3495  0235                     l132:	
  3496                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3497                           
  3498  0235  1683               	bsf	3,5	;RP0=1, select bank1
  3499  0236  1303               	bcf	3,6	;RP1=0, select bank1
  3500  0237  1914               	btfsc	20,2	;volatile
  3501  0238  2A3A               	goto	u591
  3502  0239  2A3B               	goto	u590
  3503  023A                     u591:
  3504  023A  2A35               	goto	l132
  3505  023B                     u590:
  3506  023B                     l1258:
  3507  023B  0811               	movf	17,w	;volatile
  3508  023C  391F               	andlw	31
  3509  023D  1D03               	btfss	3,2
  3510  023E  2A40               	goto	u601
  3511  023F  2A41               	goto	u600
  3512  0240                     u601:
  3513  0240  2A35               	goto	l132
  3514  0241                     u600:
  3515  0241                     l135:
  3516  0241  0008               	return
  3517  0242                     __end_of_I2C_Master_Wait:
  3518  007E                     btemp	set	126	;btemp
  3519  007E                     wtemp0	set	126
  3520                           
  3521                           	psect	config
  3522                           
  3523                           ;Config register CONFIG1 @ 0x2007
  3524                           ;	Oscillator Selection bits
  3525                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3526                           ;	Watchdog Timer Enable bit
  3527                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3528                           ;	Power-up Timer Enable bit
  3529                           ;	PWRTE = OFF, PWRT disabled
  3530                           ;	RE3/MCLR pin function select bit
  3531                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3532                           ;	Code Protection bit
  3533                           ;	CP = OFF, Program memory code protection is disabled
  3534                           ;	Data Code Protection bit
  3535                           ;	CPD = OFF, Data memory code protection is disabled
  3536                           ;	Brown Out Reset Selection bits
  3537                           ;	BOREN = OFF, BOR disabled
  3538                           ;	Internal External Switchover bit
  3539                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3540                           ;	Fail-Safe Clock Monitor Enabled bit
  3541                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3542                           ;	Low Voltage Programming Enable bit
  3543                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3544                           ;	In-Circuit Debugger Mode bit
  3545                           ;	DEBUG = 0x1, unprogrammed default
  3546  2007                     	org	8199
  3547  2007  20D4               	dw	8404
  3548                           
  3549                           ;Config register CONFIG2 @ 0x2008
  3550                           ;	Brown-out Reset Selection bit
  3551                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3552                           ;	Flash Program Memory Self Write Enable bits
  3553                           ;	WRT = OFF, Write protection off
  3554  2008                     	org	8200
  3555  2008  3FFF               	dw	16383

Data Sizes:
    Strings     50
    Constant    0
    Data        0
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     11      24
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 16
		 -> STR_7(CODE[16]), STR_6(CODE[11]), STR_5(CODE[12]), STR_4(CODE[2]), 
		 -> STR_3(CODE[4]), STR_2(CODE[5]), STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    _main->___awmod
    _main->_str_2_dc
    _str_2_dc->___lwdiv
    _I2C_Master_Init->___lldiv
    ___awmod->___awdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _initSETUP->_I2C_Master_Init

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    4745
                                              8 BANK0      3     3      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                            ___awdiv
                            ___awmod
                          _initSETUP
                           _str_2_dc
 ---------------------------------------------------------------------------------
 (1) _str_2_dc                                             6     4      2    1073
                                              8 COMMON     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     466
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _initSETUP                                            0     0      0     412
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     904
                                              9 COMMON     5     1      4
                                              0 BANK0      2     2      0
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     604
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     411
                                              5 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0      90
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     694
                                              4 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      66
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      44
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      44
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     174
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     273
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
   ___awdiv
   ___awmod
     ___awdiv (ARG)
   _initSETUP
     _I2C_Master_Init
       ___lldiv
   _str_2_dc
     ___lwdiv
     ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      26       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      B      18       5       30.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      26      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Sep 07 23:52:32 2021

                        pc 0002                         l97 05D5                         _RH 0024  
             ___awdiv@sign 0076                         fsr 0004        ___wmul@multiplicand 0072  
                      l100 02FA                        l132 0235                        l150 0320  
                      l135 0241                        l151 0323                        l152 0328  
                      l144 022A                        l129 0360                        l138 0221  
                      l147 0234                        l172 024E                        l181 03EB  
                      l166 0218                        l190 02AB                        l318 04FE  
                      l184 0286                        l169 0268                        l178 043D  
                      l282 02B8                        l435 0565                        l284 02D0  
                      l448 0498                        l554 03A4                        _GIE 005F  
                      _RE0 0048                        _RE1 0049                        _LDR 0020  
                      u510 04A9                        u511 04A8                        u600 0241  
                      u601 0240                        u530 04BD                        u610 02B2  
                      u531 04BC                        u611 02B1                        u525 04AE  
                      u550 04D8                        u710 03A0                        u551 04D7  
                      u711 039F                        u720 03F2                        u800 0520  
                      u640 02CC                        u721 03F1                        u801 051F  
                      u545 04BF                        u705 0394                        u641 02CB  
                      u625 02B9                        u570 04F6                        u650 0369  
                      u571 04F5                        u555 04D4                        u651 0368  
                      u635 02C0                        u740 041B                        u820 0532  
                      u900 045B                        u580 0340                        u741 041A  
                      u821 0531                        u901 045A                        u565 04E8  
                      u590 023B                        u670 037B                        u591 023A  
                      u735 03FA                        u815 0524                        u671 037A  
                      u760 02AB                        u840 0543                        u920 046D  
                      u761 02AA                        u841 0542                        u921 046C  
                      u585 033B                        u665 036D                        u770 031C  
                      u930 0477                        u690 038C                        u771 031B  
                      u755 0423                        u835 0533                        u931 0476  
                      u915 045F                        u691 038B                        u860 0557  
                      u780 0504                        u861 0556                        u845 053F  
                      u781 0503                        u685 037C                        u870 055C  
                      u790 050F                        u950 048A                        u871 055B  
                      u855 054B                        u791 050E                        u951 0489  
                      u935 0473                        u695 0388                        u960 048F  
                      u880 0445                        u961 048E                        u945 047E  
                      u881 0444                        u890 0450                        u970 0608  
                      u891 044F                        u971 0607                        u980 061E  
                      u981 061D                        u990 0759                        u991 0758  
                      u995 0755                        fsr0 0004               ___awmod@sign 002E  
                     l1210 04A9                       l1220 04D8                       l1212 04AC  
                     l1300 0392                       l1206 0214                       l1222 04E6  
                     l1214 04B9                       l1310 02D1                       l1302 0393  
                     l1240 027E                       l1232 026A                       l1224 04E7  
                     l1216 04BD                       l1208 0499                       l1320 02E9  
                     l1312 02E3                       l1304 039A                       l1400 057D  
                     l1330 03AB                       l1242 0283                       l1234 0272  
                     l1226 04F0                       l1218 04C6                       l1250 035D  
                     l1322 02EA                       l1314 02E6                       l1306 03A0  
                     l1410 05D0                       l1402 0595                       l1260 0250  
                     l1332 03B4                       l1340 03ED                       l1236 0275  
                     l1420 050B                       l1412 04FF                       l1228 04F6  
                     l1252 035E                       l1244 0329                       l1324 02EB  
                     l1316 02E7                       l1404 05A8                       l1500 05F8  
                     l1262 0253                       l1334 03C3                       l1342 03F2  
                     l1350 0415                       l1238 027B                       l1430 0520  
                     l1422 050F                       l1414 0500                       l1254 035F  
                     l1246 032D                       l1318 02E8                       l1270 02AC  
                     l1406 05C6                       l1510 061E                       l1502 0601  
                     l1256 0235                       l1264 0259                       l1336 03C9  
                     l1328 03A5                       l1352 041B                       l1344 0403  
                     l1360 0288                       l1440 0543                       l1432 0523  
                     l1424 0514                       l1416 0504                       l1248 0330  
                     l1280 02CC                       l1272 02AE                       l1408 05CB  
                     l1600 07DB                       l1520 0646                       l1512 062C  
                     l1504 0608                       l1258 023B                       l1370 021E  
                     l1266 025C                       l1338 0242                       l1354 042C  
                     l1346 0408                       l1362 028B                       l1450 055C  
                     l1442 0549                       l1434 052A                       l1426 0518  
                     l1418 0509                       l1290 036C                       l1274 02B2  
                     l1530 0679                       l1522 064F                       l1514 062D  
                     l1506 0616                       l1380 0308                       l1372 022B  
                     l1268 0265                       l1356 0431                       l1348 040E  
                     l1364 0298                       l1452 0561                       l1444 054A  
                     l1436 052E                       l1428 051A                       l1460 0445  
                     l1292 0373                       l1284 0361                       l1276 02BF  
                     l1540 06F7                       l1532 069F                       l1524 065D  
                     l1516 0632                       l1508 0619                       l1382 0311  
                     l1374 0230                       l1358 0437                       l1366 029E  
                     l1446 0551                       l1438 0532                       l1470 045B  
                     l1462 044A                       l1294 0377                       l1286 0363  
                     l1278 02C6                       l1550 071B                       l1542 06FF  
                     l1534 06B6                       l1526 0662                       l1518 0641  
                     l1384 0316                       l1376 02FB                       l1368 0219  
                     l1392 0222                       l1448 0557                       l1480 0477  
                     l1472 045E                       l1464 044C                       l1456 043E  
                     l1296 037B                       l1288 0369                       l1560 0744  
                     l1552 0721                       l1544 0705                       l1536 06DA  
                     l1528 0671                       l1386 031C                       l1378 0300  
                     l1394 0227                       l1490 0494                       l1482 047D  
                     l1474 0465                       l1466 0450                       l1458 0441  
                     l1298 038C                       l1570 0777                       l1562 074A  
                     l1554 072C                       l1546 070D                       l1538 06F1  
                     l1388 0324                       l1484 0484                       l1476 0469  
                     l1468 0455                       l1396 0566                       l1580 078F  
                     l1572 0780                       l1564 0759                       l1556 0734  
                     l1548 0715                       l1478 046D                       l1486 048A  
                     l1398 056A                       l1590 07B4                       l1582 0799  
                     l1574 0781                       l1566 075E                       l1558 073C  
                     l1494 05D6                       l1488 048F                       l1592 07BA  
                     l1584 079E                       l1576 0782                       l1568 0769  
                     l1496 05ED                       l1594 07C8                       l1586 07A6  
                     l1578 078C                       l1498 05F3                       l1596 07CD  
                     l1588 07AC                       l1598 07D5                       STR_1 0009  
                     STR_2 0030                       STR_3 0035                       STR_4 0039  
                     STR_5 0019                       STR_6 0025                       STR_7 0009  
                     u1000 0780                       u1001 077F                       u1017 063A  
                     u1107 03AF                       u1027 066A                       u1117 03BE  
                     u1037 0764                       u1127 03CB                       u1047 0772  
                     u1137 0260                       u1057 0788                       u1067 0795  
                     u1077 07C2                       u1087 07E3                       u1097 0280  
                     _PEIE 005E                       _dec0 002B                       _dec1 0029  
        ?_Lcd_Write_String 0070                       _cont 0022                       _main 05D6  
                     _test 0023                       btemp 007E                       start 0000  
       ??_Lcd_Write_String 0075            __end_of_Lcd_Cmd 0269           ?_I2C_Master_Init 002D  
         ?_I2C_Master_Read 0070           ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070  
                    ?_main 0070            __end_of___awdiv 0566            __end_of___awmod 0499  
                    _ANSEL 0188            __end_of___lldiv 04FF            ___awdiv@divisor 0070  
          __end_of___lwdiv 03A5            ___awdiv@counter 0075                      _PORTA 0005  
                    _PORTB 0006                      _PORTC 0007                      _PORTD 0008  
                    _PORTE 0009    __size_of_Lcd_Set_Cursor 0052                      _TRISA 0085  
                    _TRISB 0086                      _TRISC 0087                      _TRISD 0088  
                    _SSPIE 0463                      _TRISE 0089                      _SSPIF 0063  
                    _unit0 002C                      _unit1 002A                      pclath 000A  
                    status 0003                      wtemp0 007E           __end_of_Lcd_Init 03EC  
         __end_of_Lcd_Port 0219            __initialization 07ED               __end_of_main 07ED  
                   ??_main 0035         __size_of_Lcd_Clear 000D          ?_I2C_Master_Start 0070  
        ?_I2C_Master_Write 0070         ??_I2C_Master_Start 0070         ??_I2C_Master_Write 0072  
         ___awdiv@dividend 0072                     _ANSELH 0189                  ??_Lcd_Cmd 0071  
  __size_of_Lcd_Write_Char 001E                     _SSPADD 0093                     _TRISC3 043B  
                   _TRISC4 043C                     _SSPCON 0014                     _SSPBUF 0013  
                   ___wmul 02AC                  ??___awdiv 0074                  ??___awmod 007D  
                ??___lldiv 0078                  ??___lwdiv 0074           ___awdiv@quotient 0077  
          ___awmod@divisor 0079            ___awmod@counter 002D           __end_of_str_2_dc 05D6  
          Lcd_Set_Cursor@a 0077            Lcd_Set_Cursor@b 0074            Lcd_Set_Cursor@y 0079  
          Lcd_Set_Cursor@z 0078    __end_of__initialization 07FC          __end_of_Lcd_Clear 024F  
           __pcstackCOMMON 0070             _Lcd_Set_Cursor 03EC                  ?_Lcd_Init 0070  
                ?_Lcd_Port 0070                 __pbssBANK0 0020         __size_of_initSETUP 002A  
               __pmaintext 05D6                    ?___wmul 0070  __size_of_Lcd_Write_String 0025  
   __end_of_Lcd_Set_Cursor 043E                 ??_Lcd_Init 0074                 ??_Lcd_Port 0070  
                  _SSPCON2 0091                    _SSPSTAT 0094                 __stringtab 0003  
           _Lcd_Write_Char 0269                    _Lcd_Cmd 024F                    _dec0_12 0027  
                  _dec1_12 0026                  ?_str_2_dc 0078                    ___awdiv 04FF  
                  ___awmod 043E                    ___lldiv 0499            __size_of___wmul 0025  
                  ___lwdiv 0361          __end_of_initSETUP 02FB            ?_Lcd_Set_Cursor 0074  
                  __ptext1 0566                    __ptext2 02AC                    __ptext3 0361  
                  __ptext4 02D1                    __ptext5 0329                    __ptext6 0499  
                  __ptext7 043E                    __ptext8 04FF                    __ptext9 0287  
         ___awmod@dividend 007B   __size_of_I2C_Master_Init 0038   __size_of_I2C_Master_Read 002E  
 __size_of_I2C_Master_Wait 000D                    _unit0_0 0028   __size_of_I2C_Master_Stop 0009  
   __end_of_Lcd_Write_Char 0287       end_of_initialization 07FC  __size_of_I2C_Master_Start 0009  
__size_of_I2C_Master_Write 000A            ___lldiv@divisor 0070            ___lldiv@counter 007D  
         I2C_Master_Init@c 002D           I2C_Master_Read@a 0070                 ??_str_2_dc 007A  
                Lcd_Port@a 0070                  _PORTAbits 0005                  _TRISCbits 0087  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0077          Lcd_Write_String@i 0075  
              str_2_dc@var 0078                str_2_dc@vcv 007C                  _Lcd_Clear 0242  
           __end_of___wmul 02D1           _Lcd_Write_String 0287        start_initialization 07ED  
        __size_of_Lcd_Init 0047          __size_of_Lcd_Port 0006          ??_I2C_Master_Init 0031  
        ??_I2C_Master_Read 0072          ??_I2C_Master_Wait 0070          ??_I2C_Master_Stop 0070  
               ?_Lcd_Clear 0070                   ??___wmul 0074            Lcd_Write_Char@a 0072  
          Lcd_Write_Char@y 0074                  ___latbits 0002              __pcstackBANK0 002D  
                 ?_Lcd_Cmd 0070           _I2C_Master_Start 0219           _I2C_Master_Write 022B  
         ___lwdiv@dividend 0072           ??_Lcd_Set_Cursor 0075                   ?___awdiv 0070  
                 ?___awmod 0079                   ?___lldiv 0070                   ?___lwdiv 0070  
        __size_of_str_2_dc 0070                  __pstrings 0003                  _initSETUP 02D1  
         ___lwdiv@quotient 0075             ___wmul@product 0074                   Lcd_Cmd@a 0073  
              ??_Lcd_Clear 0074                __stringbase 0008          ___wmul@multiplier 0070  
         ??_Lcd_Write_Char 0071                 ?_initSETUP 0070                   _Lcd_Init 03A5  
                 _Lcd_Port 0213        I2C_Master_Read@temp 0074   __end_of_Lcd_Write_String 02AC  
         __size_of_Lcd_Cmd 001A                   _Humidity 0025           __size_of___awdiv 0067  
         __size_of___awmod 005B           __size_of___lldiv 0066           __size_of___lwdiv 0044  
       __end_of__stringtab 0009            _I2C_Master_Init 0329            _I2C_Master_Read 02FB  
          _I2C_Master_Wait 0235            _I2C_Master_Stop 0222            ___lwdiv@divisor 0070  
          ___lwdiv@counter 0077                   __ptext10 0269                   __ptext11 03EC  
                 __ptext20 0235                   __ptext12 03A5                   __ptext13 0242  
                 __ptext14 024F                   __ptext15 0213                   __ptext16 022B  
                 __ptext17 0222                   __ptext18 0219                   __ptext19 02FB  
            __size_of_main 0217                   _str_2_dc 0566   __end_of_I2C_Master_Start 0222  
 __end_of_I2C_Master_Write 0235                 _INTCONbits 000B                ??_initSETUP 007E  
       Lcd_Write_Char@temp 0073           ___lldiv@dividend 0074                  stringcode 0003  
               _OSCCONbits 008F    __end_of_I2C_Master_Init 0361    __end_of_I2C_Master_Read 0329  
  __end_of_I2C_Master_Wait 0242    __end_of_I2C_Master_Stop 022B         Lcd_Set_Cursor@temp 007A  
         ___lldiv@quotient 0079          I2C_Master_Write@d 0070                   stringdir 0003  
                 stringtab 0003                _SSPCON2bits 0091  
