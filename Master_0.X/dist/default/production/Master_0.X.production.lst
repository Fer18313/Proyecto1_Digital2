

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Sep 08 00:34:04 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	psect	text19,local,class=CODE,merge=1,delta=2
    29                           	psect	text20,local,class=CODE,merge=1,delta=2
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    31                           	dabs	1,0x7E,2
    32  0000                     
    33                           ; Version 2.20
    34                           ; Generated 12/02/2020 GMT
    35                           ; 
    36                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC16F887 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     	;# 
    68  0001                     	;# 
    69  0002                     	;# 
    70  0003                     	;# 
    71  0004                     	;# 
    72  0005                     	;# 
    73  0006                     	;# 
    74  0007                     	;# 
    75  0008                     	;# 
    76  0009                     	;# 
    77  000A                     	;# 
    78  000B                     	;# 
    79  000C                     	;# 
    80  000D                     	;# 
    81  000E                     	;# 
    82  000E                     	;# 
    83  000F                     	;# 
    84  0010                     	;# 
    85  0011                     	;# 
    86  0012                     	;# 
    87  0013                     	;# 
    88  0014                     	;# 
    89  0015                     	;# 
    90  0015                     	;# 
    91  0016                     	;# 
    92  0017                     	;# 
    93  0018                     	;# 
    94  0019                     	;# 
    95  001A                     	;# 
    96  001B                     	;# 
    97  001B                     	;# 
    98  001C                     	;# 
    99  001D                     	;# 
   100  001E                     	;# 
   101  001F                     	;# 
   102  0081                     	;# 
   103  0085                     	;# 
   104  0086                     	;# 
   105  0087                     	;# 
   106  0088                     	;# 
   107  0089                     	;# 
   108  008C                     	;# 
   109  008D                     	;# 
   110  008E                     	;# 
   111  008F                     	;# 
   112  0090                     	;# 
   113  0091                     	;# 
   114  0092                     	;# 
   115  0093                     	;# 
   116  0093                     	;# 
   117  0093                     	;# 
   118  0094                     	;# 
   119  0095                     	;# 
   120  0096                     	;# 
   121  0097                     	;# 
   122  0098                     	;# 
   123  0099                     	;# 
   124  009A                     	;# 
   125  009B                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009E                     	;# 
   129  009F                     	;# 
   130  0105                     	;# 
   131  0107                     	;# 
   132  0108                     	;# 
   133  0109                     	;# 
   134  010C                     	;# 
   135  010C                     	;# 
   136  010D                     	;# 
   137  010E                     	;# 
   138  010F                     	;# 
   139  0185                     	;# 
   140  0187                     	;# 
   141  0188                     	;# 
   142  0189                     	;# 
   143  018C                     	;# 
   144  018D                     	;# 
   145  0000                     	;# 
   146  0001                     	;# 
   147  0002                     	;# 
   148  0003                     	;# 
   149  0004                     	;# 
   150  0005                     	;# 
   151  0006                     	;# 
   152  0007                     	;# 
   153  0008                     	;# 
   154  0009                     	;# 
   155  000A                     	;# 
   156  000B                     	;# 
   157  000C                     	;# 
   158  000D                     	;# 
   159  000E                     	;# 
   160  000E                     	;# 
   161  000F                     	;# 
   162  0010                     	;# 
   163  0011                     	;# 
   164  0012                     	;# 
   165  0013                     	;# 
   166  0014                     	;# 
   167  0015                     	;# 
   168  0015                     	;# 
   169  0016                     	;# 
   170  0017                     	;# 
   171  0018                     	;# 
   172  0019                     	;# 
   173  001A                     	;# 
   174  001B                     	;# 
   175  001B                     	;# 
   176  001C                     	;# 
   177  001D                     	;# 
   178  001E                     	;# 
   179  001F                     	;# 
   180  0081                     	;# 
   181  0085                     	;# 
   182  0086                     	;# 
   183  0087                     	;# 
   184  0088                     	;# 
   185  0089                     	;# 
   186  008C                     	;# 
   187  008D                     	;# 
   188  008E                     	;# 
   189  008F                     	;# 
   190  0090                     	;# 
   191  0091                     	;# 
   192  0092                     	;# 
   193  0093                     	;# 
   194  0093                     	;# 
   195  0093                     	;# 
   196  0094                     	;# 
   197  0095                     	;# 
   198  0096                     	;# 
   199  0097                     	;# 
   200  0098                     	;# 
   201  0099                     	;# 
   202  009A                     	;# 
   203  009B                     	;# 
   204  009C                     	;# 
   205  009D                     	;# 
   206  009E                     	;# 
   207  009F                     	;# 
   208  0105                     	;# 
   209  0107                     	;# 
   210  0108                     	;# 
   211  0109                     	;# 
   212  010C                     	;# 
   213  010C                     	;# 
   214  010D                     	;# 
   215  010E                     	;# 
   216  010F                     	;# 
   217  0185                     	;# 
   218  0187                     	;# 
   219  0188                     	;# 
   220  0189                     	;# 
   221  018C                     	;# 
   222  018D                     	;# 
   223  0000                     	;# 
   224  0001                     	;# 
   225  0002                     	;# 
   226  0003                     	;# 
   227  0004                     	;# 
   228  0005                     	;# 
   229  0006                     	;# 
   230  0007                     	;# 
   231  0008                     	;# 
   232  0009                     	;# 
   233  000A                     	;# 
   234  000B                     	;# 
   235  000C                     	;# 
   236  000D                     	;# 
   237  000E                     	;# 
   238  000E                     	;# 
   239  000F                     	;# 
   240  0010                     	;# 
   241  0011                     	;# 
   242  0012                     	;# 
   243  0013                     	;# 
   244  0014                     	;# 
   245  0015                     	;# 
   246  0015                     	;# 
   247  0016                     	;# 
   248  0017                     	;# 
   249  0018                     	;# 
   250  0019                     	;# 
   251  001A                     	;# 
   252  001B                     	;# 
   253  001B                     	;# 
   254  001C                     	;# 
   255  001D                     	;# 
   256  001E                     	;# 
   257  001F                     	;# 
   258  0081                     	;# 
   259  0085                     	;# 
   260  0086                     	;# 
   261  0087                     	;# 
   262  0088                     	;# 
   263  0089                     	;# 
   264  008C                     	;# 
   265  008D                     	;# 
   266  008E                     	;# 
   267  008F                     	;# 
   268  0090                     	;# 
   269  0091                     	;# 
   270  0092                     	;# 
   271  0093                     	;# 
   272  0093                     	;# 
   273  0093                     	;# 
   274  0094                     	;# 
   275  0095                     	;# 
   276  0096                     	;# 
   277  0097                     	;# 
   278  0098                     	;# 
   279  0099                     	;# 
   280  009A                     	;# 
   281  009B                     	;# 
   282  009C                     	;# 
   283  009D                     	;# 
   284  009E                     	;# 
   285  009F                     	;# 
   286  0105                     	;# 
   287  0107                     	;# 
   288  0108                     	;# 
   289  0109                     	;# 
   290  010C                     	;# 
   291  010C                     	;# 
   292  010D                     	;# 
   293  010E                     	;# 
   294  010F                     	;# 
   295  0185                     	;# 
   296  0187                     	;# 
   297  0188                     	;# 
   298  0189                     	;# 
   299  018C                     	;# 
   300  018D                     	;# 
   301  0000                     	;# 
   302  0001                     	;# 
   303  0002                     	;# 
   304  0003                     	;# 
   305  0004                     	;# 
   306  0005                     	;# 
   307  0006                     	;# 
   308  0007                     	;# 
   309  0008                     	;# 
   310  0009                     	;# 
   311  000A                     	;# 
   312  000B                     	;# 
   313  000C                     	;# 
   314  000D                     	;# 
   315  000E                     	;# 
   316  000E                     	;# 
   317  000F                     	;# 
   318  0010                     	;# 
   319  0011                     	;# 
   320  0012                     	;# 
   321  0013                     	;# 
   322  0014                     	;# 
   323  0015                     	;# 
   324  0015                     	;# 
   325  0016                     	;# 
   326  0017                     	;# 
   327  0018                     	;# 
   328  0019                     	;# 
   329  001A                     	;# 
   330  001B                     	;# 
   331  001B                     	;# 
   332  001C                     	;# 
   333  001D                     	;# 
   334  001E                     	;# 
   335  001F                     	;# 
   336  0081                     	;# 
   337  0085                     	;# 
   338  0086                     	;# 
   339  0087                     	;# 
   340  0088                     	;# 
   341  0089                     	;# 
   342  008C                     	;# 
   343  008D                     	;# 
   344  008E                     	;# 
   345  008F                     	;# 
   346  0090                     	;# 
   347  0091                     	;# 
   348  0092                     	;# 
   349  0093                     	;# 
   350  0093                     	;# 
   351  0093                     	;# 
   352  0094                     	;# 
   353  0095                     	;# 
   354  0096                     	;# 
   355  0097                     	;# 
   356  0098                     	;# 
   357  0099                     	;# 
   358  009A                     	;# 
   359  009B                     	;# 
   360  009C                     	;# 
   361  009D                     	;# 
   362  009E                     	;# 
   363  009F                     	;# 
   364  0105                     	;# 
   365  0107                     	;# 
   366  0108                     	;# 
   367  0109                     	;# 
   368  010C                     	;# 
   369  010C                     	;# 
   370  010D                     	;# 
   371  010E                     	;# 
   372  010F                     	;# 
   373  0185                     	;# 
   374  0187                     	;# 
   375  0188                     	;# 
   376  0189                     	;# 
   377  018C                     	;# 
   378  018D                     	;# 
   379  0013                     _SSPBUF	set	19
   380  0014                     _SSPCON	set	20
   381  000B                     _INTCONbits	set	11
   382  0008                     _PORTD	set	8
   383  0007                     _PORTC	set	7
   384  0006                     _PORTB	set	6
   385  0005                     _PORTA	set	5
   386  0009                     _PORTE	set	9
   387  0005                     _PORTAbits	set	5
   388  0049                     _RE1	set	73
   389  0048                     _RE0	set	72
   390  0063                     _SSPIF	set	99
   391  005E                     _PEIE	set	94
   392  005F                     _GIE	set	95
   393  0091                     _SSPCON2bits	set	145
   394  0087                     _TRISCbits	set	135
   395  0094                     _SSPSTAT	set	148
   396  0093                     _SSPADD	set	147
   397  0091                     _SSPCON2	set	145
   398  008F                     _OSCCONbits	set	143
   399  0089                     _TRISE	set	137
   400  0088                     _TRISD	set	136
   401  0087                     _TRISC	set	135
   402  0086                     _TRISB	set	134
   403  0085                     _TRISA	set	133
   404  0463                     _SSPIE	set	1123
   405  043C                     _TRISC4	set	1084
   406  043B                     _TRISC3	set	1083
   407  0189                     _ANSELH	set	393
   408  0188                     _ANSEL	set	392
   409                           
   410                           	psect	strings
   411  0003                     __pstrings:
   412  0003                     stringtab:
   413  0003                     __stringtab:
   414  0003                     stringcode:	
   415                           ;	String table - string pointers are 1 byte each
   416                           
   417  0003                     stringdir:
   418  0003  3000               	movlw	high stringdir
   419  0004  008A               	movwf	10
   420  0005  0804               	movf	4,w
   421  0006  0A84               	incf	4,f
   422  0007  0782               	addwf	2,f
   423  0008                     __stringbase:
   424  0008  3400               	retlw	0
   425  0009                     __end_of__stringtab:
   426  0009                     STR_1:
   427  0009  3420               	retlw	32	;' '
   428  000A  3452               	retlw	82	;'R'
   429  000B  3448               	retlw	72	;'H'
   430  000C  343A               	retlw	58	;':'
   431  000D  3420               	retlw	32	;' '
   432  000E  3420               	retlw	32	;' '
   433  000F  3420               	retlw	32	;' '
   434  0010  3454               	retlw	84	;'T'
   435  0011  343A               	retlw	58	;':'
   436  0012  3420               	retlw	32	;' '
   437  0013  3420               	retlw	32	;' '
   438  0014  3420               	retlw	32	;' '
   439  0015  344C               	retlw	76	;'L'
   440  0016  3425               	retlw	37	;'%'
   441  0017  343A               	retlw	58	;':'
   442  0018  3400               	retlw	0
   443  0019                     STR_5:
   444  0019  3444               	retlw	68	;'D'
   445  001A  3449               	retlw	73	;'I'
   446  001B  3453               	retlw	83	;'S'
   447  001C  3450               	retlw	80	;'P'
   448  001D  3445               	retlw	69	;'E'
   449  001E  344E               	retlw	78	;'N'
   450  001F  3453               	retlw	83	;'S'
   451  0020  3441               	retlw	65	;'A'
   452  0021  344E               	retlw	78	;'N'
   453  0022  3444               	retlw	68	;'D'
   454  0023  344F               	retlw	79	;'O'
   455  0024  3400               	retlw	0
   456  0025                     STR_6:
   457  0025  3420               	retlw	32	;' '
   458  0026  3443               	retlw	67	;'C'
   459  0027  344F               	retlw	79	;'O'
   460  0028  344D               	retlw	77	;'M'
   461  0029  3449               	retlw	73	;'I'
   462  002A  3444               	retlw	68	;'D'
   463  002B  3441               	retlw	65	;'A'
   464  002C  342E               	retlw	46	;'.'
   465  002D  342E               	retlw	46	;'.'
   466  002E  342E               	retlw	46	;'.'
   467  002F  3400               	retlw	0
   468  0030                     STR_2:
   469  0030  3425               	retlw	37	;'%'
   470  0031  3420               	retlw	32	;' '
   471  0032  3420               	retlw	32	;' '
   472  0033  3420               	retlw	32	;' '
   473  0034  3400               	retlw	0
   474  0035                     STR_3:
   475  0035  3443               	retlw	67	;'C'
   476  0036  3420               	retlw	32	;' '
   477  0037  3420               	retlw	32	;' '
   478  0038  3400               	retlw	0
   479  0039                     STR_4:
   480  0039  3425               	retlw	37	;'%'
   481  003A  3400               	retlw	0
   482  0025                     
   483                           	psect	cinit
   484  07EC                     start_initialization:	
   485                           ; #config settings
   486                           
   487  07EC                     __initialization:
   488                           
   489                           ; Clear objects allocated to BANK0
   490  07EC  1283               	bcf	3,5	;RP0=0, select bank0
   491  07ED  1303               	bcf	3,6	;RP1=0, select bank0
   492  07EE  01A0               	clrf	__pbssBANK0& (0+127)
   493  07EF  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   494  07F0  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   495  07F1  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   496  07F2  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   497  07F3  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   498  07F4  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   499  07F5  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   500  07F6  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   501  07F7  01A9               	clrf	(__pbssBANK0+9)& (0+127)
   502  07F8  01AA               	clrf	(__pbssBANK0+10)& (0+127)
   503  07F9  01AB               	clrf	(__pbssBANK0+11)& (0+127)
   504  07FA  01AC               	clrf	(__pbssBANK0+12)& (0+127)
   505  07FB  01AD               	clrf	(__pbssBANK0+13)& (0+127)
   506  07FC                     end_of_initialization:	
   507                           ;End of C runtime variable initialization code
   508                           
   509  07FC                     __end_of__initialization:
   510  07FC  0183               	clrf	3
   511  07FD  120A  118A  2D1A   	ljmp	_main	;jump to C main() function
   512                           
   513                           	psect	bssBANK0
   514  0020                     __pbssBANK0:
   515  0020                     _LDR:
   516  0020                     	ds	2
   517  0022                     _cont1:
   518  0022                     	ds	1
   519  0023                     _cont:
   520  0023                     	ds	1
   521  0024                     _test:
   522  0024                     	ds	1
   523  0025                     _RH:
   524  0025                     	ds	1
   525  0026                     _Humidity:
   526  0026                     	ds	1
   527  0027                     _dec1_12:
   528  0027                     	ds	1
   529  0028                     _dec0_12:
   530  0028                     	ds	1
   531  0029                     _unit0_0:
   532  0029                     	ds	1
   533  002A                     _dec1:
   534  002A                     	ds	1
   535  002B                     _unit1:
   536  002B                     	ds	1
   537  002C                     _dec0:
   538  002C                     	ds	1
   539  002D                     _unit0:
   540  002D                     	ds	1
   541                           
   542                           	psect	cstackCOMMON
   543  0070                     __pcstackCOMMON:
   544  0070                     ?_initSETUP:
   545  0070                     ?_Lcd_Init:	
   546                           ; 1 bytes @ 0x0
   547                           
   548  0070                     ?_Lcd_Clear:	
   549                           ; 1 bytes @ 0x0
   550                           
   551  0070                     ?_Lcd_Write_String:	
   552                           ; 1 bytes @ 0x0
   553                           
   554  0070                     ?_I2C_Master_Start:	
   555                           ; 1 bytes @ 0x0
   556                           
   557  0070                     ??_I2C_Master_Start:	
   558                           ; 1 bytes @ 0x0
   559                           
   560  0070                     ?_I2C_Master_Write:	
   561                           ; 1 bytes @ 0x0
   562                           
   563  0070                     ?_I2C_Master_Stop:	
   564                           ; 1 bytes @ 0x0
   565                           
   566  0070                     ??_I2C_Master_Stop:	
   567                           ; 1 bytes @ 0x0
   568                           
   569  0070                     ?_Lcd_Write_Char:	
   570                           ; 1 bytes @ 0x0
   571                           
   572  0070                     ?_main:	
   573                           ; 1 bytes @ 0x0
   574                           
   575  0070                     ?_I2C_Master_Wait:	
   576                           ; 1 bytes @ 0x0
   577                           
   578  0070                     ??_I2C_Master_Wait:	
   579                           ; 1 bytes @ 0x0
   580                           
   581  0070                     ?_Lcd_Port:	
   582                           ; 1 bytes @ 0x0
   583                           
   584  0070                     ??_Lcd_Port:	
   585                           ; 1 bytes @ 0x0
   586                           
   587  0070                     ?_Lcd_Cmd:	
   588                           ; 1 bytes @ 0x0
   589                           
   590  0070                     ?_I2C_Master_Read:	
   591                           ; 1 bytes @ 0x0
   592                           
   593  0070                     ?___wmul:	
   594                           ; 2 bytes @ 0x0
   595                           
   596  0070                     ?___awdiv:	
   597                           ; 2 bytes @ 0x0
   598                           
   599  0070                     ?___lwdiv:	
   600                           ; 2 bytes @ 0x0
   601                           
   602  0070                     ?___lldiv:	
   603                           ; 2 bytes @ 0x0
   604                           
   605  0070                     Lcd_Port@a:	
   606                           ; 4 bytes @ 0x0
   607                           
   608  0070                     I2C_Master_Write@d:	
   609                           ; 1 bytes @ 0x0
   610                           
   611  0070                     I2C_Master_Read@a:	
   612                           ; 2 bytes @ 0x0
   613                           
   614  0070                     ___wmul@multiplier:	
   615                           ; 2 bytes @ 0x0
   616                           
   617  0070                     ___awdiv@divisor:	
   618                           ; 2 bytes @ 0x0
   619                           
   620  0070                     ___lwdiv@divisor:	
   621                           ; 2 bytes @ 0x0
   622                           
   623  0070                     ___lldiv@divisor:	
   624                           ; 2 bytes @ 0x0
   625                           
   626                           
   627                           ; 4 bytes @ 0x0
   628  0070                     	ds	1
   629  0071                     ??_Lcd_Write_Char:
   630  0071                     ??_Lcd_Cmd:	
   631                           ; 1 bytes @ 0x1
   632                           
   633                           
   634                           ; 1 bytes @ 0x1
   635  0071                     	ds	1
   636  0072                     ??_I2C_Master_Write:
   637  0072                     ??_I2C_Master_Read:	
   638                           ; 1 bytes @ 0x2
   639                           
   640  0072                     Lcd_Write_Char@a:	
   641                           ; 1 bytes @ 0x2
   642                           
   643  0072                     ___wmul@multiplicand:	
   644                           ; 1 bytes @ 0x2
   645                           
   646  0072                     ___awdiv@dividend:	
   647                           ; 2 bytes @ 0x2
   648                           
   649  0072                     ___lwdiv@dividend:	
   650                           ; 2 bytes @ 0x2
   651                           
   652                           
   653                           ; 2 bytes @ 0x2
   654  0072                     	ds	1
   655  0073                     Lcd_Cmd@a:
   656  0073                     Lcd_Write_Char@temp:	
   657                           ; 1 bytes @ 0x3
   658                           
   659                           
   660                           ; 1 bytes @ 0x3
   661  0073                     	ds	1
   662  0074                     ??_Lcd_Init:
   663  0074                     ??_Lcd_Clear:	
   664                           ; 1 bytes @ 0x4
   665                           
   666  0074                     ?_Lcd_Set_Cursor:	
   667                           ; 1 bytes @ 0x4
   668                           
   669  0074                     ??___wmul:	
   670                           ; 1 bytes @ 0x4
   671                           
   672  0074                     ??___awdiv:	
   673                           ; 1 bytes @ 0x4
   674                           
   675  0074                     ??___lwdiv:	
   676                           ; 1 bytes @ 0x4
   677                           
   678  0074                     Lcd_Set_Cursor@b:	
   679                           ; 1 bytes @ 0x4
   680                           
   681  0074                     Lcd_Write_Char@y:	
   682                           ; 1 bytes @ 0x4
   683                           
   684  0074                     I2C_Master_Read@temp:	
   685                           ; 1 bytes @ 0x4
   686                           
   687  0074                     ___wmul@product:	
   688                           ; 2 bytes @ 0x4
   689                           
   690  0074                     ___lldiv@dividend:	
   691                           ; 2 bytes @ 0x4
   692                           
   693                           
   694                           ; 4 bytes @ 0x4
   695  0074                     	ds	1
   696  0075                     ??_Lcd_Set_Cursor:
   697  0075                     ??_Lcd_Write_String:	
   698                           ; 1 bytes @ 0x5
   699                           
   700  0075                     ___awdiv@counter:	
   701                           ; 1 bytes @ 0x5
   702                           
   703  0075                     Lcd_Write_String@i:	
   704                           ; 1 bytes @ 0x5
   705                           
   706  0075                     ___lwdiv@quotient:	
   707                           ; 2 bytes @ 0x5
   708                           
   709                           
   710                           ; 2 bytes @ 0x5
   711  0075                     	ds	1
   712  0076                     ___awdiv@sign:
   713                           
   714                           ; 1 bytes @ 0x6
   715  0076                     	ds	1
   716  0077                     Lcd_Set_Cursor@a:
   717  0077                     Lcd_Write_String@a:	
   718                           ; 1 bytes @ 0x7
   719                           
   720  0077                     ___lwdiv@counter:	
   721                           ; 1 bytes @ 0x7
   722                           
   723  0077                     ___awdiv@quotient:	
   724                           ; 1 bytes @ 0x7
   725                           
   726                           
   727                           ; 2 bytes @ 0x7
   728  0077                     	ds	1
   729  0078                     ?_str_2_dc:
   730  0078                     ??___lldiv:	
   731                           ; 1 bytes @ 0x8
   732                           
   733  0078                     Lcd_Set_Cursor@z:	
   734                           ; 1 bytes @ 0x8
   735                           
   736  0078                     str_2_dc@var:	
   737                           ; 1 bytes @ 0x8
   738                           
   739                           
   740                           ; 2 bytes @ 0x8
   741  0078                     	ds	1
   742  0079                     ?___awmod:
   743  0079                     Lcd_Set_Cursor@y:	
   744                           ; 2 bytes @ 0x9
   745                           
   746  0079                     ___awmod@divisor:	
   747                           ; 1 bytes @ 0x9
   748                           
   749  0079                     ___lldiv@quotient:	
   750                           ; 2 bytes @ 0x9
   751                           
   752                           
   753                           ; 4 bytes @ 0x9
   754  0079                     	ds	1
   755  007A                     ??_str_2_dc:
   756  007A                     Lcd_Set_Cursor@temp:	
   757                           ; 1 bytes @ 0xA
   758                           
   759                           
   760                           ; 1 bytes @ 0xA
   761  007A                     	ds	1
   762  007B                     ___awmod@dividend:
   763                           
   764                           ; 2 bytes @ 0xB
   765  007B                     	ds	1
   766  007C                     str_2_dc@vcv:
   767                           
   768                           ; 2 bytes @ 0xC
   769  007C                     	ds	1
   770  007D                     ??___awmod:
   771  007D                     ___lldiv@counter:	
   772                           ; 1 bytes @ 0xD
   773                           
   774                           
   775                           ; 1 bytes @ 0xD
   776  007D                     	ds	1
   777  007E                     ??_initSETUP:
   778                           
   779                           	psect	cstackBANK0
   780  002E                     __pcstackBANK0:	
   781                           ; 1 bytes @ 0xE
   782                           
   783  002E                     ?_I2C_Master_Init:
   784  002E                     ___awmod@counter:	
   785                           ; 1 bytes @ 0x0
   786                           
   787  002E                     I2C_Master_Init@c:	
   788                           ; 1 bytes @ 0x0
   789                           
   790                           
   791                           ; 4 bytes @ 0x0
   792  002E                     	ds	1
   793  002F                     ___awmod@sign:
   794                           
   795                           ; 1 bytes @ 0x1
   796  002F                     	ds	3
   797  0032                     ??_I2C_Master_Init:
   798                           
   799                           ; 1 bytes @ 0x4
   800  0032                     	ds	4
   801  0036                     ??_main:
   802                           
   803                           ; 1 bytes @ 0x8
   804  0036                     	ds	3
   805                           
   806                           	psect	maintext
   807  051A                     __pmaintext:	
   808 ;;
   809 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   810 ;;
   811 ;; *************** function _main *****************
   812 ;; Defined at:
   813 ;;		line 46 in file "master.c"
   814 ;; Parameters:    Size  Location     Type
   815 ;;		None
   816 ;; Auto vars:     Size  Location     Type
   817 ;;		None
   818 ;; Return value:  Size  Location     Type
   819 ;;                  1    wreg      void 
   820 ;; Registers used:
   821 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   822 ;; Tracked objects:
   823 ;;		On entry : B00/0
   824 ;;		On exit  : 0/0
   825 ;;		Unchanged: 0/0
   826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   827 ;;      Params:         0       0       0       0       0
   828 ;;      Locals:         0       0       0       0       0
   829 ;;      Temps:          0       3       0       0       0
   830 ;;      Totals:         0       3       0       0       0
   831 ;;Total ram usage:        3 bytes
   832 ;; Hardware stack levels required when called: 3
   833 ;; This function calls:
   834 ;;		_I2C_Master_Read
   835 ;;		_I2C_Master_Start
   836 ;;		_I2C_Master_Stop
   837 ;;		_I2C_Master_Write
   838 ;;		_Lcd_Clear
   839 ;;		_Lcd_Init
   840 ;;		_Lcd_Set_Cursor
   841 ;;		_Lcd_Write_Char
   842 ;;		_Lcd_Write_String
   843 ;;		___awdiv
   844 ;;		___awmod
   845 ;;		_initSETUP
   846 ;;		_str_2_dc
   847 ;; This function is called by:
   848 ;;		Startup code after reset
   849 ;; This function uses a non-reentrant model
   850 ;;
   851                           
   852                           
   853                           ;psect for function _main
   854  051A                     _main:
   855  051A                     l1560:	
   856                           ;incstack = 0
   857                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   858                           
   859                           
   860                           ;master.c: 47:     initSETUP();
   861  051A  120A  118A  2215  120A  118A  	fcall	_initSETUP
   862                           
   863                           ;master.c: 48:     Lcd_Init();
   864  051F  120A  118A  22E9  120A  118A  	fcall	_Lcd_Init
   865                           
   866                           ;master.c: 49:     Lcd_Clear();
   867  0524  120A  118A  2186  120A  118A  	fcall	_Lcd_Clear
   868                           
   869                           ;master.c: 50:     Lcd_Set_Cursor(1,1);
   870  0529  01F4               	clrf	Lcd_Set_Cursor@b
   871  052A  0AF4               	incf	Lcd_Set_Cursor@b,f
   872  052B  3001               	movlw	1
   873  052C  120A  118A  2330  120A  118A  	fcall	_Lcd_Set_Cursor
   874  0531                     l1562:
   875                           
   876                           ;master.c: 51:     Lcd_Write_String(" RH:   T:   L%:");
   877  0531  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   878  0532  120A  118A  21CB  120A  118A  	fcall	_Lcd_Write_String
   879  0537                     l1564:
   880                           
   881                           ;master.c: 53:         I2C_Master_Start();
   882  0537  120A  118A  215D  120A  118A  	fcall	_I2C_Master_Start
   883  053C                     l1566:
   884                           
   885                           ;master.c: 54:         I2C_Master_Write(0x81);
   886  053C  3081               	movlw	129
   887  053D  00F0               	movwf	I2C_Master_Write@d
   888  053E  3000               	movlw	0
   889  053F  00F1               	movwf	I2C_Master_Write@d+1
   890  0540  120A  118A  216F  120A  118A  	fcall	_I2C_Master_Write
   891  0545                     l1568:
   892                           
   893                           ;master.c: 55:         if (test==0){
   894  0545  1283               	bcf	3,5	;RP0=0, select bank0
   895  0546  1303               	bcf	3,6	;RP1=0, select bank0
   896  0547  0824               	movf	_test,w
   897  0548  1D03               	btfss	3,2
   898  0549  2D4B               	goto	u1041
   899  054A  2D4C               	goto	u1040
   900  054B                     u1041:
   901  054B  2D5D               	goto	l1574
   902  054C                     u1040:
   903  054C                     l1570:
   904                           
   905                           ;master.c: 56:                 RH=I2C_Master_Read(0);
   906  054C  3000               	movlw	0
   907  054D  00F0               	movwf	I2C_Master_Read@a
   908  054E  00F1               	movwf	I2C_Master_Read@a+1
   909  054F  120A  118A  223F  120A  118A  	fcall	_I2C_Master_Read
   910  0554  0870               	movf	?_I2C_Master_Read,w
   911  0555  1283               	bcf	3,5	;RP0=0, select bank0
   912  0556  1303               	bcf	3,6	;RP1=0, select bank0
   913  0557  00B6               	movwf	??_main
   914  0558  0836               	movf	??_main,w
   915  0559  00A5               	movwf	_RH
   916  055A                     l1572:
   917                           
   918                           ;master.c: 57:                 test = 1;
   919  055A  01A4               	clrf	_test
   920  055B  0AA4               	incf	_test,f
   921                           
   922                           ;master.c: 58:             }
   923  055C  2D71               	goto	l1580
   924  055D                     l1574:
   925  055D  0324               	decf	_test,w
   926  055E  1D03               	btfss	3,2
   927  055F  2D61               	goto	u1051
   928  0560  2D62               	goto	u1050
   929  0561                     u1051:
   930  0561  2D71               	goto	l1580
   931  0562                     u1050:
   932  0562                     l1576:
   933                           
   934                           ;master.c: 60:                 Humidity=I2C_Master_Read(0);
   935  0562  3000               	movlw	0
   936  0563  00F0               	movwf	I2C_Master_Read@a
   937  0564  00F1               	movwf	I2C_Master_Read@a+1
   938  0565  120A  118A  223F  120A  118A  	fcall	_I2C_Master_Read
   939  056A  0870               	movf	?_I2C_Master_Read,w
   940  056B  1283               	bcf	3,5	;RP0=0, select bank0
   941  056C  1303               	bcf	3,6	;RP1=0, select bank0
   942  056D  00B6               	movwf	??_main
   943  056E  0836               	movf	??_main,w
   944  056F  00A6               	movwf	_Humidity
   945  0570                     l1578:
   946                           
   947                           ;master.c: 61:                 test = 0;
   948  0570  01A4               	clrf	_test
   949  0571                     l1580:
   950                           
   951                           ;master.c: 63:         I2C_Master_Stop();
   952  0571  120A  118A  2166  120A  118A  	fcall	_I2C_Master_Stop
   953  0576                     l1582:
   954                           
   955                           ;master.c: 64:         _delay((unsigned long)((200)*(8000000/4000.0)));
   956  0576  3003               	movlw	3
   957  0577  1283               	bcf	3,5	;RP0=0, select bank0
   958  0578  1303               	bcf	3,6	;RP1=0, select bank0
   959  0579  00B8               	movwf	??_main+2
   960  057A  3008               	movlw	8
   961  057B  00B7               	movwf	??_main+1
   962  057C  3076               	movlw	118
   963  057D  00B6               	movwf	??_main
   964  057E                     u1157:
   965  057E  0BB6               	decfsz	??_main,f
   966  057F  2D7E               	goto	u1157
   967  0580  0BB7               	decfsz	??_main+1,f
   968  0581  2D7E               	goto	u1157
   969  0582  0BB8               	decfsz	??_main+2,f
   970  0583  2D7E               	goto	u1157
   971  0584  0000               	nop
   972  0585                     l1584:
   973                           
   974                           ;master.c: 65:         I2C_Master_Start();
   975  0585  120A  118A  215D  120A  118A  	fcall	_I2C_Master_Start
   976  058A                     l1586:
   977                           
   978                           ;master.c: 66:         I2C_Master_Write(0x61);
   979  058A  3061               	movlw	97
   980  058B  00F0               	movwf	I2C_Master_Write@d
   981  058C  3000               	movlw	0
   982  058D  00F1               	movwf	I2C_Master_Write@d+1
   983  058E  120A  118A  216F  120A  118A  	fcall	_I2C_Master_Write
   984  0593                     l1588:
   985                           
   986                           ;master.c: 67:         LDR = I2C_Master_Read(0);
   987  0593  3000               	movlw	0
   988  0594  00F0               	movwf	I2C_Master_Read@a
   989  0595  00F1               	movwf	I2C_Master_Read@a+1
   990  0596  120A  118A  223F  120A  118A  	fcall	_I2C_Master_Read
   991  059B  0871               	movf	?_I2C_Master_Read+1,w
   992  059C  1283               	bcf	3,5	;RP0=0, select bank0
   993  059D  1303               	bcf	3,6	;RP1=0, select bank0
   994  059E  00A1               	movwf	_LDR+1
   995  059F  0870               	movf	?_I2C_Master_Read,w
   996  05A0  00A0               	movwf	_LDR
   997  05A1                     l1590:
   998                           
   999                           ;master.c: 68:         I2C_Master_Stop();
  1000  05A1  120A  118A  2166  120A  118A  	fcall	_I2C_Master_Stop
  1001  05A6                     l1592:
  1002                           
  1003                           ;master.c: 69:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1004  05A6  3003               	movlw	3
  1005  05A7  1283               	bcf	3,5	;RP0=0, select bank0
  1006  05A8  1303               	bcf	3,6	;RP1=0, select bank0
  1007  05A9  00B8               	movwf	??_main+2
  1008  05AA  3008               	movlw	8
  1009  05AB  00B7               	movwf	??_main+1
  1010  05AC  3076               	movlw	118
  1011  05AD  00B6               	movwf	??_main
  1012  05AE                     u1167:
  1013  05AE  0BB6               	decfsz	??_main,f
  1014  05AF  2DAE               	goto	u1167
  1015  05B0  0BB7               	decfsz	??_main+1,f
  1016  05B1  2DAE               	goto	u1167
  1017  05B2  0BB8               	decfsz	??_main+2,f
  1018  05B3  2DAE               	goto	u1167
  1019  05B4  0000               	nop
  1020  05B5                     l1594:
  1021                           
  1022                           ;master.c: 70:         Lcd_Set_Cursor(2,1);
  1023  05B5  01F4               	clrf	Lcd_Set_Cursor@b
  1024  05B6  0AF4               	incf	Lcd_Set_Cursor@b,f
  1025  05B7  3002               	movlw	2
  1026  05B8  120A  118A  2330  120A  118A  	fcall	_Lcd_Set_Cursor
  1027  05BD                     l1596:
  1028                           
  1029                           ;master.c: 72:         unit0 = 48 + ((Humidity/10) %10);
  1030  05BD  300A               	movlw	10
  1031  05BE  00F9               	movwf	___awmod@divisor
  1032  05BF  3000               	movlw	0
  1033  05C0  00FA               	movwf	___awmod@divisor+1
  1034  05C1  300A               	movlw	10
  1035  05C2  00F0               	movwf	___awdiv@divisor
  1036  05C3  3000               	movlw	0
  1037  05C4  00F1               	movwf	___awdiv@divisor+1
  1038  05C5  1283               	bcf	3,5	;RP0=0, select bank0
  1039  05C6  1303               	bcf	3,6	;RP1=0, select bank0
  1040  05C7  0826               	movf	_Humidity,w
  1041  05C8  00B6               	movwf	??_main
  1042  05C9  01B7               	clrf	??_main+1
  1043  05CA  0836               	movf	??_main,w
  1044  05CB  00F2               	movwf	___awdiv@dividend
  1045  05CC  0837               	movf	??_main+1,w
  1046  05CD  00F3               	movwf	___awdiv@dividend+1
  1047  05CE  120A  118A  2443  120A  118A  	fcall	___awdiv
  1048  05D3  0871               	movf	?___awdiv+1,w
  1049  05D4  00FC               	movwf	___awmod@dividend+1
  1050  05D5  0870               	movf	?___awdiv,w
  1051  05D6  00FB               	movwf	___awmod@dividend
  1052  05D7  120A  118A  2382  120A  118A  	fcall	___awmod
  1053  05DC  0879               	movf	?___awmod,w
  1054  05DD  3E30               	addlw	48
  1055  05DE  1283               	bcf	3,5	;RP0=0, select bank0
  1056  05DF  1303               	bcf	3,6	;RP1=0, select bank0
  1057  05E0  00B8               	movwf	??_main+2
  1058  05E1  0838               	movf	??_main+2,w
  1059  05E2  00AD               	movwf	_unit0
  1060  05E3                     l1598:
  1061                           
  1062                           ;master.c: 73:         dec0 = 48 + (Humidity %10);
  1063  05E3  300A               	movlw	10
  1064  05E4  00F9               	movwf	___awmod@divisor
  1065  05E5  3000               	movlw	0
  1066  05E6  00FA               	movwf	___awmod@divisor+1
  1067  05E7  0826               	movf	_Humidity,w
  1068  05E8  00B6               	movwf	??_main
  1069  05E9  01B7               	clrf	??_main+1
  1070  05EA  0836               	movf	??_main,w
  1071  05EB  00FB               	movwf	___awmod@dividend
  1072  05EC  0837               	movf	??_main+1,w
  1073  05ED  00FC               	movwf	___awmod@dividend+1
  1074  05EE  120A  118A  2382  120A  118A  	fcall	___awmod
  1075  05F3  0879               	movf	?___awmod,w
  1076  05F4  3E30               	addlw	48
  1077  05F5  1283               	bcf	3,5	;RP0=0, select bank0
  1078  05F6  1303               	bcf	3,6	;RP1=0, select bank0
  1079  05F7  00B8               	movwf	??_main+2
  1080  05F8  0838               	movf	??_main+2,w
  1081  05F9  00AC               	movwf	_dec0
  1082  05FA                     l1600:
  1083                           
  1084                           ;master.c: 74:         unit1 =48 + ((RH / 10) % 10);
  1085  05FA  300A               	movlw	10
  1086  05FB  00F9               	movwf	___awmod@divisor
  1087  05FC  3000               	movlw	0
  1088  05FD  00FA               	movwf	___awmod@divisor+1
  1089  05FE  300A               	movlw	10
  1090  05FF  00F0               	movwf	___awdiv@divisor
  1091  0600  3000               	movlw	0
  1092  0601  00F1               	movwf	___awdiv@divisor+1
  1093  0602  0825               	movf	_RH,w
  1094  0603  00B6               	movwf	??_main
  1095  0604  01B7               	clrf	??_main+1
  1096  0605  0836               	movf	??_main,w
  1097  0606  00F2               	movwf	___awdiv@dividend
  1098  0607  0837               	movf	??_main+1,w
  1099  0608  00F3               	movwf	___awdiv@dividend+1
  1100  0609  120A  118A  2443  120A  118A  	fcall	___awdiv
  1101  060E  0871               	movf	?___awdiv+1,w
  1102  060F  00FC               	movwf	___awmod@dividend+1
  1103  0610  0870               	movf	?___awdiv,w
  1104  0611  00FB               	movwf	___awmod@dividend
  1105  0612  120A  118A  2382  120A  118A  	fcall	___awmod
  1106  0617  0879               	movf	?___awmod,w
  1107  0618  3E30               	addlw	48
  1108  0619  1283               	bcf	3,5	;RP0=0, select bank0
  1109  061A  1303               	bcf	3,6	;RP1=0, select bank0
  1110  061B  00B8               	movwf	??_main+2
  1111  061C  0838               	movf	??_main+2,w
  1112  061D  00AB               	movwf	_unit1
  1113  061E                     l1602:
  1114                           
  1115                           ;master.c: 75:         dec1 = 48 + (RH % 10);
  1116  061E  300A               	movlw	10
  1117  061F  00F9               	movwf	___awmod@divisor
  1118  0620  3000               	movlw	0
  1119  0621  00FA               	movwf	___awmod@divisor+1
  1120  0622  0825               	movf	_RH,w
  1121  0623  00B6               	movwf	??_main
  1122  0624  01B7               	clrf	??_main+1
  1123  0625  0836               	movf	??_main,w
  1124  0626  00FB               	movwf	___awmod@dividend
  1125  0627  0837               	movf	??_main+1,w
  1126  0628  00FC               	movwf	___awmod@dividend+1
  1127  0629  120A  118A  2382  120A  118A  	fcall	___awmod
  1128  062E  0879               	movf	?___awmod,w
  1129  062F  3E30               	addlw	48
  1130  0630  1283               	bcf	3,5	;RP0=0, select bank0
  1131  0631  1303               	bcf	3,6	;RP1=0, select bank0
  1132  0632  00B8               	movwf	??_main+2
  1133  0633  0838               	movf	??_main+2,w
  1134  0634  00AA               	movwf	_dec1
  1135  0635                     l1604:
  1136                           
  1137                           ;master.c: 78:         Lcd_Write_Char(unit0);
  1138  0635  082D               	movf	_unit0,w
  1139  0636  120A  118A  21AD  120A  118A  	fcall	_Lcd_Write_Char
  1140  063B                     l1606:
  1141                           
  1142                           ;master.c: 79:         Lcd_Write_Char(dec0);
  1143  063B  1283               	bcf	3,5	;RP0=0, select bank0
  1144  063C  1303               	bcf	3,6	;RP1=0, select bank0
  1145  063D  082C               	movf	_dec0,w
  1146  063E  120A  118A  21AD  120A  118A  	fcall	_Lcd_Write_Char
  1147  0643                     l1608:
  1148                           
  1149                           ;master.c: 80:         Lcd_Write_String("%   ");
  1150  0643  3028               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1151  0644  120A  118A  21CB  120A  118A  	fcall	_Lcd_Write_String
  1152  0649                     l1610:
  1153                           
  1154                           ;master.c: 81:         Lcd_Write_Char(unit1);
  1155  0649  1283               	bcf	3,5	;RP0=0, select bank0
  1156  064A  1303               	bcf	3,6	;RP1=0, select bank0
  1157  064B  082B               	movf	_unit1,w
  1158  064C  120A  118A  21AD  120A  118A  	fcall	_Lcd_Write_Char
  1159  0651                     l1612:
  1160                           
  1161                           ;master.c: 82:         Lcd_Write_Char(dec1);
  1162  0651  1283               	bcf	3,5	;RP0=0, select bank0
  1163  0652  1303               	bcf	3,6	;RP1=0, select bank0
  1164  0653  082A               	movf	_dec1,w
  1165  0654  120A  118A  21AD  120A  118A  	fcall	_Lcd_Write_Char
  1166  0659                     l1614:
  1167                           
  1168                           ;master.c: 83:         Lcd_Write_Char(223);
  1169  0659  30DF               	movlw	223
  1170  065A  120A  118A  21AD  120A  118A  	fcall	_Lcd_Write_Char
  1171  065F                     l1616:
  1172                           
  1173                           ;master.c: 84:         Lcd_Write_String("C  ");
  1174  065F  302D               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1175  0660  120A  118A  21CB  120A  118A  	fcall	_Lcd_Write_String
  1176  0665                     l1618:
  1177                           
  1178                           ;master.c: 86:         str_2_dc(LDR);
  1179  0665  1283               	bcf	3,5	;RP0=0, select bank0
  1180  0666  1303               	bcf	3,6	;RP1=0, select bank0
  1181  0667  0821               	movf	_LDR+1,w
  1182  0668  00F9               	movwf	str_2_dc@var+1
  1183  0669  0820               	movf	_LDR,w
  1184  066A  00F8               	movwf	str_2_dc@var
  1185  066B  120A  118A  24AA  120A  118A  	fcall	_str_2_dc
  1186  0670                     l1620:
  1187                           
  1188                           ;master.c: 87:         Lcd_Write_Char(unit0_0);
  1189  0670  1283               	bcf	3,5	;RP0=0, select bank0
  1190  0671  1303               	bcf	3,6	;RP1=0, select bank0
  1191  0672  0829               	movf	_unit0_0,w
  1192  0673  120A  118A  21AD  120A  118A  	fcall	_Lcd_Write_Char
  1193  0678                     l1622:
  1194                           
  1195                           ;master.c: 88:         Lcd_Write_Char(dec0_12);
  1196  0678  1283               	bcf	3,5	;RP0=0, select bank0
  1197  0679  1303               	bcf	3,6	;RP1=0, select bank0
  1198  067A  0828               	movf	_dec0_12,w
  1199  067B  120A  118A  21AD  120A  118A  	fcall	_Lcd_Write_Char
  1200  0680                     l1624:
  1201                           
  1202                           ;master.c: 89:         Lcd_Write_Char(dec1_12);
  1203  0680  1283               	bcf	3,5	;RP0=0, select bank0
  1204  0681  1303               	bcf	3,6	;RP1=0, select bank0
  1205  0682  0827               	movf	_dec1_12,w
  1206  0683  120A  118A  21AD  120A  118A  	fcall	_Lcd_Write_Char
  1207  0688                     l1626:
  1208                           
  1209                           ;master.c: 90:         Lcd_Write_String("%");
  1210  0688  3031               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1211  0689  120A  118A  21CB  120A  118A  	fcall	_Lcd_Write_String
  1212  068E                     l1628:
  1213                           
  1214                           ;master.c: 94:         if(RH>34 && cont ==1){
  1215  068E  3023               	movlw	35
  1216  068F  1283               	bcf	3,5	;RP0=0, select bank0
  1217  0690  1303               	bcf	3,6	;RP1=0, select bank0
  1218  0691  0225               	subwf	_RH,w
  1219  0692  1C03               	skipc
  1220  0693  2E95               	goto	u1061
  1221  0694  2E96               	goto	u1060
  1222  0695                     u1061:
  1223  0695  2EB0               	goto	l1640
  1224  0696                     u1060:
  1225  0696                     l1630:
  1226  0696  0323               	decf	_cont,w
  1227  0697  1D03               	btfss	3,2
  1228  0698  2E9A               	goto	u1071
  1229  0699  2E9B               	goto	u1070
  1230  069A                     u1071:
  1231  069A  2EB0               	goto	l1640
  1232  069B                     u1070:
  1233  069B                     l1632:
  1234                           
  1235                           ;master.c: 96:             PORTAbits.RA3 = 1;
  1236  069B  1585               	bsf	5,3	;volatile
  1237  069C                     l1634:
  1238                           
  1239                           ;master.c: 97:             _delay((unsigned long)((3000)*(8000000/4000.0)));
  1240  069C  301F               	movlw	31
  1241  069D  1283               	bcf	3,5	;RP0=0, select bank0
  1242  069E  1303               	bcf	3,6	;RP1=0, select bank0
  1243  069F  00B8               	movwf	??_main+2
  1244  06A0  3071               	movlw	113
  1245  06A1  00B7               	movwf	??_main+1
  1246  06A2  301D               	movlw	29
  1247  06A3  00B6               	movwf	??_main
  1248  06A4                     u1177:
  1249  06A4  0BB6               	decfsz	??_main,f
  1250  06A5  2EA4               	goto	u1177
  1251  06A6  0BB7               	decfsz	??_main+1,f
  1252  06A7  2EA4               	goto	u1177
  1253  06A8  0BB8               	decfsz	??_main+2,f
  1254  06A9  2EA4               	goto	u1177
  1255  06AA  2EAB               	nop2
  1256  06AB                     l1636:
  1257                           
  1258                           ;master.c: 98:             PORTAbits.RA3 = 0;
  1259  06AB  1283               	bcf	3,5	;RP0=0, select bank0
  1260  06AC  1303               	bcf	3,6	;RP1=0, select bank0
  1261  06AD  1185               	bcf	5,3	;volatile
  1262  06AE                     l1638:
  1263                           
  1264                           ;master.c: 99:             cont =0;
  1265  06AE  01A3               	clrf	_cont
  1266                           
  1267                           ;master.c: 100:         }
  1268  06AF  2D37               	goto	l1564
  1269  06B0                     l1640:
  1270  06B0  3023               	movlw	35
  1271  06B1  0225               	subwf	_RH,w
  1272  06B2  1803               	skipnc
  1273  06B3  2EB5               	goto	u1081
  1274  06B4  2EB6               	goto	u1080
  1275  06B5                     u1081:
  1276  06B5  2EBF               	goto	l1646
  1277  06B6                     u1080:
  1278  06B6                     l1642:
  1279  06B6  0823               	movf	_cont,w
  1280  06B7  1D03               	btfss	3,2
  1281  06B8  2EBA               	goto	u1091
  1282  06B9  2EBB               	goto	u1090
  1283  06BA                     u1091:
  1284  06BA  2EBF               	goto	l1646
  1285  06BB                     u1090:
  1286  06BB                     l1644:
  1287                           
  1288                           ;master.c: 102:             PORTAbits.RA3 = 0;
  1289  06BB  1185               	bcf	5,3	;volatile
  1290                           
  1291                           ;master.c: 103:             cont = 1;
  1292  06BC  01A3               	clrf	_cont
  1293  06BD  0AA3               	incf	_cont,f
  1294                           
  1295                           ;master.c: 105:         }
  1296  06BE  2D37               	goto	l1564
  1297  06BF                     l1646:
  1298  06BF  0822               	movf	_cont1,w
  1299  06C0  1D03               	btfss	3,2
  1300  06C1  2EC3               	goto	u1101
  1301  06C2  2EC4               	goto	u1100
  1302  06C3                     u1101:
  1303  06C3  2EE6               	goto	l1656
  1304  06C4                     u1100:
  1305  06C4                     l1648:
  1306                           
  1307                           ;master.c: 108:             PORTAbits.RA0 = 1;
  1308  06C4  1405               	bsf	5,0	;volatile
  1309  06C5                     l1650:
  1310                           
  1311                           ;master.c: 109:             _delay((unsigned long)((2000)*(8000000/4000000.0)));
  1312  06C5  3006               	movlw	6
  1313  06C6  1283               	bcf	3,5	;RP0=0, select bank0
  1314  06C7  1303               	bcf	3,6	;RP1=0, select bank0
  1315  06C8  00B7               	movwf	??_main+1
  1316  06C9  302F               	movlw	47
  1317  06CA  00B6               	movwf	??_main
  1318  06CB                     u1187:
  1319  06CB  0BB6               	decfsz	??_main,f
  1320  06CC  2ECB               	goto	u1187
  1321  06CD  0BB7               	decfsz	??_main+1,f
  1322  06CE  2ECB               	goto	u1187
  1323  06CF  2ED0               	nop2
  1324  06D0                     l1652:
  1325                           
  1326                           ;master.c: 110:             PORTAbits.RA0 = 0;
  1327  06D0  1283               	bcf	3,5	;RP0=0, select bank0
  1328  06D1  1303               	bcf	3,6	;RP1=0, select bank0
  1329  06D2  1005               	bcf	5,0	;volatile
  1330                           
  1331                           ;master.c: 111:             _delay((unsigned long)((1000)*(8000000/4000.0)));
  1332  06D3  300B               	movlw	11
  1333  06D4  1283               	bcf	3,5	;RP0=0, select bank0
  1334  06D5  1303               	bcf	3,6	;RP1=0, select bank0
  1335  06D6  00B8               	movwf	??_main+2
  1336  06D7  3026               	movlw	38
  1337  06D8  00B7               	movwf	??_main+1
  1338  06D9  305D               	movlw	93
  1339  06DA  00B6               	movwf	??_main
  1340  06DB                     u1197:
  1341  06DB  0BB6               	decfsz	??_main,f
  1342  06DC  2EDB               	goto	u1197
  1343  06DD  0BB7               	decfsz	??_main+1,f
  1344  06DE  2EDB               	goto	u1197
  1345  06DF  0BB8               	decfsz	??_main+2,f
  1346  06E0  2EDB               	goto	u1197
  1347  06E1                     l1654:
  1348                           
  1349                           ;master.c: 112:             cont1 = 1;
  1350  06E1  1283               	bcf	3,5	;RP0=0, select bank0
  1351  06E2  1303               	bcf	3,6	;RP1=0, select bank0
  1352  06E3  01A2               	clrf	_cont1
  1353  06E4  0AA2               	incf	_cont1,f
  1354                           
  1355                           ;master.c: 114:         }
  1356  06E5  2D37               	goto	l1564
  1357  06E6                     l1656:
  1358  06E6  0821               	movf	_LDR+1,w
  1359  06E7  3A80               	xorlw	128
  1360  06E8  00FF               	movwf	btemp+1
  1361  06E9  3080               	movlw	128
  1362  06EA  027F               	subwf	btemp+1,w
  1363  06EB  1D03               	skipz
  1364  06EC  2EEF               	goto	u1115
  1365  06ED  3015               	movlw	21
  1366  06EE  0220               	subwf	_LDR,w
  1367  06EF                     u1115:
  1368  06EF  1803               	skipnc
  1369  06F0  2EF2               	goto	u1111
  1370  06F1  2EF3               	goto	u1110
  1371  06F2                     u1111:
  1372  06F2  2F68               	goto	l1690
  1373  06F3                     u1110:
  1374  06F3                     l1658:
  1375  06F3  1283               	bcf	3,5	;RP0=0, select bank0
  1376  06F4  1303               	bcf	3,6	;RP1=0, select bank0
  1377  06F5  0322               	decf	_cont1,w
  1378  06F6  1D03               	btfss	3,2
  1379  06F7  2EF9               	goto	u1121
  1380  06F8  2EFA               	goto	u1120
  1381  06F9                     u1121:
  1382  06F9  2F68               	goto	l1690
  1383  06FA                     u1120:
  1384  06FA                     l1660:
  1385                           
  1386                           ;master.c: 117:             cont1 = 0;
  1387  06FA  01A2               	clrf	_cont1
  1388  06FB                     l1662:
  1389                           
  1390                           ;master.c: 118:             PORTAbits.RA0 = 1;
  1391  06FB  1405               	bsf	5,0	;volatile
  1392  06FC                     l1664:
  1393                           
  1394                           ;master.c: 119:             _delay((unsigned long)((1000)*(8000000/4000000.0)));
  1395  06FC  3003               	movlw	3
  1396  06FD  1283               	bcf	3,5	;RP0=0, select bank0
  1397  06FE  1303               	bcf	3,6	;RP1=0, select bank0
  1398  06FF  00B7               	movwf	??_main+1
  1399  0700  3097               	movlw	151
  1400  0701  00B6               	movwf	??_main
  1401  0702                     u1207:
  1402  0702  0BB6               	decfsz	??_main,f
  1403  0703  2F02               	goto	u1207
  1404  0704  0BB7               	decfsz	??_main+1,f
  1405  0705  2F02               	goto	u1207
  1406  0706                     l1666:
  1407                           
  1408                           ;master.c: 120:             PORTAbits.RA0 = 0;
  1409  0706  1283               	bcf	3,5	;RP0=0, select bank0
  1410  0707  1303               	bcf	3,6	;RP1=0, select bank0
  1411  0708  1005               	bcf	5,0	;volatile
  1412  0709                     l1668:
  1413                           
  1414                           ;master.c: 121:             _delay((unsigned long)((1000)*(8000000/4000.0)));
  1415  0709  300B               	movlw	11
  1416  070A  1283               	bcf	3,5	;RP0=0, select bank0
  1417  070B  1303               	bcf	3,6	;RP1=0, select bank0
  1418  070C  00B8               	movwf	??_main+2
  1419  070D  3026               	movlw	38
  1420  070E  00B7               	movwf	??_main+1
  1421  070F  305D               	movlw	93
  1422  0710  00B6               	movwf	??_main
  1423  0711                     u1217:
  1424  0711  0BB6               	decfsz	??_main,f
  1425  0712  2F11               	goto	u1217
  1426  0713  0BB7               	decfsz	??_main+1,f
  1427  0714  2F11               	goto	u1217
  1428  0715  0BB8               	decfsz	??_main+2,f
  1429  0716  2F11               	goto	u1217
  1430  0717                     l1670:
  1431                           
  1432                           ;master.c: 122:             Lcd_Clear();
  1433  0717  120A  118A  2186  120A  118A  	fcall	_Lcd_Clear
  1434  071C                     l1672:
  1435                           
  1436                           ;master.c: 123:             Lcd_Set_Cursor(1,1);
  1437  071C  01F4               	clrf	Lcd_Set_Cursor@b
  1438  071D  0AF4               	incf	Lcd_Set_Cursor@b,f
  1439  071E  3001               	movlw	1
  1440  071F  120A  118A  2330  120A  118A  	fcall	_Lcd_Set_Cursor
  1441  0724                     l1674:
  1442                           
  1443                           ;master.c: 124:             Lcd_Write_String("DISPENSANDO");
  1444  0724  3011               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1445  0725  120A  118A  21CB  120A  118A  	fcall	_Lcd_Write_String
  1446  072A                     l1676:
  1447                           
  1448                           ;master.c: 125:             Lcd_Set_Cursor(2,1);
  1449  072A  01F4               	clrf	Lcd_Set_Cursor@b
  1450  072B  0AF4               	incf	Lcd_Set_Cursor@b,f
  1451  072C  3002               	movlw	2
  1452  072D  120A  118A  2330  120A  118A  	fcall	_Lcd_Set_Cursor
  1453  0732                     l1678:
  1454                           
  1455                           ;master.c: 126:             Lcd_Write_String(" COMIDA...");
  1456  0732  301D               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1457  0733  120A  118A  21CB  120A  118A  	fcall	_Lcd_Write_String
  1458  0738                     l1680:
  1459                           
  1460                           ;master.c: 127:             _delay((unsigned long)((5000)*(8000000/4000.0)));
  1461  0738  3033               	movlw	51
  1462  0739  1283               	bcf	3,5	;RP0=0, select bank0
  1463  073A  1303               	bcf	3,6	;RP1=0, select bank0
  1464  073B  00B8               	movwf	??_main+2
  1465  073C  30BB               	movlw	187
  1466  073D  00B7               	movwf	??_main+1
  1467  073E  30DF               	movlw	223
  1468  073F  00B6               	movwf	??_main
  1469  0740                     u1227:
  1470  0740  0BB6               	decfsz	??_main,f
  1471  0741  2F40               	goto	u1227
  1472  0742  0BB7               	decfsz	??_main+1,f
  1473  0743  2F40               	goto	u1227
  1474  0744  0BB8               	decfsz	??_main+2,f
  1475  0745  2F40               	goto	u1227
  1476  0746                     l1682:
  1477                           
  1478                           ;master.c: 128:             Lcd_Clear();
  1479  0746  120A  118A  2186  120A  118A  	fcall	_Lcd_Clear
  1480  074B                     l1684:
  1481                           
  1482                           ;master.c: 129:             Lcd_Set_Cursor(1,1);
  1483  074B  01F4               	clrf	Lcd_Set_Cursor@b
  1484  074C  0AF4               	incf	Lcd_Set_Cursor@b,f
  1485  074D  3001               	movlw	1
  1486  074E  120A  118A  2330  120A  118A  	fcall	_Lcd_Set_Cursor
  1487  0753                     l1686:
  1488                           
  1489                           ;master.c: 130:             Lcd_Write_String(" RH:   T:   L%:");
  1490  0753  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1491  0754  120A  118A  21CB  120A  118A  	fcall	_Lcd_Write_String
  1492  0759                     l1688:
  1493                           
  1494                           ;master.c: 131:             _delay((unsigned long)((500)*(8000000/4000.0)));
  1495  0759  3006               	movlw	6
  1496  075A  1283               	bcf	3,5	;RP0=0, select bank0
  1497  075B  1303               	bcf	3,6	;RP1=0, select bank0
  1498  075C  00B8               	movwf	??_main+2
  1499  075D  3013               	movlw	19
  1500  075E  00B7               	movwf	??_main+1
  1501  075F  30AD               	movlw	173
  1502  0760  00B6               	movwf	??_main
  1503  0761                     u1237:
  1504  0761  0BB6               	decfsz	??_main,f
  1505  0762  2F61               	goto	u1237
  1506  0763  0BB7               	decfsz	??_main+1,f
  1507  0764  2F61               	goto	u1237
  1508  0765  0BB8               	decfsz	??_main+2,f
  1509  0766  2F61               	goto	u1237
  1510                           
  1511                           ;master.c: 133:         }
  1512  0767  2D37               	goto	l1564
  1513  0768                     l1690:
  1514  0768  1283               	bcf	3,5	;RP0=0, select bank0
  1515  0769  1303               	bcf	3,6	;RP1=0, select bank0
  1516  076A  0821               	movf	_LDR+1,w
  1517  076B  3A80               	xorlw	128
  1518  076C  00FF               	movwf	btemp+1
  1519  076D  3080               	movlw	128
  1520  076E  027F               	subwf	btemp+1,w
  1521  076F  1D03               	skipz
  1522  0770  2F73               	goto	u1135
  1523  0771  3051               	movlw	81
  1524  0772  0220               	subwf	_LDR,w
  1525  0773                     u1135:
  1526  0773  1C03               	skipc
  1527  0774  2F76               	goto	u1131
  1528  0775  2F77               	goto	u1130
  1529  0776                     u1131:
  1530  0776  2FE8               	goto	l94
  1531  0777                     u1130:
  1532  0777                     l1692:
  1533  0777  1283               	bcf	3,5	;RP0=0, select bank0
  1534  0778  1303               	bcf	3,6	;RP1=0, select bank0
  1535  0779  0322               	decf	_cont1,w
  1536  077A  1D03               	btfss	3,2
  1537  077B  2F7D               	goto	u1141
  1538  077C  2F7E               	goto	u1140
  1539  077D                     u1141:
  1540  077D  2FE8               	goto	l94
  1541  077E                     u1140:
  1542  077E                     l1694:
  1543                           
  1544                           ;master.c: 136:             cont1 = 0;
  1545  077E  01A2               	clrf	_cont1
  1546  077F                     l1696:
  1547                           
  1548                           ;master.c: 137:             PORTAbits.RA0 = 1;
  1549  077F  1405               	bsf	5,0	;volatile
  1550  0780                     l1698:
  1551                           
  1552                           ;master.c: 138:             _delay((unsigned long)((1000)*(8000000/4000000.0)));
  1553  0780  3003               	movlw	3
  1554  0781  1283               	bcf	3,5	;RP0=0, select bank0
  1555  0782  1303               	bcf	3,6	;RP1=0, select bank0
  1556  0783  00B7               	movwf	??_main+1
  1557  0784  3097               	movlw	151
  1558  0785  00B6               	movwf	??_main
  1559  0786                     u1247:
  1560  0786  0BB6               	decfsz	??_main,f
  1561  0787  2F86               	goto	u1247
  1562  0788  0BB7               	decfsz	??_main+1,f
  1563  0789  2F86               	goto	u1247
  1564  078A                     l1700:
  1565                           
  1566                           ;master.c: 139:             PORTAbits.RA0 = 0;
  1567  078A  1283               	bcf	3,5	;RP0=0, select bank0
  1568  078B  1303               	bcf	3,6	;RP1=0, select bank0
  1569  078C  1005               	bcf	5,0	;volatile
  1570  078D                     l1702:
  1571                           
  1572                           ;master.c: 140:             _delay((unsigned long)((20)*(8000000/4000.0)));
  1573  078D  3034               	movlw	52
  1574  078E  1283               	bcf	3,5	;RP0=0, select bank0
  1575  078F  1303               	bcf	3,6	;RP1=0, select bank0
  1576  0790  00B7               	movwf	??_main+1
  1577  0791  30F1               	movlw	241
  1578  0792  00B6               	movwf	??_main
  1579  0793                     u1257:
  1580  0793  0BB6               	decfsz	??_main,f
  1581  0794  2F93               	goto	u1257
  1582  0795  0BB7               	decfsz	??_main+1,f
  1583  0796  2F93               	goto	u1257
  1584  0797                     l1704:
  1585                           
  1586                           ;master.c: 141:             _delay((unsigned long)((1000)*(8000000/4000.0)));
  1587  0797  300B               	movlw	11
  1588  0798  1283               	bcf	3,5	;RP0=0, select bank0
  1589  0799  1303               	bcf	3,6	;RP1=0, select bank0
  1590  079A  00B8               	movwf	??_main+2
  1591  079B  3026               	movlw	38
  1592  079C  00B7               	movwf	??_main+1
  1593  079D  305D               	movlw	93
  1594  079E  00B6               	movwf	??_main
  1595  079F                     u1267:
  1596  079F  0BB6               	decfsz	??_main,f
  1597  07A0  2F9F               	goto	u1267
  1598  07A1  0BB7               	decfsz	??_main+1,f
  1599  07A2  2F9F               	goto	u1267
  1600  07A3  0BB8               	decfsz	??_main+2,f
  1601  07A4  2F9F               	goto	u1267
  1602  07A5                     l1706:
  1603                           
  1604                           ;master.c: 143:             Lcd_Clear();
  1605  07A5  120A  118A  2186  120A  118A  	fcall	_Lcd_Clear
  1606  07AA                     l1708:
  1607                           
  1608                           ;master.c: 144:             Lcd_Set_Cursor(1,1);
  1609  07AA  01F4               	clrf	Lcd_Set_Cursor@b
  1610  07AB  0AF4               	incf	Lcd_Set_Cursor@b,f
  1611  07AC  3001               	movlw	1
  1612  07AD  120A  118A  2330  120A  118A  	fcall	_Lcd_Set_Cursor
  1613  07B2                     l1710:
  1614                           
  1615                           ;master.c: 145:             Lcd_Write_String("DISPENSANDO");
  1616  07B2  3011               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1617  07B3  120A  118A  21CB  120A  118A  	fcall	_Lcd_Write_String
  1618  07B8                     l1712:
  1619                           
  1620                           ;master.c: 146:             Lcd_Set_Cursor(2,1);
  1621  07B8  01F4               	clrf	Lcd_Set_Cursor@b
  1622  07B9  0AF4               	incf	Lcd_Set_Cursor@b,f
  1623  07BA  3002               	movlw	2
  1624  07BB  120A  118A  2330  120A  118A  	fcall	_Lcd_Set_Cursor
  1625  07C0                     l1714:
  1626                           
  1627                           ;master.c: 147:             Lcd_Write_String(" COMIDA...");
  1628  07C0  301D               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1629  07C1  120A  118A  21CB  120A  118A  	fcall	_Lcd_Write_String
  1630  07C6                     l1716:
  1631                           
  1632                           ;master.c: 148:             _delay((unsigned long)((5000)*(8000000/4000.0)));
  1633  07C6  3033               	movlw	51
  1634  07C7  1283               	bcf	3,5	;RP0=0, select bank0
  1635  07C8  1303               	bcf	3,6	;RP1=0, select bank0
  1636  07C9  00B8               	movwf	??_main+2
  1637  07CA  30BB               	movlw	187
  1638  07CB  00B7               	movwf	??_main+1
  1639  07CC  30DF               	movlw	223
  1640  07CD  00B6               	movwf	??_main
  1641  07CE                     u1277:
  1642  07CE  0BB6               	decfsz	??_main,f
  1643  07CF  2FCE               	goto	u1277
  1644  07D0  0BB7               	decfsz	??_main+1,f
  1645  07D1  2FCE               	goto	u1277
  1646  07D2  0BB8               	decfsz	??_main+2,f
  1647  07D3  2FCE               	goto	u1277
  1648  07D4                     l1718:
  1649                           
  1650                           ;master.c: 151:             Lcd_Clear();
  1651  07D4  120A  118A  2186  120A  118A  	fcall	_Lcd_Clear
  1652  07D9                     l1720:
  1653                           
  1654                           ;master.c: 152:             Lcd_Set_Cursor(1,1);
  1655  07D9  01F4               	clrf	Lcd_Set_Cursor@b
  1656  07DA  0AF4               	incf	Lcd_Set_Cursor@b,f
  1657  07DB  3001               	movlw	1
  1658  07DC  120A  118A  2330  120A  118A  	fcall	_Lcd_Set_Cursor
  1659  07E1                     l1722:
  1660                           
  1661                           ;master.c: 153:             Lcd_Write_String(" RH:   T:   L%:");
  1662  07E1  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1663  07E2  120A  118A  21CB  120A  118A  	fcall	_Lcd_Write_String
  1664  07E7  2F59               	goto	l1688
  1665  07E8                     l94:
  1666  07E8  2D37               	goto	l1564
  1667  07E9  120A  118A  2800   	ljmp	start
  1668  07EC                     __end_of_main:
  1669                           
  1670                           	psect	text1
  1671  04AA                     __ptext1:	
  1672 ;; *************** function _str_2_dc *****************
  1673 ;; Defined at:
  1674 ;;		line 161 in file "master.c"
  1675 ;; Parameters:    Size  Location     Type
  1676 ;;  var             2    8[COMMON] unsigned int 
  1677 ;; Auto vars:     Size  Location     Type
  1678 ;;  vcv             2   12[COMMON] unsigned int 
  1679 ;; Return value:  Size  Location     Type
  1680 ;;                  1    wreg      void 
  1681 ;; Registers used:
  1682 ;;		wreg, status,2, status,0, pclath, cstack
  1683 ;; Tracked objects:
  1684 ;;		On entry : 0/0
  1685 ;;		On exit  : 0/0
  1686 ;;		Unchanged: 0/0
  1687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1688 ;;      Params:         2       0       0       0       0
  1689 ;;      Locals:         2       0       0       0       0
  1690 ;;      Temps:          2       0       0       0       0
  1691 ;;      Totals:         6       0       0       0       0
  1692 ;;Total ram usage:        6 bytes
  1693 ;; Hardware stack levels used: 1
  1694 ;; Hardware stack levels required when called: 1
  1695 ;; This function calls:
  1696 ;;		___lwdiv
  1697 ;;		___wmul
  1698 ;; This function is called by:
  1699 ;;		_main
  1700 ;; This function uses a non-reentrant model
  1701 ;;
  1702                           
  1703                           
  1704                           ;psect for function _str_2_dc
  1705  04AA                     _str_2_dc:
  1706  04AA                     l1462:	
  1707                           ;incstack = 0
  1708                           ; Regs used in _str_2_dc: [wreg+status,2+status,0+pclath+cstack]
  1709                           
  1710                           
  1711                           ;master.c: 162:     uint16_t vcv;;master.c: 163:     vcv = var;
  1712  04AA  0879               	movf	str_2_dc@var+1,w
  1713  04AB  00FD               	movwf	str_2_dc@vcv+1
  1714  04AC  0878               	movf	str_2_dc@var,w
  1715  04AD  00FC               	movwf	str_2_dc@vcv
  1716  04AE                     l1464:
  1717                           
  1718                           ;master.c: 164:     unit0_0 = (vcv/100) ;
  1719  04AE  3064               	movlw	100
  1720  04AF  00F0               	movwf	___lwdiv@divisor
  1721  04B0  3000               	movlw	0
  1722  04B1  00F1               	movwf	___lwdiv@divisor+1
  1723  04B2  087D               	movf	str_2_dc@vcv+1,w
  1724  04B3  00F3               	movwf	___lwdiv@dividend+1
  1725  04B4  087C               	movf	str_2_dc@vcv,w
  1726  04B5  00F2               	movwf	___lwdiv@dividend
  1727  04B6  120A  118A  22A5  120A  118A  	fcall	___lwdiv
  1728  04BB  0870               	movf	?___lwdiv,w
  1729  04BC  00FA               	movwf	??_str_2_dc
  1730  04BD  087A               	movf	??_str_2_dc,w
  1731  04BE  1283               	bcf	3,5	;RP0=0, select bank0
  1732  04BF  1303               	bcf	3,6	;RP1=0, select bank0
  1733  04C0  00A9               	movwf	_unit0_0
  1734  04C1                     l1466:
  1735                           
  1736                           ;master.c: 165:     vcv = (vcv - (unit0_0*100));
  1737  04C1  0829               	movf	_unit0_0,w
  1738  04C2  00FA               	movwf	??_str_2_dc
  1739  04C3  01FB               	clrf	??_str_2_dc+1
  1740  04C4  087A               	movf	??_str_2_dc,w
  1741  04C5  00F0               	movwf	___wmul@multiplier
  1742  04C6  087B               	movf	??_str_2_dc+1,w
  1743  04C7  00F1               	movwf	___wmul@multiplier+1
  1744  04C8  309C               	movlw	156
  1745  04C9  00F2               	movwf	___wmul@multiplicand
  1746  04CA  30FF               	movlw	255
  1747  04CB  00F3               	movwf	___wmul@multiplicand+1
  1748  04CC  120A  118A  21F0  120A  118A  	fcall	___wmul
  1749  04D1  087C               	movf	str_2_dc@vcv,w
  1750  04D2  0770               	addwf	?___wmul,w
  1751  04D3  00FC               	movwf	str_2_dc@vcv
  1752  04D4  087D               	movf	str_2_dc@vcv+1,w
  1753  04D5  1803               	skipnc
  1754  04D6  0A7D               	incf	str_2_dc@vcv+1,w
  1755  04D7  0771               	addwf	?___wmul+1,w
  1756  04D8  00FD               	movwf	str_2_dc@vcv+1
  1757  04D9                     l1468:
  1758                           
  1759                           ;master.c: 166:     dec0_12 = (vcv/10);
  1760  04D9  300A               	movlw	10
  1761  04DA  00F0               	movwf	___lwdiv@divisor
  1762  04DB  3000               	movlw	0
  1763  04DC  00F1               	movwf	___lwdiv@divisor+1
  1764  04DD  087D               	movf	str_2_dc@vcv+1,w
  1765  04DE  00F3               	movwf	___lwdiv@dividend+1
  1766  04DF  087C               	movf	str_2_dc@vcv,w
  1767  04E0  00F2               	movwf	___lwdiv@dividend
  1768  04E1  120A  118A  22A5  120A  118A  	fcall	___lwdiv
  1769  04E6  0870               	movf	?___lwdiv,w
  1770  04E7  00FA               	movwf	??_str_2_dc
  1771  04E8  087A               	movf	??_str_2_dc,w
  1772  04E9  1283               	bcf	3,5	;RP0=0, select bank0
  1773  04EA  1303               	bcf	3,6	;RP1=0, select bank0
  1774  04EB  00A8               	movwf	_dec0_12
  1775  04EC                     l1470:
  1776                           
  1777                           ;master.c: 167:     vcv = (vcv - (dec0_12*10));
  1778  04EC  0828               	movf	_dec0_12,w
  1779  04ED  00FA               	movwf	??_str_2_dc
  1780  04EE  01FB               	clrf	??_str_2_dc+1
  1781  04EF  087A               	movf	??_str_2_dc,w
  1782  04F0  00F0               	movwf	___wmul@multiplier
  1783  04F1  087B               	movf	??_str_2_dc+1,w
  1784  04F2  00F1               	movwf	___wmul@multiplier+1
  1785  04F3  30F6               	movlw	246
  1786  04F4  00F2               	movwf	___wmul@multiplicand
  1787  04F5  30FF               	movlw	255
  1788  04F6  00F3               	movwf	___wmul@multiplicand+1
  1789  04F7  120A  118A  21F0  120A  118A  	fcall	___wmul
  1790  04FC  087C               	movf	str_2_dc@vcv,w
  1791  04FD  0770               	addwf	?___wmul,w
  1792  04FE  00FC               	movwf	str_2_dc@vcv
  1793  04FF  087D               	movf	str_2_dc@vcv+1,w
  1794  0500  1803               	skipnc
  1795  0501  0A7D               	incf	str_2_dc@vcv+1,w
  1796  0502  0771               	addwf	?___wmul+1,w
  1797  0503  00FD               	movwf	str_2_dc@vcv+1
  1798                           
  1799                           ;master.c: 168:     dec1_12 = (vcv);
  1800  0504  087C               	movf	str_2_dc@vcv,w
  1801  0505  00FA               	movwf	??_str_2_dc
  1802  0506  087A               	movf	??_str_2_dc,w
  1803  0507  1283               	bcf	3,5	;RP0=0, select bank0
  1804  0508  1303               	bcf	3,6	;RP1=0, select bank0
  1805  0509  00A7               	movwf	_dec1_12
  1806  050A                     l1472:
  1807                           
  1808                           ;master.c: 169:     unit0_0 = unit0_0 + 48;
  1809  050A  0829               	movf	_unit0_0,w
  1810  050B  3E30               	addlw	48
  1811  050C  00FA               	movwf	??_str_2_dc
  1812  050D  087A               	movf	??_str_2_dc,w
  1813  050E  00A9               	movwf	_unit0_0
  1814  050F                     l1474:
  1815                           
  1816                           ;master.c: 170:     dec0_12 = dec0_12 + 48;
  1817  050F  0828               	movf	_dec0_12,w
  1818  0510  3E30               	addlw	48
  1819  0511  00FA               	movwf	??_str_2_dc
  1820  0512  087A               	movf	??_str_2_dc,w
  1821  0513  00A8               	movwf	_dec0_12
  1822  0514                     l1476:
  1823                           
  1824                           ;master.c: 171:     dec1_12 = dec1_12 + 48;
  1825  0514  0827               	movf	_dec1_12,w
  1826  0515  3E30               	addlw	48
  1827  0516  00FA               	movwf	??_str_2_dc
  1828  0517  087A               	movf	??_str_2_dc,w
  1829  0518  00A7               	movwf	_dec1_12
  1830  0519                     l105:
  1831  0519  0008               	return
  1832  051A                     __end_of_str_2_dc:
  1833                           
  1834                           	psect	text2
  1835  01F0                     __ptext2:	
  1836 ;; *************** function ___wmul *****************
  1837 ;; Defined at:
  1838 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  1839 ;; Parameters:    Size  Location     Type
  1840 ;;  multiplier      2    0[COMMON] unsigned int 
  1841 ;;  multiplicand    2    2[COMMON] unsigned int 
  1842 ;; Auto vars:     Size  Location     Type
  1843 ;;  product         2    4[COMMON] unsigned int 
  1844 ;; Return value:  Size  Location     Type
  1845 ;;                  2    0[COMMON] unsigned int 
  1846 ;; Registers used:
  1847 ;;		wreg, status,2, status,0
  1848 ;; Tracked objects:
  1849 ;;		On entry : 0/0
  1850 ;;		On exit  : 0/0
  1851 ;;		Unchanged: 0/0
  1852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1853 ;;      Params:         4       0       0       0       0
  1854 ;;      Locals:         2       0       0       0       0
  1855 ;;      Temps:          0       0       0       0       0
  1856 ;;      Totals:         6       0       0       0       0
  1857 ;;Total ram usage:        6 bytes
  1858 ;; Hardware stack levels used: 1
  1859 ;; This function calls:
  1860 ;;		Nothing
  1861 ;; This function is called by:
  1862 ;;		_str_2_dc
  1863 ;; This function uses a non-reentrant model
  1864 ;;
  1865                           
  1866                           
  1867                           ;psect for function ___wmul
  1868  01F0                     ___wmul:
  1869  01F0                     l1336:	
  1870                           ;incstack = 0
  1871                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1872                           
  1873  01F0  01F4               	clrf	___wmul@product
  1874  01F1  01F5               	clrf	___wmul@product+1
  1875  01F2                     l1338:
  1876  01F2  1C70               	btfss	___wmul@multiplier,0
  1877  01F3  29F5               	goto	u681
  1878  01F4  29F6               	goto	u680
  1879  01F5                     u681:
  1880  01F5  29FC               	goto	l290
  1881  01F6                     u680:
  1882  01F6                     l1340:
  1883  01F6  0872               	movf	___wmul@multiplicand,w
  1884  01F7  07F4               	addwf	___wmul@product,f
  1885  01F8  1803               	skipnc
  1886  01F9  0AF5               	incf	___wmul@product+1,f
  1887  01FA  0873               	movf	___wmul@multiplicand+1,w
  1888  01FB  07F5               	addwf	___wmul@product+1,f
  1889  01FC                     l290:
  1890  01FC  3001               	movlw	1
  1891  01FD                     u695:
  1892  01FD  1003               	clrc
  1893  01FE  0DF2               	rlf	___wmul@multiplicand,f
  1894  01FF  0DF3               	rlf	___wmul@multiplicand+1,f
  1895  0200  3EFF               	addlw	-1
  1896  0201  1D03               	skipz
  1897  0202  29FD               	goto	u695
  1898  0203                     l1342:
  1899  0203  3001               	movlw	1
  1900  0204                     u705:
  1901  0204  1003               	clrc
  1902  0205  0CF1               	rrf	___wmul@multiplier+1,f
  1903  0206  0CF0               	rrf	___wmul@multiplier,f
  1904  0207  3EFF               	addlw	-1
  1905  0208  1D03               	skipz
  1906  0209  2A04               	goto	u705
  1907  020A                     l1344:
  1908  020A  0870               	movf	___wmul@multiplier,w
  1909  020B  0471               	iorwf	___wmul@multiplier+1,w
  1910  020C  1D03               	btfss	3,2
  1911  020D  2A0F               	goto	u711
  1912  020E  2A10               	goto	u710
  1913  020F                     u711:
  1914  020F  29F2               	goto	l1338
  1915  0210                     u710:
  1916  0210                     l1346:
  1917  0210  0875               	movf	___wmul@product+1,w
  1918  0211  00F1               	movwf	?___wmul+1
  1919  0212  0874               	movf	___wmul@product,w
  1920  0213  00F0               	movwf	?___wmul
  1921  0214                     l292:
  1922  0214  0008               	return
  1923  0215                     __end_of___wmul:
  1924                           
  1925                           	psect	text3
  1926  02A5                     __ptext3:	
  1927 ;; *************** function ___lwdiv *****************
  1928 ;; Defined at:
  1929 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  1930 ;; Parameters:    Size  Location     Type
  1931 ;;  divisor         2    0[COMMON] unsigned int 
  1932 ;;  dividend        2    2[COMMON] unsigned int 
  1933 ;; Auto vars:     Size  Location     Type
  1934 ;;  quotient        2    5[COMMON] unsigned int 
  1935 ;;  counter         1    7[COMMON] unsigned char 
  1936 ;; Return value:  Size  Location     Type
  1937 ;;                  2    0[COMMON] unsigned int 
  1938 ;; Registers used:
  1939 ;;		wreg, status,2, status,0
  1940 ;; Tracked objects:
  1941 ;;		On entry : 0/0
  1942 ;;		On exit  : 0/0
  1943 ;;		Unchanged: 0/0
  1944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1945 ;;      Params:         4       0       0       0       0
  1946 ;;      Locals:         3       0       0       0       0
  1947 ;;      Temps:          1       0       0       0       0
  1948 ;;      Totals:         8       0       0       0       0
  1949 ;;Total ram usage:        8 bytes
  1950 ;; Hardware stack levels used: 1
  1951 ;; This function calls:
  1952 ;;		Nothing
  1953 ;; This function is called by:
  1954 ;;		_str_2_dc
  1955 ;; This function uses a non-reentrant model
  1956 ;;
  1957                           
  1958                           
  1959                           ;psect for function ___lwdiv
  1960  02A5                     ___lwdiv:
  1961  02A5                     l1350:	
  1962                           ;incstack = 0
  1963                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1964                           
  1965  02A5  01F5               	clrf	___lwdiv@quotient
  1966  02A6  01F6               	clrf	___lwdiv@quotient+1
  1967  02A7                     l1352:
  1968  02A7  0870               	movf	___lwdiv@divisor,w
  1969  02A8  0471               	iorwf	___lwdiv@divisor+1,w
  1970  02A9  1903               	btfsc	3,2
  1971  02AA  2AAC               	goto	u721
  1972  02AB  2AAD               	goto	u720
  1973  02AC                     u721:
  1974  02AC  2AE4               	goto	l1372
  1975  02AD                     u720:
  1976  02AD                     l1354:
  1977  02AD  01F7               	clrf	___lwdiv@counter
  1978  02AE  0AF7               	incf	___lwdiv@counter,f
  1979  02AF  2ABB               	goto	l1360
  1980  02B0                     l1356:
  1981  02B0  3001               	movlw	1
  1982  02B1                     u735:
  1983  02B1  1003               	clrc
  1984  02B2  0DF0               	rlf	___lwdiv@divisor,f
  1985  02B3  0DF1               	rlf	___lwdiv@divisor+1,f
  1986  02B4  3EFF               	addlw	-1
  1987  02B5  1D03               	skipz
  1988  02B6  2AB1               	goto	u735
  1989  02B7                     l1358:
  1990  02B7  3001               	movlw	1
  1991  02B8  00F4               	movwf	??___lwdiv
  1992  02B9  0874               	movf	??___lwdiv,w
  1993  02BA  07F7               	addwf	___lwdiv@counter,f
  1994  02BB                     l1360:
  1995  02BB  1FF1               	btfss	___lwdiv@divisor+1,7
  1996  02BC  2ABE               	goto	u741
  1997  02BD  2ABF               	goto	u740
  1998  02BE                     u741:
  1999  02BE  2AB0               	goto	l1356
  2000  02BF                     u740:
  2001  02BF                     l1362:
  2002  02BF  3001               	movlw	1
  2003  02C0                     u755:
  2004  02C0  1003               	clrc
  2005  02C1  0DF5               	rlf	___lwdiv@quotient,f
  2006  02C2  0DF6               	rlf	___lwdiv@quotient+1,f
  2007  02C3  3EFF               	addlw	-1
  2008  02C4  1D03               	skipz
  2009  02C5  2AC0               	goto	u755
  2010  02C6  0871               	movf	___lwdiv@divisor+1,w
  2011  02C7  0273               	subwf	___lwdiv@dividend+1,w
  2012  02C8  1D03               	skipz
  2013  02C9  2ACC               	goto	u765
  2014  02CA  0870               	movf	___lwdiv@divisor,w
  2015  02CB  0272               	subwf	___lwdiv@dividend,w
  2016  02CC                     u765:
  2017  02CC  1C03               	skipc
  2018  02CD  2ACF               	goto	u761
  2019  02CE  2AD0               	goto	u760
  2020  02CF                     u761:
  2021  02CF  2AD7               	goto	l1368
  2022  02D0                     u760:
  2023  02D0                     l1364:
  2024  02D0  0870               	movf	___lwdiv@divisor,w
  2025  02D1  02F2               	subwf	___lwdiv@dividend,f
  2026  02D2  0871               	movf	___lwdiv@divisor+1,w
  2027  02D3  1C03               	skipc
  2028  02D4  03F3               	decf	___lwdiv@dividend+1,f
  2029  02D5  02F3               	subwf	___lwdiv@dividend+1,f
  2030  02D6                     l1366:
  2031  02D6  1475               	bsf	___lwdiv@quotient,0
  2032  02D7                     l1368:
  2033  02D7  3001               	movlw	1
  2034  02D8                     u775:
  2035  02D8  1003               	clrc
  2036  02D9  0CF1               	rrf	___lwdiv@divisor+1,f
  2037  02DA  0CF0               	rrf	___lwdiv@divisor,f
  2038  02DB  3EFF               	addlw	-1
  2039  02DC  1D03               	skipz
  2040  02DD  2AD8               	goto	u775
  2041  02DE                     l1370:
  2042  02DE  3001               	movlw	1
  2043  02DF  02F7               	subwf	___lwdiv@counter,f
  2044  02E0  1D03               	btfss	3,2
  2045  02E1  2AE3               	goto	u781
  2046  02E2  2AE4               	goto	u780
  2047  02E3                     u781:
  2048  02E3  2ABF               	goto	l1362
  2049  02E4                     u780:
  2050  02E4                     l1372:
  2051  02E4  0876               	movf	___lwdiv@quotient+1,w
  2052  02E5  00F1               	movwf	?___lwdiv+1
  2053  02E6  0875               	movf	___lwdiv@quotient,w
  2054  02E7  00F0               	movwf	?___lwdiv
  2055  02E8                     l562:
  2056  02E8  0008               	return
  2057  02E9                     __end_of___lwdiv:
  2058                           
  2059                           	psect	text4
  2060  0215                     __ptext4:	
  2061 ;; *************** function _initSETUP *****************
  2062 ;; Defined at:
  2063 ;;		line 178 in file "master.c"
  2064 ;; Parameters:    Size  Location     Type
  2065 ;;		None
  2066 ;; Auto vars:     Size  Location     Type
  2067 ;;		None
  2068 ;; Return value:  Size  Location     Type
  2069 ;;                  1    wreg      void 
  2070 ;; Registers used:
  2071 ;;		wreg, status,2, status,0, pclath, cstack
  2072 ;; Tracked objects:
  2073 ;;		On entry : 0/0
  2074 ;;		On exit  : 0/0
  2075 ;;		Unchanged: 0/0
  2076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2077 ;;      Params:         0       0       0       0       0
  2078 ;;      Locals:         0       0       0       0       0
  2079 ;;      Temps:          0       0       0       0       0
  2080 ;;      Totals:         0       0       0       0       0
  2081 ;;Total ram usage:        0 bytes
  2082 ;; Hardware stack levels used: 1
  2083 ;; Hardware stack levels required when called: 2
  2084 ;; This function calls:
  2085 ;;		_I2C_Master_Init
  2086 ;; This function is called by:
  2087 ;;		_main
  2088 ;; This function uses a non-reentrant model
  2089 ;;
  2090                           
  2091                           
  2092                           ;psect for function _initSETUP
  2093  0215                     _initSETUP:
  2094  0215                     l1376:	
  2095                           ;incstack = 0
  2096                           ; Regs used in _initSETUP: [wreg+status,2+status,0+pclath+cstack]
  2097                           
  2098                           
  2099                           ;master.c: 179:     TRISA = 0;
  2100  0215  1683               	bsf	3,5	;RP0=1, select bank1
  2101  0216  1303               	bcf	3,6	;RP1=0, select bank1
  2102  0217  0185               	clrf	5	;volatile
  2103                           
  2104                           ;master.c: 180:     TRISB = 0;
  2105  0218  0186               	clrf	6	;volatile
  2106                           
  2107                           ;master.c: 181:     TRISC = 0;
  2108  0219  0187               	clrf	7	;volatile
  2109                           
  2110                           ;master.c: 182:     TRISD = 0;
  2111  021A  0188               	clrf	8	;volatile
  2112                           
  2113                           ;master.c: 183:     TRISE = 0;
  2114  021B  0189               	clrf	9	;volatile
  2115                           
  2116                           ;master.c: 184:     PORTE = 0;
  2117  021C  1283               	bcf	3,5	;RP0=0, select bank0
  2118  021D  1303               	bcf	3,6	;RP1=0, select bank0
  2119  021E  0189               	clrf	9	;volatile
  2120                           
  2121                           ;master.c: 185:     PORTA = 0;
  2122  021F  0185               	clrf	5	;volatile
  2123                           
  2124                           ;master.c: 186:     PORTB = 0;
  2125  0220  0186               	clrf	6	;volatile
  2126                           
  2127                           ;master.c: 187:     PORTC = 0;
  2128  0221  0187               	clrf	7	;volatile
  2129                           
  2130                           ;master.c: 188:     PORTD = 0;
  2131  0222  0188               	clrf	8	;volatile
  2132                           
  2133                           ;master.c: 189:     ANSEL = 0;
  2134  0223  1683               	bsf	3,5	;RP0=1, select bank3
  2135  0224  1703               	bsf	3,6	;RP1=1, select bank3
  2136  0225  0188               	clrf	8	;volatile
  2137                           
  2138                           ;master.c: 190:     ANSELH = 0;
  2139  0226  0189               	clrf	9	;volatile
  2140  0227                     l1378:
  2141                           
  2142                           ;master.c: 191:     OSCCONbits.IRCF2 = 1;
  2143  0227  1683               	bsf	3,5	;RP0=1, select bank1
  2144  0228  1303               	bcf	3,6	;RP1=0, select bank1
  2145  0229  170F               	bsf	15,6	;volatile
  2146  022A                     l1380:
  2147                           
  2148                           ;master.c: 192:     OSCCONbits.IRCF1 = 1;
  2149  022A  168F               	bsf	15,5	;volatile
  2150  022B                     l1382:
  2151                           
  2152                           ;master.c: 193:     OSCCONbits.IRCF0 = 1;
  2153  022B  160F               	bsf	15,4	;volatile
  2154  022C                     l1384:
  2155                           
  2156                           ;master.c: 194:     OSCCONbits.SCS = 1;
  2157  022C  140F               	bsf	15,0	;volatile
  2158  022D                     l1386:
  2159                           
  2160                           ;master.c: 196:     INTCONbits.GIE = 1;
  2161  022D  178B               	bsf	11,7	;volatile
  2162  022E                     l1388:
  2163                           
  2164                           ;master.c: 197:     INTCONbits.PEIE =1;
  2165  022E  170B               	bsf	11,6	;volatile
  2166  022F                     l1390:
  2167                           
  2168                           ;master.c: 198:     I2C_Master_Init(100000);
  2169  022F  3000               	movlw	0
  2170  0230  1283               	bcf	3,5	;RP0=0, select bank0
  2171  0231  1303               	bcf	3,6	;RP1=0, select bank0
  2172  0232  00B1               	movwf	I2C_Master_Init@c+3
  2173  0233  3001               	movlw	1
  2174  0234  00B0               	movwf	I2C_Master_Init@c+2
  2175  0235  3086               	movlw	134
  2176  0236  00AF               	movwf	I2C_Master_Init@c+1
  2177  0237  30A0               	movlw	160
  2178  0238  00AE               	movwf	I2C_Master_Init@c
  2179  0239  120A  118A  226D  120A  118A  	fcall	_I2C_Master_Init
  2180  023E                     l108:
  2181  023E  0008               	return
  2182  023F                     __end_of_initSETUP:
  2183                           
  2184                           	psect	text5
  2185  026D                     __ptext5:	
  2186 ;; *************** function _I2C_Master_Init *****************
  2187 ;; Defined at:
  2188 ;;		line 16 in file "I2C.c"
  2189 ;; Parameters:    Size  Location     Type
  2190 ;;  c               4    0[BANK0 ] const unsigned long 
  2191 ;; Auto vars:     Size  Location     Type
  2192 ;;		None
  2193 ;; Return value:  Size  Location     Type
  2194 ;;                  1    wreg      void 
  2195 ;; Registers used:
  2196 ;;		wreg, status,2, status,0, pclath, cstack
  2197 ;; Tracked objects:
  2198 ;;		On entry : 0/0
  2199 ;;		On exit  : 0/0
  2200 ;;		Unchanged: 0/0
  2201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2202 ;;      Params:         0       4       0       0       0
  2203 ;;      Locals:         0       0       0       0       0
  2204 ;;      Temps:          0       4       0       0       0
  2205 ;;      Totals:         0       8       0       0       0
  2206 ;;Total ram usage:        8 bytes
  2207 ;; Hardware stack levels used: 1
  2208 ;; Hardware stack levels required when called: 1
  2209 ;; This function calls:
  2210 ;;		___lldiv
  2211 ;; This function is called by:
  2212 ;;		_initSETUP
  2213 ;; This function uses a non-reentrant model
  2214 ;;
  2215                           
  2216                           
  2217                           ;psect for function _I2C_Master_Init
  2218  026D                     _I2C_Master_Init:
  2219  026D                     l1310:	
  2220                           ;incstack = 0
  2221                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  2222                           
  2223                           
  2224                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  2225  026D  3028               	movlw	40
  2226  026E  1283               	bcf	3,5	;RP0=0, select bank0
  2227  026F  1303               	bcf	3,6	;RP1=0, select bank0
  2228  0270  0094               	movwf	20	;volatile
  2229  0271                     l1312:
  2230                           
  2231                           ;I2C.c: 19:     SSPCON2 = 0;
  2232  0271  1683               	bsf	3,5	;RP0=1, select bank1
  2233  0272  1303               	bcf	3,6	;RP1=0, select bank1
  2234  0273  0191               	clrf	17	;volatile
  2235  0274                     l1314:
  2236                           
  2237                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  2238  0274  1283               	bcf	3,5	;RP0=0, select bank0
  2239  0275  1303               	bcf	3,6	;RP1=0, select bank0
  2240  0276  082E               	movf	I2C_Master_Init@c,w
  2241  0277  00B2               	movwf	??_I2C_Master_Init
  2242  0278  082F               	movf	I2C_Master_Init@c+1,w
  2243  0279  00B3               	movwf	??_I2C_Master_Init+1
  2244  027A  0830               	movf	I2C_Master_Init@c+2,w
  2245  027B  00B4               	movwf	??_I2C_Master_Init+2
  2246  027C  0831               	movf	I2C_Master_Init@c+3,w
  2247  027D  00B5               	movwf	??_I2C_Master_Init+3
  2248  027E  3002               	movlw	2
  2249  027F                     u655:
  2250  027F  1003               	clrc
  2251  0280  0DB2               	rlf	??_I2C_Master_Init,f
  2252  0281  0DB3               	rlf	??_I2C_Master_Init+1,f
  2253  0282  0DB4               	rlf	??_I2C_Master_Init+2,f
  2254  0283  0DB5               	rlf	??_I2C_Master_Init+3,f
  2255  0284                     u650:
  2256  0284  3EFF               	addlw	-1
  2257  0285  1D03               	skipz
  2258  0286  2A7F               	goto	u655
  2259  0287  0835               	movf	??_I2C_Master_Init+3,w
  2260  0288  00F3               	movwf	___lldiv@divisor+3
  2261  0289  0834               	movf	??_I2C_Master_Init+2,w
  2262  028A  00F2               	movwf	___lldiv@divisor+2
  2263  028B  0833               	movf	??_I2C_Master_Init+1,w
  2264  028C  00F1               	movwf	___lldiv@divisor+1
  2265  028D  0832               	movf	??_I2C_Master_Init,w
  2266  028E  00F0               	movwf	___lldiv@divisor
  2267  028F  3000               	movlw	0
  2268  0290  00F7               	movwf	___lldiv@dividend+3
  2269  0291  307A               	movlw	122
  2270  0292  00F6               	movwf	___lldiv@dividend+2
  2271  0293  3012               	movlw	18
  2272  0294  00F5               	movwf	___lldiv@dividend+1
  2273  0295  3000               	movlw	0
  2274  0296  00F4               	movwf	___lldiv@dividend
  2275  0297  120A  118A  23DD  120A  118A  	fcall	___lldiv
  2276  029C  0870               	movf	?___lldiv,w
  2277  029D  3EFF               	addlw	255
  2278  029E  1683               	bsf	3,5	;RP0=1, select bank1
  2279  029F  1303               	bcf	3,6	;RP1=0, select bank1
  2280  02A0  0093               	movwf	19	;volatile
  2281  02A1                     l1316:
  2282                           
  2283                           ;I2C.c: 21:     SSPSTAT = 0;
  2284  02A1  0194               	clrf	20	;volatile
  2285  02A2                     l1318:
  2286                           
  2287                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  2288  02A2  1587               	bsf	7,3	;volatile
  2289  02A3                     l1320:
  2290                           
  2291                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  2292  02A3  1607               	bsf	7,4	;volatile
  2293  02A4                     l137:
  2294  02A4  0008               	return
  2295  02A5                     __end_of_I2C_Master_Init:
  2296                           
  2297                           	psect	text6
  2298  03DD                     __ptext6:	
  2299 ;; *************** function ___lldiv *****************
  2300 ;; Defined at:
  2301 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
  2302 ;; Parameters:    Size  Location     Type
  2303 ;;  divisor         4    0[COMMON] unsigned long 
  2304 ;;  dividend        4    4[COMMON] unsigned long 
  2305 ;; Auto vars:     Size  Location     Type
  2306 ;;  quotient        4    9[COMMON] unsigned long 
  2307 ;;  counter         1   13[COMMON] unsigned char 
  2308 ;; Return value:  Size  Location     Type
  2309 ;;                  4    0[COMMON] unsigned long 
  2310 ;; Registers used:
  2311 ;;		wreg, status,2, status,0
  2312 ;; Tracked objects:
  2313 ;;		On entry : 0/0
  2314 ;;		On exit  : 0/0
  2315 ;;		Unchanged: 0/0
  2316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2317 ;;      Params:         8       0       0       0       0
  2318 ;;      Locals:         5       0       0       0       0
  2319 ;;      Temps:          1       0       0       0       0
  2320 ;;      Totals:        14       0       0       0       0
  2321 ;;Total ram usage:       14 bytes
  2322 ;; Hardware stack levels used: 1
  2323 ;; This function calls:
  2324 ;;		Nothing
  2325 ;; This function is called by:
  2326 ;;		_I2C_Master_Init
  2327 ;; This function uses a non-reentrant model
  2328 ;;
  2329                           
  2330                           
  2331                           ;psect for function ___lldiv
  2332  03DD                     ___lldiv:
  2333  03DD                     l1274:	
  2334                           ;incstack = 0
  2335                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2336                           
  2337  03DD  3000               	movlw	0
  2338  03DE  00FC               	movwf	___lldiv@quotient+3
  2339  03DF  3000               	movlw	0
  2340  03E0  00FB               	movwf	___lldiv@quotient+2
  2341  03E1  3000               	movlw	0
  2342  03E2  00FA               	movwf	___lldiv@quotient+1
  2343  03E3  3000               	movlw	0
  2344  03E4  00F9               	movwf	___lldiv@quotient
  2345  03E5  0873               	movf	___lldiv@divisor+3,w
  2346  03E6  0472               	iorwf	___lldiv@divisor+2,w
  2347  03E7  0471               	iorwf	___lldiv@divisor+1,w
  2348  03E8  0470               	iorwf	___lldiv@divisor,w
  2349  03E9  1903               	skipnz
  2350  03EA  2BEC               	goto	u581
  2351  03EB  2BED               	goto	u580
  2352  03EC                     u581:
  2353  03EC  2C3A               	goto	l1294
  2354  03ED                     u580:
  2355  03ED                     l1276:
  2356  03ED  01FD               	clrf	___lldiv@counter
  2357  03EE  0AFD               	incf	___lldiv@counter,f
  2358  03EF  2BFD               	goto	l1280
  2359  03F0                     l1278:
  2360  03F0  3001               	movlw	1
  2361  03F1  00F8               	movwf	??___lldiv
  2362  03F2                     u595:
  2363  03F2  1003               	clrc
  2364  03F3  0DF0               	rlf	___lldiv@divisor,f
  2365  03F4  0DF1               	rlf	___lldiv@divisor+1,f
  2366  03F5  0DF2               	rlf	___lldiv@divisor+2,f
  2367  03F6  0DF3               	rlf	___lldiv@divisor+3,f
  2368  03F7  0BF8               	decfsz	??___lldiv,f
  2369  03F8  2BF2               	goto	u595
  2370  03F9  3001               	movlw	1
  2371  03FA  00F8               	movwf	??___lldiv
  2372  03FB  0878               	movf	??___lldiv,w
  2373  03FC  07FD               	addwf	___lldiv@counter,f
  2374  03FD                     l1280:
  2375  03FD  1FF3               	btfss	___lldiv@divisor+3,7
  2376  03FE  2C00               	goto	u601
  2377  03FF  2C01               	goto	u600
  2378  0400                     u601:
  2379  0400  2BF0               	goto	l1278
  2380  0401                     u600:
  2381  0401                     l1282:
  2382  0401  3001               	movlw	1
  2383  0402  00F8               	movwf	??___lldiv
  2384  0403                     u615:
  2385  0403  1003               	clrc
  2386  0404  0DF9               	rlf	___lldiv@quotient,f
  2387  0405  0DFA               	rlf	___lldiv@quotient+1,f
  2388  0406  0DFB               	rlf	___lldiv@quotient+2,f
  2389  0407  0DFC               	rlf	___lldiv@quotient+3,f
  2390  0408  0BF8               	decfsz	??___lldiv,f
  2391  0409  2C03               	goto	u615
  2392  040A                     l1284:
  2393  040A  0873               	movf	___lldiv@divisor+3,w
  2394  040B  0277               	subwf	___lldiv@dividend+3,w
  2395  040C  1D03               	skipz
  2396  040D  2C18               	goto	u625
  2397  040E  0872               	movf	___lldiv@divisor+2,w
  2398  040F  0276               	subwf	___lldiv@dividend+2,w
  2399  0410  1D03               	skipz
  2400  0411  2C18               	goto	u625
  2401  0412  0871               	movf	___lldiv@divisor+1,w
  2402  0413  0275               	subwf	___lldiv@dividend+1,w
  2403  0414  1D03               	skipz
  2404  0415  2C18               	goto	u625
  2405  0416  0870               	movf	___lldiv@divisor,w
  2406  0417  0274               	subwf	___lldiv@dividend,w
  2407  0418                     u625:
  2408  0418  1C03               	skipc
  2409  0419  2C1B               	goto	u621
  2410  041A  2C1C               	goto	u620
  2411  041B                     u621:
  2412  041B  2C2B               	goto	l1290
  2413  041C                     u620:
  2414  041C                     l1286:
  2415  041C  0870               	movf	___lldiv@divisor,w
  2416  041D  02F4               	subwf	___lldiv@dividend,f
  2417  041E  0871               	movf	___lldiv@divisor+1,w
  2418  041F  1C03               	skipc
  2419  0420  0F71               	incfsz	___lldiv@divisor+1,w
  2420  0421  02F5               	subwf	___lldiv@dividend+1,f
  2421  0422  0872               	movf	___lldiv@divisor+2,w
  2422  0423  1C03               	skipc
  2423  0424  0F72               	incfsz	___lldiv@divisor+2,w
  2424  0425  02F6               	subwf	___lldiv@dividend+2,f
  2425  0426  0873               	movf	___lldiv@divisor+3,w
  2426  0427  1C03               	skipc
  2427  0428  0F73               	incfsz	___lldiv@divisor+3,w
  2428  0429  02F7               	subwf	___lldiv@dividend+3,f
  2429  042A                     l1288:
  2430  042A  1479               	bsf	___lldiv@quotient,0
  2431  042B                     l1290:
  2432  042B  3001               	movlw	1
  2433  042C                     u635:
  2434  042C  1003               	clrc
  2435  042D  0CF3               	rrf	___lldiv@divisor+3,f
  2436  042E  0CF2               	rrf	___lldiv@divisor+2,f
  2437  042F  0CF1               	rrf	___lldiv@divisor+1,f
  2438  0430  0CF0               	rrf	___lldiv@divisor,f
  2439  0431  3EFF               	addlw	-1
  2440  0432  1D03               	skipz
  2441  0433  2C2C               	goto	u635
  2442  0434                     l1292:
  2443  0434  3001               	movlw	1
  2444  0435  02FD               	subwf	___lldiv@counter,f
  2445  0436  1D03               	btfss	3,2
  2446  0437  2C39               	goto	u641
  2447  0438  2C3A               	goto	u640
  2448  0439                     u641:
  2449  0439  2C01               	goto	l1282
  2450  043A                     u640:
  2451  043A                     l1294:
  2452  043A  087C               	movf	___lldiv@quotient+3,w
  2453  043B  00F3               	movwf	?___lldiv+3
  2454  043C  087B               	movf	___lldiv@quotient+2,w
  2455  043D  00F2               	movwf	?___lldiv+2
  2456  043E  087A               	movf	___lldiv@quotient+1,w
  2457  043F  00F1               	movwf	?___lldiv+1
  2458  0440  0879               	movf	___lldiv@quotient,w
  2459  0441  00F0               	movwf	?___lldiv
  2460  0442                     l326:
  2461  0442  0008               	return
  2462  0443                     __end_of___lldiv:
  2463                           
  2464                           	psect	text7
  2465  0382                     __ptext7:	
  2466 ;; *************** function ___awmod *****************
  2467 ;; Defined at:
  2468 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  2469 ;; Parameters:    Size  Location     Type
  2470 ;;  divisor         2    9[COMMON] int 
  2471 ;;  dividend        2   11[COMMON] int 
  2472 ;; Auto vars:     Size  Location     Type
  2473 ;;  sign            1    1[BANK0 ] unsigned char 
  2474 ;;  counter         1    0[BANK0 ] unsigned char 
  2475 ;; Return value:  Size  Location     Type
  2476 ;;                  2    9[COMMON] int 
  2477 ;; Registers used:
  2478 ;;		wreg, status,2, status,0
  2479 ;; Tracked objects:
  2480 ;;		On entry : 0/0
  2481 ;;		On exit  : 0/0
  2482 ;;		Unchanged: 0/0
  2483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2484 ;;      Params:         4       0       0       0       0
  2485 ;;      Locals:         0       2       0       0       0
  2486 ;;      Temps:          1       0       0       0       0
  2487 ;;      Totals:         5       2       0       0       0
  2488 ;;Total ram usage:        7 bytes
  2489 ;; Hardware stack levels used: 1
  2490 ;; This function calls:
  2491 ;;		Nothing
  2492 ;; This function is called by:
  2493 ;;		_main
  2494 ;; This function uses a non-reentrant model
  2495 ;;
  2496                           
  2497                           
  2498                           ;psect for function ___awmod
  2499  0382                     ___awmod:
  2500  0382                     l1522:	
  2501                           ;incstack = 0
  2502                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2503                           
  2504  0382  1283               	bcf	3,5	;RP0=0, select bank0
  2505  0383  1303               	bcf	3,6	;RP1=0, select bank0
  2506  0384  01AF               	clrf	___awmod@sign
  2507  0385                     l1524:
  2508  0385  1FFC               	btfss	___awmod@dividend+1,7
  2509  0386  2B88               	goto	u951
  2510  0387  2B89               	goto	u950
  2511  0388                     u951:
  2512  0388  2B90               	goto	l1530
  2513  0389                     u950:
  2514  0389                     l1526:
  2515  0389  09FB               	comf	___awmod@dividend,f
  2516  038A  09FC               	comf	___awmod@dividend+1,f
  2517  038B  0AFB               	incf	___awmod@dividend,f
  2518  038C  1903               	skipnz
  2519  038D  0AFC               	incf	___awmod@dividend+1,f
  2520  038E                     l1528:
  2521  038E  01AF               	clrf	___awmod@sign
  2522  038F  0AAF               	incf	___awmod@sign,f
  2523  0390                     l1530:
  2524  0390  1FFA               	btfss	___awmod@divisor+1,7
  2525  0391  2B93               	goto	u961
  2526  0392  2B94               	goto	u960
  2527  0393                     u961:
  2528  0393  2B99               	goto	l1534
  2529  0394                     u960:
  2530  0394                     l1532:
  2531  0394  09F9               	comf	___awmod@divisor,f
  2532  0395  09FA               	comf	___awmod@divisor+1,f
  2533  0396  0AF9               	incf	___awmod@divisor,f
  2534  0397  1903               	skipnz
  2535  0398  0AFA               	incf	___awmod@divisor+1,f
  2536  0399                     l1534:
  2537  0399  0879               	movf	___awmod@divisor,w
  2538  039A  047A               	iorwf	___awmod@divisor+1,w
  2539  039B  1903               	btfsc	3,2
  2540  039C  2B9E               	goto	u971
  2541  039D  2B9F               	goto	u970
  2542  039E                     u971:
  2543  039E  2BCE               	goto	l1552
  2544  039F                     u970:
  2545  039F                     l1536:
  2546  039F  01AE               	clrf	___awmod@counter
  2547  03A0  0AAE               	incf	___awmod@counter,f
  2548  03A1  2BAD               	goto	l1542
  2549  03A2                     l1538:
  2550  03A2  3001               	movlw	1
  2551  03A3                     u985:
  2552  03A3  1003               	clrc
  2553  03A4  0DF9               	rlf	___awmod@divisor,f
  2554  03A5  0DFA               	rlf	___awmod@divisor+1,f
  2555  03A6  3EFF               	addlw	-1
  2556  03A7  1D03               	skipz
  2557  03A8  2BA3               	goto	u985
  2558  03A9                     l1540:
  2559  03A9  3001               	movlw	1
  2560  03AA  00FD               	movwf	??___awmod
  2561  03AB  087D               	movf	??___awmod,w
  2562  03AC  07AE               	addwf	___awmod@counter,f
  2563  03AD                     l1542:
  2564  03AD  1FFA               	btfss	___awmod@divisor+1,7
  2565  03AE  2BB0               	goto	u991
  2566  03AF  2BB1               	goto	u990
  2567  03B0                     u991:
  2568  03B0  2BA2               	goto	l1538
  2569  03B1                     u990:
  2570  03B1                     l1544:
  2571  03B1  087A               	movf	___awmod@divisor+1,w
  2572  03B2  027C               	subwf	___awmod@dividend+1,w
  2573  03B3  1D03               	skipz
  2574  03B4  2BB7               	goto	u1005
  2575  03B5  0879               	movf	___awmod@divisor,w
  2576  03B6  027B               	subwf	___awmod@dividend,w
  2577  03B7                     u1005:
  2578  03B7  1C03               	skipc
  2579  03B8  2BBA               	goto	u1001
  2580  03B9  2BBB               	goto	u1000
  2581  03BA                     u1001:
  2582  03BA  2BC1               	goto	l1548
  2583  03BB                     u1000:
  2584  03BB                     l1546:
  2585  03BB  0879               	movf	___awmod@divisor,w
  2586  03BC  02FB               	subwf	___awmod@dividend,f
  2587  03BD  087A               	movf	___awmod@divisor+1,w
  2588  03BE  1C03               	skipc
  2589  03BF  03FC               	decf	___awmod@dividend+1,f
  2590  03C0  02FC               	subwf	___awmod@dividend+1,f
  2591  03C1                     l1548:
  2592  03C1  3001               	movlw	1
  2593  03C2                     u1015:
  2594  03C2  1003               	clrc
  2595  03C3  0CFA               	rrf	___awmod@divisor+1,f
  2596  03C4  0CF9               	rrf	___awmod@divisor,f
  2597  03C5  3EFF               	addlw	-1
  2598  03C6  1D03               	skipz
  2599  03C7  2BC2               	goto	u1015
  2600  03C8                     l1550:
  2601  03C8  3001               	movlw	1
  2602  03C9  02AE               	subwf	___awmod@counter,f
  2603  03CA  1D03               	btfss	3,2
  2604  03CB  2BCD               	goto	u1021
  2605  03CC  2BCE               	goto	u1020
  2606  03CD                     u1021:
  2607  03CD  2BB1               	goto	l1544
  2608  03CE                     u1020:
  2609  03CE                     l1552:
  2610  03CE  082F               	movf	___awmod@sign,w
  2611  03CF  1903               	btfsc	3,2
  2612  03D0  2BD2               	goto	u1031
  2613  03D1  2BD3               	goto	u1030
  2614  03D2                     u1031:
  2615  03D2  2BD8               	goto	l1556
  2616  03D3                     u1030:
  2617  03D3                     l1554:
  2618  03D3  09FB               	comf	___awmod@dividend,f
  2619  03D4  09FC               	comf	___awmod@dividend+1,f
  2620  03D5  0AFB               	incf	___awmod@dividend,f
  2621  03D6  1903               	skipnz
  2622  03D7  0AFC               	incf	___awmod@dividend+1,f
  2623  03D8                     l1556:
  2624  03D8  087C               	movf	___awmod@dividend+1,w
  2625  03D9  00FA               	movwf	?___awmod+1
  2626  03DA  087B               	movf	___awmod@dividend,w
  2627  03DB  00F9               	movwf	?___awmod
  2628  03DC                     l456:
  2629  03DC  0008               	return
  2630  03DD                     __end_of___awmod:
  2631                           
  2632                           	psect	text8
  2633  0443                     __ptext8:	
  2634 ;; *************** function ___awdiv *****************
  2635 ;; Defined at:
  2636 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  2637 ;; Parameters:    Size  Location     Type
  2638 ;;  divisor         2    0[COMMON] int 
  2639 ;;  dividend        2    2[COMMON] int 
  2640 ;; Auto vars:     Size  Location     Type
  2641 ;;  quotient        2    7[COMMON] int 
  2642 ;;  sign            1    6[COMMON] unsigned char 
  2643 ;;  counter         1    5[COMMON] unsigned char 
  2644 ;; Return value:  Size  Location     Type
  2645 ;;                  2    0[COMMON] int 
  2646 ;; Registers used:
  2647 ;;		wreg, status,2, status,0
  2648 ;; Tracked objects:
  2649 ;;		On entry : 0/0
  2650 ;;		On exit  : 0/0
  2651 ;;		Unchanged: 0/0
  2652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2653 ;;      Params:         4       0       0       0       0
  2654 ;;      Locals:         4       0       0       0       0
  2655 ;;      Temps:          1       0       0       0       0
  2656 ;;      Totals:         9       0       0       0       0
  2657 ;;Total ram usage:        9 bytes
  2658 ;; Hardware stack levels used: 1
  2659 ;; This function calls:
  2660 ;;		Nothing
  2661 ;; This function is called by:
  2662 ;;		_main
  2663 ;; This function uses a non-reentrant model
  2664 ;;
  2665                           
  2666                           
  2667                           ;psect for function ___awdiv
  2668  0443                     ___awdiv:
  2669  0443                     l1478:	
  2670                           ;incstack = 0
  2671                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2672                           
  2673  0443  01F6               	clrf	___awdiv@sign
  2674  0444                     l1480:
  2675  0444  1FF1               	btfss	___awdiv@divisor+1,7
  2676  0445  2C47               	goto	u851
  2677  0446  2C48               	goto	u850
  2678  0447                     u851:
  2679  0447  2C4F               	goto	l1486
  2680  0448                     u850:
  2681  0448                     l1482:
  2682  0448  09F0               	comf	___awdiv@divisor,f
  2683  0449  09F1               	comf	___awdiv@divisor+1,f
  2684  044A  0AF0               	incf	___awdiv@divisor,f
  2685  044B  1903               	skipnz
  2686  044C  0AF1               	incf	___awdiv@divisor+1,f
  2687  044D                     l1484:
  2688  044D  01F6               	clrf	___awdiv@sign
  2689  044E  0AF6               	incf	___awdiv@sign,f
  2690  044F                     l1486:
  2691  044F  1FF3               	btfss	___awdiv@dividend+1,7
  2692  0450  2C52               	goto	u861
  2693  0451  2C53               	goto	u860
  2694  0452                     u861:
  2695  0452  2C5C               	goto	l1492
  2696  0453                     u860:
  2697  0453                     l1488:
  2698  0453  09F2               	comf	___awdiv@dividend,f
  2699  0454  09F3               	comf	___awdiv@dividend+1,f
  2700  0455  0AF2               	incf	___awdiv@dividend,f
  2701  0456  1903               	skipnz
  2702  0457  0AF3               	incf	___awdiv@dividend+1,f
  2703  0458                     l1490:
  2704  0458  3001               	movlw	1
  2705  0459  00F4               	movwf	??___awdiv
  2706  045A  0874               	movf	??___awdiv,w
  2707  045B  06F6               	xorwf	___awdiv@sign,f
  2708  045C                     l1492:
  2709  045C  01F7               	clrf	___awdiv@quotient
  2710  045D  01F8               	clrf	___awdiv@quotient+1
  2711  045E                     l1494:
  2712  045E  0870               	movf	___awdiv@divisor,w
  2713  045F  0471               	iorwf	___awdiv@divisor+1,w
  2714  0460  1903               	btfsc	3,2
  2715  0461  2C63               	goto	u871
  2716  0462  2C64               	goto	u870
  2717  0463                     u871:
  2718  0463  2C9B               	goto	l1514
  2719  0464                     u870:
  2720  0464                     l1496:
  2721  0464  01F5               	clrf	___awdiv@counter
  2722  0465  0AF5               	incf	___awdiv@counter,f
  2723  0466  2C72               	goto	l1502
  2724  0467                     l1498:
  2725  0467  3001               	movlw	1
  2726  0468                     u885:
  2727  0468  1003               	clrc
  2728  0469  0DF0               	rlf	___awdiv@divisor,f
  2729  046A  0DF1               	rlf	___awdiv@divisor+1,f
  2730  046B  3EFF               	addlw	-1
  2731  046C  1D03               	skipz
  2732  046D  2C68               	goto	u885
  2733  046E                     l1500:
  2734  046E  3001               	movlw	1
  2735  046F  00F4               	movwf	??___awdiv
  2736  0470  0874               	movf	??___awdiv,w
  2737  0471  07F5               	addwf	___awdiv@counter,f
  2738  0472                     l1502:
  2739  0472  1FF1               	btfss	___awdiv@divisor+1,7
  2740  0473  2C75               	goto	u891
  2741  0474  2C76               	goto	u890
  2742  0475                     u891:
  2743  0475  2C67               	goto	l1498
  2744  0476                     u890:
  2745  0476                     l1504:
  2746  0476  3001               	movlw	1
  2747  0477                     u905:
  2748  0477  1003               	clrc
  2749  0478  0DF7               	rlf	___awdiv@quotient,f
  2750  0479  0DF8               	rlf	___awdiv@quotient+1,f
  2751  047A  3EFF               	addlw	-1
  2752  047B  1D03               	skipz
  2753  047C  2C77               	goto	u905
  2754  047D  0871               	movf	___awdiv@divisor+1,w
  2755  047E  0273               	subwf	___awdiv@dividend+1,w
  2756  047F  1D03               	skipz
  2757  0480  2C83               	goto	u915
  2758  0481  0870               	movf	___awdiv@divisor,w
  2759  0482  0272               	subwf	___awdiv@dividend,w
  2760  0483                     u915:
  2761  0483  1C03               	skipc
  2762  0484  2C86               	goto	u911
  2763  0485  2C87               	goto	u910
  2764  0486                     u911:
  2765  0486  2C8E               	goto	l1510
  2766  0487                     u910:
  2767  0487                     l1506:
  2768  0487  0870               	movf	___awdiv@divisor,w
  2769  0488  02F2               	subwf	___awdiv@dividend,f
  2770  0489  0871               	movf	___awdiv@divisor+1,w
  2771  048A  1C03               	skipc
  2772  048B  03F3               	decf	___awdiv@dividend+1,f
  2773  048C  02F3               	subwf	___awdiv@dividend+1,f
  2774  048D                     l1508:
  2775  048D  1477               	bsf	___awdiv@quotient,0
  2776  048E                     l1510:
  2777  048E  3001               	movlw	1
  2778  048F                     u925:
  2779  048F  1003               	clrc
  2780  0490  0CF1               	rrf	___awdiv@divisor+1,f
  2781  0491  0CF0               	rrf	___awdiv@divisor,f
  2782  0492  3EFF               	addlw	-1
  2783  0493  1D03               	skipz
  2784  0494  2C8F               	goto	u925
  2785  0495                     l1512:
  2786  0495  3001               	movlw	1
  2787  0496  02F5               	subwf	___awdiv@counter,f
  2788  0497  1D03               	btfss	3,2
  2789  0498  2C9A               	goto	u931
  2790  0499  2C9B               	goto	u930
  2791  049A                     u931:
  2792  049A  2C76               	goto	l1504
  2793  049B                     u930:
  2794  049B                     l1514:
  2795  049B  0876               	movf	___awdiv@sign,w
  2796  049C  1903               	btfsc	3,2
  2797  049D  2C9F               	goto	u941
  2798  049E  2CA0               	goto	u940
  2799  049F                     u941:
  2800  049F  2CA5               	goto	l1518
  2801  04A0                     u940:
  2802  04A0                     l1516:
  2803  04A0  09F7               	comf	___awdiv@quotient,f
  2804  04A1  09F8               	comf	___awdiv@quotient+1,f
  2805  04A2  0AF7               	incf	___awdiv@quotient,f
  2806  04A3  1903               	skipnz
  2807  04A4  0AF8               	incf	___awdiv@quotient+1,f
  2808  04A5                     l1518:
  2809  04A5  0878               	movf	___awdiv@quotient+1,w
  2810  04A6  00F1               	movwf	?___awdiv+1
  2811  04A7  0877               	movf	___awdiv@quotient,w
  2812  04A8  00F0               	movwf	?___awdiv
  2813  04A9                     l443:
  2814  04A9  0008               	return
  2815  04AA                     __end_of___awdiv:
  2816                           
  2817                           	psect	text9
  2818  01CB                     __ptext9:	
  2819 ;; *************** function _Lcd_Write_String *****************
  2820 ;; Defined at:
  2821 ;;		line 77 in file "LCD.c"
  2822 ;; Parameters:    Size  Location     Type
  2823 ;;  a               1    wreg     PTR unsigned char 
  2824 ;;		 -> STR_10(16), STR_9(11), STR_8(12), STR_7(16), 
  2825 ;;		 -> STR_6(11), STR_5(12), STR_4(2), STR_3(4), 
  2826 ;;		 -> STR_2(5), STR_1(16), 
  2827 ;; Auto vars:     Size  Location     Type
  2828 ;;  a               1    7[COMMON] PTR unsigned char 
  2829 ;;		 -> STR_10(16), STR_9(11), STR_8(12), STR_7(16), 
  2830 ;;		 -> STR_6(11), STR_5(12), STR_4(2), STR_3(4), 
  2831 ;;		 -> STR_2(5), STR_1(16), 
  2832 ;;  i               2    5[COMMON] int 
  2833 ;; Return value:  Size  Location     Type
  2834 ;;                  1    wreg      void 
  2835 ;; Registers used:
  2836 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2837 ;; Tracked objects:
  2838 ;;		On entry : 0/0
  2839 ;;		On exit  : 0/0
  2840 ;;		Unchanged: 0/0
  2841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2842 ;;      Params:         0       0       0       0       0
  2843 ;;      Locals:         3       0       0       0       0
  2844 ;;      Temps:          0       0       0       0       0
  2845 ;;      Totals:         3       0       0       0       0
  2846 ;;Total ram usage:        3 bytes
  2847 ;; Hardware stack levels used: 1
  2848 ;; Hardware stack levels required when called: 2
  2849 ;; This function calls:
  2850 ;;		_Lcd_Write_Char
  2851 ;; This function is called by:
  2852 ;;		_main
  2853 ;; This function uses a non-reentrant model
  2854 ;;
  2855                           
  2856                           
  2857                           ;psect for function _Lcd_Write_String
  2858  01CB                     _Lcd_Write_String:
  2859                           
  2860                           ;incstack = 0
  2861                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2862                           ;Lcd_Write_String@a stored from wreg
  2863  01CB  00F7               	movwf	Lcd_Write_String@a
  2864  01CC                     l1426:
  2865                           
  2866                           ;LCD.c: 78:     int i;;LCD.c: 79:     for (i = 0; a[i] != '\0'; i++)
  2867  01CC  01F5               	clrf	Lcd_Write_String@i
  2868  01CD  01F6               	clrf	Lcd_Write_String@i+1
  2869  01CE  29E2               	goto	l1432
  2870  01CF                     l1428:
  2871                           
  2872                           ;LCD.c: 80:         Lcd_Write_Char(a[i]);
  2873  01CF  0875               	movf	Lcd_Write_String@i,w
  2874  01D0  0777               	addwf	Lcd_Write_String@a,w
  2875  01D1  0084               	movwf	4
  2876  01D2  120A  118A  2003  120A  118A  	fcall	stringdir
  2877  01D7  120A  118A  21AD  120A  118A  	fcall	_Lcd_Write_Char
  2878  01DC                     l1430:
  2879  01DC  3001               	movlw	1
  2880  01DD  07F5               	addwf	Lcd_Write_String@i,f
  2881  01DE  1803               	skipnc
  2882  01DF  0AF6               	incf	Lcd_Write_String@i+1,f
  2883  01E0  3000               	movlw	0
  2884  01E1  07F6               	addwf	Lcd_Write_String@i+1,f
  2885  01E2                     l1432:
  2886  01E2  0875               	movf	Lcd_Write_String@i,w
  2887  01E3  0777               	addwf	Lcd_Write_String@a,w
  2888  01E4  0084               	movwf	4
  2889  01E5  120A  118A  2003  120A  118A  	fcall	stringdir
  2890  01EA  3A00               	xorlw	0
  2891  01EB  1D03               	skipz
  2892  01EC  29EE               	goto	u831
  2893  01ED  29EF               	goto	u830
  2894  01EE                     u831:
  2895  01EE  29CF               	goto	l1428
  2896  01EF                     u830:
  2897  01EF                     l198:
  2898  01EF  0008               	return
  2899  01F0                     __end_of_Lcd_Write_String:
  2900                           
  2901                           	psect	text10
  2902  01AD                     __ptext10:	
  2903 ;; *************** function _Lcd_Write_Char *****************
  2904 ;; Defined at:
  2905 ;;		line 65 in file "LCD.c"
  2906 ;; Parameters:    Size  Location     Type
  2907 ;;  a               1    wreg     unsigned char 
  2908 ;; Auto vars:     Size  Location     Type
  2909 ;;  a               1    2[COMMON] unsigned char 
  2910 ;;  y               1    4[COMMON] unsigned char 
  2911 ;;  temp            1    3[COMMON] unsigned char 
  2912 ;; Return value:  Size  Location     Type
  2913 ;;                  1    wreg      void 
  2914 ;; Registers used:
  2915 ;;		wreg, status,2, status,0, pclath, cstack
  2916 ;; Tracked objects:
  2917 ;;		On entry : 0/0
  2918 ;;		On exit  : 0/0
  2919 ;;		Unchanged: 0/0
  2920 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2921 ;;      Params:         0       0       0       0       0
  2922 ;;      Locals:         3       0       0       0       0
  2923 ;;      Temps:          1       0       0       0       0
  2924 ;;      Totals:         4       0       0       0       0
  2925 ;;Total ram usage:        4 bytes
  2926 ;; Hardware stack levels used: 1
  2927 ;; Hardware stack levels required when called: 1
  2928 ;; This function calls:
  2929 ;;		_Lcd_Port
  2930 ;; This function is called by:
  2931 ;;		_main
  2932 ;;		_Lcd_Write_String
  2933 ;; This function uses a non-reentrant model
  2934 ;;
  2935                           
  2936                           
  2937                           ;psect for function _Lcd_Write_Char
  2938  01AD                     _Lcd_Write_Char:
  2939                           
  2940                           ;incstack = 0
  2941                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2942                           ;Lcd_Write_Char@a stored from wreg
  2943  01AD  00F2               	movwf	Lcd_Write_Char@a
  2944  01AE                     l1298:
  2945                           
  2946                           ;LCD.c: 66:     char temp, y;;LCD.c: 67:     temp = a;
  2947  01AE  0872               	movf	Lcd_Write_Char@a,w
  2948  01AF  00F1               	movwf	??_Lcd_Write_Char
  2949  01B0  0871               	movf	??_Lcd_Write_Char,w
  2950  01B1  00F3               	movwf	Lcd_Write_Char@temp
  2951                           
  2952                           ;LCD.c: 68:     y = temp;
  2953  01B2  0873               	movf	Lcd_Write_Char@temp,w
  2954  01B3  00F1               	movwf	??_Lcd_Write_Char
  2955  01B4  0871               	movf	??_Lcd_Write_Char,w
  2956  01B5  00F4               	movwf	Lcd_Write_Char@y
  2957  01B6                     l1300:
  2958                           
  2959                           ;LCD.c: 69:     RE0 = 1;
  2960  01B6  1283               	bcf	3,5	;RP0=0, select bank0
  2961  01B7  1303               	bcf	3,6	;RP1=0, select bank0
  2962  01B8  1409               	bsf	9,0	;volatile
  2963  01B9                     l1302:
  2964                           
  2965                           ;LCD.c: 70:     Lcd_Port(y);
  2966  01B9  0874               	movf	Lcd_Write_Char@y,w
  2967  01BA  120A  118A  2157  120A  118A  	fcall	_Lcd_Port
  2968  01BF                     l1304:
  2969                           
  2970                           ;LCD.c: 71:     RE1 = 1;
  2971  01BF  1283               	bcf	3,5	;RP0=0, select bank0
  2972  01C0  1303               	bcf	3,6	;RP1=0, select bank0
  2973  01C1  1489               	bsf	9,1	;volatile
  2974  01C2                     l1306:
  2975                           
  2976                           ;LCD.c: 72:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2977  01C2  301A               	movlw	26
  2978  01C3  00F1               	movwf	??_Lcd_Write_Char
  2979  01C4                     u1287:
  2980  01C4  0BF1               	decfsz	??_Lcd_Write_Char,f
  2981  01C5  29C4               	goto	u1287
  2982  01C6  0000               	nop
  2983  01C7                     l1308:
  2984                           
  2985                           ;LCD.c: 73:     RE1 = 0;
  2986  01C7  1283               	bcf	3,5	;RP0=0, select bank0
  2987  01C8  1303               	bcf	3,6	;RP1=0, select bank0
  2988  01C9  1089               	bcf	9,1	;volatile
  2989  01CA                     l192:
  2990  01CA  0008               	return
  2991  01CB                     __end_of_Lcd_Write_Char:
  2992                           
  2993                           	psect	text11
  2994  0330                     __ptext11:	
  2995 ;; *************** function _Lcd_Set_Cursor *****************
  2996 ;; Defined at:
  2997 ;;		line 30 in file "LCD.c"
  2998 ;; Parameters:    Size  Location     Type
  2999 ;;  a               1    wreg     unsigned char 
  3000 ;;  b               1    4[COMMON] unsigned char 
  3001 ;; Auto vars:     Size  Location     Type
  3002 ;;  a               1    7[COMMON] unsigned char 
  3003 ;;  temp            1   10[COMMON] unsigned char 
  3004 ;;  y               1    9[COMMON] unsigned char 
  3005 ;;  z               1    8[COMMON] unsigned char 
  3006 ;; Return value:  Size  Location     Type
  3007 ;;                  1    wreg      void 
  3008 ;; Registers used:
  3009 ;;		wreg, status,2, status,0, pclath, cstack
  3010 ;; Tracked objects:
  3011 ;;		On entry : 0/0
  3012 ;;		On exit  : 0/0
  3013 ;;		Unchanged: 0/0
  3014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3015 ;;      Params:         1       0       0       0       0
  3016 ;;      Locals:         4       0       0       0       0
  3017 ;;      Temps:          2       0       0       0       0
  3018 ;;      Totals:         7       0       0       0       0
  3019 ;;Total ram usage:        7 bytes
  3020 ;; Hardware stack levels used: 1
  3021 ;; Hardware stack levels required when called: 2
  3022 ;; This function calls:
  3023 ;;		_Lcd_Cmd
  3024 ;; This function is called by:
  3025 ;;		_main
  3026 ;; This function uses a non-reentrant model
  3027 ;;
  3028                           
  3029                           
  3030                           ;psect for function _Lcd_Set_Cursor
  3031  0330                     _Lcd_Set_Cursor:
  3032                           
  3033                           ;incstack = 0
  3034                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3035                           ;Lcd_Set_Cursor@a stored from wreg
  3036  0330  00F7               	movwf	Lcd_Set_Cursor@a
  3037  0331                     l1406:
  3038                           
  3039                           ;LCD.c: 31:     char temp, z, y;;LCD.c: 32:     if (a == 1) {
  3040  0331  0377               	decf	Lcd_Set_Cursor@a,w
  3041  0332  1D03               	btfss	3,2
  3042  0333  2B35               	goto	u791
  3043  0334  2B36               	goto	u790
  3044  0335                     u791:
  3045  0335  2B59               	goto	l1416
  3046  0336                     u790:
  3047  0336                     l1408:
  3048                           
  3049                           ;LCD.c: 33:         temp = 0x80 + b - 1;
  3050  0336  0874               	movf	Lcd_Set_Cursor@b,w
  3051  0337  3E7F               	addlw	127
  3052  0338  00F5               	movwf	??_Lcd_Set_Cursor
  3053  0339  0875               	movf	??_Lcd_Set_Cursor,w
  3054  033A  00FA               	movwf	Lcd_Set_Cursor@temp
  3055                           
  3056                           ;LCD.c: 34:         z = temp >> 4;
  3057  033B  087A               	movf	Lcd_Set_Cursor@temp,w
  3058  033C  00F5               	movwf	??_Lcd_Set_Cursor
  3059  033D  3004               	movlw	4
  3060  033E                     u805:
  3061  033E  1003               	clrc
  3062  033F  0CF5               	rrf	??_Lcd_Set_Cursor,f
  3063  0340  3EFF               	addlw	-1
  3064  0341  1D03               	skipz
  3065  0342  2B3E               	goto	u805
  3066  0343  0875               	movf	??_Lcd_Set_Cursor,w
  3067  0344  00F6               	movwf	??_Lcd_Set_Cursor+1
  3068  0345  0876               	movf	??_Lcd_Set_Cursor+1,w
  3069  0346  00F8               	movwf	Lcd_Set_Cursor@z
  3070  0347                     l1410:
  3071                           
  3072                           ;LCD.c: 35:         y = temp & 0x0F;
  3073  0347  087A               	movf	Lcd_Set_Cursor@temp,w
  3074  0348  390F               	andlw	15
  3075  0349  00F5               	movwf	??_Lcd_Set_Cursor
  3076  034A  0875               	movf	??_Lcd_Set_Cursor,w
  3077  034B  00F9               	movwf	Lcd_Set_Cursor@y
  3078  034C                     l1412:
  3079                           
  3080                           ;LCD.c: 36:         Lcd_Cmd(z);
  3081  034C  0878               	movf	Lcd_Set_Cursor@z,w
  3082  034D  120A  118A  2193  120A  118A  	fcall	_Lcd_Cmd
  3083  0352                     l1414:
  3084                           
  3085                           ;LCD.c: 37:         Lcd_Cmd(y);
  3086  0352  0879               	movf	Lcd_Set_Cursor@y,w
  3087  0353  120A  118A  2193  120A  118A  	fcall	_Lcd_Cmd
  3088                           
  3089                           ;LCD.c: 38:     } else if (a == 2) {
  3090  0358  2B81               	goto	l186
  3091  0359                     l1416:
  3092  0359  3002               	movlw	2
  3093  035A  0677               	xorwf	Lcd_Set_Cursor@a,w
  3094  035B  1D03               	btfss	3,2
  3095  035C  2B5E               	goto	u811
  3096  035D  2B5F               	goto	u810
  3097  035E                     u811:
  3098  035E  2B81               	goto	l186
  3099  035F                     u810:
  3100  035F                     l1418:
  3101                           
  3102                           ;LCD.c: 39:         temp = 0xC0 + b - 1;
  3103  035F  0874               	movf	Lcd_Set_Cursor@b,w
  3104  0360  3EBF               	addlw	191
  3105  0361  00F5               	movwf	??_Lcd_Set_Cursor
  3106  0362  0875               	movf	??_Lcd_Set_Cursor,w
  3107  0363  00FA               	movwf	Lcd_Set_Cursor@temp
  3108                           
  3109                           ;LCD.c: 40:         z = temp >> 4;
  3110  0364  087A               	movf	Lcd_Set_Cursor@temp,w
  3111  0365  00F5               	movwf	??_Lcd_Set_Cursor
  3112  0366  3004               	movlw	4
  3113  0367                     u825:
  3114  0367  1003               	clrc
  3115  0368  0CF5               	rrf	??_Lcd_Set_Cursor,f
  3116  0369  3EFF               	addlw	-1
  3117  036A  1D03               	skipz
  3118  036B  2B67               	goto	u825
  3119  036C  0875               	movf	??_Lcd_Set_Cursor,w
  3120  036D  00F6               	movwf	??_Lcd_Set_Cursor+1
  3121  036E  0876               	movf	??_Lcd_Set_Cursor+1,w
  3122  036F  00F8               	movwf	Lcd_Set_Cursor@z
  3123  0370                     l1420:
  3124                           
  3125                           ;LCD.c: 41:         y = temp & 0xF0;
  3126  0370  087A               	movf	Lcd_Set_Cursor@temp,w
  3127  0371  39F0               	andlw	240
  3128  0372  00F5               	movwf	??_Lcd_Set_Cursor
  3129  0373  0875               	movf	??_Lcd_Set_Cursor,w
  3130  0374  00F9               	movwf	Lcd_Set_Cursor@y
  3131  0375                     l1422:
  3132                           
  3133                           ;LCD.c: 42:         Lcd_Cmd(z);
  3134  0375  0878               	movf	Lcd_Set_Cursor@z,w
  3135  0376  120A  118A  2193  120A  118A  	fcall	_Lcd_Cmd
  3136  037B                     l1424:
  3137                           
  3138                           ;LCD.c: 43:         Lcd_Cmd(y);
  3139  037B  0879               	movf	Lcd_Set_Cursor@y,w
  3140  037C  120A  118A  2193  120A  118A  	fcall	_Lcd_Cmd
  3141  0381                     l186:
  3142  0381  0008               	return
  3143  0382                     __end_of_Lcd_Set_Cursor:
  3144                           
  3145                           	psect	text12
  3146  02E9                     __ptext12:	
  3147 ;; *************** function _Lcd_Init *****************
  3148 ;; Defined at:
  3149 ;;		line 47 in file "LCD.c"
  3150 ;; Parameters:    Size  Location     Type
  3151 ;;		None
  3152 ;; Auto vars:     Size  Location     Type
  3153 ;;		None
  3154 ;; Return value:  Size  Location     Type
  3155 ;;                  1    wreg      void 
  3156 ;; Registers used:
  3157 ;;		wreg, status,2, status,0, pclath, cstack
  3158 ;; Tracked objects:
  3159 ;;		On entry : 0/0
  3160 ;;		On exit  : 0/0
  3161 ;;		Unchanged: 0/0
  3162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3163 ;;      Params:         0       0       0       0       0
  3164 ;;      Locals:         0       0       0       0       0
  3165 ;;      Temps:          2       0       0       0       0
  3166 ;;      Totals:         2       0       0       0       0
  3167 ;;Total ram usage:        2 bytes
  3168 ;; Hardware stack levels used: 1
  3169 ;; Hardware stack levels required when called: 2
  3170 ;; This function calls:
  3171 ;;		_Lcd_Cmd
  3172 ;;		_Lcd_Port
  3173 ;; This function is called by:
  3174 ;;		_main
  3175 ;; This function uses a non-reentrant model
  3176 ;;
  3177                           
  3178                           
  3179                           ;psect for function _Lcd_Init
  3180  02E9                     _Lcd_Init:
  3181  02E9                     l1394:	
  3182                           ;incstack = 0
  3183                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3184                           
  3185                           
  3186                           ;LCD.c: 48:     Lcd_Port(0x00);
  3187  02E9  3000               	movlw	0
  3188  02EA  120A  118A  2157  120A  118A  	fcall	_Lcd_Port
  3189  02EF                     l1396:
  3190                           
  3191                           ;LCD.c: 49:     _delay((unsigned long)((20)*(8000000/4000.0)));
  3192  02EF  3034               	movlw	52
  3193  02F0  00F5               	movwf	??_Lcd_Init+1
  3194  02F1  30F1               	movlw	241
  3195  02F2  00F4               	movwf	??_Lcd_Init
  3196  02F3                     u1297:
  3197  02F3  0BF4               	decfsz	??_Lcd_Init,f
  3198  02F4  2AF3               	goto	u1297
  3199  02F5  0BF5               	decfsz	??_Lcd_Init+1,f
  3200  02F6  2AF3               	goto	u1297
  3201  02F7  2AF8               	nop2
  3202  02F8                     l1398:
  3203                           
  3204                           ;LCD.c: 50:     Lcd_Cmd(0x30);
  3205  02F8  3030               	movlw	48
  3206  02F9  120A  118A  2193  120A  118A  	fcall	_Lcd_Cmd
  3207                           
  3208                           ;LCD.c: 51:     _delay((unsigned long)((5)*(8000000/4000.0)));
  3209  02FE  300D               	movlw	13
  3210  02FF  00F5               	movwf	??_Lcd_Init+1
  3211  0300  30FB               	movlw	251
  3212  0301  00F4               	movwf	??_Lcd_Init
  3213  0302                     u1307:
  3214  0302  0BF4               	decfsz	??_Lcd_Init,f
  3215  0303  2B02               	goto	u1307
  3216  0304  0BF5               	decfsz	??_Lcd_Init+1,f
  3217  0305  2B02               	goto	u1307
  3218  0306  2B07               	nop2
  3219  0307                     l1400:
  3220                           
  3221                           ;LCD.c: 52:     Lcd_Cmd(0x30);
  3222  0307  3030               	movlw	48
  3223  0308  120A  118A  2193  120A  118A  	fcall	_Lcd_Cmd
  3224  030D                     l1402:
  3225                           
  3226                           ;LCD.c: 53:     _delay((unsigned long)((200)*(8000000/4000000.0)));
  3227  030D  3085               	movlw	133
  3228  030E  00F4               	movwf	??_Lcd_Init
  3229  030F                     u1317:
  3230  030F  0BF4               	decfsz	??_Lcd_Init,f
  3231  0310  2B0F               	goto	u1317
  3232                           
  3233                           ;LCD.c: 54:     Lcd_Cmd(0x30);
  3234  0311  3030               	movlw	48
  3235  0312  120A  118A  2193  120A  118A  	fcall	_Lcd_Cmd
  3236                           
  3237                           ;LCD.c: 56:     Lcd_Cmd(0x3C);
  3238  0317  303C               	movlw	60
  3239  0318  120A  118A  2193  120A  118A  	fcall	_Lcd_Cmd
  3240                           
  3241                           ;LCD.c: 58:     Lcd_Cmd(0x08);
  3242  031D  3008               	movlw	8
  3243  031E  120A  118A  2193  120A  118A  	fcall	_Lcd_Cmd
  3244                           
  3245                           ;LCD.c: 60:     Lcd_Cmd(0x01);
  3246  0323  3001               	movlw	1
  3247  0324  120A  118A  2193  120A  118A  	fcall	_Lcd_Cmd
  3248                           
  3249                           ;LCD.c: 62:     Lcd_Cmd(0x06);
  3250  0329  3006               	movlw	6
  3251  032A  120A  118A  2193  120A  118A  	fcall	_Lcd_Cmd
  3252  032F                     l189:
  3253  032F  0008               	return
  3254  0330                     __end_of_Lcd_Init:
  3255                           
  3256                           	psect	text13
  3257  0186                     __ptext13:	
  3258 ;; *************** function _Lcd_Clear *****************
  3259 ;; Defined at:
  3260 ;;		line 25 in file "LCD.c"
  3261 ;; Parameters:    Size  Location     Type
  3262 ;;		None
  3263 ;; Auto vars:     Size  Location     Type
  3264 ;;		None
  3265 ;; Return value:  Size  Location     Type
  3266 ;;                  1    wreg      void 
  3267 ;; Registers used:
  3268 ;;		wreg, status,2, status,0, pclath, cstack
  3269 ;; Tracked objects:
  3270 ;;		On entry : 0/0
  3271 ;;		On exit  : 0/0
  3272 ;;		Unchanged: 0/0
  3273 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3274 ;;      Params:         0       0       0       0       0
  3275 ;;      Locals:         0       0       0       0       0
  3276 ;;      Temps:          0       0       0       0       0
  3277 ;;      Totals:         0       0       0       0       0
  3278 ;;Total ram usage:        0 bytes
  3279 ;; Hardware stack levels used: 1
  3280 ;; Hardware stack levels required when called: 2
  3281 ;; This function calls:
  3282 ;;		_Lcd_Cmd
  3283 ;; This function is called by:
  3284 ;;		_main
  3285 ;; This function uses a non-reentrant model
  3286 ;;
  3287                           
  3288                           
  3289                           ;psect for function _Lcd_Clear
  3290  0186                     _Lcd_Clear:
  3291  0186                     l1404:	
  3292                           ;incstack = 0
  3293                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3294                           
  3295                           
  3296                           ;LCD.c: 26:     Lcd_Cmd(0);
  3297  0186  3000               	movlw	0
  3298  0187  120A  118A  2193  120A  118A  	fcall	_Lcd_Cmd
  3299                           
  3300                           ;LCD.c: 27:     Lcd_Cmd(1);
  3301  018C  3001               	movlw	1
  3302  018D  120A  118A  2193  120A  118A  	fcall	_Lcd_Cmd
  3303  0192                     l180:
  3304  0192  0008               	return
  3305  0193                     __end_of_Lcd_Clear:
  3306                           
  3307                           	psect	text14
  3308  0193                     __ptext14:	
  3309 ;; *************** function _Lcd_Cmd *****************
  3310 ;; Defined at:
  3311 ;;		line 17 in file "LCD.c"
  3312 ;; Parameters:    Size  Location     Type
  3313 ;;  a               1    wreg     unsigned char 
  3314 ;; Auto vars:     Size  Location     Type
  3315 ;;  a               1    3[COMMON] unsigned char 
  3316 ;; Return value:  Size  Location     Type
  3317 ;;                  1    wreg      void 
  3318 ;; Registers used:
  3319 ;;		wreg, status,2, status,0, pclath, cstack
  3320 ;; Tracked objects:
  3321 ;;		On entry : 0/0
  3322 ;;		On exit  : 0/0
  3323 ;;		Unchanged: 0/0
  3324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3325 ;;      Params:         0       0       0       0       0
  3326 ;;      Locals:         1       0       0       0       0
  3327 ;;      Temps:          2       0       0       0       0
  3328 ;;      Totals:         3       0       0       0       0
  3329 ;;Total ram usage:        3 bytes
  3330 ;; Hardware stack levels used: 1
  3331 ;; Hardware stack levels required when called: 1
  3332 ;; This function calls:
  3333 ;;		_Lcd_Port
  3334 ;; This function is called by:
  3335 ;;		_Lcd_Clear
  3336 ;;		_Lcd_Set_Cursor
  3337 ;;		_Lcd_Init
  3338 ;;		_Lcd_Shift_Right
  3339 ;;		_Lcd_Shift_Left
  3340 ;; This function uses a non-reentrant model
  3341 ;;
  3342                           
  3343                           
  3344                           ;psect for function _Lcd_Cmd
  3345  0193                     _Lcd_Cmd:
  3346                           
  3347                           ;incstack = 0
  3348                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3349                           ;Lcd_Cmd@a stored from wreg
  3350  0193  00F3               	movwf	Lcd_Cmd@a
  3351  0194                     l1326:
  3352                           
  3353                           ;LCD.c: 18:     RE0 = 0;
  3354  0194  1283               	bcf	3,5	;RP0=0, select bank0
  3355  0195  1303               	bcf	3,6	;RP1=0, select bank0
  3356  0196  1009               	bcf	9,0	;volatile
  3357  0197                     l1328:
  3358                           
  3359                           ;LCD.c: 19:     Lcd_Port(a);
  3360  0197  0873               	movf	Lcd_Cmd@a,w
  3361  0198  120A  118A  2157  120A  118A  	fcall	_Lcd_Port
  3362  019D                     l1330:
  3363                           
  3364                           ;LCD.c: 20:     RE1 = 1;
  3365  019D  1283               	bcf	3,5	;RP0=0, select bank0
  3366  019E  1303               	bcf	3,6	;RP1=0, select bank0
  3367  019F  1489               	bsf	9,1	;volatile
  3368  01A0                     l1332:
  3369                           
  3370                           ;LCD.c: 21:     _delay((unsigned long)((4)*(8000000/4000.0)));
  3371  01A0  300B               	movlw	11
  3372  01A1  00F2               	movwf	??_Lcd_Cmd+1
  3373  01A2  3062               	movlw	98
  3374  01A3  00F1               	movwf	??_Lcd_Cmd
  3375  01A4                     u1327:
  3376  01A4  0BF1               	decfsz	??_Lcd_Cmd,f
  3377  01A5  29A4               	goto	u1327
  3378  01A6  0BF2               	decfsz	??_Lcd_Cmd+1,f
  3379  01A7  29A4               	goto	u1327
  3380  01A8  0000               	nop
  3381  01A9                     l1334:
  3382                           
  3383                           ;LCD.c: 22:     RE1 = 0;
  3384  01A9  1283               	bcf	3,5	;RP0=0, select bank0
  3385  01AA  1303               	bcf	3,6	;RP1=0, select bank0
  3386  01AB  1089               	bcf	9,1	;volatile
  3387  01AC                     l177:
  3388  01AC  0008               	return
  3389  01AD                     __end_of_Lcd_Cmd:
  3390                           
  3391                           	psect	text15
  3392  0157                     __ptext15:	
  3393 ;; *************** function _Lcd_Port *****************
  3394 ;; Defined at:
  3395 ;;		line 12 in file "LCD.c"
  3396 ;; Parameters:    Size  Location     Type
  3397 ;;  a               1    wreg     unsigned char 
  3398 ;; Auto vars:     Size  Location     Type
  3399 ;;  a               1    0[COMMON] unsigned char 
  3400 ;; Return value:  Size  Location     Type
  3401 ;;                  1    wreg      void 
  3402 ;; Registers used:
  3403 ;;		wreg
  3404 ;; Tracked objects:
  3405 ;;		On entry : 0/0
  3406 ;;		On exit  : 0/0
  3407 ;;		Unchanged: 0/0
  3408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3409 ;;      Params:         0       0       0       0       0
  3410 ;;      Locals:         1       0       0       0       0
  3411 ;;      Temps:          0       0       0       0       0
  3412 ;;      Totals:         1       0       0       0       0
  3413 ;;Total ram usage:        1 bytes
  3414 ;; Hardware stack levels used: 1
  3415 ;; This function calls:
  3416 ;;		Nothing
  3417 ;; This function is called by:
  3418 ;;		_Lcd_Cmd
  3419 ;;		_Lcd_Init
  3420 ;;		_Lcd_Write_Char
  3421 ;; This function uses a non-reentrant model
  3422 ;;
  3423                           
  3424                           
  3425                           ;psect for function _Lcd_Port
  3426  0157                     _Lcd_Port:
  3427                           
  3428                           ;incstack = 0
  3429                           ; Regs used in _Lcd_Port: [wreg]
  3430                           ;Lcd_Port@a stored from wreg
  3431  0157  00F0               	movwf	Lcd_Port@a
  3432  0158                     l1272:
  3433                           
  3434                           ;LCD.c: 13:     PORTD = a;
  3435  0158  0870               	movf	Lcd_Port@a,w
  3436  0159  1283               	bcf	3,5	;RP0=0, select bank0
  3437  015A  1303               	bcf	3,6	;RP1=0, select bank0
  3438  015B  0088               	movwf	8	;volatile
  3439  015C                     l174:
  3440  015C  0008               	return
  3441  015D                     __end_of_Lcd_Port:
  3442                           
  3443                           	psect	text16
  3444  016F                     __ptext16:	
  3445 ;; *************** function _I2C_Master_Write *****************
  3446 ;; Defined at:
  3447 ;;		line 65 in file "I2C.c"
  3448 ;; Parameters:    Size  Location     Type
  3449 ;;  d               2    0[COMMON] unsigned int 
  3450 ;; Auto vars:     Size  Location     Type
  3451 ;;		None
  3452 ;; Return value:  Size  Location     Type
  3453 ;;                  1    wreg      void 
  3454 ;; Registers used:
  3455 ;;		wreg, status,2, status,0, pclath, cstack
  3456 ;; Tracked objects:
  3457 ;;		On entry : 0/0
  3458 ;;		On exit  : 0/0
  3459 ;;		Unchanged: 0/0
  3460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3461 ;;      Params:         2       0       0       0       0
  3462 ;;      Locals:         0       0       0       0       0
  3463 ;;      Temps:          0       0       0       0       0
  3464 ;;      Totals:         2       0       0       0       0
  3465 ;;Total ram usage:        2 bytes
  3466 ;; Hardware stack levels used: 1
  3467 ;; Hardware stack levels required when called: 1
  3468 ;; This function calls:
  3469 ;;		_I2C_Master_Wait
  3470 ;; This function is called by:
  3471 ;;		_main
  3472 ;; This function uses a non-reentrant model
  3473 ;;
  3474                           
  3475                           
  3476                           ;psect for function _I2C_Master_Write
  3477  016F                     _I2C_Master_Write:
  3478  016F                     l1438:	
  3479                           ;incstack = 0
  3480                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3481                           
  3482                           
  3483                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  3484  016F  120A  118A  2179  120A  118A  	fcall	_I2C_Master_Wait
  3485  0174                     l1440:
  3486                           
  3487                           ;I2C.c: 68:     SSPBUF = d;
  3488  0174  0870               	movf	I2C_Master_Write@d,w
  3489  0175  1283               	bcf	3,5	;RP0=0, select bank0
  3490  0176  1303               	bcf	3,6	;RP1=0, select bank0
  3491  0177  0093               	movwf	19	;volatile
  3492  0178                     l155:
  3493  0178  0008               	return
  3494  0179                     __end_of_I2C_Master_Write:
  3495                           
  3496                           	psect	text17
  3497  0166                     __ptext17:	
  3498 ;; *************** function _I2C_Master_Stop *****************
  3499 ;; Defined at:
  3500 ;;		line 55 in file "I2C.c"
  3501 ;; Parameters:    Size  Location     Type
  3502 ;;		None
  3503 ;; Auto vars:     Size  Location     Type
  3504 ;;		None
  3505 ;; Return value:  Size  Location     Type
  3506 ;;                  1    wreg      void 
  3507 ;; Registers used:
  3508 ;;		wreg, status,2, status,0, pclath, cstack
  3509 ;; Tracked objects:
  3510 ;;		On entry : 0/0
  3511 ;;		On exit  : 0/0
  3512 ;;		Unchanged: 0/0
  3513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3514 ;;      Params:         0       0       0       0       0
  3515 ;;      Locals:         0       0       0       0       0
  3516 ;;      Temps:          0       0       0       0       0
  3517 ;;      Totals:         0       0       0       0       0
  3518 ;;Total ram usage:        0 bytes
  3519 ;; Hardware stack levels used: 1
  3520 ;; Hardware stack levels required when called: 1
  3521 ;; This function calls:
  3522 ;;		_I2C_Master_Wait
  3523 ;; This function is called by:
  3524 ;;		_main
  3525 ;; This function uses a non-reentrant model
  3526 ;;
  3527                           
  3528                           
  3529                           ;psect for function _I2C_Master_Stop
  3530  0166                     _I2C_Master_Stop:
  3531  0166                     l1458:	
  3532                           ;incstack = 0
  3533                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3534                           
  3535                           
  3536                           ;I2C.c: 57:     I2C_Master_Wait();
  3537  0166  120A  118A  2179  120A  118A  	fcall	_I2C_Master_Wait
  3538  016B                     l1460:
  3539                           
  3540                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  3541  016B  1683               	bsf	3,5	;RP0=1, select bank1
  3542  016C  1303               	bcf	3,6	;RP1=0, select bank1
  3543  016D  1511               	bsf	17,2	;volatile
  3544  016E                     l152:
  3545  016E  0008               	return
  3546  016F                     __end_of_I2C_Master_Stop:
  3547                           
  3548                           	psect	text18
  3549  015D                     __ptext18:	
  3550 ;; *************** function _I2C_Master_Start *****************
  3551 ;; Defined at:
  3552 ;;		line 39 in file "I2C.c"
  3553 ;; Parameters:    Size  Location     Type
  3554 ;;		None
  3555 ;; Auto vars:     Size  Location     Type
  3556 ;;		None
  3557 ;; Return value:  Size  Location     Type
  3558 ;;                  1    wreg      void 
  3559 ;; Registers used:
  3560 ;;		wreg, status,2, status,0, pclath, cstack
  3561 ;; Tracked objects:
  3562 ;;		On entry : 0/0
  3563 ;;		On exit  : 0/0
  3564 ;;		Unchanged: 0/0
  3565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3566 ;;      Params:         0       0       0       0       0
  3567 ;;      Locals:         0       0       0       0       0
  3568 ;;      Temps:          0       0       0       0       0
  3569 ;;      Totals:         0       0       0       0       0
  3570 ;;Total ram usage:        0 bytes
  3571 ;; Hardware stack levels used: 1
  3572 ;; Hardware stack levels required when called: 1
  3573 ;; This function calls:
  3574 ;;		_I2C_Master_Wait
  3575 ;; This function is called by:
  3576 ;;		_main
  3577 ;; This function uses a non-reentrant model
  3578 ;;
  3579                           
  3580                           
  3581                           ;psect for function _I2C_Master_Start
  3582  015D                     _I2C_Master_Start:
  3583  015D                     l1434:	
  3584                           ;incstack = 0
  3585                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3586                           
  3587                           
  3588                           ;I2C.c: 41:     I2C_Master_Wait();
  3589  015D  120A  118A  2179  120A  118A  	fcall	_I2C_Master_Wait
  3590  0162                     l1436:
  3591                           
  3592                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  3593  0162  1683               	bsf	3,5	;RP0=1, select bank1
  3594  0163  1303               	bcf	3,6	;RP1=0, select bank1
  3595  0164  1411               	bsf	17,0	;volatile
  3596  0165                     l146:
  3597  0165  0008               	return
  3598  0166                     __end_of_I2C_Master_Start:
  3599                           
  3600                           	psect	text19
  3601  023F                     __ptext19:	
  3602 ;; *************** function _I2C_Master_Read *****************
  3603 ;; Defined at:
  3604 ;;		line 74 in file "I2C.c"
  3605 ;; Parameters:    Size  Location     Type
  3606 ;;  a               2    0[COMMON] unsigned short 
  3607 ;; Auto vars:     Size  Location     Type
  3608 ;;  temp            2    4[COMMON] unsigned short 
  3609 ;; Return value:  Size  Location     Type
  3610 ;;                  2    0[COMMON] unsigned short 
  3611 ;; Registers used:
  3612 ;;		wreg, status,2, status,0, pclath, cstack
  3613 ;; Tracked objects:
  3614 ;;		On entry : 0/0
  3615 ;;		On exit  : 0/0
  3616 ;;		Unchanged: 0/0
  3617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3618 ;;      Params:         2       0       0       0       0
  3619 ;;      Locals:         2       0       0       0       0
  3620 ;;      Temps:          2       0       0       0       0
  3621 ;;      Totals:         6       0       0       0       0
  3622 ;;Total ram usage:        6 bytes
  3623 ;; Hardware stack levels used: 1
  3624 ;; Hardware stack levels required when called: 1
  3625 ;; This function calls:
  3626 ;;		_I2C_Master_Wait
  3627 ;; This function is called by:
  3628 ;;		_main
  3629 ;; This function uses a non-reentrant model
  3630 ;;
  3631                           
  3632                           
  3633                           ;psect for function _I2C_Master_Read
  3634  023F                     _I2C_Master_Read:
  3635  023F                     l1442:	
  3636                           ;incstack = 0
  3637                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3638                           
  3639                           
  3640                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  3641  023F  120A  118A  2179  120A  118A  	fcall	_I2C_Master_Wait
  3642  0244                     l1444:
  3643                           
  3644                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  3645  0244  1683               	bsf	3,5	;RP0=1, select bank1
  3646  0245  1303               	bcf	3,6	;RP1=0, select bank1
  3647  0246  1591               	bsf	17,3	;volatile
  3648                           
  3649                           ;I2C.c: 79:     I2C_Master_Wait();
  3650  0247  120A  118A  2179  120A  118A  	fcall	_I2C_Master_Wait
  3651  024C                     l1446:
  3652                           
  3653                           ;I2C.c: 80:     temp = SSPBUF;
  3654  024C  1283               	bcf	3,5	;RP0=0, select bank0
  3655  024D  1303               	bcf	3,6	;RP1=0, select bank0
  3656  024E  0813               	movf	19,w	;volatile
  3657  024F  00F2               	movwf	??_I2C_Master_Read
  3658  0250  01F3               	clrf	??_I2C_Master_Read+1
  3659  0251  0872               	movf	??_I2C_Master_Read,w
  3660  0252  00F4               	movwf	I2C_Master_Read@temp
  3661  0253  0873               	movf	??_I2C_Master_Read+1,w
  3662  0254  00F5               	movwf	I2C_Master_Read@temp+1
  3663  0255                     l1448:
  3664                           
  3665                           ;I2C.c: 81:     I2C_Master_Wait();
  3666  0255  120A  118A  2179  120A  118A  	fcall	_I2C_Master_Wait
  3667  025A                     l1450:
  3668                           
  3669                           ;I2C.c: 82:     if(a == 1){
  3670  025A  0370               	decf	I2C_Master_Read@a,w
  3671  025B  0471               	iorwf	I2C_Master_Read@a+1,w
  3672  025C  1D03               	btfss	3,2
  3673  025D  2A5F               	goto	u841
  3674  025E  2A60               	goto	u840
  3675  025F                     u841:
  3676  025F  2A64               	goto	l158
  3677  0260                     u840:
  3678  0260                     l1452:
  3679                           
  3680                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  3681  0260  1683               	bsf	3,5	;RP0=1, select bank1
  3682  0261  1303               	bcf	3,6	;RP1=0, select bank1
  3683  0262  1291               	bcf	17,5	;volatile
  3684                           
  3685                           ;I2C.c: 84:     }else{
  3686  0263  2A67               	goto	l159
  3687  0264                     l158:
  3688                           
  3689                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  3690  0264  1683               	bsf	3,5	;RP0=1, select bank1
  3691  0265  1303               	bcf	3,6	;RP1=0, select bank1
  3692  0266  1691               	bsf	17,5	;volatile
  3693  0267                     l159:	
  3694                           ;I2C.c: 86:     }
  3695                           
  3696                           
  3697                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  3698  0267  1611               	bsf	17,4	;volatile
  3699  0268                     l1454:
  3700                           
  3701                           ;I2C.c: 88:     return temp;
  3702  0268  0875               	movf	I2C_Master_Read@temp+1,w
  3703  0269  00F1               	movwf	?_I2C_Master_Read+1
  3704  026A  0874               	movf	I2C_Master_Read@temp,w
  3705  026B  00F0               	movwf	?_I2C_Master_Read
  3706  026C                     l160:
  3707  026C  0008               	return
  3708  026D                     __end_of_I2C_Master_Read:
  3709                           
  3710                           	psect	text20
  3711  0179                     __ptext20:	
  3712 ;; *************** function _I2C_Master_Wait *****************
  3713 ;; Defined at:
  3714 ;;		line 32 in file "I2C.c"
  3715 ;; Parameters:    Size  Location     Type
  3716 ;;		None
  3717 ;; Auto vars:     Size  Location     Type
  3718 ;;		None
  3719 ;; Return value:  Size  Location     Type
  3720 ;;                  1    wreg      void 
  3721 ;; Registers used:
  3722 ;;		wreg, status,2
  3723 ;; Tracked objects:
  3724 ;;		On entry : 0/0
  3725 ;;		On exit  : 0/0
  3726 ;;		Unchanged: 0/0
  3727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3728 ;;      Params:         0       0       0       0       0
  3729 ;;      Locals:         0       0       0       0       0
  3730 ;;      Temps:          0       0       0       0       0
  3731 ;;      Totals:         0       0       0       0       0
  3732 ;;Total ram usage:        0 bytes
  3733 ;; Hardware stack levels used: 1
  3734 ;; This function calls:
  3735 ;;		Nothing
  3736 ;; This function is called by:
  3737 ;;		_I2C_Master_Start
  3738 ;;		_I2C_Master_Stop
  3739 ;;		_I2C_Master_Write
  3740 ;;		_I2C_Master_Read
  3741 ;;		_I2C_Master_RepeatedStart
  3742 ;; This function uses a non-reentrant model
  3743 ;;
  3744                           
  3745                           
  3746                           ;psect for function _I2C_Master_Wait
  3747  0179                     _I2C_Master_Wait:
  3748  0179                     l1322:	
  3749                           ;incstack = 0
  3750                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3751                           
  3752  0179                     l140:	
  3753                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3754                           
  3755  0179  1683               	bsf	3,5	;RP0=1, select bank1
  3756  017A  1303               	bcf	3,6	;RP1=0, select bank1
  3757  017B  1914               	btfsc	20,2	;volatile
  3758  017C  297E               	goto	u661
  3759  017D  297F               	goto	u660
  3760  017E                     u661:
  3761  017E  2979               	goto	l140
  3762  017F                     u660:
  3763  017F                     l1324:
  3764  017F  0811               	movf	17,w	;volatile
  3765  0180  391F               	andlw	31
  3766  0181  1D03               	btfss	3,2
  3767  0182  2984               	goto	u671
  3768  0183  2985               	goto	u670
  3769  0184                     u671:
  3770  0184  2979               	goto	l140
  3771  0185                     u670:
  3772  0185                     l143:
  3773  0185  0008               	return
  3774  0186                     __end_of_I2C_Master_Wait:
  3775  007E                     btemp	set	126	;btemp
  3776  007E                     wtemp0	set	126
  3777                           
  3778                           	psect	config
  3779                           
  3780                           ;Config register CONFIG1 @ 0x2007
  3781                           ;	Oscillator Selection bits
  3782                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3783                           ;	Watchdog Timer Enable bit
  3784                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3785                           ;	Power-up Timer Enable bit
  3786                           ;	PWRTE = OFF, PWRT disabled
  3787                           ;	RE3/MCLR pin function select bit
  3788                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3789                           ;	Code Protection bit
  3790                           ;	CP = OFF, Program memory code protection is disabled
  3791                           ;	Data Code Protection bit
  3792                           ;	CPD = OFF, Data memory code protection is disabled
  3793                           ;	Brown Out Reset Selection bits
  3794                           ;	BOREN = OFF, BOR disabled
  3795                           ;	Internal External Switchover bit
  3796                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3797                           ;	Fail-Safe Clock Monitor Enabled bit
  3798                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3799                           ;	Low Voltage Programming Enable bit
  3800                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3801                           ;	In-Circuit Debugger Mode bit
  3802                           ;	DEBUG = 0x1, unprogrammed default
  3803  2007                     	org	8199
  3804  2007  20D4               	dw	8404
  3805                           
  3806                           ;Config register CONFIG2 @ 0x2008
  3807                           ;	Brown-out Reset Selection bit
  3808                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3809                           ;	Flash Program Memory Self Write Enable bits
  3810                           ;	WRT = OFF, Write protection off
  3811  2008                     	org	8200
  3812  2008  3FFF               	dw	16383

Data Sizes:
    Strings     50
    Constant    0
    Data        0
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     11      25
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 16
		 -> STR_10(CODE[16]), STR_9(CODE[11]), STR_8(CODE[12]), STR_7(CODE[16]), 
		 -> STR_6(CODE[11]), STR_5(CODE[12]), STR_4(CODE[2]), STR_3(CODE[4]), 
		 -> STR_2(CODE[5]), STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    _main->___awmod
    _main->_str_2_dc
    _str_2_dc->___lwdiv
    _I2C_Master_Init->___lldiv
    ___awmod->___awdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _initSETUP->_I2C_Master_Init

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    5072
                                              8 BANK0      3     3      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                            ___awdiv
                            ___awmod
                          _initSETUP
                           _str_2_dc
 ---------------------------------------------------------------------------------
 (1) _str_2_dc                                             6     4      2    1073
                                              8 COMMON     6     4      2
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     466
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _initSETUP                                            0     0      0     412
                    _I2C_Master_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     904
                                              9 COMMON     5     1      4
                                              0 BANK0      2     2      0
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     604
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     510
                                              5 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0      90
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     922
                                              4 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      66
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      44
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      44
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     174
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     273
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
   ___awdiv
   ___awmod
     ___awdiv (ARG)
   _initSETUP
     _I2C_Master_Init
       ___lldiv
   _str_2_dc
     ___lwdiv
     ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      27       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      B      19       5       31.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      27      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Sep 08 00:34:04 2021

                        pc 0002                         l94 07E8                         _RH 0025  
             ___awdiv@sign 0076                         fsr 0004        ___wmul@multiplicand 0072  
                      l105 0519                        l140 0179                        l108 023E  
                      l143 0185                        l160 026C                        l152 016E  
                      l137 02A4                        l146 0165                        l155 0178  
                      l180 0192                        l158 0264                        l174 015C  
                      l326 0442                        l159 0267                        l192 01CA  
                      l177 01AC                        l186 0381                        l290 01FC  
                      l443 04A9                        l292 0214                        l189 032F  
                      l198 01EF                        l456 03DC                        l562 02E8  
                      _GIE 005F                        _RE0 0048                        _RE1 0049  
                      _LDR 0020                        u600 0401                        u601 0400  
                      u620 041C                        u621 041B                        u710 0210  
                      u615 0403                        u711 020F                        u640 043A  
                      u720 02AD                        u641 0439                        u625 0418  
                      u721 02AC                        u705 0204                        u810 035F  
                      u650 0284                        u811 035E                        u635 042C  
                      u660 017F                        u580 03ED                        u740 02BF  
                      u661 017E                        u805 033E                        u581 03EC  
                      u741 02BE                        u670 0185                        u830 01EF  
                      u910 0487                        u671 0184                        u831 01EE  
                      u911 0486                        u655 027F                        u735 02B1  
                      u840 0260                        u760 02D0                        u680 01F6  
                      u841 025F                        u825 0367                        u905 0477  
                      u761 02CF                        u681 01F5                        u930 049B  
                      u850 0448                        u931 049A                        u915 0483  
                      u851 0447                        u595 03F2                        u755 02C0  
                      u940 04A0                        u860 0453                        u780 02E4  
                      u941 049F                        u925 048F                        u861 0452  
                      u781 02E3                        u765 02CC                        u790 0336  
                      u870 0464                        u950 0389                        u791 0335  
                      u871 0463                        u951 0388                        u775 02D8  
                      u695 01FD                        u960 0394                        u961 0393  
                      u890 0476                        u970 039F                        u891 0475  
                      u971 039E                        u885 0468                        u990 03B1  
                      u991 03B0                        u985 03A3                        fsr0 0004  
             ___awmod@sign 002F                       l1300 01B6                       l1302 01B9  
                     l1310 026D                       l1400 0307                       l1304 01BF  
                     l1320 02A3                       l1312 0271                       l1322 0179  
                     l1330 019D                       l1402 030D                       l1410 0347  
                     l1306 01C2                       l1314 0274                       l1324 017F  
                     l1332 01A0                       l1404 0186                       l1420 0370  
                     l1412 034C                       l1308 01C7                       l1500 046E  
                     l1316 02A1                       l1340 01F6                       l1334 01A9  
                     l1326 0194                       l1422 0375                       l1414 0352  
                     l1406 0331                       l1430 01DC                       l1510 048E  
                     l1502 0472                       l1318 02A2                       l1350 02A5  
                     l1342 0203                       l1440 0174                       l1272 0158  
                     l1328 0197                       l1424 037B                       l1408 0336  
                     l1416 0359                       l1432 01E2                       l1512 0495  
                     l1504 0476                       l1280 03FD                       l1360 02BB  
                     l1352 02A7                       l1344 020A                       l1336 01F0  
                     l1600 05FA                       l1450 025A                       l1442 023F  
                     l1434 015D                       l1418 035F                       l1426 01CC  
                     l1506 0487                       l1514 049B                       l1530 0390  
                     l1522 0382                       l1290 042B                       l1282 0401  
                     l1274 03DD                       l1370 02DE                       l1362 02BF  
                     l1354 02AD                       l1346 0210                       l1338 01F2  
                     l1610 0649                       l1602 061E                       l1452 0260  
                     l1444 0244                       l1436 0162                       l1460 016B  
                     l1428 01CF                       l1516 04A0                       l1508 048D  
                     l1540 03A9                       l1532 0394                       l1524 0385  
                     l1292 0434                       l1284 040A                       l1276 03ED  
                     l1380 022A                       l1364 02D0                       l1356 02B0  
                     l1372 02E4                       l1700 078A                       l1620 0670  
                     l1612 0651                       l1604 0635                       l1454 0268  
                     l1446 024C                       l1438 016F                       l1518 04A5  
                     l1550 03C8                       l1542 03AD                       l1534 0399  
                     l1526 0389                       l1286 041C                       l1278 03F0  
                     l1294 043A                       l1390 022F                       l1382 022B  
                     l1366 02D6                       l1358 02B7                       l1470 04EC  
                     l1462 04AA                       l1710 07B2                       l1702 078D  
                     l1630 0696                       l1622 0678                       l1614 0659  
                     l1606 063B                       l1448 0255                       l1480 0444  
                     l1544 03B1                       l1536 039F                       l1552 03CE  
                     l1528 038E                       l1288 042A                       l1384 022C  
                     l1376 0215                       l1368 02D7                       l1472 050A  
                     l1464 04AE                       l1720 07D9                       l1712 07B8  
                     l1704 0797                       l1632 069B                       l1640 06B0  
                     l1624 0680                       l1616 065F                       l1608 0643  
                     l1560 051A                       l1458 0166                       l1394 02E9  
                     l1298 01AE                       l1490 0458                       l1482 0448  
                     l1554 03D3                       l1546 03BB                       l1538 03A2  
                     l1386 022D                       l1378 0227                       l1474 050F  
                     l1466 04C1                       l1722 07E1                       l1714 07C0  
                     l1706 07A5                       l1650 06C5                       l1642 06B6  
                     l1634 069C                       l1626 0688                       l1618 0665  
                     l1570 054C                       l1562 0531                       l1396 02EF  
                     l1492 045C                       l1484 044D                       l1556 03D8  
                     l1548 03C1                       l1388 022E                       l1476 0514  
                     l1468 04D9                       l1716 07C6                       l1708 07AA  
                     l1660 06FA                       l1652 06D0                       l1644 06BB  
                     l1636 06AB                       l1628 068E                       l1580 0571  
                     l1572 055A                       l1564 0537                       l1398 02F8  
                     l1494 045E                       l1486 044F                       l1478 0443  
                     l1718 07D4                       l1670 0717                       l1662 06FB  
                     l1654 06E1                       l1646 06BF                       l1638 06AE  
                     l1590 05A1                       l1582 0576                       l1574 055D  
                     l1566 053C                       l1496 0464                       l1488 0453  
                     l1680 0738                       l1672 071C                       l1664 06FC  
                     l1648 06C4                       l1656 06E6                       l1592 05A6  
                     l1584 0585                       l1576 0562                       l1568 0545  
                     l1498 0467                       l1682 0746                       l1674 0724  
                     l1666 0706                       l1658 06F3                       l1690 0768  
                     l1594 05B5                       l1586 058A                       l1578 0570  
                     l1692 0777                       l1684 074B                       l1676 072A  
                     l1668 0709                       l1596 05BD                       l1588 0593  
                     l1694 077E                       l1686 0753                       l1678 0732  
                     l1598 05E3                       l1696 077F                       l1688 0759  
                     l1698 0780                       STR_1 0009                       STR_2 0030  
                     STR_3 0035                       STR_4 0039                       STR_5 0019  
                     STR_6 0025                       STR_7 0009                       STR_8 0019  
                     STR_9 0025                       u1000 03BB                       u1001 03BA  
                     u1020 03CE                       u1100 06C4                       u1021 03CD  
                     u1005 03B7                       u1101 06C3                       u1030 03D3  
                     u1110 06F3                       u1031 03D2                       u1015 03C2  
                     u1111 06F2                       u1120 06FA                       u1040 054C  
                     u1121 06F9                       u1041 054B                       u1130 0777  
                     u1050 0562                       u1131 0776                       u1115 06EF  
                     u1051 0561                       u1140 077E                       u1060 0696  
                     u1141 077D                       u1061 0695                       u1070 069B  
                     u1135 0773                       u1207 0702                       u1071 069A  
                     u1080 06B6                       u1217 0711                       u1081 06B5  
                     u1090 06BB                       u1307 0302                       u1227 0740  
                     u1091 06BA                       u1317 030F                       u1237 0761  
                     u1157 057E                       u1327 01A4                       u1247 0786  
                     u1167 05AE                       u1257 0793                       u1177 06A4  
                     u1267 079F                       u1187 06CB                       u1277 07CE  
                     u1197 06DB                       u1287 01C4                       u1297 02F3  
                     _PEIE 005E                       _dec0 002C                       _dec1 002A  
        ?_Lcd_Write_String 0070                       _cont 0023                       _main 051A  
                     _test 0024                       btemp 007E                       start 0000  
       ??_Lcd_Write_String 0075            __end_of_Lcd_Cmd 01AD           ?_I2C_Master_Init 002E  
         ?_I2C_Master_Read 0070           ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070  
                    ?_main 0070            __end_of___awdiv 04AA                      STR_10 0009  
          __end_of___awmod 03DD                      _ANSEL 0188            __end_of___lldiv 0443  
          ___awdiv@divisor 0070            __end_of___lwdiv 02E9            ___awdiv@counter 0075  
                    _PORTA 0005                      _PORTB 0006                      _PORTC 0007  
                    _PORTD 0008                      _PORTE 0009    __size_of_Lcd_Set_Cursor 0052  
                    _TRISA 0085                      _TRISB 0086                      _TRISC 0087  
                    _TRISD 0088                      _SSPIE 0463                      _TRISE 0089  
                    _SSPIF 0063                      _cont1 0022                      _unit0 002D  
                    _unit1 002B                      pclath 000A                      status 0003  
                    wtemp0 007E           __end_of_Lcd_Init 0330           __end_of_Lcd_Port 015D  
          __initialization 07EC               __end_of_main 07EC                     ??_main 0036  
       __size_of_Lcd_Clear 000D          ?_I2C_Master_Start 0070          ?_I2C_Master_Write 0070  
       ??_I2C_Master_Start 0070         ??_I2C_Master_Write 0072           ___awdiv@dividend 0072  
                   _ANSELH 0189                  ??_Lcd_Cmd 0071    __size_of_Lcd_Write_Char 001E  
                   _SSPADD 0093                     _TRISC3 043B                     _TRISC4 043C  
                   _SSPCON 0014                     _SSPBUF 0013                     ___wmul 01F0  
                ??___awdiv 0074                  ??___awmod 007D                  ??___lldiv 0078  
                ??___lwdiv 0074           ___awdiv@quotient 0077            ___awmod@divisor 0079  
          ___awmod@counter 002E           __end_of_str_2_dc 051A            Lcd_Set_Cursor@a 0077  
          Lcd_Set_Cursor@b 0074            Lcd_Set_Cursor@y 0079            Lcd_Set_Cursor@z 0078  
  __end_of__initialization 07FC          __end_of_Lcd_Clear 0193             __pcstackCOMMON 0070  
           _Lcd_Set_Cursor 0330                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
               __pbssBANK0 0020         __size_of_initSETUP 002A                 __pmaintext 051A  
                  ?___wmul 0070  __size_of_Lcd_Write_String 0025     __end_of_Lcd_Set_Cursor 0382  
               ??_Lcd_Init 0074                 ??_Lcd_Port 0070                    _SSPCON2 0091  
                  _SSPSTAT 0094                 __stringtab 0003             _Lcd_Write_Char 01AD  
                  _Lcd_Cmd 0193                    _dec0_12 0028                    _dec1_12 0027  
                ?_str_2_dc 0078                    ___awdiv 0443                    ___awmod 0382  
                  ___lldiv 03DD            __size_of___wmul 0025                    ___lwdiv 02A5  
        __end_of_initSETUP 023F            ?_Lcd_Set_Cursor 0074                    __ptext1 04AA  
                  __ptext2 01F0                    __ptext3 02A5                    __ptext4 0215  
                  __ptext5 026D                    __ptext6 03DD                    __ptext7 0382  
                  __ptext8 0443                    __ptext9 01CB           ___awmod@dividend 007B  
 __size_of_I2C_Master_Init 0038   __size_of_I2C_Master_Read 002E   __size_of_I2C_Master_Wait 000D  
                  _unit0_0 0029   __size_of_I2C_Master_Stop 0009     __end_of_Lcd_Write_Char 01CB  
     end_of_initialization 07FC  __size_of_I2C_Master_Start 0009  __size_of_I2C_Master_Write 000A  
          ___lldiv@divisor 0070            ___lldiv@counter 007D           I2C_Master_Init@c 002E  
         I2C_Master_Read@a 0070                 ??_str_2_dc 007A                  Lcd_Port@a 0070  
                _PORTAbits 0005                  _TRISCbits 0087            ?_Lcd_Write_Char 0070  
        Lcd_Write_String@a 0077          Lcd_Write_String@i 0075                str_2_dc@var 0078  
              str_2_dc@vcv 007C                  _Lcd_Clear 0186             __end_of___wmul 0215  
         _Lcd_Write_String 01CB        start_initialization 07EC          __size_of_Lcd_Init 0047  
        __size_of_Lcd_Port 0006          ??_I2C_Master_Init 0032          ??_I2C_Master_Read 0072  
        ??_I2C_Master_Wait 0070          ??_I2C_Master_Stop 0070                 ?_Lcd_Clear 0070  
                 ??___wmul 0074            Lcd_Write_Char@a 0072            Lcd_Write_Char@y 0074  
                ___latbits 0002              __pcstackBANK0 002E                   ?_Lcd_Cmd 0070  
         _I2C_Master_Start 015D           _I2C_Master_Write 016F           ___lwdiv@dividend 0072  
         ??_Lcd_Set_Cursor 0075                   ?___awdiv 0070                   ?___awmod 0079  
                 ?___lldiv 0070                   ?___lwdiv 0070          __size_of_str_2_dc 0070  
                __pstrings 0003                  _initSETUP 0215           ___lwdiv@quotient 0075  
           ___wmul@product 0074                   Lcd_Cmd@a 0073                ??_Lcd_Clear 0074  
              __stringbase 0008          ___wmul@multiplier 0070           ??_Lcd_Write_Char 0071  
               ?_initSETUP 0070                   _Lcd_Init 02E9                   _Lcd_Port 0157  
      I2C_Master_Read@temp 0074   __end_of_Lcd_Write_String 01F0           __size_of_Lcd_Cmd 001A  
                 _Humidity 0026           __size_of___awdiv 0067           __size_of___awmod 005B  
         __size_of___lldiv 0066           __size_of___lwdiv 0044         __end_of__stringtab 0009  
          _I2C_Master_Init 026D            _I2C_Master_Read 023F            _I2C_Master_Wait 0179  
          _I2C_Master_Stop 0166            ___lwdiv@divisor 0070            ___lwdiv@counter 0077  
                 __ptext10 01AD                   __ptext11 0330                   __ptext20 0179  
                 __ptext12 02E9                   __ptext13 0186                   __ptext14 0193  
                 __ptext15 0157                   __ptext16 016F                   __ptext17 0166  
                 __ptext18 015D                   __ptext19 023F              __size_of_main 02D2  
                 _str_2_dc 04AA   __end_of_I2C_Master_Start 0166   __end_of_I2C_Master_Write 0179  
               _INTCONbits 000B                ??_initSETUP 007E         Lcd_Write_Char@temp 0073  
         ___lldiv@dividend 0074                  stringcode 0003                 _OSCCONbits 008F  
  __end_of_I2C_Master_Init 02A5    __end_of_I2C_Master_Read 026D    __end_of_I2C_Master_Wait 0186  
  __end_of_I2C_Master_Stop 016F         Lcd_Set_Cursor@temp 007A           ___lldiv@quotient 0079  
        I2C_Master_Write@d 0070                   stringdir 0003                   stringtab 0003  
              _SSPCON2bits 0091  
