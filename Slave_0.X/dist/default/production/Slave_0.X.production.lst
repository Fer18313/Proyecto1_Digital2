

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Sep 07 04:44:40 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    25                           	dabs	1,0x7E,2
    26  0000                     
    27                           ; Version 2.20
    28                           ; Generated 12/02/2020 GMT
    29                           ; 
    30                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC16F887 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001D                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  0081                     	;# 
    97  0085                     	;# 
    98  0086                     	;# 
    99  0087                     	;# 
   100  0088                     	;# 
   101  0089                     	;# 
   102  008C                     	;# 
   103  008D                     	;# 
   104  008E                     	;# 
   105  008F                     	;# 
   106  0090                     	;# 
   107  0091                     	;# 
   108  0092                     	;# 
   109  0093                     	;# 
   110  0093                     	;# 
   111  0093                     	;# 
   112  0094                     	;# 
   113  0095                     	;# 
   114  0096                     	;# 
   115  0097                     	;# 
   116  0098                     	;# 
   117  0099                     	;# 
   118  009A                     	;# 
   119  009B                     	;# 
   120  009C                     	;# 
   121  009D                     	;# 
   122  009E                     	;# 
   123  009F                     	;# 
   124  0105                     	;# 
   125  0107                     	;# 
   126  0108                     	;# 
   127  0109                     	;# 
   128  010C                     	;# 
   129  010C                     	;# 
   130  010D                     	;# 
   131  010E                     	;# 
   132  010F                     	;# 
   133  0185                     	;# 
   134  0187                     	;# 
   135  0188                     	;# 
   136  0189                     	;# 
   137  018C                     	;# 
   138  018D                     	;# 
   139  0000                     	;# 
   140  0001                     	;# 
   141  0002                     	;# 
   142  0003                     	;# 
   143  0004                     	;# 
   144  0005                     	;# 
   145  0006                     	;# 
   146  0007                     	;# 
   147  0008                     	;# 
   148  0009                     	;# 
   149  000A                     	;# 
   150  000B                     	;# 
   151  000C                     	;# 
   152  000D                     	;# 
   153  000E                     	;# 
   154  000E                     	;# 
   155  000F                     	;# 
   156  0010                     	;# 
   157  0011                     	;# 
   158  0012                     	;# 
   159  0013                     	;# 
   160  0014                     	;# 
   161  0015                     	;# 
   162  0015                     	;# 
   163  0016                     	;# 
   164  0017                     	;# 
   165  0018                     	;# 
   166  0019                     	;# 
   167  001A                     	;# 
   168  001B                     	;# 
   169  001B                     	;# 
   170  001C                     	;# 
   171  001D                     	;# 
   172  001E                     	;# 
   173  001F                     	;# 
   174  0081                     	;# 
   175  0085                     	;# 
   176  0086                     	;# 
   177  0087                     	;# 
   178  0088                     	;# 
   179  0089                     	;# 
   180  008C                     	;# 
   181  008D                     	;# 
   182  008E                     	;# 
   183  008F                     	;# 
   184  0090                     	;# 
   185  0091                     	;# 
   186  0092                     	;# 
   187  0093                     	;# 
   188  0093                     	;# 
   189  0093                     	;# 
   190  0094                     	;# 
   191  0095                     	;# 
   192  0096                     	;# 
   193  0097                     	;# 
   194  0098                     	;# 
   195  0099                     	;# 
   196  009A                     	;# 
   197  009B                     	;# 
   198  009C                     	;# 
   199  009D                     	;# 
   200  009E                     	;# 
   201  009F                     	;# 
   202  0105                     	;# 
   203  0107                     	;# 
   204  0108                     	;# 
   205  0109                     	;# 
   206  010C                     	;# 
   207  010C                     	;# 
   208  010D                     	;# 
   209  010E                     	;# 
   210  010F                     	;# 
   211  0185                     	;# 
   212  0187                     	;# 
   213  0188                     	;# 
   214  0189                     	;# 
   215  018C                     	;# 
   216  018D                     	;# 
   217  0000                     	;# 
   218  0001                     	;# 
   219  0002                     	;# 
   220  0003                     	;# 
   221  0004                     	;# 
   222  0005                     	;# 
   223  0006                     	;# 
   224  0007                     	;# 
   225  0008                     	;# 
   226  0009                     	;# 
   227  000A                     	;# 
   228  000B                     	;# 
   229  000C                     	;# 
   230  000D                     	;# 
   231  000E                     	;# 
   232  000E                     	;# 
   233  000F                     	;# 
   234  0010                     	;# 
   235  0011                     	;# 
   236  0012                     	;# 
   237  0013                     	;# 
   238  0014                     	;# 
   239  0015                     	;# 
   240  0015                     	;# 
   241  0016                     	;# 
   242  0017                     	;# 
   243  0018                     	;# 
   244  0019                     	;# 
   245  001A                     	;# 
   246  001B                     	;# 
   247  001B                     	;# 
   248  001C                     	;# 
   249  001D                     	;# 
   250  001E                     	;# 
   251  001F                     	;# 
   252  0081                     	;# 
   253  0085                     	;# 
   254  0086                     	;# 
   255  0087                     	;# 
   256  0088                     	;# 
   257  0089                     	;# 
   258  008C                     	;# 
   259  008D                     	;# 
   260  008E                     	;# 
   261  008F                     	;# 
   262  0090                     	;# 
   263  0091                     	;# 
   264  0092                     	;# 
   265  0093                     	;# 
   266  0093                     	;# 
   267  0093                     	;# 
   268  0094                     	;# 
   269  0095                     	;# 
   270  0096                     	;# 
   271  0097                     	;# 
   272  0098                     	;# 
   273  0099                     	;# 
   274  009A                     	;# 
   275  009B                     	;# 
   276  009C                     	;# 
   277  009D                     	;# 
   278  009E                     	;# 
   279  009F                     	;# 
   280  0105                     	;# 
   281  0107                     	;# 
   282  0108                     	;# 
   283  0109                     	;# 
   284  010C                     	;# 
   285  010C                     	;# 
   286  010D                     	;# 
   287  010E                     	;# 
   288  010F                     	;# 
   289  0185                     	;# 
   290  0187                     	;# 
   291  0188                     	;# 
   292  0189                     	;# 
   293  018C                     	;# 
   294  018D                     	;# 
   295  0000                     	;# 
   296  0001                     	;# 
   297  0002                     	;# 
   298  0003                     	;# 
   299  0004                     	;# 
   300  0005                     	;# 
   301  0006                     	;# 
   302  0007                     	;# 
   303  0008                     	;# 
   304  0009                     	;# 
   305  000A                     	;# 
   306  000B                     	;# 
   307  000C                     	;# 
   308  000D                     	;# 
   309  000E                     	;# 
   310  000E                     	;# 
   311  000F                     	;# 
   312  0010                     	;# 
   313  0011                     	;# 
   314  0012                     	;# 
   315  0013                     	;# 
   316  0014                     	;# 
   317  0015                     	;# 
   318  0015                     	;# 
   319  0016                     	;# 
   320  0017                     	;# 
   321  0018                     	;# 
   322  0019                     	;# 
   323  001A                     	;# 
   324  001B                     	;# 
   325  001B                     	;# 
   326  001C                     	;# 
   327  001D                     	;# 
   328  001E                     	;# 
   329  001F                     	;# 
   330  0081                     	;# 
   331  0085                     	;# 
   332  0086                     	;# 
   333  0087                     	;# 
   334  0088                     	;# 
   335  0089                     	;# 
   336  008C                     	;# 
   337  008D                     	;# 
   338  008E                     	;# 
   339  008F                     	;# 
   340  0090                     	;# 
   341  0091                     	;# 
   342  0092                     	;# 
   343  0093                     	;# 
   344  0093                     	;# 
   345  0093                     	;# 
   346  0094                     	;# 
   347  0095                     	;# 
   348  0096                     	;# 
   349  0097                     	;# 
   350  0098                     	;# 
   351  0099                     	;# 
   352  009A                     	;# 
   353  009B                     	;# 
   354  009C                     	;# 
   355  009D                     	;# 
   356  009E                     	;# 
   357  009F                     	;# 
   358  0105                     	;# 
   359  0107                     	;# 
   360  0108                     	;# 
   361  0109                     	;# 
   362  010C                     	;# 
   363  010C                     	;# 
   364  010D                     	;# 
   365  010E                     	;# 
   366  010F                     	;# 
   367  0185                     	;# 
   368  0187                     	;# 
   369  0188                     	;# 
   370  0189                     	;# 
   371  018C                     	;# 
   372  018D                     	;# 
   373  0001                     _TMR0	set	1
   374  0005                     _PORTAbits	set	5
   375  000B                     _INTCONbits	set	11
   376  0008                     _PORTD	set	8
   377  0007                     _PORTC	set	7
   378  0006                     _PORTB	set	6
   379  0005                     _PORTA	set	5
   380  0009                     _PORTE	set	9
   381  0013                     _SSPBUF	set	19
   382  0014                     _SSPCON	set	20
   383  0049                     _RE1	set	73
   384  0048                     _RE0	set	72
   385  0063                     _SSPIF	set	99
   386  005E                     _PEIE	set	94
   387  005F                     _GIE	set	95
   388  0095                     _WPUB	set	149
   389  0081                     _OPTION_REGbits	set	129
   390  0096                     _IOCB	set	150
   391  008F                     _OSCCONbits	set	143
   392  0089                     _TRISE	set	137
   393  0088                     _TRISD	set	136
   394  0087                     _TRISC	set	135
   395  0086                     _TRISB	set	134
   396  0085                     _TRISA	set	133
   397  0091                     _SSPCON2bits	set	145
   398  0087                     _TRISCbits	set	135
   399  0094                     _SSPSTAT	set	148
   400  0093                     _SSPADD	set	147
   401  0091                     _SSPCON2	set	145
   402  0463                     _SSPIE	set	1123
   403  043C                     _TRISC4	set	1084
   404  043B                     _TRISC3	set	1083
   405  0189                     _ANSELH	set	393
   406  0188                     _ANSEL	set	392
   407                           
   408                           	psect	strings
   409  0003                     __pstrings:
   410  0003                     stringtab:
   411  0003                     __stringtab:
   412  0003                     stringcode:	
   413                           ;	String table - string pointers are 1 byte each
   414                           
   415  0003                     stringdir:
   416  0003  3000               	movlw	high stringdir
   417  0004  008A               	movwf	10
   418  0005  0804               	movf	4,w
   419  0006  0A84               	incf	4,f
   420  0007  0782               	addwf	2,f
   421  0008                     __stringbase:
   422  0008  3400               	retlw	0
   423  0009                     __end_of__stringtab:
   424  0009                     STR_1:
   425  0009  3420               	retlw	32	;' '
   426  000A  3453               	retlw	83	;'S'
   427  000B  3431               	retlw	49	;'1'
   428  000C  343A               	retlw	58	;':'
   429  000D  3420               	retlw	32	;' '
   430  000E  3420               	retlw	32	;' '
   431  000F  3420               	retlw	32	;' '
   432  0010  3453               	retlw	83	;'S'
   433  0011  3432               	retlw	50	;'2'
   434  0012  343A               	retlw	58	;':'
   435  0013  3420               	retlw	32	;' '
   436  0014  3420               	retlw	32	;' '
   437  0015  3420               	retlw	32	;' '
   438  0016  3453               	retlw	83	;'S'
   439  0017  3433               	retlw	51	;'3'
   440  0018  343A               	retlw	58	;':'
   441  0019  3400               	retlw	0
   442  001A                     STR_2:
   443  001A  3425               	retlw	37	;'%'
   444  001B  3420               	retlw	32	;' '
   445  001C  3420               	retlw	32	;' '
   446  001D  3420               	retlw	32	;' '
   447  001E  3400               	retlw	0
   448  001F                     STR_4:
   449  001F  3443               	retlw	67	;'C'
   450  0020  3420               	retlw	32	;' '
   451  0021  3420               	retlw	32	;' '
   452  0022  3400               	retlw	0
   453  0023                     STR_5:
   454  0023  3430               	retlw	48	;'0'
   455  0024  3430               	retlw	48	;'0'
   456  0025  3430               	retlw	48	;'0'
   457  0026  3400               	retlw	0
   458  0027                     STR_3:
   459  0027  34B0               	retlw	-80
   460  0028  3400               	retlw	0
   461                           
   462                           	psect	cinit
   463  07EE                     start_initialization:	
   464                           ; #config settings
   465                           
   466  07EE                     __initialization:
   467                           
   468                           ; Clear objects allocated to BANK0
   469  07EE  1283               	bcf	3,5	;RP0=0, select bank0
   470  07EF  1303               	bcf	3,6	;RP1=0, select bank0
   471  07F0  01A0               	clrf	__pbssBANK0& (0+127)
   472  07F1  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   473  07F2  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   474  07F3  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   475  07F4  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   476  07F5  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   477  07F6  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   478  07F7  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   479  07F8  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   480  07F9  01A9               	clrf	(__pbssBANK0+9)& (0+127)
   481  07FA  01AA               	clrf	(__pbssBANK0+10)& (0+127)
   482  07FB  01AB               	clrf	(__pbssBANK0+11)& (0+127)
   483  07FC                     end_of_initialization:	
   484                           ;End of C runtime variable initialization code
   485                           
   486  07FC                     __end_of__initialization:
   487  07FC  0183               	clrf	3
   488  07FD  120A  118A  2E98   	ljmp	_main	;jump to C main() function
   489                           
   490                           	psect	bssBANK0
   491  0020                     __pbssBANK0:
   492  0020                     _dec1:
   493  0020                     	ds	1
   494  0021                     _unit1:
   495  0021                     	ds	1
   496  0022                     _dec0:
   497  0022                     	ds	1
   498  0023                     _unit0:
   499  0023                     	ds	1
   500  0024                     _check_sum:
   501  0024                     	ds	1
   502  0025                     _RH:
   503  0025                     	ds	1
   504  0026                     _Humidity:
   505  0026                     	ds	1
   506  0027                     _T_Int:
   507  0027                     	ds	1
   508  0028                     _T_Dec:
   509  0028                     	ds	1
   510  0029                     _RH_Int:
   511  0029                     	ds	1
   512  002A                     _RH_Dec:
   513  002A                     	ds	1
   514  002B                     _buffer:
   515  002B                     	ds	1
   516                           
   517                           	psect	cstackCOMMON
   518  0070                     __pcstackCOMMON:
   519  0070                     ?_initSETUP:
   520  0070                     ??_initSETUP:	
   521                           ; 1 bytes @ 0x0
   522                           
   523  0070                     ?_configTMR0:	
   524                           ; 1 bytes @ 0x0
   525                           
   526  0070                     ??_configTMR0:	
   527                           ; 1 bytes @ 0x0
   528                           
   529  0070                     ?_Lcd_Init:	
   530                           ; 1 bytes @ 0x0
   531                           
   532  0070                     ?_Lcd_Clear:	
   533                           ; 1 bytes @ 0x0
   534                           
   535  0070                     ?_Lcd_Write_String:	
   536                           ; 1 bytes @ 0x0
   537                           
   538  0070                     ?_startRead:	
   539                           ; 1 bytes @ 0x0
   540                           
   541  0070                     ??_startRead:	
   542                           ; 1 bytes @ 0x0
   543                           
   544  0070                     ?_checkResponse:	
   545                           ; 1 bytes @ 0x0
   546                           
   547  0070                     ??_checkResponse:	
   548                           ; 1 bytes @ 0x0
   549                           
   550  0070                     ?_DHT11_Read:	
   551                           ; 1 bytes @ 0x0
   552                           
   553  0070                     ??_DHT11_Read:	
   554                           ; 1 bytes @ 0x0
   555                           
   556  0070                     ?_Lcd_Write_Char:	
   557                           ; 1 bytes @ 0x0
   558                           
   559  0070                     ?_main:	
   560                           ; 1 bytes @ 0x0
   561                           
   562  0070                     ?_Lcd_Port:	
   563                           ; 1 bytes @ 0x0
   564                           
   565  0070                     ??_Lcd_Port:	
   566                           ; 1 bytes @ 0x0
   567                           
   568  0070                     ?_Lcd_Cmd:	
   569                           ; 1 bytes @ 0x0
   570                           
   571  0070                     ?___awdiv:	
   572                           ; 1 bytes @ 0x0
   573                           
   574  0070                     Lcd_Port@a:	
   575                           ; 2 bytes @ 0x0
   576                           
   577  0070                     ___awdiv@divisor:	
   578                           ; 1 bytes @ 0x0
   579                           
   580                           
   581                           ; 2 bytes @ 0x0
   582  0070                     	ds	1
   583  0071                     ??_Lcd_Write_Char:
   584  0071                     ??_Lcd_Cmd:	
   585                           ; 1 bytes @ 0x1
   586                           
   587                           
   588                           ; 1 bytes @ 0x1
   589  0071                     	ds	1
   590  0072                     DHT11_Read@i:
   591  0072                     Lcd_Write_Char@a:	
   592                           ; 1 bytes @ 0x2
   593                           
   594  0072                     ___awdiv@dividend:	
   595                           ; 1 bytes @ 0x2
   596                           
   597                           
   598                           ; 2 bytes @ 0x2
   599  0072                     	ds	1
   600  0073                     DHT11_Read@data:
   601  0073                     Lcd_Cmd@a:	
   602                           ; 1 bytes @ 0x3
   603                           
   604  0073                     Lcd_Write_Char@temp:	
   605                           ; 1 bytes @ 0x3
   606                           
   607                           
   608                           ; 1 bytes @ 0x3
   609  0073                     	ds	1
   610  0074                     ??_Lcd_Init:
   611  0074                     ??_Lcd_Clear:	
   612                           ; 1 bytes @ 0x4
   613                           
   614  0074                     ?_Lcd_Set_Cursor:	
   615                           ; 1 bytes @ 0x4
   616                           
   617  0074                     ??___awdiv:	
   618                           ; 1 bytes @ 0x4
   619                           
   620  0074                     Lcd_Set_Cursor@b:	
   621                           ; 1 bytes @ 0x4
   622                           
   623  0074                     Lcd_Write_Char@y:	
   624                           ; 1 bytes @ 0x4
   625                           
   626                           
   627                           ; 1 bytes @ 0x4
   628  0074                     	ds	1
   629  0075                     ??_Lcd_Set_Cursor:
   630  0075                     ??_Lcd_Write_String:	
   631                           ; 1 bytes @ 0x5
   632                           
   633  0075                     ___awdiv@counter:	
   634                           ; 1 bytes @ 0x5
   635                           
   636  0075                     Lcd_Write_String@i:	
   637                           ; 1 bytes @ 0x5
   638                           
   639                           
   640                           ; 2 bytes @ 0x5
   641  0075                     	ds	1
   642  0076                     ___awdiv@sign:
   643                           
   644                           ; 1 bytes @ 0x6
   645  0076                     	ds	1
   646  0077                     Lcd_Set_Cursor@a:
   647  0077                     Lcd_Write_String@a:	
   648                           ; 1 bytes @ 0x7
   649                           
   650  0077                     ___awdiv@quotient:	
   651                           ; 1 bytes @ 0x7
   652                           
   653                           
   654                           ; 2 bytes @ 0x7
   655  0077                     	ds	1
   656  0078                     Lcd_Set_Cursor@z:
   657                           
   658                           ; 1 bytes @ 0x8
   659  0078                     	ds	1
   660  0079                     ?___awmod:
   661  0079                     Lcd_Set_Cursor@y:	
   662                           ; 2 bytes @ 0x9
   663                           
   664  0079                     ___awmod@divisor:	
   665                           ; 1 bytes @ 0x9
   666                           
   667                           
   668                           ; 2 bytes @ 0x9
   669  0079                     	ds	1
   670  007A                     Lcd_Set_Cursor@temp:
   671                           
   672                           ; 1 bytes @ 0xA
   673  007A                     	ds	1
   674  007B                     ___awmod@dividend:
   675                           
   676                           ; 2 bytes @ 0xB
   677  007B                     	ds	2
   678  007D                     ??___awmod:
   679                           
   680                           ; 1 bytes @ 0xD
   681  007D                     	ds	1
   682                           
   683                           	psect	cstackBANK0
   684  002C                     __pcstackBANK0:
   685  002C                     ___awmod@counter:
   686                           
   687                           ; 1 bytes @ 0x0
   688  002C                     	ds	1
   689  002D                     ___awmod@sign:
   690                           
   691                           ; 1 bytes @ 0x1
   692  002D                     	ds	1
   693  002E                     ??_main:
   694                           
   695                           ; 1 bytes @ 0x2
   696  002E                     	ds	10
   697                           
   698                           	psect	maintext
   699  0698                     __pmaintext:	
   700 ;;
   701 ;;Main: autosize = 0, tempsize = 10, incstack = 0, save=0
   702 ;;
   703 ;; *************** function _main *****************
   704 ;; Defined at:
   705 ;;		line 51 in file "newmain.c"
   706 ;; Parameters:    Size  Location     Type
   707 ;;		None
   708 ;; Auto vars:     Size  Location     Type
   709 ;;		None
   710 ;; Return value:  Size  Location     Type
   711 ;;                  1    wreg      void 
   712 ;; Registers used:
   713 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   714 ;; Tracked objects:
   715 ;;		On entry : B00/0
   716 ;;		On exit  : 0/0
   717 ;;		Unchanged: 0/0
   718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   719 ;;      Params:         0       0       0       0       0
   720 ;;      Locals:         0       0       0       0       0
   721 ;;      Temps:          0      10       0       0       0
   722 ;;      Totals:         0      10       0       0       0
   723 ;;Total ram usage:       10 bytes
   724 ;; Hardware stack levels required when called: 3
   725 ;; This function calls:
   726 ;;		_DHT11_Read
   727 ;;		_Lcd_Clear
   728 ;;		_Lcd_Init
   729 ;;		_Lcd_Set_Cursor
   730 ;;		_Lcd_Write_Char
   731 ;;		_Lcd_Write_String
   732 ;;		___awdiv
   733 ;;		___awmod
   734 ;;		_checkResponse
   735 ;;		_configTMR0
   736 ;;		_initSETUP
   737 ;;		_startRead
   738 ;; This function is called by:
   739 ;;		Startup code after reset
   740 ;; This function uses a non-reentrant model
   741 ;;
   742                           
   743                           
   744                           ;psect for function _main
   745  0698                     _main:
   746  0698                     l1391:	
   747                           ;incstack = 0
   748                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   749                           
   750                           
   751                           ;newmain.c: 52:     initSETUP();
   752  0698  120A  118A  24EB  120A  118A  	fcall	_initSETUP
   753                           
   754                           ;newmain.c: 53:     configTMR0();
   755  069D  120A  118A  2449  120A  118A  	fcall	_configTMR0
   756                           
   757                           ;newmain.c: 54:     Lcd_Init();
   758  06A2  120A  118A  253D  120A  118A  	fcall	_Lcd_Init
   759                           
   760                           ;newmain.c: 55:     Lcd_Clear();
   761  06A7  120A  118A  2455  120A  118A  	fcall	_Lcd_Clear
   762                           
   763                           ;newmain.c: 56:     Lcd_Set_Cursor(1,1);
   764  06AC  01F4               	clrf	Lcd_Set_Cursor@b
   765  06AD  0AF4               	incf	Lcd_Set_Cursor@b,f
   766  06AE  3001               	movlw	1
   767  06AF  120A  118A  2584  120A  118A  	fcall	_Lcd_Set_Cursor
   768  06B4                     l1393:
   769                           
   770                           ;newmain.c: 57:     Lcd_Write_String(" S1:   S2:   S3:");
   771  06B4  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   772  06B5  120A  118A  24C6  120A  118A  	fcall	_Lcd_Write_String
   773  06BA                     l1395:
   774                           
   775                           ;newmain.c: 59:         startRead();
   776  06BA  120A  118A  248B  120A  118A  	fcall	_startRead
   777  06BF                     l1397:
   778                           
   779                           ;newmain.c: 60:         checkResponse();
   780  06BF  120A  118A  2462  120A  118A  	fcall	_checkResponse
   781  06C4                     l1399:
   782                           
   783                           ;newmain.c: 61:         RH_Int = DHT11_Read();
   784  06C4  120A  118A  2511  120A  118A  	fcall	_DHT11_Read
   785  06C9  1283               	bcf	3,5	;RP0=0, select bank0
   786  06CA  1303               	bcf	3,6	;RP1=0, select bank0
   787  06CB  00AE               	movwf	??_main
   788  06CC  082E               	movf	??_main,w
   789  06CD  00A9               	movwf	_RH_Int
   790  06CE                     l1401:
   791                           
   792                           ;newmain.c: 62:         RH_Dec = DHT11_Read();
   793  06CE  120A  118A  2511  120A  118A  	fcall	_DHT11_Read
   794  06D3  1283               	bcf	3,5	;RP0=0, select bank0
   795  06D4  1303               	bcf	3,6	;RP1=0, select bank0
   796  06D5  00AE               	movwf	??_main
   797  06D6  082E               	movf	??_main,w
   798  06D7  00AA               	movwf	_RH_Dec
   799  06D8                     l1403:
   800                           
   801                           ;newmain.c: 63:         T_Int = DHT11_Read();
   802  06D8  120A  118A  2511  120A  118A  	fcall	_DHT11_Read
   803  06DD  1283               	bcf	3,5	;RP0=0, select bank0
   804  06DE  1303               	bcf	3,6	;RP1=0, select bank0
   805  06DF  00AE               	movwf	??_main
   806  06E0  082E               	movf	??_main,w
   807  06E1  00A7               	movwf	_T_Int
   808  06E2                     l1405:
   809                           
   810                           ;newmain.c: 64:         T_Dec = DHT11_Read();
   811  06E2  120A  118A  2511  120A  118A  	fcall	_DHT11_Read
   812  06E7  1283               	bcf	3,5	;RP0=0, select bank0
   813  06E8  1303               	bcf	3,6	;RP1=0, select bank0
   814  06E9  00AE               	movwf	??_main
   815  06EA  082E               	movf	??_main,w
   816  06EB  00A8               	movwf	_T_Dec
   817  06EC                     l1407:
   818                           
   819                           ;newmain.c: 65:         check_sum = DHT11_Read();
   820  06EC  120A  118A  2511  120A  118A  	fcall	_DHT11_Read
   821  06F1  1283               	bcf	3,5	;RP0=0, select bank0
   822  06F2  1303               	bcf	3,6	;RP1=0, select bank0
   823  06F3  00AE               	movwf	??_main
   824  06F4  082E               	movf	??_main,w
   825  06F5  00A4               	movwf	_check_sum
   826  06F6                     l1409:
   827                           
   828                           ;newmain.c: 66:         if(check_sum == ((RH_Int+RH_Dec+T_Int+T_Dec) & 0XFF))
   829  06F6  0829               	movf	_RH_Int,w
   830  06F7  072A               	addwf	_RH_Dec,w
   831  06F8  00AE               	movwf	??_main
   832  06F9  01AF               	clrf	??_main+1
   833  06FA  0DAF               	rlf	??_main+1,f
   834  06FB  0827               	movf	_T_Int,w
   835  06FC  072E               	addwf	??_main,w
   836  06FD  00B0               	movwf	??_main+2
   837  06FE  3000               	movlw	0
   838  06FF  1803               	skipnc
   839  0700  3001               	movlw	1
   840  0701  072F               	addwf	??_main+1,w
   841  0702  00B1               	movwf	??_main+3
   842  0703  0828               	movf	_T_Dec,w
   843  0704  0730               	addwf	??_main+2,w
   844  0705  00B2               	movwf	??_main+4
   845  0706  3000               	movlw	0
   846  0707  1803               	skipnc
   847  0708  3001               	movlw	1
   848  0709  0731               	addwf	??_main+3,w
   849  070A  00B3               	movwf	??_main+5
   850  070B  30FF               	movlw	255
   851  070C  0532               	andwf	??_main+4,w
   852  070D  00B4               	movwf	??_main+6
   853  070E  3000               	movlw	0
   854  070F  0533               	andwf	??_main+5,w
   855  0710  00B5               	movwf	??_main+7
   856  0711  0824               	movf	_check_sum,w
   857  0712  00B6               	movwf	??_main+8
   858  0713  01B7               	clrf	??_main+9
   859  0714  0835               	movf	??_main+7,w
   860  0715  0637               	xorwf	??_main+9,w
   861  0716  1D03               	skipz
   862  0717  2F1A               	goto	u685
   863  0718  0834               	movf	??_main+6,w
   864  0719  0636               	xorwf	??_main+8,w
   865  071A                     u685:
   866  071A  1D03               	skipz
   867  071B  2F1D               	goto	u681
   868  071C  2F1E               	goto	u680
   869  071D                     u681:
   870  071D  2F22               	goto	l145
   871  071E                     u680:
   872  071E                     l1411:
   873                           
   874                           ;newmain.c: 67:             RH = T_Int;
   875  071E  0827               	movf	_T_Int,w
   876  071F  00AE               	movwf	??_main
   877  0720  082E               	movf	??_main,w
   878  0721  00A5               	movwf	_RH
   879  0722                     l145:
   880                           
   881                           ;newmain.c: 68:             Humidity = RH_Int;
   882  0722  0829               	movf	_RH_Int,w
   883  0723  00AE               	movwf	??_main
   884  0724  082E               	movf	??_main,w
   885  0725  00A6               	movwf	_Humidity
   886  0726                     l1413:
   887                           
   888                           ;newmain.c: 69:             Lcd_Set_Cursor(2,1);
   889  0726  01F4               	clrf	Lcd_Set_Cursor@b
   890  0727  0AF4               	incf	Lcd_Set_Cursor@b,f
   891  0728  3002               	movlw	2
   892  0729  120A  118A  2584  120A  118A  	fcall	_Lcd_Set_Cursor
   893  072E                     l1415:
   894                           
   895                           ;newmain.c: 70:             unit0 = 48 + ((Humidity/10) %10);
   896  072E  300A               	movlw	10
   897  072F  00F9               	movwf	___awmod@divisor
   898  0730  3000               	movlw	0
   899  0731  00FA               	movwf	___awmod@divisor+1
   900  0732  300A               	movlw	10
   901  0733  00F0               	movwf	___awdiv@divisor
   902  0734  3000               	movlw	0
   903  0735  00F1               	movwf	___awdiv@divisor+1
   904  0736  1283               	bcf	3,5	;RP0=0, select bank0
   905  0737  1303               	bcf	3,6	;RP1=0, select bank0
   906  0738  0826               	movf	_Humidity,w
   907  0739  00AE               	movwf	??_main
   908  073A  01AF               	clrf	??_main+1
   909  073B  082E               	movf	??_main,w
   910  073C  00F2               	movwf	___awdiv@dividend
   911  073D  082F               	movf	??_main+1,w
   912  073E  00F3               	movwf	___awdiv@dividend+1
   913  073F  120A  118A  2631  120A  118A  	fcall	___awdiv
   914  0744  0871               	movf	?___awdiv+1,w
   915  0745  00FC               	movwf	___awmod@dividend+1
   916  0746  0870               	movf	?___awdiv,w
   917  0747  00FB               	movwf	___awmod@dividend
   918  0748  120A  118A  25D6  120A  118A  	fcall	___awmod
   919  074D  0879               	movf	?___awmod,w
   920  074E  3E30               	addlw	48
   921  074F  1283               	bcf	3,5	;RP0=0, select bank0
   922  0750  1303               	bcf	3,6	;RP1=0, select bank0
   923  0751  00B0               	movwf	??_main+2
   924  0752  0830               	movf	??_main+2,w
   925  0753  00A3               	movwf	_unit0
   926  0754                     l1417:
   927                           
   928                           ;newmain.c: 71:             dec0 = 48 + (Humidity %10);
   929  0754  300A               	movlw	10
   930  0755  00F9               	movwf	___awmod@divisor
   931  0756  3000               	movlw	0
   932  0757  00FA               	movwf	___awmod@divisor+1
   933  0758  0826               	movf	_Humidity,w
   934  0759  00AE               	movwf	??_main
   935  075A  01AF               	clrf	??_main+1
   936  075B  082E               	movf	??_main,w
   937  075C  00FB               	movwf	___awmod@dividend
   938  075D  082F               	movf	??_main+1,w
   939  075E  00FC               	movwf	___awmod@dividend+1
   940  075F  120A  118A  25D6  120A  118A  	fcall	___awmod
   941  0764  0879               	movf	?___awmod,w
   942  0765  3E30               	addlw	48
   943  0766  1283               	bcf	3,5	;RP0=0, select bank0
   944  0767  1303               	bcf	3,6	;RP1=0, select bank0
   945  0768  00B0               	movwf	??_main+2
   946  0769  0830               	movf	??_main+2,w
   947  076A  00A2               	movwf	_dec0
   948  076B                     l1419:
   949                           
   950                           ;newmain.c: 72:             unit1 =48 + ((RH / 10) % 10);
   951  076B  300A               	movlw	10
   952  076C  00F9               	movwf	___awmod@divisor
   953  076D  3000               	movlw	0
   954  076E  00FA               	movwf	___awmod@divisor+1
   955  076F  300A               	movlw	10
   956  0770  00F0               	movwf	___awdiv@divisor
   957  0771  3000               	movlw	0
   958  0772  00F1               	movwf	___awdiv@divisor+1
   959  0773  0825               	movf	_RH,w
   960  0774  00AE               	movwf	??_main
   961  0775  01AF               	clrf	??_main+1
   962  0776  082E               	movf	??_main,w
   963  0777  00F2               	movwf	___awdiv@dividend
   964  0778  082F               	movf	??_main+1,w
   965  0779  00F3               	movwf	___awdiv@dividend+1
   966  077A  120A  118A  2631  120A  118A  	fcall	___awdiv
   967  077F  0871               	movf	?___awdiv+1,w
   968  0780  00FC               	movwf	___awmod@dividend+1
   969  0781  0870               	movf	?___awdiv,w
   970  0782  00FB               	movwf	___awmod@dividend
   971  0783  120A  118A  25D6  120A  118A  	fcall	___awmod
   972  0788  0879               	movf	?___awmod,w
   973  0789  3E30               	addlw	48
   974  078A  1283               	bcf	3,5	;RP0=0, select bank0
   975  078B  1303               	bcf	3,6	;RP1=0, select bank0
   976  078C  00B0               	movwf	??_main+2
   977  078D  0830               	movf	??_main+2,w
   978  078E  00A1               	movwf	_unit1
   979  078F                     l1421:
   980                           
   981                           ;newmain.c: 73:             dec1 = 48 + (RH % 10);
   982  078F  300A               	movlw	10
   983  0790  00F9               	movwf	___awmod@divisor
   984  0791  3000               	movlw	0
   985  0792  00FA               	movwf	___awmod@divisor+1
   986  0793  0825               	movf	_RH,w
   987  0794  00AE               	movwf	??_main
   988  0795  01AF               	clrf	??_main+1
   989  0796  082E               	movf	??_main,w
   990  0797  00FB               	movwf	___awmod@dividend
   991  0798  082F               	movf	??_main+1,w
   992  0799  00FC               	movwf	___awmod@dividend+1
   993  079A  120A  118A  25D6  120A  118A  	fcall	___awmod
   994  079F  0879               	movf	?___awmod,w
   995  07A0  3E30               	addlw	48
   996  07A1  1283               	bcf	3,5	;RP0=0, select bank0
   997  07A2  1303               	bcf	3,6	;RP1=0, select bank0
   998  07A3  00B0               	movwf	??_main+2
   999  07A4  0830               	movf	??_main+2,w
  1000  07A5  00A0               	movwf	_dec1
  1001  07A6                     l1423:
  1002                           
  1003                           ;newmain.c: 74:             Lcd_Write_Char(unit0);
  1004  07A6  0823               	movf	_unit0,w
  1005  07A7  120A  118A  24A8  120A  118A  	fcall	_Lcd_Write_Char
  1006  07AC                     l1425:
  1007                           
  1008                           ;newmain.c: 75:             Lcd_Write_Char(dec0);
  1009  07AC  1283               	bcf	3,5	;RP0=0, select bank0
  1010  07AD  1303               	bcf	3,6	;RP1=0, select bank0
  1011  07AE  0822               	movf	_dec0,w
  1012  07AF  120A  118A  24A8  120A  118A  	fcall	_Lcd_Write_Char
  1013  07B4                     l1427:
  1014                           
  1015                           ;newmain.c: 76:             Lcd_Write_String("%   ");
  1016  07B4  3012               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1017  07B5  120A  118A  24C6  120A  118A  	fcall	_Lcd_Write_String
  1018  07BA                     l1429:
  1019                           
  1020                           ;newmain.c: 77:             Lcd_Write_Char(unit1);
  1021  07BA  1283               	bcf	3,5	;RP0=0, select bank0
  1022  07BB  1303               	bcf	3,6	;RP1=0, select bank0
  1023  07BC  0821               	movf	_unit1,w
  1024  07BD  120A  118A  24A8  120A  118A  	fcall	_Lcd_Write_Char
  1025  07C2                     l1431:
  1026                           
  1027                           ;newmain.c: 78:             Lcd_Write_Char(dec1);
  1028  07C2  1283               	bcf	3,5	;RP0=0, select bank0
  1029  07C3  1303               	bcf	3,6	;RP1=0, select bank0
  1030  07C4  0820               	movf	_dec1,w
  1031  07C5  120A  118A  24A8  120A  118A  	fcall	_Lcd_Write_Char
  1032  07CA                     l1433:
  1033                           
  1034                           ;newmain.c: 79:             Lcd_Write_Char("°");
  1035  07CA  301F               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1036  07CB  120A  118A  24A8  120A  118A  	fcall	_Lcd_Write_Char
  1037  07D0                     l1435:
  1038                           
  1039                           ;newmain.c: 80:             Lcd_Write_String("C  ");
  1040  07D0  3017               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1041  07D1  120A  118A  24C6  120A  118A  	fcall	_Lcd_Write_String
  1042  07D6                     l1437:
  1043                           
  1044                           ;newmain.c: 81:             Lcd_Write_String("000");
  1045  07D6  301B               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1046  07D7  120A  118A  24C6  120A  118A  	fcall	_Lcd_Write_String
  1047  07DC                     l1439:
  1048                           
  1049                           ;newmain.c: 82:             _delay((unsigned long)((1000)*(8000000/4000.0)));
  1050  07DC  300B               	movlw	11
  1051  07DD  1283               	bcf	3,5	;RP0=0, select bank0
  1052  07DE  1303               	bcf	3,6	;RP1=0, select bank0
  1053  07DF  00B0               	movwf	??_main+2
  1054  07E0  3026               	movlw	38
  1055  07E1  00AF               	movwf	??_main+1
  1056  07E2  305D               	movlw	93
  1057  07E3  00AE               	movwf	??_main
  1058  07E4                     u697:
  1059  07E4  0BAE               	decfsz	??_main,f
  1060  07E5  2FE4               	goto	u697
  1061  07E6  0BAF               	decfsz	??_main+1,f
  1062  07E7  2FE4               	goto	u697
  1063  07E8  0BB0               	decfsz	??_main+2,f
  1064  07E9  2FE4               	goto	u697
  1065  07EA  2EBA               	goto	l1395
  1066  07EB  120A  118A  2800   	ljmp	start
  1067  07EE                     __end_of_main:
  1068                           
  1069                           	psect	text1
  1070  048B                     __ptext1:	
  1071 ;; *************** function _startRead *****************
  1072 ;; Defined at:
  1073 ;;		line 120 in file "newmain.c"
  1074 ;; Parameters:    Size  Location     Type
  1075 ;;		None
  1076 ;; Auto vars:     Size  Location     Type
  1077 ;;		None
  1078 ;; Return value:  Size  Location     Type
  1079 ;;                  1    wreg      void 
  1080 ;; Registers used:
  1081 ;;		wreg
  1082 ;; Tracked objects:
  1083 ;;		On entry : 0/0
  1084 ;;		On exit  : 0/0
  1085 ;;		Unchanged: 0/0
  1086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1087 ;;      Params:         0       0       0       0       0
  1088 ;;      Locals:         0       0       0       0       0
  1089 ;;      Temps:          2       0       0       0       0
  1090 ;;      Totals:         2       0       0       0       0
  1091 ;;Total ram usage:        2 bytes
  1092 ;; Hardware stack levels used: 1
  1093 ;; This function calls:
  1094 ;;		Nothing
  1095 ;; This function is called by:
  1096 ;;		_main
  1097 ;; This function uses a non-reentrant model
  1098 ;;
  1099                           
  1100                           
  1101                           ;psect for function _startRead
  1102  048B                     _startRead:
  1103  048B                     l1279:	
  1104                           ;incstack = 0
  1105                           ; Regs used in _startRead: [wreg]
  1106                           
  1107                           
  1108                           ;newmain.c: 121:     TRISA = 0b00000010;
  1109  048B  3002               	movlw	2
  1110  048C  1683               	bsf	3,5	;RP0=1, select bank1
  1111  048D  1303               	bcf	3,6	;RP1=0, select bank1
  1112  048E  0085               	movwf	5	;volatile
  1113  048F                     l1281:
  1114                           
  1115                           ;newmain.c: 122:     PORTAbits.RA0 = 0;
  1116  048F  1283               	bcf	3,5	;RP0=0, select bank0
  1117  0490  1303               	bcf	3,6	;RP1=0, select bank0
  1118  0491  1005               	bcf	5,0	;volatile
  1119                           
  1120                           ;newmain.c: 123:     _delay((unsigned long)((18)*(8000000/4000.0)));
  1121  0492  302F               	movlw	47
  1122  0493  00F1               	movwf	??_startRead+1
  1123  0494  30BF               	movlw	191
  1124  0495  00F0               	movwf	??_startRead
  1125  0496                     u707:
  1126  0496  0BF0               	decfsz	??_startRead,f
  1127  0497  2C96               	goto	u707
  1128  0498  0BF1               	decfsz	??_startRead+1,f
  1129  0499  2C96               	goto	u707
  1130  049A  2C9B               	nop2
  1131  049B                     l1283:
  1132                           
  1133                           ;newmain.c: 124:     PORTAbits.RA0 = 1;
  1134  049B  1283               	bcf	3,5	;RP0=0, select bank0
  1135  049C  1303               	bcf	3,6	;RP1=0, select bank0
  1136  049D  1405               	bsf	5,0	;volatile
  1137                           
  1138                           ;newmain.c: 125:     _delay((unsigned long)((30)*(8000000/4000000.0)));
  1139  049E  3013               	movlw	19
  1140  049F  00F0               	movwf	??_startRead
  1141  04A0                     u717:
  1142  04A0  0BF0               	decfsz	??_startRead,f
  1143  04A1  2CA0               	goto	u717
  1144  04A2  2CA3               	nop2
  1145                           
  1146                           ;newmain.c: 126:     TRISA= 0b00000011;
  1147  04A3  3003               	movlw	3
  1148  04A4  1683               	bsf	3,5	;RP0=1, select bank1
  1149  04A5  1303               	bcf	3,6	;RP1=0, select bank1
  1150  04A6  0085               	movwf	5	;volatile
  1151  04A7                     l154:
  1152  04A7  0008               	return
  1153  04A8                     __end_of_startRead:
  1154                           
  1155                           	psect	text2
  1156  04EB                     __ptext2:	
  1157 ;; *************** function _initSETUP *****************
  1158 ;; Defined at:
  1159 ;;		line 88 in file "newmain.c"
  1160 ;; Parameters:    Size  Location     Type
  1161 ;;		None
  1162 ;; Auto vars:     Size  Location     Type
  1163 ;;		None
  1164 ;; Return value:  Size  Location     Type
  1165 ;;                  1    wreg      void 
  1166 ;; Registers used:
  1167 ;;		wreg, status,2
  1168 ;; Tracked objects:
  1169 ;;		On entry : 0/0
  1170 ;;		On exit  : 0/0
  1171 ;;		Unchanged: 0/0
  1172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1173 ;;      Params:         0       0       0       0       0
  1174 ;;      Locals:         0       0       0       0       0
  1175 ;;      Temps:          0       0       0       0       0
  1176 ;;      Totals:         0       0       0       0       0
  1177 ;;Total ram usage:        0 bytes
  1178 ;; Hardware stack levels used: 1
  1179 ;; This function calls:
  1180 ;;		Nothing
  1181 ;; This function is called by:
  1182 ;;		_main
  1183 ;; This function uses a non-reentrant model
  1184 ;;
  1185                           
  1186                           
  1187                           ;psect for function _initSETUP
  1188  04EB                     _initSETUP:
  1189  04EB                     l1183:	
  1190                           ;incstack = 0
  1191                           ; Regs used in _initSETUP: [wreg+status,2]
  1192                           
  1193                           
  1194                           ;newmain.c: 89:     TRISA = 0b00000010;
  1195  04EB  3002               	movlw	2
  1196  04EC  1683               	bsf	3,5	;RP0=1, select bank1
  1197  04ED  1303               	bcf	3,6	;RP1=0, select bank1
  1198  04EE  0085               	movwf	5	;volatile
  1199  04EF                     l1185:
  1200                           
  1201                           ;newmain.c: 90:     TRISB = 0;
  1202  04EF  0186               	clrf	6	;volatile
  1203  04F0                     l1187:
  1204                           
  1205                           ;newmain.c: 91:     TRISC = 0;
  1206  04F0  0187               	clrf	7	;volatile
  1207  04F1                     l1189:
  1208                           
  1209                           ;newmain.c: 92:     TRISD = 0;
  1210  04F1  0188               	clrf	8	;volatile
  1211  04F2                     l1191:
  1212                           
  1213                           ;newmain.c: 93:     TRISE = 0;
  1214  04F2  0189               	clrf	9	;volatile
  1215  04F3                     l1193:
  1216                           
  1217                           ;newmain.c: 94:     PORTE = 0;
  1218  04F3  1283               	bcf	3,5	;RP0=0, select bank0
  1219  04F4  1303               	bcf	3,6	;RP1=0, select bank0
  1220  04F5  0189               	clrf	9	;volatile
  1221  04F6                     l1195:
  1222                           
  1223                           ;newmain.c: 95:     PORTA = 0;
  1224  04F6  0185               	clrf	5	;volatile
  1225  04F7                     l1197:
  1226                           
  1227                           ;newmain.c: 96:     PORTB = 0;
  1228  04F7  0186               	clrf	6	;volatile
  1229  04F8                     l1199:
  1230                           
  1231                           ;newmain.c: 97:     PORTC = 0;
  1232  04F8  0187               	clrf	7	;volatile
  1233  04F9                     l1201:
  1234                           
  1235                           ;newmain.c: 98:     PORTD = 0;
  1236  04F9  0188               	clrf	8	;volatile
  1237  04FA                     l1203:
  1238                           
  1239                           ;newmain.c: 99:     ANSEL = 0b00000010;
  1240  04FA  3002               	movlw	2
  1241  04FB  1683               	bsf	3,5	;RP0=1, select bank3
  1242  04FC  1703               	bsf	3,6	;RP1=1, select bank3
  1243  04FD  0088               	movwf	8	;volatile
  1244                           
  1245                           ;newmain.c: 100:     ANSELH = 0;
  1246  04FE  0189               	clrf	9	;volatile
  1247  04FF                     l1205:
  1248                           
  1249                           ;newmain.c: 101:     OSCCONbits.IRCF2 = 1;
  1250  04FF  1683               	bsf	3,5	;RP0=1, select bank1
  1251  0500  1303               	bcf	3,6	;RP1=0, select bank1
  1252  0501  170F               	bsf	15,6	;volatile
  1253  0502                     l1207:
  1254                           
  1255                           ;newmain.c: 102:     OSCCONbits.IRCF1 = 1;
  1256  0502  168F               	bsf	15,5	;volatile
  1257  0503                     l1209:
  1258                           
  1259                           ;newmain.c: 103:     OSCCONbits.IRCF0 = 1;
  1260  0503  160F               	bsf	15,4	;volatile
  1261  0504                     l1211:
  1262                           
  1263                           ;newmain.c: 104:     OSCCONbits.SCS = 1;
  1264  0504  140F               	bsf	15,0	;volatile
  1265  0505                     l1213:
  1266                           
  1267                           ;newmain.c: 106:     INTCONbits.GIE = 1;
  1268  0505  178B               	bsf	11,7	;volatile
  1269  0506                     l1215:
  1270                           
  1271                           ;newmain.c: 107:     INTCONbits.PEIE =1;
  1272  0506  170B               	bsf	11,6	;volatile
  1273  0507                     l1217:
  1274                           
  1275                           ;newmain.c: 108:     INTCONbits.T0IE = 1;
  1276  0507  168B               	bsf	11,5	;volatile
  1277  0508                     l1219:
  1278                           
  1279                           ;newmain.c: 109:     INTCONbits.T0IF =0;
  1280  0508  110B               	bcf	11,2	;volatile
  1281  0509                     l1221:
  1282                           
  1283                           ;newmain.c: 111:     INTCONbits.RBIE = 1;
  1284  0509  158B               	bsf	11,3	;volatile
  1285  050A                     l1223:
  1286                           
  1287                           ;newmain.c: 112:     INTCONbits.RBIF = 0;
  1288  050A  100B               	bcf	11,0	;volatile
  1289  050B                     l1225:
  1290                           
  1291                           ;newmain.c: 113:     IOCB = 0b01100000;
  1292  050B  3060               	movlw	96
  1293  050C  0096               	movwf	22	;volatile
  1294  050D                     l1227:
  1295                           
  1296                           ;newmain.c: 114:     OPTION_REGbits.nRBPU = 0;
  1297  050D  1381               	bcf	1,7	;volatile
  1298  050E                     l1229:
  1299                           
  1300                           ;newmain.c: 115:     WPUB = 0b01100000;
  1301  050E  3060               	movlw	96
  1302  050F  0095               	movwf	21	;volatile
  1303  0510                     l151:
  1304  0510  0008               	return
  1305  0511                     __end_of_initSETUP:
  1306                           
  1307                           	psect	text3
  1308  0449                     __ptext3:	
  1309 ;; *************** function _configTMR0 *****************
  1310 ;; Defined at:
  1311 ;;		line 149 in file "newmain.c"
  1312 ;; Parameters:    Size  Location     Type
  1313 ;;		None
  1314 ;; Auto vars:     Size  Location     Type
  1315 ;;		None
  1316 ;; Return value:  Size  Location     Type
  1317 ;;                  1    wreg      void 
  1318 ;; Registers used:
  1319 ;;		wreg
  1320 ;; Tracked objects:
  1321 ;;		On entry : 0/0
  1322 ;;		On exit  : 0/0
  1323 ;;		Unchanged: 0/0
  1324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1325 ;;      Params:         0       0       0       0       0
  1326 ;;      Locals:         0       0       0       0       0
  1327 ;;      Temps:          0       0       0       0       0
  1328 ;;      Totals:         0       0       0       0       0
  1329 ;;Total ram usage:        0 bytes
  1330 ;; Hardware stack levels used: 1
  1331 ;; This function calls:
  1332 ;;		Nothing
  1333 ;; This function is called by:
  1334 ;;		_main
  1335 ;; This function uses a non-reentrant model
  1336 ;;
  1337                           
  1338                           
  1339                           ;psect for function _configTMR0
  1340  0449                     _configTMR0:
  1341  0449                     l1233:	
  1342                           ;incstack = 0
  1343                           ; Regs used in _configTMR0: [wreg]
  1344                           
  1345                           
  1346                           ;newmain.c: 150:     OPTION_REGbits.T0CS = 0;
  1347  0449  1683               	bsf	3,5	;RP0=1, select bank1
  1348  044A  1303               	bcf	3,6	;RP1=0, select bank1
  1349  044B  1281               	bcf	1,5	;volatile
  1350                           
  1351                           ;newmain.c: 151:     OPTION_REGbits.PSA = 0;
  1352  044C  1181               	bcf	1,3	;volatile
  1353                           
  1354                           ;newmain.c: 152:     OPTION_REGbits.PS2 = 1;
  1355  044D  1501               	bsf	1,2	;volatile
  1356                           
  1357                           ;newmain.c: 153:     OPTION_REGbits.PS1 = 1;
  1358  044E  1481               	bsf	1,1	;volatile
  1359                           
  1360                           ;newmain.c: 154:     OPTION_REGbits.PS0 = 1;
  1361  044F  1401               	bsf	1,0	;volatile
  1362  0450                     l1235:
  1363                           
  1364                           ;newmain.c: 155:     TMR0 = 217;
  1365  0450  30D9               	movlw	217
  1366  0451  1283               	bcf	3,5	;RP0=0, select bank0
  1367  0452  1303               	bcf	3,6	;RP1=0, select bank0
  1368  0453  0081               	movwf	1	;volatile
  1369  0454                     l182:
  1370  0454  0008               	return
  1371  0455                     __end_of_configTMR0:
  1372                           
  1373                           	psect	text4
  1374  0462                     __ptext4:	
  1375 ;; *************** function _checkResponse *****************
  1376 ;; Defined at:
  1377 ;;		line 129 in file "newmain.c"
  1378 ;; Parameters:    Size  Location     Type
  1379 ;;		None
  1380 ;; Auto vars:     Size  Location     Type
  1381 ;;		None
  1382 ;; Return value:  Size  Location     Type
  1383 ;;                  1    wreg      void 
  1384 ;; Registers used:
  1385 ;;		None
  1386 ;; Tracked objects:
  1387 ;;		On entry : 0/0
  1388 ;;		On exit  : 0/0
  1389 ;;		Unchanged: 0/0
  1390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1391 ;;      Params:         0       0       0       0       0
  1392 ;;      Locals:         0       0       0       0       0
  1393 ;;      Temps:          0       0       0       0       0
  1394 ;;      Totals:         0       0       0       0       0
  1395 ;;Total ram usage:        0 bytes
  1396 ;; Hardware stack levels used: 1
  1397 ;; This function calls:
  1398 ;;		Nothing
  1399 ;; This function is called by:
  1400 ;;		_main
  1401 ;; This function uses a non-reentrant model
  1402 ;;
  1403                           
  1404                           
  1405                           ;psect for function _checkResponse
  1406  0462                     _checkResponse:
  1407  0462                     l1285:	
  1408                           ;incstack = 0
  1409                           ; Regs used in _checkResponse: []
  1410                           
  1411  0462                     l157:	
  1412                           ;newmain.c: 130:     while (PORTAbits.RA0 & 1);
  1413                           
  1414  0462  1283               	bcf	3,5	;RP0=0, select bank0
  1415  0463  1303               	bcf	3,6	;RP1=0, select bank0
  1416  0464  1805               	btfsc	5,0	;volatile
  1417  0465  2C67               	goto	u421
  1418  0466  2C68               	goto	u420
  1419  0467                     u421:
  1420  0467  2C62               	goto	l157
  1421  0468                     u420:
  1422  0468                     l160:
  1423  0468  1C05               	btfss	5,0	;volatile
  1424  0469  2C6B               	goto	u431
  1425  046A  2C6C               	goto	u430
  1426  046B                     u431:
  1427  046B  2C68               	goto	l160
  1428  046C                     u430:
  1429  046C                     l163:
  1430  046C  1805               	btfsc	5,0	;volatile
  1431  046D  2C6F               	goto	u441
  1432  046E  2C70               	goto	u440
  1433  046F                     u441:
  1434  046F  2C6C               	goto	l163
  1435  0470                     u440:
  1436  0470                     l166:
  1437  0470  0008               	return
  1438  0471                     __end_of_checkResponse:
  1439                           
  1440                           	psect	text5
  1441  05D6                     __ptext5:	
  1442 ;; *************** function ___awmod *****************
  1443 ;; Defined at:
  1444 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  1445 ;; Parameters:    Size  Location     Type
  1446 ;;  divisor         2    9[COMMON] int 
  1447 ;;  dividend        2   11[COMMON] int 
  1448 ;; Auto vars:     Size  Location     Type
  1449 ;;  sign            1    1[BANK0 ] unsigned char 
  1450 ;;  counter         1    0[BANK0 ] unsigned char 
  1451 ;; Return value:  Size  Location     Type
  1452 ;;                  2    9[COMMON] int 
  1453 ;; Registers used:
  1454 ;;		wreg, status,2, status,0
  1455 ;; Tracked objects:
  1456 ;;		On entry : 0/0
  1457 ;;		On exit  : 0/0
  1458 ;;		Unchanged: 0/0
  1459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1460 ;;      Params:         4       0       0       0       0
  1461 ;;      Locals:         0       2       0       0       0
  1462 ;;      Temps:          1       0       0       0       0
  1463 ;;      Totals:         5       2       0       0       0
  1464 ;;Total ram usage:        7 bytes
  1465 ;; Hardware stack levels used: 1
  1466 ;; This function calls:
  1467 ;;		Nothing
  1468 ;; This function is called by:
  1469 ;;		_main
  1470 ;; This function uses a non-reentrant model
  1471 ;;
  1472                           
  1473                           
  1474                           ;psect for function ___awmod
  1475  05D6                     ___awmod:
  1476  05D6                     l1353:	
  1477                           ;incstack = 0
  1478                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1479                           
  1480  05D6  1283               	bcf	3,5	;RP0=0, select bank0
  1481  05D7  1303               	bcf	3,6	;RP1=0, select bank0
  1482  05D8  01AD               	clrf	___awmod@sign
  1483  05D9                     l1355:
  1484  05D9  1FFC               	btfss	___awmod@dividend+1,7
  1485  05DA  2DDC               	goto	u591
  1486  05DB  2DDD               	goto	u590
  1487  05DC                     u591:
  1488  05DC  2DE4               	goto	l1361
  1489  05DD                     u590:
  1490  05DD                     l1357:
  1491  05DD  09FB               	comf	___awmod@dividend,f
  1492  05DE  09FC               	comf	___awmod@dividend+1,f
  1493  05DF  0AFB               	incf	___awmod@dividend,f
  1494  05E0  1903               	skipnz
  1495  05E1  0AFC               	incf	___awmod@dividend+1,f
  1496  05E2                     l1359:
  1497  05E2  01AD               	clrf	___awmod@sign
  1498  05E3  0AAD               	incf	___awmod@sign,f
  1499  05E4                     l1361:
  1500  05E4  1FFA               	btfss	___awmod@divisor+1,7
  1501  05E5  2DE7               	goto	u601
  1502  05E6  2DE8               	goto	u600
  1503  05E7                     u601:
  1504  05E7  2DED               	goto	l1365
  1505  05E8                     u600:
  1506  05E8                     l1363:
  1507  05E8  09F9               	comf	___awmod@divisor,f
  1508  05E9  09FA               	comf	___awmod@divisor+1,f
  1509  05EA  0AF9               	incf	___awmod@divisor,f
  1510  05EB  1903               	skipnz
  1511  05EC  0AFA               	incf	___awmod@divisor+1,f
  1512  05ED                     l1365:
  1513  05ED  0879               	movf	___awmod@divisor,w
  1514  05EE  047A               	iorwf	___awmod@divisor+1,w
  1515  05EF  1903               	btfsc	3,2
  1516  05F0  2DF2               	goto	u611
  1517  05F1  2DF3               	goto	u610
  1518  05F2                     u611:
  1519  05F2  2E22               	goto	l1383
  1520  05F3                     u610:
  1521  05F3                     l1367:
  1522  05F3  01AC               	clrf	___awmod@counter
  1523  05F4  0AAC               	incf	___awmod@counter,f
  1524  05F5  2E01               	goto	l1373
  1525  05F6                     l1369:
  1526  05F6  3001               	movlw	1
  1527  05F7                     u625:
  1528  05F7  1003               	clrc
  1529  05F8  0DF9               	rlf	___awmod@divisor,f
  1530  05F9  0DFA               	rlf	___awmod@divisor+1,f
  1531  05FA  3EFF               	addlw	-1
  1532  05FB  1D03               	skipz
  1533  05FC  2DF7               	goto	u625
  1534  05FD                     l1371:
  1535  05FD  3001               	movlw	1
  1536  05FE  00FD               	movwf	??___awmod
  1537  05FF  087D               	movf	??___awmod,w
  1538  0600  07AC               	addwf	___awmod@counter,f
  1539  0601                     l1373:
  1540  0601  1FFA               	btfss	___awmod@divisor+1,7
  1541  0602  2E04               	goto	u631
  1542  0603  2E05               	goto	u630
  1543  0604                     u631:
  1544  0604  2DF6               	goto	l1369
  1545  0605                     u630:
  1546  0605                     l1375:
  1547  0605  087A               	movf	___awmod@divisor+1,w
  1548  0606  027C               	subwf	___awmod@dividend+1,w
  1549  0607  1D03               	skipz
  1550  0608  2E0B               	goto	u645
  1551  0609  0879               	movf	___awmod@divisor,w
  1552  060A  027B               	subwf	___awmod@dividend,w
  1553  060B                     u645:
  1554  060B  1C03               	skipc
  1555  060C  2E0E               	goto	u641
  1556  060D  2E0F               	goto	u640
  1557  060E                     u641:
  1558  060E  2E15               	goto	l1379
  1559  060F                     u640:
  1560  060F                     l1377:
  1561  060F  0879               	movf	___awmod@divisor,w
  1562  0610  02FB               	subwf	___awmod@dividend,f
  1563  0611  087A               	movf	___awmod@divisor+1,w
  1564  0612  1C03               	skipc
  1565  0613  03FC               	decf	___awmod@dividend+1,f
  1566  0614  02FC               	subwf	___awmod@dividend+1,f
  1567  0615                     l1379:
  1568  0615  3001               	movlw	1
  1569  0616                     u655:
  1570  0616  1003               	clrc
  1571  0617  0CFA               	rrf	___awmod@divisor+1,f
  1572  0618  0CF9               	rrf	___awmod@divisor,f
  1573  0619  3EFF               	addlw	-1
  1574  061A  1D03               	skipz
  1575  061B  2E16               	goto	u655
  1576  061C                     l1381:
  1577  061C  3001               	movlw	1
  1578  061D  02AC               	subwf	___awmod@counter,f
  1579  061E  1D03               	btfss	3,2
  1580  061F  2E21               	goto	u661
  1581  0620  2E22               	goto	u660
  1582  0621                     u661:
  1583  0621  2E05               	goto	l1375
  1584  0622                     u660:
  1585  0622                     l1383:
  1586  0622  082D               	movf	___awmod@sign,w
  1587  0623  1903               	btfsc	3,2
  1588  0624  2E26               	goto	u671
  1589  0625  2E27               	goto	u670
  1590  0626                     u671:
  1591  0626  2E2C               	goto	l1387
  1592  0627                     u670:
  1593  0627                     l1385:
  1594  0627  09FB               	comf	___awmod@dividend,f
  1595  0628  09FC               	comf	___awmod@dividend+1,f
  1596  0629  0AFB               	incf	___awmod@dividend,f
  1597  062A  1903               	skipnz
  1598  062B  0AFC               	incf	___awmod@dividend+1,f
  1599  062C                     l1387:
  1600  062C  087C               	movf	___awmod@dividend+1,w
  1601  062D  00FA               	movwf	?___awmod+1
  1602  062E  087B               	movf	___awmod@dividend,w
  1603  062F  00F9               	movwf	?___awmod
  1604  0630                     l475:
  1605  0630  0008               	return
  1606  0631                     __end_of___awmod:
  1607                           
  1608                           	psect	text6
  1609  0631                     __ptext6:	
  1610 ;; *************** function ___awdiv *****************
  1611 ;; Defined at:
  1612 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  1613 ;; Parameters:    Size  Location     Type
  1614 ;;  divisor         2    0[COMMON] int 
  1615 ;;  dividend        2    2[COMMON] int 
  1616 ;; Auto vars:     Size  Location     Type
  1617 ;;  quotient        2    7[COMMON] int 
  1618 ;;  sign            1    6[COMMON] unsigned char 
  1619 ;;  counter         1    5[COMMON] unsigned char 
  1620 ;; Return value:  Size  Location     Type
  1621 ;;                  2    0[COMMON] int 
  1622 ;; Registers used:
  1623 ;;		wreg, status,2, status,0
  1624 ;; Tracked objects:
  1625 ;;		On entry : 0/0
  1626 ;;		On exit  : 0/0
  1627 ;;		Unchanged: 0/0
  1628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1629 ;;      Params:         4       0       0       0       0
  1630 ;;      Locals:         4       0       0       0       0
  1631 ;;      Temps:          1       0       0       0       0
  1632 ;;      Totals:         9       0       0       0       0
  1633 ;;Total ram usage:        9 bytes
  1634 ;; Hardware stack levels used: 1
  1635 ;; This function calls:
  1636 ;;		Nothing
  1637 ;; This function is called by:
  1638 ;;		_main
  1639 ;; This function uses a non-reentrant model
  1640 ;;
  1641                           
  1642                           
  1643                           ;psect for function ___awdiv
  1644  0631                     ___awdiv:
  1645  0631                     l1309:	
  1646                           ;incstack = 0
  1647                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1648                           
  1649  0631  01F6               	clrf	___awdiv@sign
  1650  0632                     l1311:
  1651  0632  1FF1               	btfss	___awdiv@divisor+1,7
  1652  0633  2E35               	goto	u491
  1653  0634  2E36               	goto	u490
  1654  0635                     u491:
  1655  0635  2E3D               	goto	l1317
  1656  0636                     u490:
  1657  0636                     l1313:
  1658  0636  09F0               	comf	___awdiv@divisor,f
  1659  0637  09F1               	comf	___awdiv@divisor+1,f
  1660  0638  0AF0               	incf	___awdiv@divisor,f
  1661  0639  1903               	skipnz
  1662  063A  0AF1               	incf	___awdiv@divisor+1,f
  1663  063B                     l1315:
  1664  063B  01F6               	clrf	___awdiv@sign
  1665  063C  0AF6               	incf	___awdiv@sign,f
  1666  063D                     l1317:
  1667  063D  1FF3               	btfss	___awdiv@dividend+1,7
  1668  063E  2E40               	goto	u501
  1669  063F  2E41               	goto	u500
  1670  0640                     u501:
  1671  0640  2E4A               	goto	l1323
  1672  0641                     u500:
  1673  0641                     l1319:
  1674  0641  09F2               	comf	___awdiv@dividend,f
  1675  0642  09F3               	comf	___awdiv@dividend+1,f
  1676  0643  0AF2               	incf	___awdiv@dividend,f
  1677  0644  1903               	skipnz
  1678  0645  0AF3               	incf	___awdiv@dividend+1,f
  1679  0646                     l1321:
  1680  0646  3001               	movlw	1
  1681  0647  00F4               	movwf	??___awdiv
  1682  0648  0874               	movf	??___awdiv,w
  1683  0649  06F6               	xorwf	___awdiv@sign,f
  1684  064A                     l1323:
  1685  064A  01F7               	clrf	___awdiv@quotient
  1686  064B  01F8               	clrf	___awdiv@quotient+1
  1687  064C                     l1325:
  1688  064C  0870               	movf	___awdiv@divisor,w
  1689  064D  0471               	iorwf	___awdiv@divisor+1,w
  1690  064E  1903               	btfsc	3,2
  1691  064F  2E51               	goto	u511
  1692  0650  2E52               	goto	u510
  1693  0651                     u511:
  1694  0651  2E89               	goto	l1345
  1695  0652                     u510:
  1696  0652                     l1327:
  1697  0652  01F5               	clrf	___awdiv@counter
  1698  0653  0AF5               	incf	___awdiv@counter,f
  1699  0654  2E60               	goto	l1333
  1700  0655                     l1329:
  1701  0655  3001               	movlw	1
  1702  0656                     u525:
  1703  0656  1003               	clrc
  1704  0657  0DF0               	rlf	___awdiv@divisor,f
  1705  0658  0DF1               	rlf	___awdiv@divisor+1,f
  1706  0659  3EFF               	addlw	-1
  1707  065A  1D03               	skipz
  1708  065B  2E56               	goto	u525
  1709  065C                     l1331:
  1710  065C  3001               	movlw	1
  1711  065D  00F4               	movwf	??___awdiv
  1712  065E  0874               	movf	??___awdiv,w
  1713  065F  07F5               	addwf	___awdiv@counter,f
  1714  0660                     l1333:
  1715  0660  1FF1               	btfss	___awdiv@divisor+1,7
  1716  0661  2E63               	goto	u531
  1717  0662  2E64               	goto	u530
  1718  0663                     u531:
  1719  0663  2E55               	goto	l1329
  1720  0664                     u530:
  1721  0664                     l1335:
  1722  0664  3001               	movlw	1
  1723  0665                     u545:
  1724  0665  1003               	clrc
  1725  0666  0DF7               	rlf	___awdiv@quotient,f
  1726  0667  0DF8               	rlf	___awdiv@quotient+1,f
  1727  0668  3EFF               	addlw	-1
  1728  0669  1D03               	skipz
  1729  066A  2E65               	goto	u545
  1730  066B  0871               	movf	___awdiv@divisor+1,w
  1731  066C  0273               	subwf	___awdiv@dividend+1,w
  1732  066D  1D03               	skipz
  1733  066E  2E71               	goto	u555
  1734  066F  0870               	movf	___awdiv@divisor,w
  1735  0670  0272               	subwf	___awdiv@dividend,w
  1736  0671                     u555:
  1737  0671  1C03               	skipc
  1738  0672  2E74               	goto	u551
  1739  0673  2E75               	goto	u550
  1740  0674                     u551:
  1741  0674  2E7C               	goto	l1341
  1742  0675                     u550:
  1743  0675                     l1337:
  1744  0675  0870               	movf	___awdiv@divisor,w
  1745  0676  02F2               	subwf	___awdiv@dividend,f
  1746  0677  0871               	movf	___awdiv@divisor+1,w
  1747  0678  1C03               	skipc
  1748  0679  03F3               	decf	___awdiv@dividend+1,f
  1749  067A  02F3               	subwf	___awdiv@dividend+1,f
  1750  067B                     l1339:
  1751  067B  1477               	bsf	___awdiv@quotient,0
  1752  067C                     l1341:
  1753  067C  3001               	movlw	1
  1754  067D                     u565:
  1755  067D  1003               	clrc
  1756  067E  0CF1               	rrf	___awdiv@divisor+1,f
  1757  067F  0CF0               	rrf	___awdiv@divisor,f
  1758  0680  3EFF               	addlw	-1
  1759  0681  1D03               	skipz
  1760  0682  2E7D               	goto	u565
  1761  0683                     l1343:
  1762  0683  3001               	movlw	1
  1763  0684  02F5               	subwf	___awdiv@counter,f
  1764  0685  1D03               	btfss	3,2
  1765  0686  2E88               	goto	u571
  1766  0687  2E89               	goto	u570
  1767  0688                     u571:
  1768  0688  2E64               	goto	l1335
  1769  0689                     u570:
  1770  0689                     l1345:
  1771  0689  0876               	movf	___awdiv@sign,w
  1772  068A  1903               	btfsc	3,2
  1773  068B  2E8D               	goto	u581
  1774  068C  2E8E               	goto	u580
  1775  068D                     u581:
  1776  068D  2E93               	goto	l1349
  1777  068E                     u580:
  1778  068E                     l1347:
  1779  068E  09F7               	comf	___awdiv@quotient,f
  1780  068F  09F8               	comf	___awdiv@quotient+1,f
  1781  0690  0AF7               	incf	___awdiv@quotient,f
  1782  0691  1903               	skipnz
  1783  0692  0AF8               	incf	___awdiv@quotient+1,f
  1784  0693                     l1349:
  1785  0693  0878               	movf	___awdiv@quotient+1,w
  1786  0694  00F1               	movwf	?___awdiv+1
  1787  0695  0877               	movf	___awdiv@quotient,w
  1788  0696  00F0               	movwf	?___awdiv
  1789  0697                     l462:
  1790  0697  0008               	return
  1791  0698                     __end_of___awdiv:
  1792                           
  1793                           	psect	text7
  1794  04C6                     __ptext7:	
  1795 ;; *************** function _Lcd_Write_String *****************
  1796 ;; Defined at:
  1797 ;;		line 77 in file "LCD.c"
  1798 ;; Parameters:    Size  Location     Type
  1799 ;;  a               1    wreg     PTR unsigned char 
  1800 ;;		 -> STR_5(4), STR_4(4), STR_2(5), STR_1(17), 
  1801 ;; Auto vars:     Size  Location     Type
  1802 ;;  a               1    7[COMMON] PTR unsigned char 
  1803 ;;		 -> STR_5(4), STR_4(4), STR_2(5), STR_1(17), 
  1804 ;;  i               2    5[COMMON] int 
  1805 ;; Return value:  Size  Location     Type
  1806 ;;                  1    wreg      void 
  1807 ;; Registers used:
  1808 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1809 ;; Tracked objects:
  1810 ;;		On entry : 0/0
  1811 ;;		On exit  : 0/0
  1812 ;;		Unchanged: 0/0
  1813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1814 ;;      Params:         0       0       0       0       0
  1815 ;;      Locals:         3       0       0       0       0
  1816 ;;      Temps:          0       0       0       0       0
  1817 ;;      Totals:         3       0       0       0       0
  1818 ;;Total ram usage:        3 bytes
  1819 ;; Hardware stack levels used: 1
  1820 ;; Hardware stack levels required when called: 2
  1821 ;; This function calls:
  1822 ;;		_Lcd_Write_Char
  1823 ;; This function is called by:
  1824 ;;		_main
  1825 ;; This function uses a non-reentrant model
  1826 ;;
  1827                           
  1828                           
  1829                           ;psect for function _Lcd_Write_String
  1830  04C6                     _Lcd_Write_String:
  1831                           
  1832                           ;incstack = 0
  1833                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1834                           ;Lcd_Write_String@a stored from wreg
  1835  04C6  00F7               	movwf	Lcd_Write_String@a
  1836  04C7                     l1271:
  1837                           
  1838                           ;LCD.c: 78:     int i;;LCD.c: 79:     for (i = 0; a[i] != '\0'; i++)
  1839  04C7  01F5               	clrf	Lcd_Write_String@i
  1840  04C8  01F6               	clrf	Lcd_Write_String@i+1
  1841  04C9  2CDD               	goto	l1277
  1842  04CA                     l1273:
  1843                           
  1844                           ;LCD.c: 80:         Lcd_Write_Char(a[i]);
  1845  04CA  0875               	movf	Lcd_Write_String@i,w
  1846  04CB  0777               	addwf	Lcd_Write_String@a,w
  1847  04CC  0084               	movwf	4
  1848  04CD  120A  118A  2003  120A  118A  	fcall	stringdir
  1849  04D2  120A  118A  24A8  120A  118A  	fcall	_Lcd_Write_Char
  1850  04D7                     l1275:
  1851  04D7  3001               	movlw	1
  1852  04D8  07F5               	addwf	Lcd_Write_String@i,f
  1853  04D9  1803               	skipnc
  1854  04DA  0AF6               	incf	Lcd_Write_String@i+1,f
  1855  04DB  3000               	movlw	0
  1856  04DC  07F6               	addwf	Lcd_Write_String@i+1,f
  1857  04DD                     l1277:
  1858  04DD  0875               	movf	Lcd_Write_String@i,w
  1859  04DE  0777               	addwf	Lcd_Write_String@a,w
  1860  04DF  0084               	movwf	4
  1861  04E0  120A  118A  2003  120A  118A  	fcall	stringdir
  1862  04E5  3A00               	xorlw	0
  1863  04E6  1D03               	skipz
  1864  04E7  2CE9               	goto	u411
  1865  04E8  2CEA               	goto	u410
  1866  04E9                     u411:
  1867  04E9  2CCA               	goto	l1273
  1868  04EA                     u410:
  1869  04EA                     l217:
  1870  04EA  0008               	return
  1871  04EB                     __end_of_Lcd_Write_String:
  1872                           
  1873                           	psect	text8
  1874  04A8                     __ptext8:	
  1875 ;; *************** function _Lcd_Write_Char *****************
  1876 ;; Defined at:
  1877 ;;		line 65 in file "LCD.c"
  1878 ;; Parameters:    Size  Location     Type
  1879 ;;  a               1    wreg     unsigned char 
  1880 ;; Auto vars:     Size  Location     Type
  1881 ;;  a               1    2[COMMON] unsigned char 
  1882 ;;  y               1    4[COMMON] unsigned char 
  1883 ;;  temp            1    3[COMMON] unsigned char 
  1884 ;; Return value:  Size  Location     Type
  1885 ;;                  1    wreg      void 
  1886 ;; Registers used:
  1887 ;;		wreg, status,2, status,0, pclath, cstack
  1888 ;; Tracked objects:
  1889 ;;		On entry : 0/0
  1890 ;;		On exit  : 0/0
  1891 ;;		Unchanged: 0/0
  1892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1893 ;;      Params:         0       0       0       0       0
  1894 ;;      Locals:         3       0       0       0       0
  1895 ;;      Temps:          1       0       0       0       0
  1896 ;;      Totals:         4       0       0       0       0
  1897 ;;Total ram usage:        4 bytes
  1898 ;; Hardware stack levels used: 1
  1899 ;; Hardware stack levels required when called: 1
  1900 ;; This function calls:
  1901 ;;		_Lcd_Port
  1902 ;; This function is called by:
  1903 ;;		_main
  1904 ;;		_Lcd_Write_String
  1905 ;; This function uses a non-reentrant model
  1906 ;;
  1907                           
  1908                           
  1909                           ;psect for function _Lcd_Write_Char
  1910  04A8                     _Lcd_Write_Char:
  1911                           
  1912                           ;incstack = 0
  1913                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1914                           ;Lcd_Write_Char@a stored from wreg
  1915  04A8  00F2               	movwf	Lcd_Write_Char@a
  1916  04A9                     l1161:
  1917                           
  1918                           ;LCD.c: 66:     char temp, y;;LCD.c: 67:     temp = a;
  1919  04A9  0872               	movf	Lcd_Write_Char@a,w
  1920  04AA  00F1               	movwf	??_Lcd_Write_Char
  1921  04AB  0871               	movf	??_Lcd_Write_Char,w
  1922  04AC  00F3               	movwf	Lcd_Write_Char@temp
  1923                           
  1924                           ;LCD.c: 68:     y = temp;
  1925  04AD  0873               	movf	Lcd_Write_Char@temp,w
  1926  04AE  00F1               	movwf	??_Lcd_Write_Char
  1927  04AF  0871               	movf	??_Lcd_Write_Char,w
  1928  04B0  00F4               	movwf	Lcd_Write_Char@y
  1929  04B1                     l1163:
  1930                           
  1931                           ;LCD.c: 69:     RE0 = 1;
  1932  04B1  1283               	bcf	3,5	;RP0=0, select bank0
  1933  04B2  1303               	bcf	3,6	;RP1=0, select bank0
  1934  04B3  1409               	bsf	9,0	;volatile
  1935  04B4                     l1165:
  1936                           
  1937                           ;LCD.c: 70:     Lcd_Port(y);
  1938  04B4  0874               	movf	Lcd_Write_Char@y,w
  1939  04B5  120A  118A  2443  120A  118A  	fcall	_Lcd_Port
  1940  04BA                     l1167:
  1941                           
  1942                           ;LCD.c: 71:     RE1 = 1;
  1943  04BA  1283               	bcf	3,5	;RP0=0, select bank0
  1944  04BB  1303               	bcf	3,6	;RP1=0, select bank0
  1945  04BC  1489               	bsf	9,1	;volatile
  1946  04BD                     l1169:
  1947                           
  1948                           ;LCD.c: 72:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  1949  04BD  301A               	movlw	26
  1950  04BE  00F1               	movwf	??_Lcd_Write_Char
  1951  04BF                     u727:
  1952  04BF  0BF1               	decfsz	??_Lcd_Write_Char,f
  1953  04C0  2CBF               	goto	u727
  1954  04C1  0000               	nop
  1955  04C2                     l1171:
  1956                           
  1957                           ;LCD.c: 73:     RE1 = 0;
  1958  04C2  1283               	bcf	3,5	;RP0=0, select bank0
  1959  04C3  1303               	bcf	3,6	;RP1=0, select bank0
  1960  04C4  1089               	bcf	9,1	;volatile
  1961  04C5                     l211:
  1962  04C5  0008               	return
  1963  04C6                     __end_of_Lcd_Write_Char:
  1964                           
  1965                           	psect	text9
  1966  0584                     __ptext9:	
  1967 ;; *************** function _Lcd_Set_Cursor *****************
  1968 ;; Defined at:
  1969 ;;		line 30 in file "LCD.c"
  1970 ;; Parameters:    Size  Location     Type
  1971 ;;  a               1    wreg     unsigned char 
  1972 ;;  b               1    4[COMMON] unsigned char 
  1973 ;; Auto vars:     Size  Location     Type
  1974 ;;  a               1    7[COMMON] unsigned char 
  1975 ;;  temp            1   10[COMMON] unsigned char 
  1976 ;;  y               1    9[COMMON] unsigned char 
  1977 ;;  z               1    8[COMMON] unsigned char 
  1978 ;; Return value:  Size  Location     Type
  1979 ;;                  1    wreg      void 
  1980 ;; Registers used:
  1981 ;;		wreg, status,2, status,0, pclath, cstack
  1982 ;; Tracked objects:
  1983 ;;		On entry : 0/0
  1984 ;;		On exit  : 0/0
  1985 ;;		Unchanged: 0/0
  1986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1987 ;;      Params:         1       0       0       0       0
  1988 ;;      Locals:         4       0       0       0       0
  1989 ;;      Temps:          2       0       0       0       0
  1990 ;;      Totals:         7       0       0       0       0
  1991 ;;Total ram usage:        7 bytes
  1992 ;; Hardware stack levels used: 1
  1993 ;; Hardware stack levels required when called: 2
  1994 ;; This function calls:
  1995 ;;		_Lcd_Cmd
  1996 ;; This function is called by:
  1997 ;;		_main
  1998 ;; This function uses a non-reentrant model
  1999 ;;
  2000                           
  2001                           
  2002                           ;psect for function _Lcd_Set_Cursor
  2003  0584                     _Lcd_Set_Cursor:
  2004                           
  2005                           ;incstack = 0
  2006                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  2007                           ;Lcd_Set_Cursor@a stored from wreg
  2008  0584  00F7               	movwf	Lcd_Set_Cursor@a
  2009  0585                     l1251:
  2010                           
  2011                           ;LCD.c: 31:     char temp, z, y;;LCD.c: 32:     if (a == 1) {
  2012  0585  0377               	decf	Lcd_Set_Cursor@a,w
  2013  0586  1D03               	btfss	3,2
  2014  0587  2D89               	goto	u371
  2015  0588  2D8A               	goto	u370
  2016  0589                     u371:
  2017  0589  2DAD               	goto	l1261
  2018  058A                     u370:
  2019  058A                     l1253:
  2020                           
  2021                           ;LCD.c: 33:         temp = 0x80 + b - 1;
  2022  058A  0874               	movf	Lcd_Set_Cursor@b,w
  2023  058B  3E7F               	addlw	127
  2024  058C  00F5               	movwf	??_Lcd_Set_Cursor
  2025  058D  0875               	movf	??_Lcd_Set_Cursor,w
  2026  058E  00FA               	movwf	Lcd_Set_Cursor@temp
  2027                           
  2028                           ;LCD.c: 34:         z = temp >> 4;
  2029  058F  087A               	movf	Lcd_Set_Cursor@temp,w
  2030  0590  00F5               	movwf	??_Lcd_Set_Cursor
  2031  0591  3004               	movlw	4
  2032  0592                     u385:
  2033  0592  1003               	clrc
  2034  0593  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2035  0594  3EFF               	addlw	-1
  2036  0595  1D03               	skipz
  2037  0596  2D92               	goto	u385
  2038  0597  0875               	movf	??_Lcd_Set_Cursor,w
  2039  0598  00F6               	movwf	??_Lcd_Set_Cursor+1
  2040  0599  0876               	movf	??_Lcd_Set_Cursor+1,w
  2041  059A  00F8               	movwf	Lcd_Set_Cursor@z
  2042  059B                     l1255:
  2043                           
  2044                           ;LCD.c: 35:         y = temp & 0x0F;
  2045  059B  087A               	movf	Lcd_Set_Cursor@temp,w
  2046  059C  390F               	andlw	15
  2047  059D  00F5               	movwf	??_Lcd_Set_Cursor
  2048  059E  0875               	movf	??_Lcd_Set_Cursor,w
  2049  059F  00F9               	movwf	Lcd_Set_Cursor@y
  2050  05A0                     l1257:
  2051                           
  2052                           ;LCD.c: 36:         Lcd_Cmd(z);
  2053  05A0  0878               	movf	Lcd_Set_Cursor@z,w
  2054  05A1  120A  118A  2471  120A  118A  	fcall	_Lcd_Cmd
  2055  05A6                     l1259:
  2056                           
  2057                           ;LCD.c: 37:         Lcd_Cmd(y);
  2058  05A6  0879               	movf	Lcd_Set_Cursor@y,w
  2059  05A7  120A  118A  2471  120A  118A  	fcall	_Lcd_Cmd
  2060                           
  2061                           ;LCD.c: 38:     } else if (a == 2) {
  2062  05AC  2DD5               	goto	l205
  2063  05AD                     l1261:
  2064  05AD  3002               	movlw	2
  2065  05AE  0677               	xorwf	Lcd_Set_Cursor@a,w
  2066  05AF  1D03               	btfss	3,2
  2067  05B0  2DB2               	goto	u391
  2068  05B1  2DB3               	goto	u390
  2069  05B2                     u391:
  2070  05B2  2DD5               	goto	l205
  2071  05B3                     u390:
  2072  05B3                     l1263:
  2073                           
  2074                           ;LCD.c: 39:         temp = 0xC0 + b - 1;
  2075  05B3  0874               	movf	Lcd_Set_Cursor@b,w
  2076  05B4  3EBF               	addlw	191
  2077  05B5  00F5               	movwf	??_Lcd_Set_Cursor
  2078  05B6  0875               	movf	??_Lcd_Set_Cursor,w
  2079  05B7  00FA               	movwf	Lcd_Set_Cursor@temp
  2080                           
  2081                           ;LCD.c: 40:         z = temp >> 4;
  2082  05B8  087A               	movf	Lcd_Set_Cursor@temp,w
  2083  05B9  00F5               	movwf	??_Lcd_Set_Cursor
  2084  05BA  3004               	movlw	4
  2085  05BB                     u405:
  2086  05BB  1003               	clrc
  2087  05BC  0CF5               	rrf	??_Lcd_Set_Cursor,f
  2088  05BD  3EFF               	addlw	-1
  2089  05BE  1D03               	skipz
  2090  05BF  2DBB               	goto	u405
  2091  05C0  0875               	movf	??_Lcd_Set_Cursor,w
  2092  05C1  00F6               	movwf	??_Lcd_Set_Cursor+1
  2093  05C2  0876               	movf	??_Lcd_Set_Cursor+1,w
  2094  05C3  00F8               	movwf	Lcd_Set_Cursor@z
  2095  05C4                     l1265:
  2096                           
  2097                           ;LCD.c: 41:         y = temp & 0xF0;
  2098  05C4  087A               	movf	Lcd_Set_Cursor@temp,w
  2099  05C5  39F0               	andlw	240
  2100  05C6  00F5               	movwf	??_Lcd_Set_Cursor
  2101  05C7  0875               	movf	??_Lcd_Set_Cursor,w
  2102  05C8  00F9               	movwf	Lcd_Set_Cursor@y
  2103  05C9                     l1267:
  2104                           
  2105                           ;LCD.c: 42:         Lcd_Cmd(z);
  2106  05C9  0878               	movf	Lcd_Set_Cursor@z,w
  2107  05CA  120A  118A  2471  120A  118A  	fcall	_Lcd_Cmd
  2108  05CF                     l1269:
  2109                           
  2110                           ;LCD.c: 43:         Lcd_Cmd(y);
  2111  05CF  0879               	movf	Lcd_Set_Cursor@y,w
  2112  05D0  120A  118A  2471  120A  118A  	fcall	_Lcd_Cmd
  2113  05D5                     l205:
  2114  05D5  0008               	return
  2115  05D6                     __end_of_Lcd_Set_Cursor:
  2116                           
  2117                           	psect	text10
  2118  053D                     __ptext10:	
  2119 ;; *************** function _Lcd_Init *****************
  2120 ;; Defined at:
  2121 ;;		line 47 in file "LCD.c"
  2122 ;; Parameters:    Size  Location     Type
  2123 ;;		None
  2124 ;; Auto vars:     Size  Location     Type
  2125 ;;		None
  2126 ;; Return value:  Size  Location     Type
  2127 ;;                  1    wreg      void 
  2128 ;; Registers used:
  2129 ;;		wreg, status,2, status,0, pclath, cstack
  2130 ;; Tracked objects:
  2131 ;;		On entry : 0/0
  2132 ;;		On exit  : 0/0
  2133 ;;		Unchanged: 0/0
  2134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2135 ;;      Params:         0       0       0       0       0
  2136 ;;      Locals:         0       0       0       0       0
  2137 ;;      Temps:          2       0       0       0       0
  2138 ;;      Totals:         2       0       0       0       0
  2139 ;;Total ram usage:        2 bytes
  2140 ;; Hardware stack levels used: 1
  2141 ;; Hardware stack levels required when called: 2
  2142 ;; This function calls:
  2143 ;;		_Lcd_Cmd
  2144 ;;		_Lcd_Port
  2145 ;; This function is called by:
  2146 ;;		_main
  2147 ;; This function uses a non-reentrant model
  2148 ;;
  2149                           
  2150                           
  2151                           ;psect for function _Lcd_Init
  2152  053D                     _Lcd_Init:
  2153  053D                     l1239:	
  2154                           ;incstack = 0
  2155                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2156                           
  2157                           
  2158                           ;LCD.c: 48:     Lcd_Port(0x00);
  2159  053D  3000               	movlw	0
  2160  053E  120A  118A  2443  120A  118A  	fcall	_Lcd_Port
  2161  0543                     l1241:
  2162                           
  2163                           ;LCD.c: 49:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2164  0543  3034               	movlw	52
  2165  0544  00F5               	movwf	??_Lcd_Init+1
  2166  0545  30F1               	movlw	241
  2167  0546  00F4               	movwf	??_Lcd_Init
  2168  0547                     u737:
  2169  0547  0BF4               	decfsz	??_Lcd_Init,f
  2170  0548  2D47               	goto	u737
  2171  0549  0BF5               	decfsz	??_Lcd_Init+1,f
  2172  054A  2D47               	goto	u737
  2173  054B  2D4C               	nop2
  2174  054C                     l1243:
  2175                           
  2176                           ;LCD.c: 50:     Lcd_Cmd(0x30);
  2177  054C  3030               	movlw	48
  2178  054D  120A  118A  2471  120A  118A  	fcall	_Lcd_Cmd
  2179                           
  2180                           ;LCD.c: 51:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2181  0552  300D               	movlw	13
  2182  0553  00F5               	movwf	??_Lcd_Init+1
  2183  0554  30FB               	movlw	251
  2184  0555  00F4               	movwf	??_Lcd_Init
  2185  0556                     u747:
  2186  0556  0BF4               	decfsz	??_Lcd_Init,f
  2187  0557  2D56               	goto	u747
  2188  0558  0BF5               	decfsz	??_Lcd_Init+1,f
  2189  0559  2D56               	goto	u747
  2190  055A  2D5B               	nop2
  2191  055B                     l1245:
  2192                           
  2193                           ;LCD.c: 52:     Lcd_Cmd(0x30);
  2194  055B  3030               	movlw	48
  2195  055C  120A  118A  2471  120A  118A  	fcall	_Lcd_Cmd
  2196  0561                     l1247:
  2197                           
  2198                           ;LCD.c: 53:     _delay((unsigned long)((200)*(8000000/4000000.0)));
  2199  0561  3085               	movlw	133
  2200  0562  00F4               	movwf	??_Lcd_Init
  2201  0563                     u757:
  2202  0563  0BF4               	decfsz	??_Lcd_Init,f
  2203  0564  2D63               	goto	u757
  2204                           
  2205                           ;LCD.c: 54:     Lcd_Cmd(0x30);
  2206  0565  3030               	movlw	48
  2207  0566  120A  118A  2471  120A  118A  	fcall	_Lcd_Cmd
  2208                           
  2209                           ;LCD.c: 56:     Lcd_Cmd(0x3C);
  2210  056B  303C               	movlw	60
  2211  056C  120A  118A  2471  120A  118A  	fcall	_Lcd_Cmd
  2212                           
  2213                           ;LCD.c: 58:     Lcd_Cmd(0x08);
  2214  0571  3008               	movlw	8
  2215  0572  120A  118A  2471  120A  118A  	fcall	_Lcd_Cmd
  2216                           
  2217                           ;LCD.c: 60:     Lcd_Cmd(0x01);
  2218  0577  3001               	movlw	1
  2219  0578  120A  118A  2471  120A  118A  	fcall	_Lcd_Cmd
  2220                           
  2221                           ;LCD.c: 62:     Lcd_Cmd(0x06);
  2222  057D  3006               	movlw	6
  2223  057E  120A  118A  2471  120A  118A  	fcall	_Lcd_Cmd
  2224  0583                     l208:
  2225  0583  0008               	return
  2226  0584                     __end_of_Lcd_Init:
  2227                           
  2228                           	psect	text11
  2229  0455                     __ptext11:	
  2230 ;; *************** function _Lcd_Clear *****************
  2231 ;; Defined at:
  2232 ;;		line 25 in file "LCD.c"
  2233 ;; Parameters:    Size  Location     Type
  2234 ;;		None
  2235 ;; Auto vars:     Size  Location     Type
  2236 ;;		None
  2237 ;; Return value:  Size  Location     Type
  2238 ;;                  1    wreg      void 
  2239 ;; Registers used:
  2240 ;;		wreg, status,2, status,0, pclath, cstack
  2241 ;; Tracked objects:
  2242 ;;		On entry : 0/0
  2243 ;;		On exit  : 0/0
  2244 ;;		Unchanged: 0/0
  2245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2246 ;;      Params:         0       0       0       0       0
  2247 ;;      Locals:         0       0       0       0       0
  2248 ;;      Temps:          0       0       0       0       0
  2249 ;;      Totals:         0       0       0       0       0
  2250 ;;Total ram usage:        0 bytes
  2251 ;; Hardware stack levels used: 1
  2252 ;; Hardware stack levels required when called: 2
  2253 ;; This function calls:
  2254 ;;		_Lcd_Cmd
  2255 ;; This function is called by:
  2256 ;;		_main
  2257 ;; This function uses a non-reentrant model
  2258 ;;
  2259                           
  2260                           
  2261                           ;psect for function _Lcd_Clear
  2262  0455                     _Lcd_Clear:
  2263  0455                     l1249:	
  2264                           ;incstack = 0
  2265                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  2266                           
  2267                           
  2268                           ;LCD.c: 26:     Lcd_Cmd(0);
  2269  0455  3000               	movlw	0
  2270  0456  120A  118A  2471  120A  118A  	fcall	_Lcd_Cmd
  2271                           
  2272                           ;LCD.c: 27:     Lcd_Cmd(1);
  2273  045B  3001               	movlw	1
  2274  045C  120A  118A  2471  120A  118A  	fcall	_Lcd_Cmd
  2275  0461                     l199:
  2276  0461  0008               	return
  2277  0462                     __end_of_Lcd_Clear:
  2278                           
  2279                           	psect	text12
  2280  0471                     __ptext12:	
  2281 ;; *************** function _Lcd_Cmd *****************
  2282 ;; Defined at:
  2283 ;;		line 17 in file "LCD.c"
  2284 ;; Parameters:    Size  Location     Type
  2285 ;;  a               1    wreg     unsigned char 
  2286 ;; Auto vars:     Size  Location     Type
  2287 ;;  a               1    3[COMMON] unsigned char 
  2288 ;; Return value:  Size  Location     Type
  2289 ;;                  1    wreg      void 
  2290 ;; Registers used:
  2291 ;;		wreg, status,2, status,0, pclath, cstack
  2292 ;; Tracked objects:
  2293 ;;		On entry : 0/0
  2294 ;;		On exit  : 0/0
  2295 ;;		Unchanged: 0/0
  2296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2297 ;;      Params:         0       0       0       0       0
  2298 ;;      Locals:         1       0       0       0       0
  2299 ;;      Temps:          2       0       0       0       0
  2300 ;;      Totals:         3       0       0       0       0
  2301 ;;Total ram usage:        3 bytes
  2302 ;; Hardware stack levels used: 1
  2303 ;; Hardware stack levels required when called: 1
  2304 ;; This function calls:
  2305 ;;		_Lcd_Port
  2306 ;; This function is called by:
  2307 ;;		_Lcd_Clear
  2308 ;;		_Lcd_Set_Cursor
  2309 ;;		_Lcd_Init
  2310 ;;		_Lcd_Shift_Right
  2311 ;;		_Lcd_Shift_Left
  2312 ;; This function uses a non-reentrant model
  2313 ;;
  2314                           
  2315                           
  2316                           ;psect for function _Lcd_Cmd
  2317  0471                     _Lcd_Cmd:
  2318                           
  2319                           ;incstack = 0
  2320                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2321                           ;Lcd_Cmd@a stored from wreg
  2322  0471  00F3               	movwf	Lcd_Cmd@a
  2323  0472                     l1173:
  2324                           
  2325                           ;LCD.c: 18:     RE0 = 0;
  2326  0472  1283               	bcf	3,5	;RP0=0, select bank0
  2327  0473  1303               	bcf	3,6	;RP1=0, select bank0
  2328  0474  1009               	bcf	9,0	;volatile
  2329  0475                     l1175:
  2330                           
  2331                           ;LCD.c: 19:     Lcd_Port(a);
  2332  0475  0873               	movf	Lcd_Cmd@a,w
  2333  0476  120A  118A  2443  120A  118A  	fcall	_Lcd_Port
  2334  047B                     l1177:
  2335                           
  2336                           ;LCD.c: 20:     RE1 = 1;
  2337  047B  1283               	bcf	3,5	;RP0=0, select bank0
  2338  047C  1303               	bcf	3,6	;RP1=0, select bank0
  2339  047D  1489               	bsf	9,1	;volatile
  2340  047E                     l1179:
  2341                           
  2342                           ;LCD.c: 21:     _delay((unsigned long)((4)*(8000000/4000.0)));
  2343  047E  300B               	movlw	11
  2344  047F  00F2               	movwf	??_Lcd_Cmd+1
  2345  0480  3062               	movlw	98
  2346  0481  00F1               	movwf	??_Lcd_Cmd
  2347  0482                     u767:
  2348  0482  0BF1               	decfsz	??_Lcd_Cmd,f
  2349  0483  2C82               	goto	u767
  2350  0484  0BF2               	decfsz	??_Lcd_Cmd+1,f
  2351  0485  2C82               	goto	u767
  2352  0486  0000               	nop
  2353  0487                     l1181:
  2354                           
  2355                           ;LCD.c: 22:     RE1 = 0;
  2356  0487  1283               	bcf	3,5	;RP0=0, select bank0
  2357  0488  1303               	bcf	3,6	;RP1=0, select bank0
  2358  0489  1089               	bcf	9,1	;volatile
  2359  048A                     l196:
  2360  048A  0008               	return
  2361  048B                     __end_of_Lcd_Cmd:
  2362                           
  2363                           	psect	text13
  2364  0443                     __ptext13:	
  2365 ;; *************** function _Lcd_Port *****************
  2366 ;; Defined at:
  2367 ;;		line 12 in file "LCD.c"
  2368 ;; Parameters:    Size  Location     Type
  2369 ;;  a               1    wreg     unsigned char 
  2370 ;; Auto vars:     Size  Location     Type
  2371 ;;  a               1    0[COMMON] unsigned char 
  2372 ;; Return value:  Size  Location     Type
  2373 ;;                  1    wreg      void 
  2374 ;; Registers used:
  2375 ;;		wreg
  2376 ;; Tracked objects:
  2377 ;;		On entry : 0/0
  2378 ;;		On exit  : 0/0
  2379 ;;		Unchanged: 0/0
  2380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2381 ;;      Params:         0       0       0       0       0
  2382 ;;      Locals:         1       0       0       0       0
  2383 ;;      Temps:          0       0       0       0       0
  2384 ;;      Totals:         1       0       0       0       0
  2385 ;;Total ram usage:        1 bytes
  2386 ;; Hardware stack levels used: 1
  2387 ;; This function calls:
  2388 ;;		Nothing
  2389 ;; This function is called by:
  2390 ;;		_Lcd_Cmd
  2391 ;;		_Lcd_Init
  2392 ;;		_Lcd_Write_Char
  2393 ;; This function uses a non-reentrant model
  2394 ;;
  2395                           
  2396                           
  2397                           ;psect for function _Lcd_Port
  2398  0443                     _Lcd_Port:
  2399                           
  2400                           ;incstack = 0
  2401                           ; Regs used in _Lcd_Port: [wreg]
  2402                           ;Lcd_Port@a stored from wreg
  2403  0443  00F0               	movwf	Lcd_Port@a
  2404  0444                     l1159:
  2405                           
  2406                           ;LCD.c: 13:     PORTD = a;
  2407  0444  0870               	movf	Lcd_Port@a,w
  2408  0445  1283               	bcf	3,5	;RP0=0, select bank0
  2409  0446  1303               	bcf	3,6	;RP1=0, select bank0
  2410  0447  0088               	movwf	8	;volatile
  2411  0448                     l193:
  2412  0448  0008               	return
  2413  0449                     __end_of_Lcd_Port:
  2414                           
  2415                           	psect	text14
  2416  0511                     __ptext14:	
  2417 ;; *************** function _DHT11_Read *****************
  2418 ;; Defined at:
  2419 ;;		line 135 in file "newmain.c"
  2420 ;; Parameters:    Size  Location     Type
  2421 ;;		None
  2422 ;; Auto vars:     Size  Location     Type
  2423 ;;  data            1    3[COMMON] unsigned char 
  2424 ;;  i               1    2[COMMON] unsigned char 
  2425 ;; Return value:  Size  Location     Type
  2426 ;;                  1    wreg      unsigned char 
  2427 ;; Registers used:
  2428 ;;		wreg, status,2, status,0
  2429 ;; Tracked objects:
  2430 ;;		On entry : 0/0
  2431 ;;		On exit  : 0/0
  2432 ;;		Unchanged: 0/0
  2433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2434 ;;      Params:         0       0       0       0       0
  2435 ;;      Locals:         2       0       0       0       0
  2436 ;;      Temps:          2       0       0       0       0
  2437 ;;      Totals:         4       0       0       0       0
  2438 ;;Total ram usage:        4 bytes
  2439 ;; Hardware stack levels used: 1
  2440 ;; This function calls:
  2441 ;;		Nothing
  2442 ;; This function is called by:
  2443 ;;		_main
  2444 ;; This function uses a non-reentrant model
  2445 ;;
  2446                           
  2447                           
  2448                           ;psect for function _DHT11_Read
  2449  0511                     _DHT11_Read:
  2450  0511                     l1287:	
  2451                           ;incstack = 0
  2452                           ; Regs used in _DHT11_Read: [wreg+status,2+status,0]
  2453                           
  2454                           
  2455                           ;newmain.c: 136:     char i,data = 0;
  2456  0511  01F3               	clrf	DHT11_Read@data
  2457                           
  2458                           ;newmain.c: 137:     for (i=0; i<8; i++){
  2459  0512  01F2               	clrf	DHT11_Read@i
  2460  0513                     l171:
  2461  0513  1283               	bcf	3,5	;RP0=0, select bank0
  2462  0514  1303               	bcf	3,6	;RP1=0, select bank0
  2463  0515  1C05               	btfss	5,0	;volatile
  2464  0516  2D18               	goto	u451
  2465  0517  2D19               	goto	u450
  2466  0518                     u451:
  2467  0518  2D13               	goto	l171
  2468  0519                     u450:
  2469  0519                     l1293:
  2470                           
  2471                           ;newmain.c: 139:         _delay((unsigned long)((30)*(8000000/4000000.0)));
  2472  0519  3013               	movlw	19
  2473  051A  00F0               	movwf	??_DHT11_Read
  2474  051B                     u777:
  2475  051B  0BF0               	decfsz	??_DHT11_Read,f
  2476  051C  2D1B               	goto	u777
  2477  051D  2D1E               	nop2
  2478  051E                     l1295:
  2479                           
  2480                           ;newmain.c: 140:         if(PORTAbits.RA0 & 1)
  2481  051E  1283               	bcf	3,5	;RP0=0, select bank0
  2482  051F  1303               	bcf	3,6	;RP1=0, select bank0
  2483  0520  1C05               	btfss	5,0	;volatile
  2484  0521  2D23               	goto	u461
  2485  0522  2D24               	goto	u460
  2486  0523                     u461:
  2487  0523  2D27               	goto	l1299
  2488  0524                     u460:
  2489  0524                     l1297:
  2490                           
  2491                           ;newmain.c: 141:             data = ((data<<1) | 1);
  2492  0524  1403               	setc
  2493  0525  0DF3               	rlf	DHT11_Read@data,f
  2494  0526  2D2D               	goto	l176
  2495  0527                     l1299:
  2496                           
  2497                           ;newmain.c: 143:             data = (data<<1);
  2498  0527  0873               	movf	DHT11_Read@data,w
  2499  0528  00F0               	movwf	??_DHT11_Read
  2500  0529  0770               	addwf	??_DHT11_Read,w
  2501  052A  00F1               	movwf	??_DHT11_Read+1
  2502  052B  0871               	movf	??_DHT11_Read+1,w
  2503  052C  00F3               	movwf	DHT11_Read@data
  2504  052D                     l176:
  2505  052D  1805               	btfsc	5,0	;volatile
  2506  052E  2D30               	goto	u471
  2507  052F  2D31               	goto	u470
  2508  0530                     u471:
  2509  0530  2D2D               	goto	l176
  2510  0531                     u470:
  2511  0531                     l1301:
  2512                           
  2513                           ;newmain.c: 145: }
  2514  0531  3001               	movlw	1
  2515  0532  00F0               	movwf	??_DHT11_Read
  2516  0533  0870               	movf	??_DHT11_Read,w
  2517  0534  07F2               	addwf	DHT11_Read@i,f
  2518  0535                     l1303:
  2519  0535  3008               	movlw	8
  2520  0536  0272               	subwf	DHT11_Read@i,w
  2521  0537  1C03               	skipc
  2522  0538  2D3A               	goto	u481
  2523  0539  2D3B               	goto	u480
  2524  053A                     u481:
  2525  053A  2D13               	goto	l171
  2526  053B                     u480:
  2527  053B                     l1305:
  2528                           
  2529                           ;newmain.c: 146:     return data;
  2530  053B  0873               	movf	DHT11_Read@data,w
  2531  053C                     l179:
  2532  053C  0008               	return
  2533  053D                     __end_of_DHT11_Read:
  2534  007E                     btemp	set	126	;btemp
  2535  007E                     wtemp0	set	126
  2536                           
  2537                           	psect	config
  2538                           
  2539                           ;Config register CONFIG1 @ 0x2007
  2540                           ;	Oscillator Selection bits
  2541                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2542                           ;	Watchdog Timer Enable bit
  2543                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2544                           ;	Power-up Timer Enable bit
  2545                           ;	PWRTE = OFF, PWRT disabled
  2546                           ;	RE3/MCLR pin function select bit
  2547                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2548                           ;	Code Protection bit
  2549                           ;	CP = OFF, Program memory code protection is disabled
  2550                           ;	Data Code Protection bit
  2551                           ;	CPD = OFF, Data memory code protection is disabled
  2552                           ;	Brown Out Reset Selection bits
  2553                           ;	BOREN = OFF, BOR disabled
  2554                           ;	Internal External Switchover bit
  2555                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2556                           ;	Fail-Safe Clock Monitor Enabled bit
  2557                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2558                           ;	Low Voltage Programming Enable bit
  2559                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2560                           ;	In-Circuit Debugger Mode bit
  2561                           ;	DEBUG = 0x1, unprogrammed default
  2562  2007                     	org	8199
  2563  2007  20D4               	dw	8404
  2564                           
  2565                           ;Config register CONFIG2 @ 0x2008
  2566                           ;	Brown-out Reset Selection bit
  2567                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2568                           ;	Flash Program Memory Self Write Enable bits
  2569                           ;	WRT = OFF, Write protection off
  2570  2008                     	org	8200
  2571  2008  3FFF               	dw	16383

Data Sizes:
    Strings     32
    Constant    0
    Data        0
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     12      24
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_5(CODE[4]), STR_4(CODE[4]), STR_2(CODE[5]), STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->___awmod
    ___awmod->___awdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _main->___awmod

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0    2601
                                              2 BANK0     10    10      0
                         _DHT11_Read
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                            ___awdiv
                            ___awmod
                      _checkResponse
                         _configTMR0
                          _initSETUP
                          _startRead
 ---------------------------------------------------------------------------------
 (1) _startRead                                            2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _initSETUP                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _configTMR0                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkResponse                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     904
                                              9 COMMON     5     1      4
                                              0 BANK0      2     2      0
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     604
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     312
                                              5 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0      90
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     466
                                              4 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      66
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      44
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      44
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _DHT11_Read                                           4     4      0     115
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DHT11_Read
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
   ___awdiv
   ___awmod
     ___awdiv (ARG)
   _checkResponse
   _configTMR0
   _initSETUP
   _startRead

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      26       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      C      18       5       30.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      26      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Sep 07 04:44:40 2021

                        pc 0002                         _RH 0025               ___awdiv@sign 0076  
                       fsr 0004      __end_of_checkResponse 0471                        l211 04C5  
                      l205 05D5                        l151 0510                        l208 0583  
                      l160 0468                        l217 04EA                        l145 0722  
                      l154 04A7                        l171 0513                        l163 046C  
                      l157 0462                        l166 0470                        l182 0454  
                      l176 052D                        l193 0448                        l179 053C  
                      l196 048A                        l462 0697                        l199 0461  
                      l475 0630                        _GIE 005F                        _RE0 0048  
                      _RE1 0049                        u410 04EA                        u411 04E9  
                      u500 0641                        u420 0468                        u405 05BB  
                      u501 0640                        u421 0467                        u510 0652  
                      u430 046C                        u511 0651                        u431 046B  
                      u600 05E8                        u440 0470                        u601 05E7  
                      u441 046F                        u450 0519                        u370 058A  
                      u530 0664                        u610 05F3                        u451 0518  
                      u371 0589                        u531 0663                        u611 05F2  
                      u460 0524                        u461 0523                        u525 0656  
                      u470 0531                        u390 05B3                        u550 0675  
                      u630 0605                        u471 0530                        u391 05B2  
                      u551 0674                        u631 0604                        u480 053B  
                      u640 060F                        u481 053A                        u385 0592  
                      u545 0665                        u641 060E                        u625 05F7  
                      u570 0689                        u490 0636                        u571 0688  
                      u555 0671                        u491 0635                        u707 0496  
                      u580 068E                        u660 0622                        u581 068D  
                      u565 067D                        u661 0621                        u645 060B  
                      u717 04A0                        u670 0627                        u590 05DD  
                      u727 04BF                        u671 0626                        u655 0616  
                      u591 05DC                        u680 071E                        u737 0547  
                      u681 071D                        u747 0556                        u757 0563  
                      u685 071A                        u767 0482                        u777 051B  
                      u697 07E4                        fsr0 0004               ___awmod@sign 002D  
      __size_of_DHT11_Read 002C                       l1201 04F9                       l1211 0504  
                     l1203 04FA                       l1301 0531                       l1221 0509  
                     l1213 0505                       l1205 04FF                       l1303 0535  
                     l1311 0632                       l1223 050A                       l1215 0506  
                     l1207 0502                       l1305 053B                       l1241 0543  
                     l1161 04A9                       l1321 0646                       l1313 0636  
                     l1233 0449                       l1225 050B                       l1217 0507  
                     l1209 0503                       l1401 06CE                       l1243 054C  
                     l1251 0585                       l1171 04C2                       l1163 04B1  
                     l1331 065C                       l1323 064A                       l1315 063B  
                     l1235 0450                       l1227 050D                       l1219 0508  
                     l1411 071E                       l1403 06D8                       l1181 0487  
                     l1173 0472                       l1245 055B                       l1253 058A  
                     l1261 05AD                       l1165 04B4                       l1341 067C  
                     l1333 0660                       l1325 064C                       l1317 063D  
                     l1309 0631                       l1229 050E                       l1421 078F  
                     l1413 0726                       l1405 06E2                       l1159 0444  
                     l1175 0475                       l1247 0561                       l1239 053D  
                     l1263 05B3                       l1255 059B                       l1167 04BA  
                     l1271 04C7                       l1343 0683                       l1335 0664  
                     l1327 0652                       l1319 0641                       l1191 04F2  
                     l1183 04EB                       l1431 07C2                       l1423 07A6  
                     l1415 072E                       l1407 06EC                       l1177 047B  
                     l1249 0455                       l1265 05C4                       l1257 05A0  
                     l1169 04BD                       l1273 04CA                       l1337 0675  
                     l1329 0655                       l1345 0689                       l1361 05E4  
                     l1353 05D6                       l1193 04F3                       l1185 04EF  
                     l1281 048F                       l1433 07CA                       l1425 07AC  
                     l1417 0754                       l1409 06F6                       l1179 047E  
                     l1267 05C9                       l1259 05A6                       l1275 04D7  
                     l1347 068E                       l1339 067B                       l1371 05FD  
                     l1363 05E8                       l1355 05D9                       l1195 04F6  
                     l1187 04F0                       l1283 049B                       l1435 07D0  
                     l1427 07B4                       l1419 076B                       l1293 0519  
                     l1269 05CF                       l1277 04DD                       l1349 0693  
                     l1381 061C                       l1373 0601                       l1365 05ED  
                     l1357 05DD                       l1285 0462                       l1197 04F7  
                     l1189 04F1                       l1437 07D6                       l1429 07BA  
                     l1295 051E                       l1287 0511                       l1375 0605  
                     l1367 05F3                       l1383 0622                       l1359 05E2  
                     l1199 04F8                       l1279 048B                       l1439 07DC  
                     l1391 0698                       l1297 0524                       l1385 0627  
                     l1377 060F                       l1369 05F6                       l1393 06B4  
                     l1299 0527                       l1387 062C                       l1379 0615  
                     l1395 06BA                       l1397 06BF                       l1399 06C4  
                     STR_1 0009                       STR_2 001A                       STR_3 0027  
                     STR_4 001F                       STR_5 0023                       _IOCB 0096  
                     _PEIE 005E                       _TMR0 0001                       _WPUB 0095  
                     _dec0 0022                       _dec1 0020          ?_Lcd_Write_String 0070  
                     _main 0698                       btemp 007E                       start 0000  
       ??_Lcd_Write_String 0075            __end_of_Lcd_Cmd 048B                      ?_main 0070  
          __end_of___awdiv 0698            __end_of___awmod 0631                      _ANSEL 0188  
          ___awdiv@divisor 0070            ___awdiv@counter 0075                      _PORTA 0005  
                    _PORTB 0006                      _PORTC 0007                      _PORTD 0008  
                    _PORTE 0009    __size_of_Lcd_Set_Cursor 0052                      _TRISA 0085  
                    _TRISB 0086                      _TRISC 0087                      _TRISD 0088  
                    _SSPIE 0463                      _TRISE 0089                      _SSPIF 0063  
                    _T_Dec 0028                      _T_Int 0027                      _unit0 0023  
                    _unit1 0021                      pclath 000A                      status 0003  
                    wtemp0 007E           __end_of_Lcd_Init 0584           __end_of_Lcd_Port 0449  
          __initialization 07EE               __end_of_main 07EE                     ??_main 002E  
       __size_of_Lcd_Clear 000D           ___awdiv@dividend 0072                     _ANSELH 0189  
                ??_Lcd_Cmd 0071    __size_of_Lcd_Write_Char 001E                     _SSPADD 0093  
                   _TRISC3 043B                     _TRISC4 043C                     _RH_Dec 002A  
                   _SSPCON 0014                     _SSPBUF 0013                     _RH_Int 0029  
             ??_DHT11_Read 0070                  ??___awdiv 0074                  ??___awmod 007D  
                   _buffer 002B           ___awdiv@quotient 0077            ___awmod@divisor 0079  
          ___awmod@counter 002C         __end_of_DHT11_Read 053D            Lcd_Set_Cursor@a 0077  
          Lcd_Set_Cursor@b 0074            Lcd_Set_Cursor@y 0079            Lcd_Set_Cursor@z 0078  
  __end_of__initialization 07FC          __end_of_Lcd_Clear 0462             __pcstackCOMMON 0070  
           _Lcd_Set_Cursor 0584             _OPTION_REGbits 0081                  ?_Lcd_Init 0070  
                ?_Lcd_Port 0070                 __pbssBANK0 0020         __size_of_initSETUP 0026  
               __pmaintext 0698  __size_of_Lcd_Write_String 0025     __end_of_Lcd_Set_Cursor 05D6  
               _configTMR0 0449                 ??_Lcd_Init 0074                 ??_Lcd_Port 0070  
       __size_of_startRead 001D                    _SSPCON2 0091                    _SSPSTAT 0094  
               __stringtab 0003             _Lcd_Write_Char 04A8                    _Lcd_Cmd 0471  
   __size_of_checkResponse 000F                    ___awdiv 0631                    ___awmod 05D6  
        __end_of_initSETUP 0511            ?_Lcd_Set_Cursor 0074                    __ptext1 048B  
                  __ptext2 04EB                    __ptext3 0449                    __ptext4 0462  
                  __ptext5 05D6                    __ptext6 0631                    __ptext7 04C6  
                  __ptext8 04A8                    __ptext9 0584           ___awmod@dividend 007B  
   __end_of_Lcd_Write_Char 04C6       end_of_initialization 07FC                  Lcd_Port@a 0070  
        __end_of_startRead 04A8                  _PORTAbits 0005              _checkResponse 0462  
              ?_configTMR0 0070                  _TRISCbits 0087            ?_Lcd_Write_Char 0070  
        Lcd_Write_String@a 0077          Lcd_Write_String@i 0075                  _Lcd_Clear 0455  
         _Lcd_Write_String 04C6             ?_checkResponse 0070        start_initialization 07EE  
        __size_of_Lcd_Init 0047          __size_of_Lcd_Port 0006        __size_of_configTMR0 000C  
               ?_Lcd_Clear 0070            Lcd_Write_Char@a 0072            Lcd_Write_Char@y 0074  
                ___latbits 0002              __pcstackBANK0 002C                   ?_Lcd_Cmd 0070  
                _check_sum 0024           ??_Lcd_Set_Cursor 0075                   ?___awdiv 0070  
                 ?___awmod 0079            ??_checkResponse 0070                  __pstrings 0003  
                _initSETUP 04EB                   Lcd_Cmd@a 0073                ??_Lcd_Clear 0074  
              DHT11_Read@i 0072                __stringbase 0008                  _startRead 048B  
             ??_configTMR0 0070           ??_Lcd_Write_Char 0071                 ?_initSETUP 0070  
                 _Lcd_Init 053D                   _Lcd_Port 0443   __end_of_Lcd_Write_String 04EB  
         __size_of_Lcd_Cmd 001A                   _Humidity 0026                 _DHT11_Read 0511  
       __end_of_configTMR0 0455           __size_of___awdiv 0067           __size_of___awmod 005B  
       __end_of__stringtab 0009                 ?_startRead 0070                   __ptext10 053D  
                 __ptext11 0455                   __ptext12 0471                   __ptext13 0443  
                 __ptext14 0511              __size_of_main 0156                 _INTCONbits 000B  
              ??_initSETUP 0070             DHT11_Read@data 0073         Lcd_Write_Char@temp 0073  
              ?_DHT11_Read 0070                  stringcode 0003                 _OSCCONbits 008F  
       Lcd_Set_Cursor@temp 007A                ??_startRead 0070                   stringdir 0003  
                 stringtab 0003                _SSPCON2bits 0091  
